// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.InvalidConstraintException
#include "System/Data/InvalidConstraintException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.NoNullAllowedException
#include "System/Data/NoNullAllowedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.ReadOnlyException
#include "System/Data/ReadOnlyException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.RowNotInTableException
#include "System/Data/RowNotInTableException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.VersionNotFoundException
#include "System/Data/VersionNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.ExceptionBuilder
#include "System/Data/ExceptionBuilder.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.UniqueConstraint
#include "System/Data/UniqueConstraint.hpp"
// Including type: System.Data.ForeignKeyConstraint
#include "System/Data/ForeignKeyConstraint.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Data.Constraint
#include "System/Data/Constraint.hpp"
// Including type: System.Data.DataSetDateTime
#include "System/Data/DataSetDateTime.hpp"
// Including type: System.Data.DataRowState
#include "System/Data/DataRowState.hpp"
// Including type: System.Data.SerializationFormat
#include "System/Data/SerializationFormat.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Data.RBTreeError
#include "System/Data/RBTreeError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.ExceptionBuilder.TraceException
void System::Data::ExceptionBuilder::TraceException(::StringW trace, ::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::TraceException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "TraceException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trace), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trace, e);
}
// Autogenerated method: System.Data.ExceptionBuilder.TraceExceptionAsReturnValue
::System::Exception* System::Data::ExceptionBuilder::TraceExceptionAsReturnValue(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::TraceExceptionAsReturnValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "TraceExceptionAsReturnValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: System.Data.ExceptionBuilder.TraceExceptionForCapture
::System::Exception* System::Data::ExceptionBuilder::TraceExceptionForCapture(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::TraceExceptionForCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "TraceExceptionForCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: System.Data.ExceptionBuilder.TraceExceptionWithoutRethrow
::System::Exception* System::Data::ExceptionBuilder::TraceExceptionWithoutRethrow(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::TraceExceptionWithoutRethrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "TraceExceptionWithoutRethrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: System.Data.ExceptionBuilder._Argument
::System::Exception* System::Data::ExceptionBuilder::_Argument(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::_Argument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "_Argument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.ExceptionBuilder._Argument
::System::Exception* System::Data::ExceptionBuilder::_Argument(::StringW error, ::System::Exception* innerException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::_Argument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "_Argument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error), ::il2cpp_utils::ExtractType(innerException)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error, innerException);
}
// Autogenerated method: System.Data.ExceptionBuilder._ArgumentNull
::System::Exception* System::Data::ExceptionBuilder::_ArgumentNull(::StringW paramName, ::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::_ArgumentNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "_ArgumentNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName, msg);
}
// Autogenerated method: System.Data.ExceptionBuilder._ArgumentOutOfRange
::System::Exception* System::Data::ExceptionBuilder::_ArgumentOutOfRange(::StringW paramName, ::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::_ArgumentOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "_ArgumentOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName, msg);
}
// Autogenerated method: System.Data.ExceptionBuilder._IndexOutOfRange
::System::Exception* System::Data::ExceptionBuilder::_IndexOutOfRange(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::_IndexOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "_IndexOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.ExceptionBuilder._InvalidOperation
::System::Exception* System::Data::ExceptionBuilder::_InvalidOperation(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::_InvalidOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "_InvalidOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.ExceptionBuilder._InvalidEnumArgumentException
::System::Exception* System::Data::ExceptionBuilder::_InvalidEnumArgumentException(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::_InvalidEnumArgumentException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "_InvalidEnumArgumentException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.ExceptionBuilder.ThrowDataException
void System::Data::ExceptionBuilder::ThrowDataException(::StringW error, ::System::Exception* innerException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ThrowDataException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ThrowDataException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error), ::il2cpp_utils::ExtractType(innerException)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error, innerException);
}
// Autogenerated method: System.Data.ExceptionBuilder._Data
::System::Exception* System::Data::ExceptionBuilder::_Data(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.ExceptionBuilder._Constraint
::System::Exception* System::Data::ExceptionBuilder::_Constraint(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::_Constraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "_Constraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.ExceptionBuilder._InvalidConstraint
::System::Exception* System::Data::ExceptionBuilder::_InvalidConstraint(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::_InvalidConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "_InvalidConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.ExceptionBuilder._DeletedRowInaccessible
::System::Exception* System::Data::ExceptionBuilder::_DeletedRowInaccessible(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::_DeletedRowInaccessible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "_DeletedRowInaccessible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.ExceptionBuilder._DuplicateName
::System::Exception* System::Data::ExceptionBuilder::_DuplicateName(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::_DuplicateName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "_DuplicateName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.ExceptionBuilder._InRowChangingEvent
::System::Exception* System::Data::ExceptionBuilder::_InRowChangingEvent(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::_InRowChangingEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "_InRowChangingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.ExceptionBuilder._NoNullAllowed
::System::Exception* System::Data::ExceptionBuilder::_NoNullAllowed(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::_NoNullAllowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "_NoNullAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.ExceptionBuilder._ReadOnly
::System::Exception* System::Data::ExceptionBuilder::_ReadOnly(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::_ReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "_ReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.ExceptionBuilder._RowNotInTable
::System::Exception* System::Data::ExceptionBuilder::_RowNotInTable(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::_RowNotInTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "_RowNotInTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.ExceptionBuilder._VersionNotFound
::System::Exception* System::Data::ExceptionBuilder::_VersionNotFound(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::_VersionNotFound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "_VersionNotFound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.ExceptionBuilder.ArgumentNull
::System::Exception* System::Data::ExceptionBuilder::ArgumentNull(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ArgumentNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ArgumentNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Data.ExceptionBuilder.ArgumentOutOfRange
::System::Exception* System::Data::ExceptionBuilder::ArgumentOutOfRange(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ArgumentOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ArgumentOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Data.ExceptionBuilder.BadObjectPropertyAccess
::System::Exception* System::Data::ExceptionBuilder::BadObjectPropertyAccess(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::BadObjectPropertyAccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "BadObjectPropertyAccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.ExceptionBuilder.CaseInsensitiveNameConflict
::System::Exception* System::Data::ExceptionBuilder::CaseInsensitiveNameConflict(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CaseInsensitiveNameConflict");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CaseInsensitiveNameConflict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExceptionBuilder.NamespaceNameConflict
::System::Exception* System::Data::ExceptionBuilder::NamespaceNameConflict(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::NamespaceNameConflict");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "NamespaceNameConflict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExceptionBuilder.InvalidOffsetLength
::System::Exception* System::Data::ExceptionBuilder::InvalidOffsetLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::InvalidOffsetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "InvalidOffsetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.ColumnNotInTheTable
::System::Exception* System::Data::ExceptionBuilder::ColumnNotInTheTable(::StringW column, ::StringW table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ColumnNotInTheTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ColumnNotInTheTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column), ::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column, table);
}
// Autogenerated method: System.Data.ExceptionBuilder.ColumnNotInAnyTable
::System::Exception* System::Data::ExceptionBuilder::ColumnNotInAnyTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ColumnNotInAnyTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ColumnNotInAnyTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.ColumnOutOfRange
::System::Exception* System::Data::ExceptionBuilder::ColumnOutOfRange(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ColumnOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ColumnOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: System.Data.ExceptionBuilder.ColumnOutOfRange
::System::Exception* System::Data::ExceptionBuilder::ColumnOutOfRange(::StringW column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ColumnOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ColumnOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotAddColumn1
::System::Exception* System::Data::ExceptionBuilder::CannotAddColumn1(::StringW column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotAddColumn1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotAddColumn1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotAddColumn2
::System::Exception* System::Data::ExceptionBuilder::CannotAddColumn2(::StringW column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotAddColumn2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotAddColumn2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotAddColumn3
::System::Exception* System::Data::ExceptionBuilder::CannotAddColumn3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotAddColumn3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotAddColumn3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotAddColumn4
::System::Exception* System::Data::ExceptionBuilder::CannotAddColumn4(::StringW column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotAddColumn4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotAddColumn4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotAddDuplicate
::System::Exception* System::Data::ExceptionBuilder::CannotAddDuplicate(::StringW column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotAddDuplicate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotAddDuplicate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotAddDuplicate2
::System::Exception* System::Data::ExceptionBuilder::CannotAddDuplicate2(::StringW table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotAddDuplicate2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotAddDuplicate2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, table);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotAddDuplicate3
::System::Exception* System::Data::ExceptionBuilder::CannotAddDuplicate3(::StringW table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotAddDuplicate3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotAddDuplicate3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, table);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotRemoveColumn
::System::Exception* System::Data::ExceptionBuilder::CannotRemoveColumn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotRemoveColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotRemoveColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotRemovePrimaryKey
::System::Exception* System::Data::ExceptionBuilder::CannotRemovePrimaryKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotRemovePrimaryKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotRemovePrimaryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotRemoveChildKey
::System::Exception* System::Data::ExceptionBuilder::CannotRemoveChildKey(::StringW relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotRemoveChildKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotRemoveChildKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relation)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, relation);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotRemoveConstraint
::System::Exception* System::Data::ExceptionBuilder::CannotRemoveConstraint(::StringW constraint, ::StringW table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotRemoveConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotRemoveConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constraint), ::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, constraint, table);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotRemoveExpression
::System::Exception* System::Data::ExceptionBuilder::CannotRemoveExpression(::StringW column, ::StringW expression) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotRemoveExpression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotRemoveExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column), ::il2cpp_utils::ExtractType(expression)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column, expression);
}
// Autogenerated method: System.Data.ExceptionBuilder.AddPrimaryKeyConstraint
::System::Exception* System::Data::ExceptionBuilder::AddPrimaryKeyConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::AddPrimaryKeyConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "AddPrimaryKeyConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.NoConstraintName
::System::Exception* System::Data::ExceptionBuilder::NoConstraintName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::NoConstraintName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "NoConstraintName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.ConstraintViolation
::System::Exception* System::Data::ExceptionBuilder::ConstraintViolation(::StringW constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ConstraintViolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ConstraintViolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constraint)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, constraint);
}
// Autogenerated method: System.Data.ExceptionBuilder.KeysToString
::StringW System::Data::ExceptionBuilder::KeysToString(::ArrayW<::Il2CppObject*> keys) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::KeysToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "KeysToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keys)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keys);
}
// Autogenerated method: System.Data.ExceptionBuilder.UniqueConstraintViolationText
::StringW System::Data::ExceptionBuilder::UniqueConstraintViolationText(::ArrayW<::System::Data::DataColumn*> columns, ::ArrayW<::Il2CppObject*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::UniqueConstraintViolationText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "UniqueConstraintViolationText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(columns), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, columns, values);
}
// Autogenerated method: System.Data.ExceptionBuilder.ConstraintViolation
::System::Exception* System::Data::ExceptionBuilder::ConstraintViolation(::ArrayW<::System::Data::DataColumn*> columns, ::ArrayW<::Il2CppObject*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ConstraintViolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ConstraintViolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(columns), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, columns, values);
}
// Autogenerated method: System.Data.ExceptionBuilder.ConstraintOutOfRange
::System::Exception* System::Data::ExceptionBuilder::ConstraintOutOfRange(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ConstraintOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ConstraintOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: System.Data.ExceptionBuilder.DuplicateConstraint
::System::Exception* System::Data::ExceptionBuilder::DuplicateConstraint(::StringW constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::DuplicateConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "DuplicateConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constraint)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, constraint);
}
// Autogenerated method: System.Data.ExceptionBuilder.DuplicateConstraintName
::System::Exception* System::Data::ExceptionBuilder::DuplicateConstraintName(::StringW constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::DuplicateConstraintName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "DuplicateConstraintName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constraint)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, constraint);
}
// Autogenerated method: System.Data.ExceptionBuilder.NeededForForeignKeyConstraint
::System::Exception* System::Data::ExceptionBuilder::NeededForForeignKeyConstraint(::System::Data::UniqueConstraint* key, ::System::Data::ForeignKeyConstraint* fk) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::NeededForForeignKeyConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "NeededForForeignKeyConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(fk)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, fk);
}
// Autogenerated method: System.Data.ExceptionBuilder.UniqueConstraintViolation
::System::Exception* System::Data::ExceptionBuilder::UniqueConstraintViolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::UniqueConstraintViolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "UniqueConstraintViolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.ConstraintForeignTable
::System::Exception* System::Data::ExceptionBuilder::ConstraintForeignTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ConstraintForeignTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ConstraintForeignTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.ConstraintParentValues
::System::Exception* System::Data::ExceptionBuilder::ConstraintParentValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ConstraintParentValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ConstraintParentValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.ConstraintAddFailed
::System::Exception* System::Data::ExceptionBuilder::ConstraintAddFailed(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ConstraintAddFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ConstraintAddFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, table);
}
// Autogenerated method: System.Data.ExceptionBuilder.ConstraintRemoveFailed
::System::Exception* System::Data::ExceptionBuilder::ConstraintRemoveFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ConstraintRemoveFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ConstraintRemoveFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.FailedCascadeDelete
::System::Exception* System::Data::ExceptionBuilder::FailedCascadeDelete(::StringW constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::FailedCascadeDelete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "FailedCascadeDelete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constraint)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, constraint);
}
// Autogenerated method: System.Data.ExceptionBuilder.FailedCascadeUpdate
::System::Exception* System::Data::ExceptionBuilder::FailedCascadeUpdate(::StringW constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::FailedCascadeUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "FailedCascadeUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constraint)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, constraint);
}
// Autogenerated method: System.Data.ExceptionBuilder.FailedClearParentTable
::System::Exception* System::Data::ExceptionBuilder::FailedClearParentTable(::StringW table, ::StringW constraint, ::StringW childTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::FailedClearParentTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "FailedClearParentTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(constraint), ::il2cpp_utils::ExtractType(childTable)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, table, constraint, childTable);
}
// Autogenerated method: System.Data.ExceptionBuilder.ForeignKeyViolation
::System::Exception* System::Data::ExceptionBuilder::ForeignKeyViolation(::StringW constraint, ::ArrayW<::Il2CppObject*> keys) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ForeignKeyViolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ForeignKeyViolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constraint), ::il2cpp_utils::ExtractType(keys)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, constraint, keys);
}
// Autogenerated method: System.Data.ExceptionBuilder.RemoveParentRow
::System::Exception* System::Data::ExceptionBuilder::RemoveParentRow(::System::Data::ForeignKeyConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RemoveParentRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RemoveParentRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constraint)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, constraint);
}
// Autogenerated method: System.Data.ExceptionBuilder.MaxLengthViolationText
::StringW System::Data::ExceptionBuilder::MaxLengthViolationText(::StringW columnName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::MaxLengthViolationText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "MaxLengthViolationText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(columnName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, columnName);
}
// Autogenerated method: System.Data.ExceptionBuilder.NotAllowDBNullViolationText
::StringW System::Data::ExceptionBuilder::NotAllowDBNullViolationText(::StringW columnName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::NotAllowDBNullViolationText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "NotAllowDBNullViolationText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(columnName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, columnName);
}
// Autogenerated method: System.Data.ExceptionBuilder.CantAddConstraintToMultipleNestedTable
::System::Exception* System::Data::ExceptionBuilder::CantAddConstraintToMultipleNestedTable(::StringW tableName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CantAddConstraintToMultipleNestedTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CantAddConstraintToMultipleNestedTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tableName);
}
// Autogenerated method: System.Data.ExceptionBuilder.AutoIncrementAndExpression
::System::Exception* System::Data::ExceptionBuilder::AutoIncrementAndExpression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::AutoIncrementAndExpression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "AutoIncrementAndExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.AutoIncrementAndDefaultValue
::System::Exception* System::Data::ExceptionBuilder::AutoIncrementAndDefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::AutoIncrementAndDefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "AutoIncrementAndDefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.AutoIncrementSeed
::System::Exception* System::Data::ExceptionBuilder::AutoIncrementSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::AutoIncrementSeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "AutoIncrementSeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.CantChangeDataType
::System::Exception* System::Data::ExceptionBuilder::CantChangeDataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CantChangeDataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CantChangeDataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.NullDataType
::System::Exception* System::Data::ExceptionBuilder::NullDataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::NullDataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "NullDataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.ColumnNameRequired
::System::Exception* System::Data::ExceptionBuilder::ColumnNameRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ColumnNameRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ColumnNameRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.DefaultValueAndAutoIncrement
::System::Exception* System::Data::ExceptionBuilder::DefaultValueAndAutoIncrement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::DefaultValueAndAutoIncrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "DefaultValueAndAutoIncrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.DefaultValueDataType
::System::Exception* System::Data::ExceptionBuilder::DefaultValueDataType(::StringW column, ::System::Type* defaultType, ::System::Type* columnType, ::System::Exception* inner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::DefaultValueDataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "DefaultValueDataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column), ::il2cpp_utils::ExtractType(defaultType), ::il2cpp_utils::ExtractType(columnType), ::il2cpp_utils::ExtractType(inner)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column, defaultType, columnType, inner);
}
// Autogenerated method: System.Data.ExceptionBuilder.DefaultValueColumnDataType
::System::Exception* System::Data::ExceptionBuilder::DefaultValueColumnDataType(::StringW column, ::System::Type* defaultType, ::System::Type* columnType, ::System::Exception* inner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::DefaultValueColumnDataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "DefaultValueColumnDataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column), ::il2cpp_utils::ExtractType(defaultType), ::il2cpp_utils::ExtractType(columnType), ::il2cpp_utils::ExtractType(inner)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column, defaultType, columnType, inner);
}
// Autogenerated method: System.Data.ExceptionBuilder.ExpressionAndUnique
::System::Exception* System::Data::ExceptionBuilder::ExpressionAndUnique() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ExpressionAndUnique");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ExpressionAndUnique", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.ExpressionAndReadOnly
::System::Exception* System::Data::ExceptionBuilder::ExpressionAndReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ExpressionAndReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ExpressionAndReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.ExpressionAndConstraint
::System::Exception* System::Data::ExceptionBuilder::ExpressionAndConstraint(::System::Data::DataColumn* column, ::System::Data::Constraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ExpressionAndConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ExpressionAndConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column), ::il2cpp_utils::ExtractType(constraint)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column, constraint);
}
// Autogenerated method: System.Data.ExceptionBuilder.ExpressionInConstraint
::System::Exception* System::Data::ExceptionBuilder::ExpressionInConstraint(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ExpressionInConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ExpressionInConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column);
}
// Autogenerated method: System.Data.ExceptionBuilder.ExpressionCircular
::System::Exception* System::Data::ExceptionBuilder::ExpressionCircular() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ExpressionCircular");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ExpressionCircular", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.NonUniqueValues
::System::Exception* System::Data::ExceptionBuilder::NonUniqueValues(::StringW column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::NonUniqueValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "NonUniqueValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column);
}
// Autogenerated method: System.Data.ExceptionBuilder.NullKeyValues
::System::Exception* System::Data::ExceptionBuilder::NullKeyValues(::StringW column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::NullKeyValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "NullKeyValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column);
}
// Autogenerated method: System.Data.ExceptionBuilder.NullValues
::System::Exception* System::Data::ExceptionBuilder::NullValues(::StringW column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::NullValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "NullValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column);
}
// Autogenerated method: System.Data.ExceptionBuilder.ReadOnlyAndExpression
::System::Exception* System::Data::ExceptionBuilder::ReadOnlyAndExpression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ReadOnlyAndExpression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ReadOnlyAndExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.ReadOnly
::System::Exception* System::Data::ExceptionBuilder::ReadOnly(::StringW column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column);
}
// Autogenerated method: System.Data.ExceptionBuilder.UniqueAndExpression
::System::Exception* System::Data::ExceptionBuilder::UniqueAndExpression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::UniqueAndExpression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "UniqueAndExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.SetFailed
::System::Exception* System::Data::ExceptionBuilder::SetFailed(::Il2CppObject* value, ::System::Data::DataColumn* column, ::System::Type* type, ::System::Exception* innerException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::SetFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "SetFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(column), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(innerException)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, column, type, innerException);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotSetToNull
::System::Exception* System::Data::ExceptionBuilder::CannotSetToNull(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotSetToNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotSetToNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column);
}
// Autogenerated method: System.Data.ExceptionBuilder.LongerThanMaxLength
::System::Exception* System::Data::ExceptionBuilder::LongerThanMaxLength(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::LongerThanMaxLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "LongerThanMaxLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotSetMaxLength
::System::Exception* System::Data::ExceptionBuilder::CannotSetMaxLength(::System::Data::DataColumn* column, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotSetMaxLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotSetMaxLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column, value);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotSetMaxLength2
::System::Exception* System::Data::ExceptionBuilder::CannotSetMaxLength2(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotSetMaxLength2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotSetMaxLength2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotSetSimpleContentType
::System::Exception* System::Data::ExceptionBuilder::CannotSetSimpleContentType(::StringW columnName, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotSetSimpleContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotSetSimpleContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(columnName), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, columnName, type);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotSetSimpleContent
::System::Exception* System::Data::ExceptionBuilder::CannotSetSimpleContent(::StringW columnName, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotSetSimpleContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotSetSimpleContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(columnName), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, columnName, type);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotChangeNamespace
::System::Exception* System::Data::ExceptionBuilder::CannotChangeNamespace(::StringW columnName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotChangeNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotChangeNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(columnName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, columnName);
}
// Autogenerated method: System.Data.ExceptionBuilder.HasToBeStringType
::System::Exception* System::Data::ExceptionBuilder::HasToBeStringType(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::HasToBeStringType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "HasToBeStringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column);
}
// Autogenerated method: System.Data.ExceptionBuilder.AutoIncrementCannotSetIfHasData
::System::Exception* System::Data::ExceptionBuilder::AutoIncrementCannotSetIfHasData(::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::AutoIncrementCannotSetIfHasData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "AutoIncrementCannotSetIfHasData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeName);
}
// Autogenerated method: System.Data.ExceptionBuilder.INullableUDTwithoutStaticNull
::System::Exception* System::Data::ExceptionBuilder::INullableUDTwithoutStaticNull(::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::INullableUDTwithoutStaticNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "INullableUDTwithoutStaticNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeName);
}
// Autogenerated method: System.Data.ExceptionBuilder.IComparableNotImplemented
::System::Exception* System::Data::ExceptionBuilder::IComparableNotImplemented(::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::IComparableNotImplemented");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "IComparableNotImplemented", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeName);
}
// Autogenerated method: System.Data.ExceptionBuilder.UDTImplementsIChangeTrackingButnotIRevertible
::System::Exception* System::Data::ExceptionBuilder::UDTImplementsIChangeTrackingButnotIRevertible(::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::UDTImplementsIChangeTrackingButnotIRevertible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "UDTImplementsIChangeTrackingButnotIRevertible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeName);
}
// Autogenerated method: System.Data.ExceptionBuilder.InvalidDataColumnMapping
::System::Exception* System::Data::ExceptionBuilder::InvalidDataColumnMapping(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::InvalidDataColumnMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "InvalidDataColumnMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotSetDateTimeModeForNonDateTimeColumns
::System::Exception* System::Data::ExceptionBuilder::CannotSetDateTimeModeForNonDateTimeColumns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotSetDateTimeModeForNonDateTimeColumns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotSetDateTimeModeForNonDateTimeColumns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.InvalidDateTimeMode
::System::Exception* System::Data::ExceptionBuilder::InvalidDateTimeMode(::System::Data::DataSetDateTime mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::InvalidDateTimeMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "InvalidDateTimeMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mode);
}
// Autogenerated method: System.Data.ExceptionBuilder.CantChangeDateTimeMode
::System::Exception* System::Data::ExceptionBuilder::CantChangeDateTimeMode(::System::Data::DataSetDateTime oldValue, ::System::Data::DataSetDateTime newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CantChangeDateTimeMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CantChangeDateTimeMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oldValue, newValue);
}
// Autogenerated method: System.Data.ExceptionBuilder.ColumnTypeNotSupported
::System::Exception* System::Data::ExceptionBuilder::ColumnTypeNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ColumnTypeNotSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ColumnTypeNotSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.SetFailed
::System::Exception* System::Data::ExceptionBuilder::SetFailed(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::SetFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "SetFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExceptionBuilder.CanNotUse
::System::Exception* System::Data::ExceptionBuilder::CanNotUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CanNotUse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CanNotUse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.SetIListObject
::System::Exception* System::Data::ExceptionBuilder::SetIListObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::SetIListObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "SetIListObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.AddNewNotAllowNull
::System::Exception* System::Data::ExceptionBuilder::AddNewNotAllowNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::AddNewNotAllowNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "AddNewNotAllowNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.NotOpen
::System::Exception* System::Data::ExceptionBuilder::NotOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::NotOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "NotOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.CreateChildView
::System::Exception* System::Data::ExceptionBuilder::CreateChildView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CreateChildView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CreateChildView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.CanNotDelete
::System::Exception* System::Data::ExceptionBuilder::CanNotDelete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CanNotDelete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CanNotDelete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.GetElementIndex
::System::Exception* System::Data::ExceptionBuilder::GetElementIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::GetElementIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "GetElementIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: System.Data.ExceptionBuilder.AddExternalObject
::System::Exception* System::Data::ExceptionBuilder::AddExternalObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::AddExternalObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "AddExternalObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.CanNotClear
::System::Exception* System::Data::ExceptionBuilder::CanNotClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CanNotClear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CanNotClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.InsertExternalObject
::System::Exception* System::Data::ExceptionBuilder::InsertExternalObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::InsertExternalObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "InsertExternalObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.RemoveExternalObject
::System::Exception* System::Data::ExceptionBuilder::RemoveExternalObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RemoveExternalObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RemoveExternalObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.KeyTableMismatch
::System::Exception* System::Data::ExceptionBuilder::KeyTableMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::KeyTableMismatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "KeyTableMismatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.KeyNoColumns
::System::Exception* System::Data::ExceptionBuilder::KeyNoColumns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::KeyNoColumns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "KeyNoColumns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.KeyTooManyColumns
::System::Exception* System::Data::ExceptionBuilder::KeyTooManyColumns(int cols) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::KeyTooManyColumns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "KeyTooManyColumns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cols)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cols);
}
// Autogenerated method: System.Data.ExceptionBuilder.KeyDuplicateColumns
::System::Exception* System::Data::ExceptionBuilder::KeyDuplicateColumns(::StringW columnName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::KeyDuplicateColumns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "KeyDuplicateColumns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(columnName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, columnName);
}
// Autogenerated method: System.Data.ExceptionBuilder.RelationDataSetMismatch
::System::Exception* System::Data::ExceptionBuilder::RelationDataSetMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RelationDataSetMismatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RelationDataSetMismatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.ColumnsTypeMismatch
::System::Exception* System::Data::ExceptionBuilder::ColumnsTypeMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ColumnsTypeMismatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ColumnsTypeMismatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.KeyLengthMismatch
::System::Exception* System::Data::ExceptionBuilder::KeyLengthMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::KeyLengthMismatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "KeyLengthMismatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.KeyLengthZero
::System::Exception* System::Data::ExceptionBuilder::KeyLengthZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::KeyLengthZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "KeyLengthZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.ForeignRelation
::System::Exception* System::Data::ExceptionBuilder::ForeignRelation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ForeignRelation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ForeignRelation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.KeyColumnsIdentical
::System::Exception* System::Data::ExceptionBuilder::KeyColumnsIdentical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::KeyColumnsIdentical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "KeyColumnsIdentical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.RelationForeignTable
::System::Exception* System::Data::ExceptionBuilder::RelationForeignTable(::StringW t1, ::StringW t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RelationForeignTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RelationForeignTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.Data.ExceptionBuilder.GetParentRowTableMismatch
::System::Exception* System::Data::ExceptionBuilder::GetParentRowTableMismatch(::StringW t1, ::StringW t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::GetParentRowTableMismatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "GetParentRowTableMismatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.Data.ExceptionBuilder.SetParentRowTableMismatch
::System::Exception* System::Data::ExceptionBuilder::SetParentRowTableMismatch(::StringW t1, ::StringW t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::SetParentRowTableMismatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "SetParentRowTableMismatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.Data.ExceptionBuilder.RelationForeignRow
::System::Exception* System::Data::ExceptionBuilder::RelationForeignRow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RelationForeignRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RelationForeignRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.RelationNestedReadOnly
::System::Exception* System::Data::ExceptionBuilder::RelationNestedReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RelationNestedReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RelationNestedReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.TableCantBeNestedInTwoTables
::System::Exception* System::Data::ExceptionBuilder::TableCantBeNestedInTwoTables(::StringW tableName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::TableCantBeNestedInTwoTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "TableCantBeNestedInTwoTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tableName);
}
// Autogenerated method: System.Data.ExceptionBuilder.LoopInNestedRelations
::System::Exception* System::Data::ExceptionBuilder::LoopInNestedRelations(::StringW tableName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::LoopInNestedRelations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "LoopInNestedRelations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tableName);
}
// Autogenerated method: System.Data.ExceptionBuilder.RelationDoesNotExist
::System::Exception* System::Data::ExceptionBuilder::RelationDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RelationDoesNotExist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RelationDoesNotExist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.ParentOrChildColumnsDoNotHaveDataSet
::System::Exception* System::Data::ExceptionBuilder::ParentOrChildColumnsDoNotHaveDataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ParentOrChildColumnsDoNotHaveDataSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ParentOrChildColumnsDoNotHaveDataSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.InValidNestedRelation
::System::Exception* System::Data::ExceptionBuilder::InValidNestedRelation(::StringW childTableName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::InValidNestedRelation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "InValidNestedRelation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(childTableName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, childTableName);
}
// Autogenerated method: System.Data.ExceptionBuilder.InvalidParentNamespaceinNestedRelation
::System::Exception* System::Data::ExceptionBuilder::InvalidParentNamespaceinNestedRelation(::StringW childTableName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::InvalidParentNamespaceinNestedRelation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "InvalidParentNamespaceinNestedRelation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(childTableName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, childTableName);
}
// Autogenerated method: System.Data.ExceptionBuilder.RowNotInTheDataSet
::System::Exception* System::Data::ExceptionBuilder::RowNotInTheDataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RowNotInTheDataSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RowNotInTheDataSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.RowNotInTheTable
::System::Exception* System::Data::ExceptionBuilder::RowNotInTheTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RowNotInTheTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RowNotInTheTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.EditInRowChanging
::System::Exception* System::Data::ExceptionBuilder::EditInRowChanging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::EditInRowChanging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "EditInRowChanging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.EndEditInRowChanging
::System::Exception* System::Data::ExceptionBuilder::EndEditInRowChanging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::EndEditInRowChanging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "EndEditInRowChanging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.BeginEditInRowChanging
::System::Exception* System::Data::ExceptionBuilder::BeginEditInRowChanging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::BeginEditInRowChanging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "BeginEditInRowChanging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.CancelEditInRowChanging
::System::Exception* System::Data::ExceptionBuilder::CancelEditInRowChanging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CancelEditInRowChanging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CancelEditInRowChanging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.DeleteInRowDeleting
::System::Exception* System::Data::ExceptionBuilder::DeleteInRowDeleting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::DeleteInRowDeleting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "DeleteInRowDeleting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.ValueArrayLength
::System::Exception* System::Data::ExceptionBuilder::ValueArrayLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ValueArrayLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ValueArrayLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.NoCurrentData
::System::Exception* System::Data::ExceptionBuilder::NoCurrentData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::NoCurrentData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "NoCurrentData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.NoOriginalData
::System::Exception* System::Data::ExceptionBuilder::NoOriginalData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::NoOriginalData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "NoOriginalData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.NoProposedData
::System::Exception* System::Data::ExceptionBuilder::NoProposedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::NoProposedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "NoProposedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.RowRemovedFromTheTable
::System::Exception* System::Data::ExceptionBuilder::RowRemovedFromTheTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RowRemovedFromTheTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RowRemovedFromTheTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.DeletedRowInaccessible
::System::Exception* System::Data::ExceptionBuilder::DeletedRowInaccessible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::DeletedRowInaccessible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "DeletedRowInaccessible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.RowAlreadyDeleted
::System::Exception* System::Data::ExceptionBuilder::RowAlreadyDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RowAlreadyDeleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RowAlreadyDeleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.RowEmpty
::System::Exception* System::Data::ExceptionBuilder::RowEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RowEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RowEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.InvalidRowVersion
::System::Exception* System::Data::ExceptionBuilder::InvalidRowVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::InvalidRowVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "InvalidRowVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.RowOutOfRange
::System::Exception* System::Data::ExceptionBuilder::RowOutOfRange(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RowOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RowOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: System.Data.ExceptionBuilder.RowInsertTwice
::System::Exception* System::Data::ExceptionBuilder::RowInsertTwice(int index, ::StringW tableName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RowInsertTwice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RowInsertTwice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(tableName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index, tableName);
}
// Autogenerated method: System.Data.ExceptionBuilder.RowInsertMissing
::System::Exception* System::Data::ExceptionBuilder::RowInsertMissing(::StringW tableName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RowInsertMissing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RowInsertMissing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tableName);
}
// Autogenerated method: System.Data.ExceptionBuilder.RowAlreadyRemoved
::System::Exception* System::Data::ExceptionBuilder::RowAlreadyRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RowAlreadyRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RowAlreadyRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.MultipleParents
::System::Exception* System::Data::ExceptionBuilder::MultipleParents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::MultipleParents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "MultipleParents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.InvalidRowState
::System::Exception* System::Data::ExceptionBuilder::InvalidRowState(::System::Data::DataRowState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::InvalidRowState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "InvalidRowState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated method: System.Data.ExceptionBuilder.InvalidRowBitPattern
::System::Exception* System::Data::ExceptionBuilder::InvalidRowBitPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::InvalidRowBitPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "InvalidRowBitPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.SetDataSetNameToEmpty
::System::Exception* System::Data::ExceptionBuilder::SetDataSetNameToEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::SetDataSetNameToEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "SetDataSetNameToEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.SetDataSetNameConflicting
::System::Exception* System::Data::ExceptionBuilder::SetDataSetNameConflicting(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::SetDataSetNameConflicting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "SetDataSetNameConflicting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExceptionBuilder.DataSetUnsupportedSchema
::System::Exception* System::Data::ExceptionBuilder::DataSetUnsupportedSchema(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::DataSetUnsupportedSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "DataSetUnsupportedSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ns);
}
// Autogenerated method: System.Data.ExceptionBuilder.MergeMissingDefinition
::System::Exception* System::Data::ExceptionBuilder::MergeMissingDefinition(::StringW obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::MergeMissingDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "MergeMissingDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Data.ExceptionBuilder.TablesInDifferentSets
::System::Exception* System::Data::ExceptionBuilder::TablesInDifferentSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::TablesInDifferentSets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "TablesInDifferentSets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.RelationAlreadyExists
::System::Exception* System::Data::ExceptionBuilder::RelationAlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RelationAlreadyExists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RelationAlreadyExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.RowAlreadyInOtherCollection
::System::Exception* System::Data::ExceptionBuilder::RowAlreadyInOtherCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RowAlreadyInOtherCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RowAlreadyInOtherCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.RowAlreadyInTheCollection
::System::Exception* System::Data::ExceptionBuilder::RowAlreadyInTheCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RowAlreadyInTheCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RowAlreadyInTheCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.RecordStateRange
::System::Exception* System::Data::ExceptionBuilder::RecordStateRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RecordStateRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RecordStateRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.IndexKeyLength
::System::Exception* System::Data::ExceptionBuilder::IndexKeyLength(int length, int keyLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::IndexKeyLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "IndexKeyLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(keyLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length, keyLength);
}
// Autogenerated method: System.Data.ExceptionBuilder.RemovePrimaryKey
::System::Exception* System::Data::ExceptionBuilder::RemovePrimaryKey(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RemovePrimaryKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RemovePrimaryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, table);
}
// Autogenerated method: System.Data.ExceptionBuilder.RelationAlreadyInOtherDataSet
::System::Exception* System::Data::ExceptionBuilder::RelationAlreadyInOtherDataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RelationAlreadyInOtherDataSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RelationAlreadyInOtherDataSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.RelationAlreadyInTheDataSet
::System::Exception* System::Data::ExceptionBuilder::RelationAlreadyInTheDataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RelationAlreadyInTheDataSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RelationAlreadyInTheDataSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.RelationNotInTheDataSet
::System::Exception* System::Data::ExceptionBuilder::RelationNotInTheDataSet(::StringW relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RelationNotInTheDataSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RelationNotInTheDataSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relation)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, relation);
}
// Autogenerated method: System.Data.ExceptionBuilder.RelationOutOfRange
::System::Exception* System::Data::ExceptionBuilder::RelationOutOfRange(::Il2CppObject* index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RelationOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RelationOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: System.Data.ExceptionBuilder.DuplicateRelation
::System::Exception* System::Data::ExceptionBuilder::DuplicateRelation(::StringW relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::DuplicateRelation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "DuplicateRelation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relation)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, relation);
}
// Autogenerated method: System.Data.ExceptionBuilder.RelationTableNull
::System::Exception* System::Data::ExceptionBuilder::RelationTableNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RelationTableNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RelationTableNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.RelationDataSetNull
::System::Exception* System::Data::ExceptionBuilder::RelationDataSetNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RelationDataSetNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RelationDataSetNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.RelationTableWasRemoved
::System::Exception* System::Data::ExceptionBuilder::RelationTableWasRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RelationTableWasRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RelationTableWasRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.ParentTableMismatch
::System::Exception* System::Data::ExceptionBuilder::ParentTableMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ParentTableMismatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ParentTableMismatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.ChildTableMismatch
::System::Exception* System::Data::ExceptionBuilder::ChildTableMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ChildTableMismatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ChildTableMismatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.EnforceConstraint
::System::Exception* System::Data::ExceptionBuilder::EnforceConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::EnforceConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "EnforceConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.CaseLocaleMismatch
::System::Exception* System::Data::ExceptionBuilder::CaseLocaleMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CaseLocaleMismatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CaseLocaleMismatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotChangeCaseLocale
::System::Exception* System::Data::ExceptionBuilder::CannotChangeCaseLocale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotChangeCaseLocale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotChangeCaseLocale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotChangeCaseLocale
::System::Exception* System::Data::ExceptionBuilder::CannotChangeCaseLocale(::System::Exception* innerException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotChangeCaseLocale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotChangeCaseLocale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerException)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, innerException);
}
// Autogenerated method: System.Data.ExceptionBuilder.InvalidRemotingFormat
::System::Exception* System::Data::ExceptionBuilder::InvalidRemotingFormat(::System::Data::SerializationFormat mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::InvalidRemotingFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "InvalidRemotingFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mode);
}
// Autogenerated method: System.Data.ExceptionBuilder.TableForeignPrimaryKey
::System::Exception* System::Data::ExceptionBuilder::TableForeignPrimaryKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::TableForeignPrimaryKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "TableForeignPrimaryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.TableCannotAddToSimpleContent
::System::Exception* System::Data::ExceptionBuilder::TableCannotAddToSimpleContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::TableCannotAddToSimpleContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "TableCannotAddToSimpleContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.NoTableName
::System::Exception* System::Data::ExceptionBuilder::NoTableName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::NoTableName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "NoTableName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.MultipleTextOnlyColumns
::System::Exception* System::Data::ExceptionBuilder::MultipleTextOnlyColumns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::MultipleTextOnlyColumns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "MultipleTextOnlyColumns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.InvalidSortString
::System::Exception* System::Data::ExceptionBuilder::InvalidSortString(::StringW sort) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::InvalidSortString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "InvalidSortString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sort)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sort);
}
// Autogenerated method: System.Data.ExceptionBuilder.DuplicateTableName
::System::Exception* System::Data::ExceptionBuilder::DuplicateTableName(::StringW table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::DuplicateTableName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "DuplicateTableName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, table);
}
// Autogenerated method: System.Data.ExceptionBuilder.DuplicateTableName2
::System::Exception* System::Data::ExceptionBuilder::DuplicateTableName2(::StringW table, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::DuplicateTableName2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "DuplicateTableName2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, table, ns);
}
// Autogenerated method: System.Data.ExceptionBuilder.SelfnestedDatasetConflictingName
::System::Exception* System::Data::ExceptionBuilder::SelfnestedDatasetConflictingName(::StringW table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::SelfnestedDatasetConflictingName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "SelfnestedDatasetConflictingName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, table);
}
// Autogenerated method: System.Data.ExceptionBuilder.DatasetConflictingName
::System::Exception* System::Data::ExceptionBuilder::DatasetConflictingName(::StringW table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::DatasetConflictingName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "DatasetConflictingName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, table);
}
// Autogenerated method: System.Data.ExceptionBuilder.TableAlreadyInOtherDataSet
::System::Exception* System::Data::ExceptionBuilder::TableAlreadyInOtherDataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::TableAlreadyInOtherDataSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "TableAlreadyInOtherDataSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.TableAlreadyInTheDataSet
::System::Exception* System::Data::ExceptionBuilder::TableAlreadyInTheDataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::TableAlreadyInTheDataSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "TableAlreadyInTheDataSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.TableOutOfRange
::System::Exception* System::Data::ExceptionBuilder::TableOutOfRange(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::TableOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "TableOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: System.Data.ExceptionBuilder.TableNotInTheDataSet
::System::Exception* System::Data::ExceptionBuilder::TableNotInTheDataSet(::StringW table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::TableNotInTheDataSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "TableNotInTheDataSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, table);
}
// Autogenerated method: System.Data.ExceptionBuilder.TableInRelation
::System::Exception* System::Data::ExceptionBuilder::TableInRelation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::TableInRelation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "TableInRelation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.TableInConstraint
::System::Exception* System::Data::ExceptionBuilder::TableInConstraint(::System::Data::DataTable* table, ::System::Data::Constraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::TableInConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "TableInConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(constraint)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, table, constraint);
}
// Autogenerated method: System.Data.ExceptionBuilder.CanNotSerializeDataTableHierarchy
::System::Exception* System::Data::ExceptionBuilder::CanNotSerializeDataTableHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CanNotSerializeDataTableHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CanNotSerializeDataTableHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.CanNotRemoteDataTable
::System::Exception* System::Data::ExceptionBuilder::CanNotRemoteDataTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CanNotRemoteDataTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CanNotRemoteDataTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.CanNotSetRemotingFormat
::System::Exception* System::Data::ExceptionBuilder::CanNotSetRemotingFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CanNotSetRemotingFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CanNotSetRemotingFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.CanNotSerializeDataTableWithEmptyName
::System::Exception* System::Data::ExceptionBuilder::CanNotSerializeDataTableWithEmptyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CanNotSerializeDataTableWithEmptyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CanNotSerializeDataTableWithEmptyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.TableNotFound
::System::Exception* System::Data::ExceptionBuilder::TableNotFound(::StringW tableName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::TableNotFound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "TableNotFound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tableName);
}
// Autogenerated method: System.Data.ExceptionBuilder.AggregateException
::System::Exception* System::Data::ExceptionBuilder::AggregateException(::System::Data::AggregateType aggregateType, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::AggregateException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "AggregateException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aggregateType), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aggregateType, type);
}
// Autogenerated method: System.Data.ExceptionBuilder.InvalidStorageType
::System::Exception* System::Data::ExceptionBuilder::InvalidStorageType(::System::TypeCode typecode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::InvalidStorageType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "InvalidStorageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typecode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typecode);
}
// Autogenerated method: System.Data.ExceptionBuilder.RangeArgument
::System::Exception* System::Data::ExceptionBuilder::RangeArgument(int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RangeArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RangeArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, min, max);
}
// Autogenerated method: System.Data.ExceptionBuilder.NullRange
::System::Exception* System::Data::ExceptionBuilder::NullRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::NullRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "NullRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.NegativeMinimumCapacity
::System::Exception* System::Data::ExceptionBuilder::NegativeMinimumCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::NegativeMinimumCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "NegativeMinimumCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.ProblematicChars
::System::Exception* System::Data::ExceptionBuilder::ProblematicChars(::Il2CppChar charValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ProblematicChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ProblematicChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charValue);
}
// Autogenerated method: System.Data.ExceptionBuilder.StorageSetFailed
::System::Exception* System::Data::ExceptionBuilder::StorageSetFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::StorageSetFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "StorageSetFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.SimpleTypeNotSupported
::System::Exception* System::Data::ExceptionBuilder::SimpleTypeNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::SimpleTypeNotSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "SimpleTypeNotSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.MissingAttribute
::System::Exception* System::Data::ExceptionBuilder::MissingAttribute(::StringW attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::MissingAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "MissingAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, attribute);
}
// Autogenerated method: System.Data.ExceptionBuilder.MissingAttribute
::System::Exception* System::Data::ExceptionBuilder::MissingAttribute(::StringW element, ::StringW attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::MissingAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "MissingAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attribute)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, attribute);
}
// Autogenerated method: System.Data.ExceptionBuilder.InvalidAttributeValue
::System::Exception* System::Data::ExceptionBuilder::InvalidAttributeValue(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::InvalidAttributeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "InvalidAttributeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: System.Data.ExceptionBuilder.AttributeValues
::System::Exception* System::Data::ExceptionBuilder::AttributeValues(::StringW name, ::StringW value1, ::StringW value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::AttributeValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "AttributeValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(value2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, value1, value2);
}
// Autogenerated method: System.Data.ExceptionBuilder.ElementTypeNotFound
::System::Exception* System::Data::ExceptionBuilder::ElementTypeNotFound(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ElementTypeNotFound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ElementTypeNotFound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExceptionBuilder.RelationParentNameMissing
::System::Exception* System::Data::ExceptionBuilder::RelationParentNameMissing(::StringW rel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RelationParentNameMissing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RelationParentNameMissing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rel)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rel);
}
// Autogenerated method: System.Data.ExceptionBuilder.RelationChildNameMissing
::System::Exception* System::Data::ExceptionBuilder::RelationChildNameMissing(::StringW rel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RelationChildNameMissing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RelationChildNameMissing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rel)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rel);
}
// Autogenerated method: System.Data.ExceptionBuilder.RelationTableKeyMissing
::System::Exception* System::Data::ExceptionBuilder::RelationTableKeyMissing(::StringW rel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RelationTableKeyMissing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RelationTableKeyMissing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rel)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rel);
}
// Autogenerated method: System.Data.ExceptionBuilder.RelationChildKeyMissing
::System::Exception* System::Data::ExceptionBuilder::RelationChildKeyMissing(::StringW rel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::RelationChildKeyMissing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "RelationChildKeyMissing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rel)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rel);
}
// Autogenerated method: System.Data.ExceptionBuilder.UndefinedDatatype
::System::Exception* System::Data::ExceptionBuilder::UndefinedDatatype(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::UndefinedDatatype");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "UndefinedDatatype", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExceptionBuilder.DatatypeNotDefined
::System::Exception* System::Data::ExceptionBuilder::DatatypeNotDefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::DatatypeNotDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "DatatypeNotDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.MismatchKeyLength
::System::Exception* System::Data::ExceptionBuilder::MismatchKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::MismatchKeyLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "MismatchKeyLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.InvalidField
::System::Exception* System::Data::ExceptionBuilder::InvalidField(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::InvalidField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "InvalidField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExceptionBuilder.InvalidSelector
::System::Exception* System::Data::ExceptionBuilder::InvalidSelector(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::InvalidSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "InvalidSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExceptionBuilder.CircularComplexType
::System::Exception* System::Data::ExceptionBuilder::CircularComplexType(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CircularComplexType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CircularComplexType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotInstantiateAbstract
::System::Exception* System::Data::ExceptionBuilder::CannotInstantiateAbstract(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotInstantiateAbstract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotInstantiateAbstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExceptionBuilder.InvalidKey
::System::Exception* System::Data::ExceptionBuilder::InvalidKey(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::InvalidKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "InvalidKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExceptionBuilder.DiffgramMissingTable
::System::Exception* System::Data::ExceptionBuilder::DiffgramMissingTable(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::DiffgramMissingTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "DiffgramMissingTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExceptionBuilder.DiffgramMissingSQL
::System::Exception* System::Data::ExceptionBuilder::DiffgramMissingSQL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::DiffgramMissingSQL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "DiffgramMissingSQL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.DuplicateConstraintRead
::System::Exception* System::Data::ExceptionBuilder::DuplicateConstraintRead(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::DuplicateConstraintRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "DuplicateConstraintRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Data.ExceptionBuilder.ColumnTypeConflict
::System::Exception* System::Data::ExceptionBuilder::ColumnTypeConflict(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ColumnTypeConflict");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ColumnTypeConflict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExceptionBuilder.CannotConvert
::System::Exception* System::Data::ExceptionBuilder::CannotConvert(::StringW name, ::StringW type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CannotConvert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CannotConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, type);
}
// Autogenerated method: System.Data.ExceptionBuilder.MissingRefer
::System::Exception* System::Data::ExceptionBuilder::MissingRefer(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::MissingRefer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "MissingRefer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExceptionBuilder.InvalidPrefix
::System::Exception* System::Data::ExceptionBuilder::InvalidPrefix(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::InvalidPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "InvalidPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExceptionBuilder.CanNotDeserializeObjectType
::System::Exception* System::Data::ExceptionBuilder::CanNotDeserializeObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::CanNotDeserializeObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "CanNotDeserializeObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.IsDataSetAttributeMissingInSchema
::System::Exception* System::Data::ExceptionBuilder::IsDataSetAttributeMissingInSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::IsDataSetAttributeMissingInSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "IsDataSetAttributeMissingInSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.TooManyIsDataSetAtributeInSchema
::System::Exception* System::Data::ExceptionBuilder::TooManyIsDataSetAtributeInSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::TooManyIsDataSetAtributeInSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "TooManyIsDataSetAtributeInSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.NestedCircular
::System::Exception* System::Data::ExceptionBuilder::NestedCircular(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::NestedCircular");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "NestedCircular", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExceptionBuilder.MultipleParentRows
::System::Exception* System::Data::ExceptionBuilder::MultipleParentRows(::StringW tableQName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::MultipleParentRows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "MultipleParentRows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableQName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tableQName);
}
// Autogenerated method: System.Data.ExceptionBuilder.PolymorphismNotSupported
::System::Exception* System::Data::ExceptionBuilder::PolymorphismNotSupported(::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::PolymorphismNotSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "PolymorphismNotSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeName);
}
// Autogenerated method: System.Data.ExceptionBuilder.DataTableInferenceNotSupported
::System::Exception* System::Data::ExceptionBuilder::DataTableInferenceNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::DataTableInferenceNotSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "DataTableInferenceNotSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.ThrowMultipleTargetConverter
void System::Data::ExceptionBuilder::ThrowMultipleTargetConverter(::System::Exception* innerException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ThrowMultipleTargetConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ThrowMultipleTargetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerException)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, innerException);
}
// Autogenerated method: System.Data.ExceptionBuilder.DuplicateDeclaration
::System::Exception* System::Data::ExceptionBuilder::DuplicateDeclaration(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::DuplicateDeclaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "DuplicateDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExceptionBuilder.FoundEntity
::System::Exception* System::Data::ExceptionBuilder::FoundEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::FoundEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "FoundEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExceptionBuilder.MergeFailed
::System::Exception* System::Data::ExceptionBuilder::MergeFailed(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::MergeFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "MergeFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExceptionBuilder.ConvertFailed
::System::Exception* System::Data::ExceptionBuilder::ConvertFailed(::System::Type* type1, ::System::Type* type2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::ConvertFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "ConvertFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type1), ::il2cpp_utils::ExtractType(type2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type1, type2);
}
// Autogenerated method: System.Data.ExceptionBuilder.InvalidDuplicateNamedSimpleTypeDelaration
::System::Exception* System::Data::ExceptionBuilder::InvalidDuplicateNamedSimpleTypeDelaration(::StringW stName, ::StringW errorStr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::InvalidDuplicateNamedSimpleTypeDelaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "InvalidDuplicateNamedSimpleTypeDelaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stName), ::il2cpp_utils::ExtractType(errorStr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stName, errorStr);
}
// Autogenerated method: System.Data.ExceptionBuilder.InternalRBTreeError
::System::Exception* System::Data::ExceptionBuilder::InternalRBTreeError(::System::Data::RBTreeError internalError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::InternalRBTreeError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "InternalRBTreeError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(internalError)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, internalError);
}
// Autogenerated method: System.Data.ExceptionBuilder.EnumeratorModified
::System::Exception* System::Data::ExceptionBuilder::EnumeratorModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExceptionBuilder::EnumeratorModified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExceptionBuilder", "EnumeratorModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.DataKey
#include "System/Data/DataKey.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Data.Index
#include "System/Data/Index.hpp"
// Including type: System.Data.DataViewRowState
#include "System/Data/DataViewRowState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataColumn[] _columns
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::DataColumn*>& System::Data::DataKey::dyn__columns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataKey::dyn__columns");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_columns"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::DataColumn*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataKey.get_ColumnsReference
::ArrayW<::System::Data::DataColumn*> System::Data::DataKey::get_ColumnsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataKey::get_ColumnsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ColumnsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataColumn*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataKey.get_HasValue
bool System::Data::DataKey::get_HasValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataKey::get_HasValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataKey.get_Table
::System::Data::DataTable* System::Data::DataKey::get_Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataKey::get_Table");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Table", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataKey..ctor
System::Data::DataKey::DataKey(::ArrayW<::System::Data::DataColumn*> columns, bool copyColumns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataKey::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(columns), ::il2cpp_utils::ExtractType(copyColumns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, columns, copyColumns);
}
// Autogenerated method: System.Data.DataKey.CheckState
void System::Data::DataKey::CheckState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataKey::CheckState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataKey.ColumnsEqual
bool System::Data::DataKey::ColumnsEqual(::System::Data::DataKey key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataKey::ColumnsEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ColumnsEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Data.DataKey.ColumnsEqual
bool System::Data::DataKey::ColumnsEqual(::ArrayW<::System::Data::DataColumn*> column1, ::ArrayW<::System::Data::DataColumn*> column2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataKey::ColumnsEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "DataKey", "ColumnsEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column1), ::il2cpp_utils::ExtractType(column2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column1, column2);
}
// Autogenerated method: System.Data.DataKey.ContainsColumn
bool System::Data::DataKey::ContainsColumn(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataKey::ContainsColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ContainsColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.DataKey.Equals
bool System::Data::DataKey::Equals(::System::Data::DataKey value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataKey::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataKey.GetColumnNames
::ArrayW<::StringW> System::Data::DataKey::GetColumnNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataKey::GetColumnNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetColumnNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataKey.GetIndexDesc
::ArrayW<::System::Data::IndexField> System::Data::DataKey::GetIndexDesc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataKey::GetIndexDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetIndexDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::IndexField>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataKey.GetKeyValues
::ArrayW<::Il2CppObject*> System::Data::DataKey::GetKeyValues(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataKey::GetKeyValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetKeyValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.DataKey.GetSortIndex
::System::Data::Index* System::Data::DataKey::GetSortIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataKey::GetSortIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSortIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Index*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataKey.GetSortIndex
::System::Data::Index* System::Data::DataKey::GetSortIndex(::System::Data::DataViewRowState recordStates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataKey::GetSortIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSortIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordStates)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Index*, false>(this, ___internal__method, recordStates);
}
// Autogenerated method: System.Data.DataKey.RecordsEqual
bool System::Data::DataKey::RecordsEqual(int record1, int record2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataKey::RecordsEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RecordsEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record1), ::il2cpp_utils::ExtractType(record2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record1, record2);
}
// Autogenerated method: System.Data.DataKey.ToArray
::ArrayW<::System::Data::DataColumn*> System::Data::DataKey::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataKey::ToArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataColumn*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataKey.GetHashCode
int System::Data::DataKey::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataKey::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataKey.Equals
bool System::Data::DataKey::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataKey::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.DataRelation
#include "System/Data/DataRelation.hpp"
// Including type: System.Data.DataSet
#include "System/Data/DataSet.hpp"
// Including type: System.Data.PropertyCollection
#include "System/Data/PropertyCollection.hpp"
// Including type: System.Data.UniqueConstraint
#include "System/Data/UniqueConstraint.hpp"
// Including type: System.Data.ForeignKeyConstraint
#include "System/Data/ForeignKeyConstraint.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.DataRowVersion
#include "System/Data/DataRowVersion.hpp"
// Including type: System.ComponentModel.PropertyChangedEventArgs
#include "System/ComponentModel/PropertyChangedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 s_objectTypeCount
int System::Data::DataRelation::_get_s_objectTypeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::_get_s_objectTypeCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data", "DataRelation", "s_objectTypeCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_objectTypeCount
void System::Data::DataRelation::_set_s_objectTypeCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::_set_s_objectTypeCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRelation", "s_objectTypeCount", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataSet _dataSet
[[deprecated("Use field access instead!")]] ::System::Data::DataSet*& System::Data::DataRelation::dyn__dataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::dyn__dataSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSet"))->offset;
  return *reinterpret_cast<::System::Data::DataSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.PropertyCollection _extendedProperties
[[deprecated("Use field access instead!")]] ::System::Data::PropertyCollection*& System::Data::DataRelation::dyn__extendedProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::dyn__extendedProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_extendedProperties"))->offset;
  return *reinterpret_cast<::System::Data::PropertyCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _relationName
[[deprecated("Use field access instead!")]] ::StringW& System::Data::DataRelation::dyn__relationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::dyn__relationName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relationName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataKey _childKey
[[deprecated("Use field access instead!")]] ::System::Data::DataKey& System::Data::DataRelation::dyn__childKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::dyn__childKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childKey"))->offset;
  return *reinterpret_cast<::System::Data::DataKey*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataKey _parentKey
[[deprecated("Use field access instead!")]] ::System::Data::DataKey& System::Data::DataRelation::dyn__parentKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::dyn__parentKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentKey"))->offset;
  return *reinterpret_cast<::System::Data::DataKey*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.UniqueConstraint _parentKeyConstraint
[[deprecated("Use field access instead!")]] ::System::Data::UniqueConstraint*& System::Data::DataRelation::dyn__parentKeyConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::dyn__parentKeyConstraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentKeyConstraint"))->offset;
  return *reinterpret_cast<::System::Data::UniqueConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.ForeignKeyConstraint _childKeyConstraint
[[deprecated("Use field access instead!")]] ::System::Data::ForeignKeyConstraint*& System::Data::DataRelation::dyn__childKeyConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::dyn__childKeyConstraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childKeyConstraint"))->offset;
  return *reinterpret_cast<::System::Data::ForeignKeyConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] _parentColumnNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Data::DataRelation::dyn__parentColumnNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::dyn__parentColumnNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentColumnNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] _childColumnNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Data::DataRelation::dyn__childColumnNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::dyn__childColumnNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childColumnNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _parentTableName
[[deprecated("Use field access instead!")]] ::StringW& System::Data::DataRelation::dyn__parentTableName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::dyn__parentTableName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentTableName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _childTableName
[[deprecated("Use field access instead!")]] ::StringW& System::Data::DataRelation::dyn__childTableName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::dyn__childTableName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childTableName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _parentTableNamespace
[[deprecated("Use field access instead!")]] ::StringW& System::Data::DataRelation::dyn__parentTableNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::dyn__parentTableNamespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentTableNamespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _childTableNamespace
[[deprecated("Use field access instead!")]] ::StringW& System::Data::DataRelation::dyn__childTableNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::dyn__childTableNamespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childTableNamespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _nested
[[deprecated("Use field access instead!")]] bool& System::Data::DataRelation::dyn__nested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::dyn__nested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _createConstraints
[[deprecated("Use field access instead!")]] bool& System::Data::DataRelation::dyn__createConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::dyn__createConstraints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_createConstraints"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _checkMultipleNested
[[deprecated("Use field access instead!")]] bool& System::Data::DataRelation::dyn__checkMultipleNested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::dyn__checkMultipleNested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_checkMultipleNested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _objectID
[[deprecated("Use field access instead!")]] int& System::Data::DataRelation::dyn__objectID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::dyn__objectID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanging
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& System::Data::DataRelation::dyn_PropertyChanging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::dyn_PropertyChanging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanging"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataRelation.get_ChildColumns
::ArrayW<::System::Data::DataColumn*> System::Data::DataRelation::get_ChildColumns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::get_ChildColumns");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelation*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataColumn*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.get_ChildColumnsReference
::ArrayW<::System::Data::DataColumn*> System::Data::DataRelation::get_ChildColumnsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::get_ChildColumnsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChildColumnsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataColumn*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.get_ChildKey
::System::Data::DataKey System::Data::DataRelation::get_ChildKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::get_ChildKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChildKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataKey, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.get_ChildTable
::System::Data::DataTable* System::Data::DataRelation::get_ChildTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::get_ChildTable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelation*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.get_DataSet
::System::Data::DataSet* System::Data::DataRelation::get_DataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::get_DataSet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelation*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataSet*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.get_ParentColumnNames
::ArrayW<::StringW> System::Data::DataRelation::get_ParentColumnNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::get_ParentColumnNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentColumnNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.get_ChildColumnNames
::ArrayW<::StringW> System::Data::DataRelation::get_ChildColumnNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::get_ChildColumnNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChildColumnNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.get_ParentColumns
::ArrayW<::System::Data::DataColumn*> System::Data::DataRelation::get_ParentColumns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::get_ParentColumns");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelation*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataColumn*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.get_ParentColumnsReference
::ArrayW<::System::Data::DataColumn*> System::Data::DataRelation::get_ParentColumnsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::get_ParentColumnsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentColumnsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataColumn*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.get_ParentKey
::System::Data::DataKey System::Data::DataRelation::get_ParentKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::get_ParentKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataKey, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.get_ParentTable
::System::Data::DataTable* System::Data::DataRelation::get_ParentTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::get_ParentTable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelation*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.get_RelationName
::StringW System::Data::DataRelation::get_RelationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::get_RelationName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelation*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.get_Nested
bool System::Data::DataRelation::get_Nested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::get_Nested");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelation*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.set_Nested
void System::Data::DataRelation::set_Nested(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::set_Nested");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelation*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataRelation.get_ParentKeyConstraint
::System::Data::UniqueConstraint* System::Data::DataRelation::get_ParentKeyConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::get_ParentKeyConstraint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelation*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::UniqueConstraint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.get_ChildKeyConstraint
::System::Data::ForeignKeyConstraint* System::Data::DataRelation::get_ChildKeyConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::get_ChildKeyConstraint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelation*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::ForeignKeyConstraint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.get_ExtendedProperties
::System::Data::PropertyCollection* System::Data::DataRelation::get_ExtendedProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::get_ExtendedProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExtendedProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::PropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.get_CheckMultipleNested
bool System::Data::DataRelation::get_CheckMultipleNested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::get_CheckMultipleNested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CheckMultipleNested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.set_CheckMultipleNested
void System::Data::DataRelation::set_CheckMultipleNested(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::set_CheckMultipleNested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CheckMultipleNested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataRelation.get_ObjectID
int System::Data::DataRelation::get_ObjectID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::get_ObjectID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.IsKeyNull
bool System::Data::DataRelation::IsKeyNull(::ArrayW<::Il2CppObject*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::IsKeyNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "DataRelation", "IsKeyNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, values);
}
// Autogenerated method: System.Data.DataRelation.GetChildRows
::ArrayW<::System::Data::DataRow*> System::Data::DataRelation::GetChildRows(::System::Data::DataKey parentKey, ::System::Data::DataKey childKey, ::System::Data::DataRow* parentRow, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::GetChildRows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "DataRelation", "GetChildRows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentKey), ::il2cpp_utils::ExtractType(childKey), ::il2cpp_utils::ExtractType(parentRow), ::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataRow*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parentKey, childKey, parentRow, version);
}
// Autogenerated method: System.Data.DataRelation.GetParentRows
::ArrayW<::System::Data::DataRow*> System::Data::DataRelation::GetParentRows(::System::Data::DataKey parentKey, ::System::Data::DataKey childKey, ::System::Data::DataRow* childRow, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::GetParentRows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "DataRelation", "GetParentRows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentKey), ::il2cpp_utils::ExtractType(childKey), ::il2cpp_utils::ExtractType(childRow), ::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataRow*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parentKey, childKey, childRow, version);
}
// Autogenerated method: System.Data.DataRelation.GetParentRow
::System::Data::DataRow* System::Data::DataRelation::GetParentRow(::System::Data::DataKey parentKey, ::System::Data::DataKey childKey, ::System::Data::DataRow* childRow, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::GetParentRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "DataRelation", "GetParentRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentKey), ::il2cpp_utils::ExtractType(childKey), ::il2cpp_utils::ExtractType(childRow), ::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parentKey, childKey, childRow, version);
}
// Autogenerated method: System.Data.DataRelation.SetDataSet
void System::Data::DataRelation::SetDataSet(::System::Data::DataSet* dataSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::SetDataSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataSet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataSet);
}
// Autogenerated method: System.Data.DataRelation.CheckNamespaceValidityForNestedRelations
void System::Data::DataRelation::CheckNamespaceValidityForNestedRelations(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::CheckNamespaceValidityForNestedRelations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckNamespaceValidityForNestedRelations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ns);
}
// Autogenerated method: System.Data.DataRelation.CheckNestedRelations
void System::Data::DataRelation::CheckNestedRelations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::CheckNestedRelations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckNestedRelations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.SetParentKeyConstraint
void System::Data::DataRelation::SetParentKeyConstraint(::System::Data::UniqueConstraint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::SetParentKeyConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParentKeyConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataRelation.SetChildKeyConstraint
void System::Data::DataRelation::SetChildKeyConstraint(::System::Data::ForeignKeyConstraint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::SetChildKeyConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildKeyConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataRelation.CheckState
void System::Data::DataRelation::CheckState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::CheckState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.CheckStateForProperty
void System::Data::DataRelation::CheckStateForProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::CheckStateForProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckStateForProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.Create
void System::Data::DataRelation::Create(::StringW relationName, ::ArrayW<::System::Data::DataColumn*> parentColumns, ::ArrayW<::System::Data::DataColumn*> childColumns, bool createConstraints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relationName), ::il2cpp_utils::ExtractType(parentColumns), ::il2cpp_utils::ExtractType(childColumns), ::il2cpp_utils::ExtractType(createConstraints)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relationName, parentColumns, childColumns, createConstraints);
}
// Autogenerated method: System.Data.DataRelation.Clone
::System::Data::DataRelation* System::Data::DataRelation::Clone(::System::Data::DataSet* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRelation*, false>(this, ___internal__method, destination);
}
// Autogenerated method: System.Data.DataRelation.OnPropertyChanging
void System::Data::DataRelation::OnPropertyChanging(::System::ComponentModel::PropertyChangedEventArgs* pcevent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::OnPropertyChanging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPropertyChanging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pcevent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pcevent);
}
// Autogenerated method: System.Data.DataRelation.RaisePropertyChanging
void System::Data::DataRelation::RaisePropertyChanging(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::RaisePropertyChanging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaisePropertyChanging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Data.DataRelation.ValidateMultipleNestedRelations
void System::Data::DataRelation::ValidateMultipleNestedRelations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::ValidateMultipleNestedRelations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateMultipleNestedRelations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelation.IsAutoGenerated
bool System::Data::DataRelation::IsAutoGenerated(::System::Data::DataColumn* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::IsAutoGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAutoGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, col);
}
// Autogenerated method: System.Data.DataRelation.ToString
::StringW System::Data::DataRelation::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelation::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataRelationCollection
#include "System/Data/DataRelationCollection.hpp"
// Including type: System.Data.DataRelationCollection/System.Data.DataTableRelationCollection
#include "System/Data/DataRelationCollection_DataTableRelationCollection.hpp"
// Including type: System.Data.DataRelationCollection/System.Data.DataSetRelationCollection
#include "System/Data/DataRelationCollection_DataSetRelationCollection.hpp"
// Including type: System.Data.DataRelation
#include "System/Data/DataRelation.hpp"
// Including type: System.ComponentModel.CollectionChangeEventHandler
#include "System/ComponentModel/CollectionChangeEventHandler.hpp"
// Including type: System.Data.DataSet
#include "System/Data/DataSet.hpp"
// Including type: System.ComponentModel.CollectionChangeEventArgs
#include "System/ComponentModel/CollectionChangeEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 s_objectTypeCount
int System::Data::DataRelationCollection::_get_s_objectTypeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::_get_s_objectTypeCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data", "DataRelationCollection", "s_objectTypeCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_objectTypeCount
void System::Data::DataRelationCollection::_set_s_objectTypeCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::_set_s_objectTypeCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRelationCollection", "s_objectTypeCount", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataRelation _inTransition
[[deprecated("Use field access instead!")]] ::System::Data::DataRelation*& System::Data::DataRelationCollection::dyn__inTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::dyn__inTransition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inTransition"))->offset;
  return *reinterpret_cast<::System::Data::DataRelation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _defaultNameIndex
[[deprecated("Use field access instead!")]] int& System::Data::DataRelationCollection::dyn__defaultNameIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::dyn__defaultNameIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultNameIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.CollectionChangeEventHandler _onCollectionChangedDelegate
[[deprecated("Use field access instead!")]] ::System::ComponentModel::CollectionChangeEventHandler*& System::Data::DataRelationCollection::dyn__onCollectionChangedDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::dyn__onCollectionChangedDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onCollectionChangedDelegate"))->offset;
  return *reinterpret_cast<::System::ComponentModel::CollectionChangeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.CollectionChangeEventHandler _onCollectionChangingDelegate
[[deprecated("Use field access instead!")]] ::System::ComponentModel::CollectionChangeEventHandler*& System::Data::DataRelationCollection::dyn__onCollectionChangingDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::dyn__onCollectionChangingDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onCollectionChangingDelegate"))->offset;
  return *reinterpret_cast<::System::ComponentModel::CollectionChangeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _objectID
[[deprecated("Use field access instead!")]] int& System::Data::DataRelationCollection::dyn__objectID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::dyn__objectID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataRelationCollection.get_ObjectID
int System::Data::DataRelationCollection::get_ObjectID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::get_ObjectID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelationCollection.get_Item
::System::Data::DataRelation* System::Data::DataRelationCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRelation*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Data.DataRelationCollection.get_Item
::System::Data::DataRelation* System::Data::DataRelationCollection::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRelation*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Data.DataRelationCollection.add_CollectionChanged
void System::Data::DataRelationCollection::add_CollectionChanged(::System::ComponentModel::CollectionChangeEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::add_CollectionChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_CollectionChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataRelationCollection.remove_CollectionChanged
void System::Data::DataRelationCollection::remove_CollectionChanged(::System::ComponentModel::CollectionChangeEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::remove_CollectionChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_CollectionChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataRelationCollection.Add
void System::Data::DataRelationCollection::Add(::System::Data::DataRelation* relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relation);
}
// Autogenerated method: System.Data.DataRelationCollection.AddCore
void System::Data::DataRelationCollection::AddCore(::System::Data::DataRelation* relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::AddCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relation);
}
// Autogenerated method: System.Data.DataRelationCollection.AssignName
::StringW System::Data::DataRelationCollection::AssignName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::AssignName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelationCollection.Clear
void System::Data::DataRelationCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelationCollection.Contains
bool System::Data::DataRelationCollection::Contains(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Data.DataRelationCollection.InternalIndexOf
int System::Data::DataRelationCollection::InternalIndexOf(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::InternalIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Data.DataRelationCollection.GetDataSet
::System::Data::DataSet* System::Data::DataRelationCollection::GetDataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::GetDataSet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataSet*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelationCollection.MakeName
::StringW System::Data::DataRelationCollection::MakeName(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::MakeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Data.DataRelationCollection.OnCollectionChanged
void System::Data::DataRelationCollection::OnCollectionChanged(::System::ComponentModel::CollectionChangeEventArgs* ccevent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::OnCollectionChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ccevent);
}
// Autogenerated method: System.Data.DataRelationCollection.OnCollectionChanging
void System::Data::DataRelationCollection::OnCollectionChanging(::System::ComponentModel::CollectionChangeEventArgs* ccevent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::OnCollectionChanging");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ccevent);
}
// Autogenerated method: System.Data.DataRelationCollection.RegisterName
void System::Data::DataRelationCollection::RegisterName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::RegisterName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Data.DataRelationCollection.Remove
void System::Data::DataRelationCollection::Remove(::System::Data::DataRelation* relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relation);
}
// Autogenerated method: System.Data.DataRelationCollection.RemoveAt
void System::Data::DataRelationCollection::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Data.DataRelationCollection.RemoveCore
void System::Data::DataRelationCollection::RemoveCore(::System::Data::DataRelation* relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::RemoveCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relation);
}
// Autogenerated method: System.Data.DataRelationCollection.UnregisterName
void System::Data::DataRelationCollection::UnregisterName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::UnregisterName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataRelationCollection/System.Data.DataTableRelationCollection
#include "System/Data/DataRelationCollection_DataTableRelationCollection.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.ComponentModel.CollectionChangeEventHandler
#include "System/ComponentModel/CollectionChangeEventHandler.hpp"
// Including type: System.Data.DataRelation
#include "System/Data/DataRelation.hpp"
// Including type: System.Data.DataSet
#include "System/Data/DataSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataTable _table
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::DataRelationCollection::DataTableRelationCollection::dyn__table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataTableRelationCollection::dyn__table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_table"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.ArrayList _relations
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Data::DataRelationCollection::DataTableRelationCollection::dyn__relations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataTableRelationCollection::dyn__relations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relations"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _fParentCollection
[[deprecated("Use field access instead!")]] bool& System::Data::DataRelationCollection::DataTableRelationCollection::dyn__fParentCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataTableRelationCollection::dyn__fParentCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fParentCollection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.CollectionChangeEventHandler RelationPropertyChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::CollectionChangeEventHandler*& System::Data::DataRelationCollection::DataTableRelationCollection::dyn_RelationPropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataTableRelationCollection::dyn_RelationPropertyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RelationPropertyChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::CollectionChangeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataRelationCollection/System.Data.DataTableRelationCollection.add_RelationPropertyChanged
void System::Data::DataRelationCollection::DataTableRelationCollection::add_RelationPropertyChanged(::System::ComponentModel::CollectionChangeEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataTableRelationCollection::add_RelationPropertyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_RelationPropertyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataRelationCollection/System.Data.DataTableRelationCollection.remove_RelationPropertyChanged
void System::Data::DataRelationCollection::DataTableRelationCollection::remove_RelationPropertyChanged(::System::ComponentModel::CollectionChangeEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataTableRelationCollection::remove_RelationPropertyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_RelationPropertyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataRelationCollection/System.Data.DataTableRelationCollection.EnsureDataSet
void System::Data::DataRelationCollection::DataTableRelationCollection::EnsureDataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataTableRelationCollection::EnsureDataSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureDataSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelationCollection/System.Data.DataTableRelationCollection.AddCache
void System::Data::DataRelationCollection::DataTableRelationCollection::AddCache(::System::Data::DataRelation* relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataTableRelationCollection::AddCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relation);
}
// Autogenerated method: System.Data.DataRelationCollection/System.Data.DataTableRelationCollection.RemoveCache
void System::Data::DataRelationCollection::DataTableRelationCollection::RemoveCache(::System::Data::DataRelation* relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataTableRelationCollection::RemoveCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relation);
}
// Autogenerated method: System.Data.DataRelationCollection/System.Data.DataTableRelationCollection.get_List
::System::Collections::ArrayList* System::Data::DataRelationCollection::DataTableRelationCollection::get_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataTableRelationCollection::get_List");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::InternalDataCollectionBase*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelationCollection/System.Data.DataTableRelationCollection.get_Item
::System::Data::DataRelation* System::Data::DataRelationCollection::DataTableRelationCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataTableRelationCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRelation*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Data.DataRelationCollection/System.Data.DataTableRelationCollection.get_Item
::System::Data::DataRelation* System::Data::DataRelationCollection::DataTableRelationCollection::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataTableRelationCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRelation*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Data.DataRelationCollection/System.Data.DataTableRelationCollection.GetDataSet
::System::Data::DataSet* System::Data::DataRelationCollection::DataTableRelationCollection::GetDataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataTableRelationCollection::GetDataSet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataSet*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelationCollection/System.Data.DataTableRelationCollection.AddCore
void System::Data::DataRelationCollection::DataTableRelationCollection::AddCore(::System::Data::DataRelation* relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataTableRelationCollection::AddCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relation);
}
// Autogenerated method: System.Data.DataRelationCollection/System.Data.DataTableRelationCollection.RemoveCore
void System::Data::DataRelationCollection::DataTableRelationCollection::RemoveCore(::System::Data::DataRelation* relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataTableRelationCollection::RemoveCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataRelationCollection/System.Data.DataSetRelationCollection
#include "System/Data/DataRelationCollection_DataSetRelationCollection.hpp"
// Including type: System.Data.DataSet
#include "System/Data/DataSet.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Data.DataRelation
#include "System/Data/DataRelation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataSet _dataSet
[[deprecated("Use field access instead!")]] ::System::Data::DataSet*& System::Data::DataRelationCollection::DataSetRelationCollection::dyn__dataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataSetRelationCollection::dyn__dataSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSet"))->offset;
  return *reinterpret_cast<::System::Data::DataSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.ArrayList _relations
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Data::DataRelationCollection::DataSetRelationCollection::dyn__relations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataSetRelationCollection::dyn__relations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relations"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataRelation[] _delayLoadingRelations
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::DataRelation*>& System::Data::DataRelationCollection::DataSetRelationCollection::dyn__delayLoadingRelations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataSetRelationCollection::dyn__delayLoadingRelations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delayLoadingRelations"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::DataRelation*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataRelationCollection/System.Data.DataSetRelationCollection.get_List
::System::Collections::ArrayList* System::Data::DataRelationCollection::DataSetRelationCollection::get_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataSetRelationCollection::get_List");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::InternalDataCollectionBase*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelationCollection/System.Data.DataSetRelationCollection.get_Item
::System::Data::DataRelation* System::Data::DataRelationCollection::DataSetRelationCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataSetRelationCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRelation*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Data.DataRelationCollection/System.Data.DataSetRelationCollection.get_Item
::System::Data::DataRelation* System::Data::DataRelationCollection::DataSetRelationCollection::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataSetRelationCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRelation*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Data.DataRelationCollection/System.Data.DataSetRelationCollection.Clear
void System::Data::DataRelationCollection::DataSetRelationCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataSetRelationCollection::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelationCollection/System.Data.DataSetRelationCollection.GetDataSet
::System::Data::DataSet* System::Data::DataRelationCollection::DataSetRelationCollection::GetDataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataSetRelationCollection::GetDataSet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataSet*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelationCollection/System.Data.DataSetRelationCollection.AddCore
void System::Data::DataRelationCollection::DataSetRelationCollection::AddCore(::System::Data::DataRelation* relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataSetRelationCollection::AddCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relation);
}
// Autogenerated method: System.Data.DataRelationCollection/System.Data.DataSetRelationCollection.RemoveCore
void System::Data::DataRelationCollection::DataSetRelationCollection::RemoveCore(::System::Data::DataRelation* relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationCollection::DataSetRelationCollection::RemoveCore");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRelationCollection*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.DataRelationPropertyDescriptor
#include "System/Data/DataRelationPropertyDescriptor.hpp"
// Including type: System.Data.DataRelation
#include "System/Data/DataRelation.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataRelation <Relation>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Data::DataRelation*& System::Data::DataRelationPropertyDescriptor::dyn_$Relation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationPropertyDescriptor::dyn_$Relation$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Relation>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Data::DataRelation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataRelationPropertyDescriptor.get_Relation
::System::Data::DataRelation* System::Data::DataRelationPropertyDescriptor::get_Relation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationPropertyDescriptor::get_Relation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Relation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRelation*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelationPropertyDescriptor.get_ComponentType
::System::Type* System::Data::DataRelationPropertyDescriptor::get_ComponentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationPropertyDescriptor::get_ComponentType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelationPropertyDescriptor.get_IsReadOnly
bool System::Data::DataRelationPropertyDescriptor::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationPropertyDescriptor::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelationPropertyDescriptor.get_PropertyType
::System::Type* System::Data::DataRelationPropertyDescriptor::get_PropertyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationPropertyDescriptor::get_PropertyType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelationPropertyDescriptor.Equals
bool System::Data::DataRelationPropertyDescriptor::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationPropertyDescriptor::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Data.DataRelationPropertyDescriptor.GetHashCode
int System::Data::DataRelationPropertyDescriptor::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationPropertyDescriptor::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRelationPropertyDescriptor.GetValue
::Il2CppObject* System::Data::DataRelationPropertyDescriptor::GetValue(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationPropertyDescriptor::GetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, component);
}
// Autogenerated method: System.Data.DataRelationPropertyDescriptor.SetValue
void System::Data::DataRelationPropertyDescriptor::SetValue(::Il2CppObject* component, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationPropertyDescriptor::SetValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, value);
}
// Autogenerated method: System.Data.DataRelationPropertyDescriptor.ShouldSerializeValue
bool System::Data::DataRelationPropertyDescriptor::ShouldSerializeValue(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRelationPropertyDescriptor::ShouldSerializeValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::PropertyDescriptor*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, component);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Data.DataColumnCollection
#include "System/Data/DataColumnCollection.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.DataError
#include "System/Data/DataError.hpp"
// Including type: System.Data.DataRowState
#include "System/Data/DataRowState.hpp"
// Including type: System.Data.DataRowVersion
#include "System/Data/DataRowVersion.hpp"
// Including type: System.Data.DataRowBuilder
#include "System/Data/DataRowBuilder.hpp"
// Including type: System.Data.DataRelation
#include "System/Data/DataRelation.hpp"
// Including type: System.Data.DataKey
#include "System/Data/DataKey.hpp"
// Including type: System.Data.DataViewRowState
#include "System/Data/DataViewRowState.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 s_objectTypeCount
int System::Data::DataRow::_get_s_objectTypeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::_get_s_objectTypeCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data", "DataRow", "s_objectTypeCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_objectTypeCount
void System::Data::DataRow::_set_s_objectTypeCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::_set_s_objectTypeCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRow", "s_objectTypeCount", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataTable _table
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::DataRow::dyn__table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::dyn__table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_table"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataColumnCollection _columns
[[deprecated("Use field access instead!")]] ::System::Data::DataColumnCollection*& System::Data::DataRow::dyn__columns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::dyn__columns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_columns"))->offset;
  return *reinterpret_cast<::System::Data::DataColumnCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _oldRecord
[[deprecated("Use field access instead!")]] int& System::Data::DataRow::dyn__oldRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::dyn__oldRecord");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oldRecord"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _newRecord
[[deprecated("Use field access instead!")]] int& System::Data::DataRow::dyn__newRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::dyn__newRecord");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_newRecord"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _tempRecord
[[deprecated("Use field access instead!")]] int& System::Data::DataRow::dyn__tempRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::dyn__tempRecord");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tempRecord"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int64 _rowID
[[deprecated("Use field access instead!")]] int64_t& System::Data::DataRow::dyn__rowID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::dyn__rowID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowID"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.DataRowAction _action
[[deprecated("Use field access instead!")]] ::System::Data::DataRowAction& System::Data::DataRow::dyn__action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::dyn__action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_action"))->offset;
  return *reinterpret_cast<::System::Data::DataRowAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _inChangingEvent
[[deprecated("Use field access instead!")]] bool& System::Data::DataRow::dyn__inChangingEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::dyn__inChangingEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inChangingEvent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _inDeletingEvent
[[deprecated("Use field access instead!")]] bool& System::Data::DataRow::dyn__inDeletingEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::dyn__inDeletingEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inDeletingEvent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _inCascade
[[deprecated("Use field access instead!")]] bool& System::Data::DataRow::dyn__inCascade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::dyn__inCascade");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inCascade"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataColumn _lastChangedColumn
[[deprecated("Use field access instead!")]] ::System::Data::DataColumn*& System::Data::DataRow::dyn__lastChangedColumn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::dyn__lastChangedColumn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastChangedColumn"))->offset;
  return *reinterpret_cast<::System::Data::DataColumn**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _countColumnChange
[[deprecated("Use field access instead!")]] int& System::Data::DataRow::dyn__countColumnChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::dyn__countColumnChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_countColumnChange"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataError _error
[[deprecated("Use field access instead!")]] ::System::Data::DataError*& System::Data::DataRow::dyn__error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::dyn__error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_error"))->offset;
  return *reinterpret_cast<::System::Data::DataError**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _rbTreeNodeId
[[deprecated("Use field access instead!")]] int& System::Data::DataRow::dyn__rbTreeNodeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::dyn__rbTreeNodeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rbTreeNodeId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _objectID
[[deprecated("Use field access instead!")]] int& System::Data::DataRow::dyn__objectID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::dyn__objectID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataRow.get_LastChangedColumn
::System::Data::DataColumn* System::Data::DataRow::get_LastChangedColumn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::get_LastChangedColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastChangedColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataColumn*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.set_LastChangedColumn
void System::Data::DataRow::set_LastChangedColumn(::System::Data::DataColumn* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::set_LastChangedColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastChangedColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataRow.get_HasPropertyChanged
bool System::Data::DataRow::get_HasPropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::get_HasPropertyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasPropertyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.get_RBTreeNodeId
int System::Data::DataRow::get_RBTreeNodeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::get_RBTreeNodeId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RBTreeNodeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.set_RBTreeNodeId
void System::Data::DataRow::set_RBTreeNodeId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::set_RBTreeNodeId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RBTreeNodeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataRow.get_RowError
::StringW System::Data::DataRow::get_RowError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::get_RowError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RowError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.set_RowError
void System::Data::DataRow::set_RowError(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::set_RowError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RowError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataRow.get_rowID
int64_t System::Data::DataRow::get_rowID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::get_rowID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rowID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.set_rowID
void System::Data::DataRow::set_rowID(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::set_rowID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rowID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataRow.get_RowState
::System::Data::DataRowState System::Data::DataRow::get_RowState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::get_RowState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RowState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRowState, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.get_Table
::System::Data::DataTable* System::Data::DataRow::get_Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::get_Table");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Table", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.set_Item
void System::Data::DataRow::set_Item(::StringW columnName, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(columnName), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, columnName, value);
}
// Autogenerated method: System.Data.DataRow.get_Item
::Il2CppObject* System::Data::DataRow::get_Item(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.DataRow.set_Item
void System::Data::DataRow::set_Item(::System::Data::DataColumn* column, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, column, value);
}
// Autogenerated method: System.Data.DataRow.get_Item
::Il2CppObject* System::Data::DataRow::get_Item(::System::Data::DataColumn* column, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column), ::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, column, version);
}
// Autogenerated method: System.Data.DataRow.set_ItemArray
void System::Data::DataRow::set_ItemArray(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::set_ItemArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataRow.get_HasErrors
bool System::Data::DataRow::get_HasErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::get_HasErrors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasErrors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.RowErrorChanged
void System::Data::DataRow::RowErrorChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::RowErrorChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RowErrorChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.CheckForLoops
void System::Data::DataRow::CheckForLoops(::System::Data::DataRelation* rel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::CheckForLoops");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForLoops", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rel);
}
// Autogenerated method: System.Data.DataRow.GetNestedParentCount
int System::Data::DataRow::GetNestedParentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetNestedParentCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNestedParentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.AcceptChanges
void System::Data::DataRow::AcceptChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::AcceptChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcceptChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.BeginEdit
void System::Data::DataRow::BeginEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::BeginEdit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginEdit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.BeginEditInternal
bool System::Data::DataRow::BeginEditInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::BeginEditInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginEditInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.CancelEdit
void System::Data::DataRow::CancelEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::CancelEdit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelEdit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.CheckColumn
void System::Data::DataRow::CheckColumn(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::CheckColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.DataRow.CheckInTable
void System::Data::DataRow::CheckInTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::CheckInTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckInTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.Delete
void System::Data::DataRow::Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.EndEdit
void System::Data::DataRow::EndEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::EndEdit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndEdit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.SetColumnError
void System::Data::DataRow::SetColumnError(int columnIndex, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::SetColumnError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColumnError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(columnIndex), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, columnIndex, error);
}
// Autogenerated method: System.Data.DataRow.SetColumnError
void System::Data::DataRow::SetColumnError(::System::Data::DataColumn* column, ::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::SetColumnError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColumnError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, column, error);
}
// Autogenerated method: System.Data.DataRow.GetColumnError
::StringW System::Data::DataRow::GetColumnError(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetColumnError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColumnError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.DataRow.ClearErrors
void System::Data::DataRow::ClearErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::ClearErrors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearErrors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.ClearError
void System::Data::DataRow::ClearError(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::ClearError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.DataRow.GetColumnsInError
::ArrayW<::System::Data::DataColumn*> System::Data::DataRow::GetColumnsInError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetColumnsInError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColumnsInError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataColumn*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.GetChildRows
::ArrayW<::System::Data::DataRow*> System::Data::DataRow::GetChildRows(::System::Data::DataRelation* relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetChildRows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChildRows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relation)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataRow*>, false>(this, ___internal__method, relation);
}
// Autogenerated method: System.Data.DataRow.GetChildRows
::ArrayW<::System::Data::DataRow*> System::Data::DataRow::GetChildRows(::System::Data::DataRelation* relation, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetChildRows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChildRows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relation), ::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataRow*>, false>(this, ___internal__method, relation, version);
}
// Autogenerated method: System.Data.DataRow.GetDataColumn
::System::Data::DataColumn* System::Data::DataRow::GetDataColumn(::StringW columnName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetDataColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(columnName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataColumn*, false>(this, ___internal__method, columnName);
}
// Autogenerated method: System.Data.DataRow.GetParentRow
::System::Data::DataRow* System::Data::DataRow::GetParentRow(::System::Data::DataRelation* relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetParentRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relation)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(this, ___internal__method, relation);
}
// Autogenerated method: System.Data.DataRow.GetParentRow
::System::Data::DataRow* System::Data::DataRow::GetParentRow(::System::Data::DataRelation* relation, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetParentRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relation), ::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(this, ___internal__method, relation, version);
}
// Autogenerated method: System.Data.DataRow.GetNestedParentRow
::System::Data::DataRow* System::Data::DataRow::GetNestedParentRow(::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetNestedParentRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNestedParentRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(this, ___internal__method, version);
}
// Autogenerated method: System.Data.DataRow.GetParentRows
::ArrayW<::System::Data::DataRow*> System::Data::DataRow::GetParentRows(::System::Data::DataRelation* relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetParentRows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentRows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relation)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataRow*>, false>(this, ___internal__method, relation);
}
// Autogenerated method: System.Data.DataRow.GetParentRows
::ArrayW<::System::Data::DataRow*> System::Data::DataRow::GetParentRows(::System::Data::DataRelation* relation, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetParentRows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentRows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relation), ::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataRow*>, false>(this, ___internal__method, relation, version);
}
// Autogenerated method: System.Data.DataRow.GetColumnValues
::ArrayW<::Il2CppObject*> System::Data::DataRow::GetColumnValues(::ArrayW<::System::Data::DataColumn*> columns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetColumnValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColumnValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(columns)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, columns);
}
// Autogenerated method: System.Data.DataRow.GetColumnValues
::ArrayW<::Il2CppObject*> System::Data::DataRow::GetColumnValues(::ArrayW<::System::Data::DataColumn*> columns, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetColumnValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColumnValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(columns), ::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, columns, version);
}
// Autogenerated method: System.Data.DataRow.GetKeyValues
::ArrayW<::Il2CppObject*> System::Data::DataRow::GetKeyValues(::System::Data::DataKey key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetKeyValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKeyValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Data.DataRow.GetKeyValues
::ArrayW<::Il2CppObject*> System::Data::DataRow::GetKeyValues(::System::Data::DataKey key, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetKeyValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKeyValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, key, version);
}
// Autogenerated method: System.Data.DataRow.GetCurrentRecordNo
int System::Data::DataRow::GetCurrentRecordNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetCurrentRecordNo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentRecordNo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.GetDefaultRecord
int System::Data::DataRow::GetDefaultRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetDefaultRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.GetOriginalRecordNo
int System::Data::DataRow::GetOriginalRecordNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetOriginalRecordNo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOriginalRecordNo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.GetProposedRecordNo
int System::Data::DataRow::GetProposedRecordNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetProposedRecordNo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProposedRecordNo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.GetRecordFromVersion
int System::Data::DataRow::GetRecordFromVersion(::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetRecordFromVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecordFromVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, version);
}
// Autogenerated method: System.Data.DataRow.GetDefaultRowVersion
::System::Data::DataRowVersion System::Data::DataRow::GetDefaultRowVersion(::System::Data::DataViewRowState viewState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetDefaultRowVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultRowVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewState)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRowVersion, false>(this, ___internal__method, viewState);
}
// Autogenerated method: System.Data.DataRow.GetRecordState
::System::Data::DataViewRowState System::Data::DataRow::GetRecordState(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::GetRecordState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecordState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataViewRowState, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.DataRow.HasKeyChanged
bool System::Data::DataRow::HasKeyChanged(::System::Data::DataKey key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::HasKeyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasKeyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Data.DataRow.HasKeyChanged
bool System::Data::DataRow::HasKeyChanged(::System::Data::DataKey key, ::System::Data::DataRowVersion version1, ::System::Data::DataRowVersion version2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::HasKeyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasKeyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(version1), ::il2cpp_utils::ExtractType(version2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, version1, version2);
}
// Autogenerated method: System.Data.DataRow.HasVersion
bool System::Data::DataRow::HasVersion(::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::HasVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, version);
}
// Autogenerated method: System.Data.DataRow.HaveValuesChanged
bool System::Data::DataRow::HaveValuesChanged(::ArrayW<::System::Data::DataColumn*> columns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::HaveValuesChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HaveValuesChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(columns)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, columns);
}
// Autogenerated method: System.Data.DataRow.HaveValuesChanged
bool System::Data::DataRow::HaveValuesChanged(::ArrayW<::System::Data::DataColumn*> columns, ::System::Data::DataRowVersion version1, ::System::Data::DataRowVersion version2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::HaveValuesChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HaveValuesChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(columns), ::il2cpp_utils::ExtractType(version1), ::il2cpp_utils::ExtractType(version2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, columns, version1, version2);
}
// Autogenerated method: System.Data.DataRow.RejectChanges
void System::Data::DataRow::RejectChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::RejectChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RejectChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.ResetLastChangedColumn
void System::Data::DataRow::ResetLastChangedColumn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::ResetLastChangedColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetLastChangedColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.SetKeyValues
void System::Data::DataRow::SetKeyValues(::System::Data::DataKey key, ::ArrayW<::Il2CppObject*> keyValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::SetKeyValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKeyValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(keyValues)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, keyValues);
}
// Autogenerated method: System.Data.DataRow.SetNestedParentRow
void System::Data::DataRow::SetNestedParentRow(::System::Data::DataRow* parentRow, bool setNonNested) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::SetNestedParentRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNestedParentRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentRow), ::il2cpp_utils::ExtractType(setNonNested)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentRow, setNonNested);
}
// Autogenerated method: System.Data.DataRow.SetParentRowToDBNull
void System::Data::DataRow::SetParentRowToDBNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::SetParentRowToDBNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParentRowToDBNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRow.SetParentRowToDBNull
void System::Data::DataRow::SetParentRowToDBNull(::System::Data::DataRelation* relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::SetParentRowToDBNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParentRowToDBNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relation);
}
// Autogenerated method: System.Data.DataRow.CopyValuesIntoStore
int System::Data::DataRow::CopyValuesIntoStore(::System::Collections::ArrayList* storeList, ::System::Collections::ArrayList* nullbitList, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRow::CopyValuesIntoStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyValuesIntoStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(storeList), ::il2cpp_utils::ExtractType(nullbitList), ::il2cpp_utils::ExtractType(storeIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, storeList, nullbitList, storeIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataRowBuilder
#include "System/Data/DataRowBuilder.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Data.DataTable _table
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::DataRowBuilder::dyn__table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowBuilder::dyn__table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_table"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _record
[[deprecated("Use field access instead!")]] int& System::Data::DataRowBuilder::dyn__record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowBuilder::dyn__record");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_record"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataRowAction
#include "System/Data/DataRowAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.DataRowAction Nothing
::System::Data::DataRowAction System::Data::DataRowAction::_get_Nothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowAction::_get_Nothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataRowAction>("System.Data", "DataRowAction", "Nothing"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataRowAction Nothing
void System::Data::DataRowAction::_set_Nothing(::System::Data::DataRowAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowAction::_set_Nothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRowAction", "Nothing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataRowAction Delete
::System::Data::DataRowAction System::Data::DataRowAction::_get_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowAction::_get_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataRowAction>("System.Data", "DataRowAction", "Delete"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataRowAction Delete
void System::Data::DataRowAction::_set_Delete(::System::Data::DataRowAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowAction::_set_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRowAction", "Delete", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataRowAction Change
::System::Data::DataRowAction System::Data::DataRowAction::_get_Change() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowAction::_get_Change");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataRowAction>("System.Data", "DataRowAction", "Change"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataRowAction Change
void System::Data::DataRowAction::_set_Change(::System::Data::DataRowAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowAction::_set_Change");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRowAction", "Change", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataRowAction Rollback
::System::Data::DataRowAction System::Data::DataRowAction::_get_Rollback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowAction::_get_Rollback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataRowAction>("System.Data", "DataRowAction", "Rollback"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataRowAction Rollback
void System::Data::DataRowAction::_set_Rollback(::System::Data::DataRowAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowAction::_set_Rollback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRowAction", "Rollback", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataRowAction Commit
::System::Data::DataRowAction System::Data::DataRowAction::_get_Commit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowAction::_get_Commit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataRowAction>("System.Data", "DataRowAction", "Commit"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataRowAction Commit
void System::Data::DataRowAction::_set_Commit(::System::Data::DataRowAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowAction::_set_Commit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRowAction", "Commit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataRowAction Add
::System::Data::DataRowAction System::Data::DataRowAction::_get_Add() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowAction::_get_Add");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataRowAction>("System.Data", "DataRowAction", "Add"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataRowAction Add
void System::Data::DataRowAction::_set_Add(::System::Data::DataRowAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowAction::_set_Add");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRowAction", "Add", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataRowAction ChangeOriginal
::System::Data::DataRowAction System::Data::DataRowAction::_get_ChangeOriginal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowAction::_get_ChangeOriginal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataRowAction>("System.Data", "DataRowAction", "ChangeOriginal"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataRowAction ChangeOriginal
void System::Data::DataRowAction::_set_ChangeOriginal(::System::Data::DataRowAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowAction::_set_ChangeOriginal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRowAction", "ChangeOriginal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataRowAction ChangeCurrentAndOriginal
::System::Data::DataRowAction System::Data::DataRowAction::_get_ChangeCurrentAndOriginal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowAction::_get_ChangeCurrentAndOriginal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataRowAction>("System.Data", "DataRowAction", "ChangeCurrentAndOriginal"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataRowAction ChangeCurrentAndOriginal
void System::Data::DataRowAction::_set_ChangeCurrentAndOriginal(::System::Data::DataRowAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowAction::_set_ChangeCurrentAndOriginal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRowAction", "ChangeCurrentAndOriginal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::DataRowAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataRowChangeEventArgs
#include "System/Data/DataRowChangeEventArgs.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataRow <Row>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Data::DataRow*& System::Data::DataRowChangeEventArgs::dyn_$Row$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowChangeEventArgs::dyn_$Row$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Row>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Data::DataRow**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataRowAction <Action>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Data::DataRowAction& System::Data::DataRowChangeEventArgs::dyn_$Action$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowChangeEventArgs::dyn_$Action$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Action>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Data::DataRowAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.DataRowChangeEventHandler
#include "System/Data/DataRowChangeEventHandler.hpp"
// Including type: System.Data.DataRowChangeEventArgs
#include "System/Data/DataRowChangeEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.DataRowChangeEventHandler.Invoke
void System::Data::DataRowChangeEventHandler::Invoke(::Il2CppObject* sender, ::System::Data::DataRowChangeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowChangeEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRowChangeEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Data.DataRowChangeEventHandler.BeginInvoke
::System::IAsyncResult* System::Data::DataRowChangeEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::Data::DataRowChangeEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowChangeEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRowChangeEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.Data.DataRowChangeEventHandler.EndInvoke
void System::Data::DataRowChangeEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowChangeEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRowChangeEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.DataRowCollection
#include "System/Data/DataRowCollection.hpp"
// Including type: System.Data.DataRowCollection/System.Data.DataRowTree
#include "System/Data/DataRowCollection_DataRowTree.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataTable _table
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::DataRowCollection::dyn__table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCollection::dyn__table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_table"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataRowCollection/System.Data.DataRowTree _list
[[deprecated("Use field access instead!")]] ::System::Data::DataRowCollection::DataRowTree*& System::Data::DataRowCollection::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCollection::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Data::DataRowCollection::DataRowTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _nullInList
[[deprecated("Use field access instead!")]] int& System::Data::DataRowCollection::dyn__nullInList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCollection::dyn__nullInList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nullInList"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataRowCollection.get_Item
::System::Data::DataRow* System::Data::DataRowCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Data.DataRowCollection.Add
void System::Data::DataRowCollection::Add(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row);
}
// Autogenerated method: System.Data.DataRowCollection.DiffInsertAt
void System::Data::DataRowCollection::DiffInsertAt(::System::Data::DataRow* row, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCollection::DiffInsertAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DiffInsertAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, pos);
}
// Autogenerated method: System.Data.DataRowCollection.IndexOf
int System::Data::DataRowCollection::IndexOf(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, row);
}
// Autogenerated method: System.Data.DataRowCollection.AddWithColumnEvents
::System::Data::DataRow* System::Data::DataRowCollection::AddWithColumnEvents(::ArrayW<::Il2CppObject*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCollection::AddWithColumnEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddWithColumnEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(this, ___internal__method, values);
}
// Autogenerated method: System.Data.DataRowCollection.ArrayAdd
void System::Data::DataRowCollection::ArrayAdd(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCollection::ArrayAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ArrayAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row);
}
// Autogenerated method: System.Data.DataRowCollection.ArrayInsert
void System::Data::DataRowCollection::ArrayInsert(::System::Data::DataRow* row, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCollection::ArrayInsert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ArrayInsert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, pos);
}
// Autogenerated method: System.Data.DataRowCollection.ArrayClear
void System::Data::DataRowCollection::ArrayClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCollection::ArrayClear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ArrayClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRowCollection.ArrayRemove
void System::Data::DataRowCollection::ArrayRemove(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCollection::ArrayRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ArrayRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row);
}
// Autogenerated method: System.Data.DataRowCollection.CopyTo
void System::Data::DataRowCollection::CopyTo(::ArrayW<::System::Data::DataRow*> array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCollection::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Data.DataRowCollection.get_Count
int System::Data::DataRowCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::InternalDataCollectionBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRowCollection.CopyTo
void System::Data::DataRowCollection::CopyTo(::System::Array* ar, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::InternalDataCollectionBase*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ar, index);
}
// Autogenerated method: System.Data.DataRowCollection.GetEnumerator
::System::Collections::IEnumerator* System::Data::DataRowCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::InternalDataCollectionBase*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataRowCollection/System.Data.DataRowTree
#include "System/Data/DataRowCollection_DataRowTree.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.DataRowCollection/System.Data.DataRowTree.CompareNode
int System::Data::DataRowCollection::DataRowTree::CompareNode(::System::Data::DataRow* record1, ::System::Data::DataRow* record2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCollection::DataRowTree::CompareNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRowCollection::DataRowTree*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, record1, record2);
}
// Autogenerated method: System.Data.DataRowCollection/System.Data.DataRowTree.CompareSateliteTreeNode
int System::Data::DataRowCollection::DataRowTree::CompareSateliteTreeNode(::System::Data::DataRow* record1, ::System::Data::DataRow* record2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCollection::DataRowTree::CompareSateliteTreeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRowCollection::DataRowTree*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, record1, record2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.DataRowCreatedEventHandler
#include "System/Data/DataRowCreatedEventHandler.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.DataRowCreatedEventHandler.Invoke
void System::Data::DataRowCreatedEventHandler::Invoke(::Il2CppObject* sender, ::System::Data::DataRow* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCreatedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRowCreatedEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, r);
}
// Autogenerated method: System.Data.DataRowCreatedEventHandler.BeginInvoke
::System::IAsyncResult* System::Data::DataRowCreatedEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::Data::DataRow* r, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCreatedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRowCreatedEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, r, callback, object);
}
// Autogenerated method: System.Data.DataRowCreatedEventHandler.EndInvoke
void System::Data::DataRowCreatedEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowCreatedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRowCreatedEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.DataSetClearEventhandler
#include "System/Data/DataSetClearEventhandler.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.DataSetClearEventhandler.Invoke
void System::Data::DataSetClearEventhandler::Invoke(::Il2CppObject* sender, ::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSetClearEventhandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataSetClearEventhandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, table);
}
// Autogenerated method: System.Data.DataSetClearEventhandler.BeginInvoke
::System::IAsyncResult* System::Data::DataSetClearEventhandler::BeginInvoke(::Il2CppObject* sender, ::System::Data::DataTable* table, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSetClearEventhandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataSetClearEventhandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, table, callback, object);
}
// Autogenerated method: System.Data.DataSetClearEventhandler.EndInvoke
void System::Data::DataSetClearEventhandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSetClearEventhandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataSetClearEventhandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataRowState
#include "System/Data/DataRowState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.DataRowState Detached
::System::Data::DataRowState System::Data::DataRowState::_get_Detached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowState::_get_Detached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataRowState>("System.Data", "DataRowState", "Detached"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataRowState Detached
void System::Data::DataRowState::_set_Detached(::System::Data::DataRowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowState::_set_Detached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRowState", "Detached", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataRowState Unchanged
::System::Data::DataRowState System::Data::DataRowState::_get_Unchanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowState::_get_Unchanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataRowState>("System.Data", "DataRowState", "Unchanged"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataRowState Unchanged
void System::Data::DataRowState::_set_Unchanged(::System::Data::DataRowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowState::_set_Unchanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRowState", "Unchanged", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataRowState Added
::System::Data::DataRowState System::Data::DataRowState::_get_Added() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowState::_get_Added");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataRowState>("System.Data", "DataRowState", "Added"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataRowState Added
void System::Data::DataRowState::_set_Added(::System::Data::DataRowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowState::_set_Added");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRowState", "Added", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataRowState Deleted
::System::Data::DataRowState System::Data::DataRowState::_get_Deleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowState::_get_Deleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataRowState>("System.Data", "DataRowState", "Deleted"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataRowState Deleted
void System::Data::DataRowState::_set_Deleted(::System::Data::DataRowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowState::_set_Deleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRowState", "Deleted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataRowState Modified
::System::Data::DataRowState System::Data::DataRowState::_get_Modified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowState::_get_Modified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataRowState>("System.Data", "DataRowState", "Modified"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataRowState Modified
void System::Data::DataRowState::_set_Modified(::System::Data::DataRowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowState::_set_Modified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRowState", "Modified", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::DataRowState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataRowVersion
#include "System/Data/DataRowVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.DataRowVersion Original
::System::Data::DataRowVersion System::Data::DataRowVersion::_get_Original() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowVersion::_get_Original");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataRowVersion>("System.Data", "DataRowVersion", "Original"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataRowVersion Original
void System::Data::DataRowVersion::_set_Original(::System::Data::DataRowVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowVersion::_set_Original");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRowVersion", "Original", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataRowVersion Current
::System::Data::DataRowVersion System::Data::DataRowVersion::_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowVersion::_get_Current");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataRowVersion>("System.Data", "DataRowVersion", "Current"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataRowVersion Current
void System::Data::DataRowVersion::_set_Current(::System::Data::DataRowVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowVersion::_set_Current");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRowVersion", "Current", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataRowVersion Proposed
::System::Data::DataRowVersion System::Data::DataRowVersion::_get_Proposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowVersion::_get_Proposed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataRowVersion>("System.Data", "DataRowVersion", "Proposed"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataRowVersion Proposed
void System::Data::DataRowVersion::_set_Proposed(::System::Data::DataRowVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowVersion::_set_Proposed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRowVersion", "Proposed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataRowVersion Default
::System::Data::DataRowVersion System::Data::DataRowVersion::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowVersion::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataRowVersion>("System.Data", "DataRowVersion", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataRowVersion Default
void System::Data::DataRowVersion::_set_Default(::System::Data::DataRowVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowVersion::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRowVersion", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::DataRowVersion::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowVersion::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.Data.DataRowView
#include "System/Data/DataRowView.hpp"
// Including type: System.Data.DataView
#include "System/Data/DataView.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.Data.DataRowVersion
#include "System/Data/DataRowVersion.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.DataRelation
#include "System/Data/DataRelation.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.ComponentModel.PropertyDescriptorCollection s_zeroPropertyDescriptorCollection
::System::ComponentModel::PropertyDescriptorCollection* System::Data::DataRowView::_get_s_zeroPropertyDescriptorCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::_get_s_zeroPropertyDescriptorCollection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::PropertyDescriptorCollection*>("System.Data", "DataRowView", "s_zeroPropertyDescriptorCollection"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.ComponentModel.PropertyDescriptorCollection s_zeroPropertyDescriptorCollection
void System::Data::DataRowView::_set_s_zeroPropertyDescriptorCollection(::System::ComponentModel::PropertyDescriptorCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::_set_s_zeroPropertyDescriptorCollection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataRowView", "s_zeroPropertyDescriptorCollection", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataView _dataView
[[deprecated("Use field access instead!")]] ::System::Data::DataView*& System::Data::DataRowView::dyn__dataView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::dyn__dataView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataView"))->offset;
  return *reinterpret_cast<::System::Data::DataView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataRow _row
[[deprecated("Use field access instead!")]] ::System::Data::DataRow*& System::Data::DataRowView::dyn__row() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::dyn__row");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_row"))->offset;
  return *reinterpret_cast<::System::Data::DataRow**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _delayBeginEdit
[[deprecated("Use field access instead!")]] bool& System::Data::DataRowView::dyn__delayBeginEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::dyn__delayBeginEdit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delayBeginEdit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& System::Data::DataRowView::dyn_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::dyn_PropertyChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataRowView.get_DataView
::System::Data::DataView* System::Data::DataRowView::get_DataView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::get_DataView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataView*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRowView.get_RowVersionDefault
::System::Data::DataRowVersion System::Data::DataRowView::get_RowVersionDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::get_RowVersionDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RowVersionDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRowVersion, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRowView.get_Row
::System::Data::DataRow* System::Data::DataRowView::get_Row() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::get_Row");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Row", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRowView.get_IsNew
bool System::Data::DataRowView::get_IsNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::get_IsNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRowView..cctor
void System::Data::DataRowView::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "DataRowView", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.DataRowView.GetRecord
int System::Data::DataRowView::GetRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::GetRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRowView.HasRecord
bool System::Data::DataRowView::HasRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::HasRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRowView.GetColumnValue
::Il2CppObject* System::Data::DataRowView::GetColumnValue(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::GetColumnValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColumnValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.DataRowView.SetColumnValue
void System::Data::DataRowView::SetColumnValue(::System::Data::DataColumn* column, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::SetColumnValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColumnValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, column, value);
}
// Autogenerated method: System.Data.DataRowView.CreateChildView
::System::Data::DataView* System::Data::DataRowView::CreateChildView(::System::Data::DataRelation* relation, bool followParent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::CreateChildView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateChildView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relation), ::il2cpp_utils::ExtractType(followParent)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataView*, false>(this, ___internal__method, relation, followParent);
}
// Autogenerated method: System.Data.DataRowView.CreateChildView
::System::Data::DataView* System::Data::DataRowView::CreateChildView(::System::Data::DataRelation* relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::CreateChildView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateChildView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relation)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataView*, false>(this, ___internal__method, relation);
}
// Autogenerated method: System.Data.DataRowView.EndEdit
void System::Data::DataRowView::EndEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::EndEdit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRowView*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRowView.RaisePropertyChangedEvent
void System::Data::DataRowView::RaisePropertyChangedEvent(::StringW propName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::RaisePropertyChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaisePropertyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propName);
}
// Autogenerated method: System.Data.DataRowView.System.ComponentModel.ICustomTypeDescriptor.GetAttributes
::System::ComponentModel::AttributeCollection* System::Data::DataRowView::System_ComponentModel_ICustomTypeDescriptor_GetAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::System.ComponentModel.ICustomTypeDescriptor.GetAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRowView*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRowView.System.ComponentModel.ICustomTypeDescriptor.GetConverter
::System::ComponentModel::TypeConverter* System::Data::DataRowView::System_ComponentModel_ICustomTypeDescriptor_GetConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::System.ComponentModel.ICustomTypeDescriptor.GetConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRowView*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRowView.System.ComponentModel.ICustomTypeDescriptor.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::Data::DataRowView::System_ComponentModel_ICustomTypeDescriptor_GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::System.ComponentModel.ICustomTypeDescriptor.GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRowView*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataRowView.System.ComponentModel.ICustomTypeDescriptor.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::Data::DataRowView::System_ComponentModel_ICustomTypeDescriptor_GetProperties(::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::System.ComponentModel.ICustomTypeDescriptor.GetProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRowView*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, attributes);
}
// Autogenerated method: System.Data.DataRowView.System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner
::Il2CppObject* System::Data::DataRowView::System_ComponentModel_ICustomTypeDescriptor_GetPropertyOwner(::System::ComponentModel::PropertyDescriptor* pd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataRowView*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, pd);
}
// Autogenerated method: System.Data.DataRowView.Equals
bool System::Data::DataRowView::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Data.DataRowView.GetHashCode
int System::Data::DataRowView::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataRowView::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.SerializationFormat
#include "System/Data/SerializationFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.SerializationFormat Xml
::System::Data::SerializationFormat System::Data::SerializationFormat::_get_Xml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SerializationFormat::_get_Xml");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SerializationFormat>("System.Data", "SerializationFormat", "Xml"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SerializationFormat Xml
void System::Data::SerializationFormat::_set_Xml(::System::Data::SerializationFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SerializationFormat::_set_Xml");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "SerializationFormat", "Xml", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.SerializationFormat Binary
::System::Data::SerializationFormat System::Data::SerializationFormat::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SerializationFormat::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SerializationFormat>("System.Data", "SerializationFormat", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SerializationFormat Binary
void System::Data::SerializationFormat::_set_Binary(::System::Data::SerializationFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SerializationFormat::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "SerializationFormat", "Binary", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::SerializationFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SerializationFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.DataSet
#include "System/Data/DataSet.hpp"
// Including type: System.Data.DataViewManager
#include "System/Data/DataViewManager.hpp"
// Including type: System.Data.DataTableCollection
#include "System/Data/DataTableCollection.hpp"
// Including type: System.Data.DataRelationCollection
#include "System/Data/DataRelationCollection.hpp"
// Including type: System.Data.PropertyCollection
#include "System/Data/PropertyCollection.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: System.Data.MergeFailedEventHandler
#include "System/Data/MergeFailedEventHandler.hpp"
// Including type: System.Data.DataRowCreatedEventHandler
#include "System/Data/DataRowCreatedEventHandler.hpp"
// Including type: System.Data.DataSetClearEventhandler
#include "System/Data/DataSetClearEventhandler.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexType
#include "System/Xml/Schema/XmlSchemaComplexType.hpp"
// Including type: System.Data.SchemaSerializationMode
#include "System/Data/SchemaSerializationMode.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Data.SchemaFormat
#include "System/Data/SchemaFormat.hpp"
// Including type: System.Converter`2
#include "System/Converter_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Data.XmlReadMode
#include "System/Data/XmlReadMode.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Data.XmlWriteMode
#include "System/Data/XmlWriteMode.hpp"
// Including type: System.Data.MissingSchemaAction
#include "System/Data/MissingSchemaAction.hpp"
// Including type: System.ComponentModel.PropertyChangedEventArgs
#include "System/ComponentModel/PropertyChangedEventArgs.hpp"
// Including type: System.Data.MergeFailedEventArgs
#include "System/Data/MergeFailedEventArgs.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.DataRelation
#include "System/Data/DataRelation.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.ComponentModel.ISite
#include "System/ComponentModel/ISite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 s_objectTypeCount
int System::Data::DataSet::_get_s_objectTypeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::_get_s_objectTypeCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data", "DataSet", "s_objectTypeCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_objectTypeCount
void System::Data::DataSet::_set_s_objectTypeCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::_set_s_objectTypeCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataSet", "s_objectTypeCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaComplexType s_schemaTypeForWSDL
::System::Xml::Schema::XmlSchemaComplexType* System::Data::DataSet::_get_s_schemaTypeForWSDL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::_get_s_schemaTypeForWSDL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaComplexType*>("System.Data", "DataSet", "s_schemaTypeForWSDL"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaComplexType s_schemaTypeForWSDL
void System::Data::DataSet::_set_s_schemaTypeForWSDL(::System::Xml::Schema::XmlSchemaComplexType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::_set_s_schemaTypeForWSDL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataSet", "s_schemaTypeForWSDL", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataViewManager _defaultViewManager
[[deprecated("Use field access instead!")]] ::System::Data::DataViewManager*& System::Data::DataSet::dyn__defaultViewManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__defaultViewManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultViewManager"))->offset;
  return *reinterpret_cast<::System::Data::DataViewManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataTableCollection _tableCollection
[[deprecated("Use field access instead!")]] ::System::Data::DataTableCollection*& System::Data::DataSet::dyn__tableCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__tableCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableCollection"))->offset;
  return *reinterpret_cast<::System::Data::DataTableCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataRelationCollection _relationCollection
[[deprecated("Use field access instead!")]] ::System::Data::DataRelationCollection*& System::Data::DataSet::dyn__relationCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__relationCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relationCollection"))->offset;
  return *reinterpret_cast<::System::Data::DataRelationCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.PropertyCollection _extendedProperties
[[deprecated("Use field access instead!")]] ::System::Data::PropertyCollection*& System::Data::DataSet::dyn__extendedProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__extendedProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_extendedProperties"))->offset;
  return *reinterpret_cast<::System::Data::PropertyCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _dataSetName
[[deprecated("Use field access instead!")]] ::StringW& System::Data::DataSet::dyn__dataSetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__dataSetName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSetName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _datasetPrefix
[[deprecated("Use field access instead!")]] ::StringW& System::Data::DataSet::dyn__datasetPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__datasetPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_datasetPrefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _namespaceURI
[[deprecated("Use field access instead!")]] ::StringW& System::Data::DataSet::dyn__namespaceURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__namespaceURI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_namespaceURI"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _enforceConstraints
[[deprecated("Use field access instead!")]] bool& System::Data::DataSet::dyn__enforceConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__enforceConstraints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enforceConstraints"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _caseSensitive
[[deprecated("Use field access instead!")]] bool& System::Data::DataSet::dyn__caseSensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__caseSensitive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caseSensitive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo _culture
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& System::Data::DataSet::dyn__culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_culture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _cultureUserSet
[[deprecated("Use field access instead!")]] bool& System::Data::DataSet::dyn__cultureUserSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__cultureUserSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cultureUserSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _fInReadXml
[[deprecated("Use field access instead!")]] bool& System::Data::DataSet::dyn__fInReadXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__fInReadXml");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fInReadXml"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _fInLoadDiffgram
[[deprecated("Use field access instead!")]] bool& System::Data::DataSet::dyn__fInLoadDiffgram() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__fInLoadDiffgram");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fInLoadDiffgram"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _fTopLevelTable
[[deprecated("Use field access instead!")]] bool& System::Data::DataSet::dyn__fTopLevelTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__fTopLevelTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fTopLevelTable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _fInitInProgress
[[deprecated("Use field access instead!")]] bool& System::Data::DataSet::dyn__fInitInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__fInitInProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fInitInProgress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _fEnableCascading
[[deprecated("Use field access instead!")]] bool& System::Data::DataSet::dyn__fEnableCascading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__fEnableCascading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fEnableCascading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _fIsSchemaLoading
[[deprecated("Use field access instead!")]] bool& System::Data::DataSet::dyn__fIsSchemaLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__fIsSchemaLoading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fIsSchemaLoading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _mainTableName
[[deprecated("Use field access instead!")]] ::StringW& System::Data::DataSet::dyn__mainTableName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__mainTableName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainTableName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.SerializationFormat _remotingFormat
[[deprecated("Use field access instead!")]] ::System::Data::SerializationFormat& System::Data::DataSet::dyn__remotingFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__remotingFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_remotingFormat"))->offset;
  return *reinterpret_cast<::System::Data::SerializationFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _defaultViewManagerLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Data::DataSet::dyn__defaultViewManagerLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__defaultViewManagerLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultViewManagerLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _objectID
[[deprecated("Use field access instead!")]] int& System::Data::DataSet::dyn__objectID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__objectID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _useDataSetSchemaOnly
[[deprecated("Use field access instead!")]] bool& System::Data::DataSet::dyn__useDataSetSchemaOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__useDataSetSchemaOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useDataSetSchemaOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _udtIsWrapped
[[deprecated("Use field access instead!")]] bool& System::Data::DataSet::dyn__udtIsWrapped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn__udtIsWrapped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_udtIsWrapped"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler PropertyChanging
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& System::Data::DataSet::dyn_PropertyChanging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn_PropertyChanging");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyChanging"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.MergeFailedEventHandler MergeFailed
[[deprecated("Use field access instead!")]] ::System::Data::MergeFailedEventHandler*& System::Data::DataSet::dyn_MergeFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn_MergeFailed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MergeFailed"))->offset;
  return *reinterpret_cast<::System::Data::MergeFailedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataRowCreatedEventHandler DataRowCreated
[[deprecated("Use field access instead!")]] ::System::Data::DataRowCreatedEventHandler*& System::Data::DataSet::dyn_DataRowCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn_DataRowCreated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DataRowCreated"))->offset;
  return *reinterpret_cast<::System::Data::DataRowCreatedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataSetClearEventhandler ClearFunctionCalled
[[deprecated("Use field access instead!")]] ::System::Data::DataSetClearEventhandler*& System::Data::DataSet::dyn_ClearFunctionCalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::dyn_ClearFunctionCalled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ClearFunctionCalled"))->offset;
  return *reinterpret_cast<::System::Data::DataSetClearEventhandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataSet.get_RemotingFormat
::System::Data::SerializationFormat System::Data::DataSet::get_RemotingFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::get_RemotingFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RemotingFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SerializationFormat, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.set_RemotingFormat
void System::Data::DataSet::set_RemotingFormat(::System::Data::SerializationFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::set_RemotingFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RemotingFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataSet.get_SchemaSerializationMode
::System::Data::SchemaSerializationMode System::Data::DataSet::get_SchemaSerializationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::get_SchemaSerializationMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataSet*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SchemaSerializationMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.get_CaseSensitive
bool System::Data::DataSet::get_CaseSensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::get_CaseSensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CaseSensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.set_CaseSensitive
void System::Data::DataSet::set_CaseSensitive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::set_CaseSensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CaseSensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataSet.get_EnforceConstraints
bool System::Data::DataSet::get_EnforceConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::get_EnforceConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnforceConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.set_EnforceConstraints
void System::Data::DataSet::set_EnforceConstraints(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::set_EnforceConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnforceConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataSet.get_DataSetName
::StringW System::Data::DataSet::get_DataSetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::get_DataSetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataSetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.set_DataSetName
void System::Data::DataSet::set_DataSetName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::set_DataSetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DataSetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataSet.get_Namespace
::StringW System::Data::DataSet::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.set_Namespace
void System::Data::DataSet::set_Namespace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::set_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataSet.get_Prefix
::StringW System::Data::DataSet::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.set_Prefix
void System::Data::DataSet::set_Prefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::set_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataSet.get_ExtendedProperties
::System::Data::PropertyCollection* System::Data::DataSet::get_ExtendedProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::get_ExtendedProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExtendedProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::PropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.get_Locale
::System::Globalization::CultureInfo* System::Data::DataSet::get_Locale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::get_Locale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Locale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.set_Locale
void System::Data::DataSet::set_Locale(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::set_Locale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Locale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataSet.get_Relations
::System::Data::DataRelationCollection* System::Data::DataSet::get_Relations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::get_Relations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Relations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRelationCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.get_Tables
::System::Data::DataTableCollection* System::Data::DataSet::get_Tables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::get_Tables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTableCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.get_MainTableName
::StringW System::Data::DataSet::get_MainTableName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::get_MainTableName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MainTableName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.set_MainTableName
void System::Data::DataSet::set_MainTableName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::set_MainTableName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MainTableName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataSet.get_ObjectID
int System::Data::DataSet::get_ObjectID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::get_ObjectID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.GetObjectData
void System::Data::DataSet::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataSet*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Data.DataSet.InitializeDerivedDataSet
void System::Data::DataSet::InitializeDerivedDataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::InitializeDerivedDataSet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataSet*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.SerializeDataSet
void System::Data::DataSet::SerializeDataSet(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, ::System::Data::SerializationFormat remotingFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::SerializeDataSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeDataSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(remotingFormat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context, remotingFormat);
}
// Autogenerated method: System.Data.DataSet.DeserializeDataSet
void System::Data::DataSet::DeserializeDataSet(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, ::System::Data::SerializationFormat remotingFormat, ::System::Data::SchemaSerializationMode schemaSerializationMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::DeserializeDataSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeDataSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(remotingFormat), ::il2cpp_utils::ExtractType(schemaSerializationMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context, remotingFormat, schemaSerializationMode);
}
// Autogenerated method: System.Data.DataSet.DeserializeDataSetSchema
void System::Data::DataSet::DeserializeDataSetSchema(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, ::System::Data::SerializationFormat remotingFormat, ::System::Data::SchemaSerializationMode schemaSerializationMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::DeserializeDataSetSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeDataSetSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(remotingFormat), ::il2cpp_utils::ExtractType(schemaSerializationMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context, remotingFormat, schemaSerializationMode);
}
// Autogenerated method: System.Data.DataSet.DeserializeDataSetData
void System::Data::DataSet::DeserializeDataSetData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, ::System::Data::SerializationFormat remotingFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::DeserializeDataSetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeDataSetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(remotingFormat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context, remotingFormat);
}
// Autogenerated method: System.Data.DataSet.SerializeDataSetProperties
void System::Data::DataSet::SerializeDataSetProperties(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::SerializeDataSetProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeDataSetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Data.DataSet.DeserializeDataSetProperties
void System::Data::DataSet::DeserializeDataSetProperties(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::DeserializeDataSetProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeDataSetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Data.DataSet.SerializeRelations
void System::Data::DataSet::SerializeRelations(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::SerializeRelations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeRelations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Data.DataSet.DeserializeRelations
void System::Data::DataSet::DeserializeRelations(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::DeserializeRelations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeRelations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Data.DataSet.FailedEnableConstraints
void System::Data::DataSet::FailedEnableConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::FailedEnableConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FailedEnableConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.RestoreEnforceConstraints
void System::Data::DataSet::RestoreEnforceConstraints(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::RestoreEnforceConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestoreEnforceConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataSet.EnableConstraints
void System::Data::DataSet::EnableConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::EnableConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.SetLocaleValue
void System::Data::DataSet::SetLocaleValue(::System::Globalization::CultureInfo* value, bool userSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::SetLocaleValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocaleValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(userSet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, userSet);
}
// Autogenerated method: System.Data.DataSet.ShouldSerializeLocale
bool System::Data::DataSet::ShouldSerializeLocale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::ShouldSerializeLocale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldSerializeLocale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.Clear
void System::Data::DataSet::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.Clone
::System::Data::DataSet* System::Data::DataSet::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataSet*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataSet*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.EstimatedXmlStringSize
int System::Data::DataSet::EstimatedXmlStringSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::EstimatedXmlStringSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EstimatedXmlStringSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.GetRemotingDiffGram
::StringW System::Data::DataSet::GetRemotingDiffGram(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::GetRemotingDiffGram");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRemotingDiffGram", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.DataSet.GetXmlSchemaForRemoting
::StringW System::Data::DataSet::GetXmlSchemaForRemoting(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::GetXmlSchemaForRemoting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetXmlSchemaForRemoting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.DataSet.ReadXmlSchema
void System::Data::DataSet::ReadXmlSchema(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::ReadXmlSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadXmlSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.DataSet.ReadXmlSchema
void System::Data::DataSet::ReadXmlSchema(::System::Xml::XmlReader* reader, bool denyResolving) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::ReadXmlSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadXmlSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(denyResolving)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, denyResolving);
}
// Autogenerated method: System.Data.DataSet.MoveToElement
bool System::Data::DataSet::MoveToElement(::System::Xml::XmlReader* reader, int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::MoveToElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(depth)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reader, depth);
}
// Autogenerated method: System.Data.DataSet.MoveToElement
void System::Data::DataSet::MoveToElement(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::MoveToElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "DataSet", "MoveToElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: System.Data.DataSet.ReadEndElement
void System::Data::DataSet::ReadEndElement(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::ReadEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.DataSet.ReadXSDSchema
void System::Data::DataSet::ReadXSDSchema(::System::Xml::XmlReader* reader, bool denyResolving) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::ReadXSDSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadXSDSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(denyResolving)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, denyResolving);
}
// Autogenerated method: System.Data.DataSet.ReadXDRSchema
void System::Data::DataSet::ReadXDRSchema(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::ReadXDRSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadXDRSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.DataSet.WriteXmlSchema
void System::Data::DataSet::WriteXmlSchema(::System::Xml::XmlWriter* writer, ::System::Data::SchemaFormat schemaFormat, ::System::Converter_2<::System::Type*, ::StringW>* multipleTargetConverter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::WriteXmlSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(schemaFormat), ::il2cpp_utils::ExtractType(multipleTargetConverter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, schemaFormat, multipleTargetConverter);
}
// Autogenerated method: System.Data.DataSet.ReadXml
::System::Data::XmlReadMode System::Data::DataSet::ReadXml(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::ReadXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::XmlReadMode, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.DataSet.ReadXml
::System::Data::XmlReadMode System::Data::DataSet::ReadXml(::System::Xml::XmlReader* reader, bool denyResolving) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::ReadXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(denyResolving)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::XmlReadMode, false>(this, ___internal__method, reader, denyResolving);
}
// Autogenerated method: System.Data.DataSet.InferSchema
void System::Data::DataSet::InferSchema(::System::Xml::XmlDocument* xdoc, ::ArrayW<::StringW> excludedNamespaces, ::System::Data::XmlReadMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::InferSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InferSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xdoc), ::il2cpp_utils::ExtractType(excludedNamespaces), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xdoc, excludedNamespaces, mode);
}
// Autogenerated method: System.Data.DataSet.IsEmpty
bool System::Data::DataSet::IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.ReadXmlDiffgram
void System::Data::DataSet::ReadXmlDiffgram(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::ReadXmlDiffgram");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadXmlDiffgram", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.DataSet.ReadXml
::System::Data::XmlReadMode System::Data::DataSet::ReadXml(::System::Xml::XmlReader* reader, ::System::Data::XmlReadMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::ReadXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::XmlReadMode, false>(this, ___internal__method, reader, mode);
}
// Autogenerated method: System.Data.DataSet.ReadXml
::System::Data::XmlReadMode System::Data::DataSet::ReadXml(::System::Xml::XmlReader* reader, ::System::Data::XmlReadMode mode, bool denyResolving) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::ReadXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(denyResolving)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::XmlReadMode, false>(this, ___internal__method, reader, mode, denyResolving);
}
// Autogenerated method: System.Data.DataSet.WriteXml
void System::Data::DataSet::WriteXml(::System::Xml::XmlWriter* writer, ::System::Data::XmlWriteMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::WriteXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, mode);
}
// Autogenerated method: System.Data.DataSet.Merge
void System::Data::DataSet::Merge(::System::Data::DataSet* dataSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::Merge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Merge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataSet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataSet);
}
// Autogenerated method: System.Data.DataSet.Merge
void System::Data::DataSet::Merge(::System::Data::DataSet* dataSet, bool preserveChanges, ::System::Data::MissingSchemaAction missingSchemaAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::Merge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Merge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataSet), ::il2cpp_utils::ExtractType(preserveChanges), ::il2cpp_utils::ExtractType(missingSchemaAction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataSet, preserveChanges, missingSchemaAction);
}
// Autogenerated method: System.Data.DataSet.OnPropertyChanging
void System::Data::DataSet::OnPropertyChanging(::System::ComponentModel::PropertyChangedEventArgs* pcevent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::OnPropertyChanging");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataSet*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pcevent);
}
// Autogenerated method: System.Data.DataSet.OnMergeFailed
void System::Data::DataSet::OnMergeFailed(::System::Data::MergeFailedEventArgs* mfevent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::OnMergeFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMergeFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mfevent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mfevent);
}
// Autogenerated method: System.Data.DataSet.RaiseMergeFailed
void System::Data::DataSet::RaiseMergeFailed(::System::Data::DataTable* table, ::StringW conflict, ::System::Data::MissingSchemaAction missingSchemaAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::RaiseMergeFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseMergeFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(conflict), ::il2cpp_utils::ExtractType(missingSchemaAction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table, conflict, missingSchemaAction);
}
// Autogenerated method: System.Data.DataSet.OnDataRowCreated
void System::Data::DataSet::OnDataRowCreated(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::OnDataRowCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDataRowCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row);
}
// Autogenerated method: System.Data.DataSet.OnClearFunctionCalled
void System::Data::DataSet::OnClearFunctionCalled(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::OnClearFunctionCalled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnClearFunctionCalled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.DataSet.OnRemoveTable
void System::Data::DataSet::OnRemoveTable(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::OnRemoveTable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataSet*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.DataSet.OnRemovedTable
void System::Data::DataSet::OnRemovedTable(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::OnRemovedTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRemovedTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.DataSet.OnRemoveRelation
void System::Data::DataSet::OnRemoveRelation(::System::Data::DataRelation* relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::OnRemoveRelation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataSet*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relation);
}
// Autogenerated method: System.Data.DataSet.OnRemoveRelationHack
void System::Data::DataSet::OnRemoveRelationHack(::System::Data::DataRelation* relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::OnRemoveRelationHack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRemoveRelationHack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relation);
}
// Autogenerated method: System.Data.DataSet.RaisePropertyChanging
void System::Data::DataSet::RaisePropertyChanging(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::RaisePropertyChanging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaisePropertyChanging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Data.DataSet.TopLevelTables
::ArrayW<::System::Data::DataTable*> System::Data::DataSet::TopLevelTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::TopLevelTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TopLevelTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataTable*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.TopLevelTables
::ArrayW<::System::Data::DataTable*> System::Data::DataSet::TopLevelTables(bool forSchema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::TopLevelTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TopLevelTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forSchema)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataTable*>, false>(this, ___internal__method, forSchema);
}
// Autogenerated method: System.Data.DataSet.Reset
void System::Data::DataSet::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataSet*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.ValidateCaseConstraint
bool System::Data::DataSet::ValidateCaseConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::ValidateCaseConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCaseConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.ValidateLocaleConstraint
bool System::Data::DataSet::ValidateLocaleConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::ValidateLocaleConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateLocaleConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.ReadXmlSerializable
void System::Data::DataSet::ReadXmlSerializable(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::ReadXmlSerializable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataSet*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.DataSet.GetDataSetSchema
::System::Xml::Schema::XmlSchemaComplexType* System::Data::DataSet::GetDataSetSchema(::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::GetDataSetSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "DataSet", "GetDataSetSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaComplexType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaSet);
}
// Autogenerated method: System.Data.DataSet.System.Xml.Serialization.IXmlSerializable.GetSchema
::System::Xml::Schema::XmlSchema* System::Data::DataSet::System_Xml_Serialization_IXmlSerializable_GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::System.Xml.Serialization.IXmlSerializable.GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataSet*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataSet.System.Xml.Serialization.IXmlSerializable.ReadXml
void System::Data::DataSet::System_Xml_Serialization_IXmlSerializable_ReadXml(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::System.Xml.Serialization.IXmlSerializable.ReadXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataSet*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.DataSet.System.Xml.Serialization.IXmlSerializable.WriteXml
void System::Data::DataSet::System_Xml_Serialization_IXmlSerializable_WriteXml(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::System.Xml.Serialization.IXmlSerializable.WriteXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataSet*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Data.DataSet.get_Site
::System::ComponentModel::ISite* System::Data::DataSet::get_Site() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSet::get_Site");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ISite*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataSetDateTime
#include "System/Data/DataSetDateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.DataSetDateTime Local
::System::Data::DataSetDateTime System::Data::DataSetDateTime::_get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSetDateTime::_get_Local");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataSetDateTime>("System.Data", "DataSetDateTime", "Local"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataSetDateTime Local
void System::Data::DataSetDateTime::_set_Local(::System::Data::DataSetDateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSetDateTime::_set_Local");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataSetDateTime", "Local", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataSetDateTime Unspecified
::System::Data::DataSetDateTime System::Data::DataSetDateTime::_get_Unspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSetDateTime::_get_Unspecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataSetDateTime>("System.Data", "DataSetDateTime", "Unspecified"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataSetDateTime Unspecified
void System::Data::DataSetDateTime::_set_Unspecified(::System::Data::DataSetDateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSetDateTime::_set_Unspecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataSetDateTime", "Unspecified", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataSetDateTime UnspecifiedLocal
::System::Data::DataSetDateTime System::Data::DataSetDateTime::_get_UnspecifiedLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSetDateTime::_get_UnspecifiedLocal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataSetDateTime>("System.Data", "DataSetDateTime", "UnspecifiedLocal"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataSetDateTime UnspecifiedLocal
void System::Data::DataSetDateTime::_set_UnspecifiedLocal(::System::Data::DataSetDateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSetDateTime::_set_UnspecifiedLocal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataSetDateTime", "UnspecifiedLocal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataSetDateTime Utc
::System::Data::DataSetDateTime System::Data::DataSetDateTime::_get_Utc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSetDateTime::_get_Utc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataSetDateTime>("System.Data", "DataSetDateTime", "Utc"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataSetDateTime Utc
void System::Data::DataSetDateTime::_set_Utc(::System::Data::DataSetDateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSetDateTime::_set_Utc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataSetDateTime", "Utc", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::DataSetDateTime::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataSetDateTime::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Data.DataTable/System.Data.RowDiffIdUsageSection
#include "System/Data/DataTable_RowDiffIdUsageSection.hpp"
// Including type: System.Data.DataTable/System.Data.DSRowDiffIdUsageSection
#include "System/Data/DataTable_DSRowDiffIdUsageSection.hpp"
// Including type: System.Data.DataSet
#include "System/Data/DataSet.hpp"
// Including type: System.Data.DataView
#include "System/Data/DataView.hpp"
// Including type: System.Data.DataRowCollection
#include "System/Data/DataRowCollection.hpp"
// Including type: System.Data.DataColumnCollection
#include "System/Data/DataColumnCollection.hpp"
// Including type: System.Data.ConstraintCollection
#include "System/Data/ConstraintCollection.hpp"
// Including type: System.Data.DataRelationCollection
#include "System/Data/DataRelationCollection.hpp"
// Including type: System.Data.RecordManager
#include "System/Data/RecordManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Data.Index
#include "System/Data/Index.hpp"
// Including type: System.Data.PropertyCollection
#include "System/Data/PropertyCollection.hpp"
// Including type: System.Data.DataExpression
#include "System/Data/DataExpression.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.StringComparer
#include "System/StringComparer.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.UniqueConstraint
#include "System/Data/UniqueConstraint.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.Data.DataRelation
#include "System/Data/DataRelation.hpp"
// Including type: System.Data.DataRowChangeEventHandler
#include "System/Data/DataRowChangeEventHandler.hpp"
// Including type: System.Data.DataColumnChangeEventHandler
#include "System/Data/DataColumnChangeEventHandler.hpp"
// Including type: System.Data.DataTableClearEventHandler
#include "System/Data/DataTableClearEventHandler.hpp"
// Including type: System.Data.DataTableNewRowEventHandler
#include "System/Data/DataTableNewRowEventHandler.hpp"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: System.Data.DataRowBuilder
#include "System/Data/DataRowBuilder.hpp"
// Including type: System.Data.DataViewListener
#include "System/Data/DataViewListener.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Threading.ReaderWriterLockSlim
#include "System/Threading/ReaderWriterLockSlim.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Data.DataRowState
#include "System/Data/DataRowState.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
// Including type: System.Data.DataKey
#include "System/Data/DataKey.hpp"
// Including type: System.Data.DataRowAction
#include "System/Data/DataRowAction.hpp"
// Including type: System.Data.DataViewRowState
#include "System/Data/DataViewRowState.hpp"
// Including type: System.Data.IFilter
#include "System/Data/IFilter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Data.DataColumnChangeEventArgs
#include "System/Data/DataColumnChangeEventArgs.hpp"
// Including type: System.ComponentModel.PropertyChangedEventArgs
#include "System/ComponentModel/PropertyChangedEventArgs.hpp"
// Including type: System.Data.DataRowChangeEventArgs
#include "System/Data/DataRowChangeEventArgs.hpp"
// Including type: System.Data.DataTableClearEventArgs
#include "System/Data/DataTableClearEventArgs.hpp"
// Including type: System.Data.DataTableNewRowEventArgs
#include "System/Data/DataTableNewRowEventArgs.hpp"
// Including type: System.Data.DataRowVersion
#include "System/Data/DataRowVersion.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Data.MissingSchemaAction
#include "System/Data/MissingSchemaAction.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Data.XmlWriteMode
#include "System/Data/XmlWriteMode.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Data.XmlReadMode
#include "System/Data/XmlReadMode.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexType
#include "System/Xml/Schema/XmlSchemaComplexType.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.ComponentModel.ISite
#include "System/ComponentModel/ISite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 s_objectTypeCount
int System::Data::DataTable::_get_s_objectTypeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::_get_s_objectTypeCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data", "DataTable", "s_objectTypeCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_objectTypeCount
void System::Data::DataTable::_set_s_objectTypeCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::_set_s_objectTypeCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataTable", "s_objectTypeCount", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataSet _dataSet
[[deprecated("Use field access instead!")]] ::System::Data::DataSet*& System::Data::DataTable::dyn__dataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__dataSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSet"))->offset;
  return *reinterpret_cast<::System::Data::DataSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataView _defaultView
[[deprecated("Use field access instead!")]] ::System::Data::DataView*& System::Data::DataTable::dyn__defaultView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__defaultView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultView"))->offset;
  return *reinterpret_cast<::System::Data::DataView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int64 _nextRowID
[[deprecated("Use field access instead!")]] int64_t& System::Data::DataTable::dyn__nextRowID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__nextRowID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextRowID"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Data.DataRowCollection _rowCollection
[[deprecated("Use field access instead!")]] ::System::Data::DataRowCollection*& System::Data::DataTable::dyn__rowCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__rowCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowCollection"))->offset;
  return *reinterpret_cast<::System::Data::DataRowCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Data.DataColumnCollection _columnCollection
[[deprecated("Use field access instead!")]] ::System::Data::DataColumnCollection*& System::Data::DataTable::dyn__columnCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__columnCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_columnCollection"))->offset;
  return *reinterpret_cast<::System::Data::DataColumnCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.ConstraintCollection _constraintCollection
[[deprecated("Use field access instead!")]] ::System::Data::ConstraintCollection*& System::Data::DataTable::dyn__constraintCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__constraintCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_constraintCollection"))->offset;
  return *reinterpret_cast<::System::Data::ConstraintCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _elementColumnCount
[[deprecated("Use field access instead!")]] int& System::Data::DataTable::dyn__elementColumnCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__elementColumnCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementColumnCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.DataRelationCollection _parentRelationsCollection
[[deprecated("Use field access instead!")]] ::System::Data::DataRelationCollection*& System::Data::DataTable::dyn__parentRelationsCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__parentRelationsCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentRelationsCollection"))->offset;
  return *reinterpret_cast<::System::Data::DataRelationCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.DataRelationCollection _childRelationsCollection
[[deprecated("Use field access instead!")]] ::System::Data::DataRelationCollection*& System::Data::DataTable::dyn__childRelationsCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__childRelationsCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childRelationsCollection"))->offset;
  return *reinterpret_cast<::System::Data::DataRelationCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Data.RecordManager _recordManager
[[deprecated("Use field access instead!")]] ::System::Data::RecordManager*& System::Data::DataTable::dyn__recordManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__recordManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordManager"))->offset;
  return *reinterpret_cast<::System::Data::RecordManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Collections.Generic.List`1<System.Data.Index> _indexes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Data::Index*>*& System::Data::DataTable::dyn__indexes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__indexes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_indexes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Data::Index*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Data.Index> _shadowIndexes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Data::Index*>*& System::Data::DataTable::dyn__shadowIndexes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__shadowIndexes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shadowIndexes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Data::Index*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _shadowCount
[[deprecated("Use field access instead!")]] int& System::Data::DataTable::dyn__shadowCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__shadowCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shadowCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.PropertyCollection _extendedProperties
[[deprecated("Use field access instead!")]] ::System::Data::PropertyCollection*& System::Data::DataTable::dyn__extendedProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__extendedProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_extendedProperties"))->offset;
  return *reinterpret_cast<::System::Data::PropertyCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _tableName
[[deprecated("Use field access instead!")]] ::StringW& System::Data::DataTable::dyn__tableName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__tableName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _tableNamespace
[[deprecated("Use field access instead!")]] ::StringW& System::Data::DataTable::dyn__tableNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__tableNamespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableNamespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _tablePrefix
[[deprecated("Use field access instead!")]] ::StringW& System::Data::DataTable::dyn__tablePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__tablePrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tablePrefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.DataExpression _displayExpression
[[deprecated("Use field access instead!")]] ::System::Data::DataExpression*& System::Data::DataTable::dyn__displayExpression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__displayExpression");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_displayExpression"))->offset;
  return *reinterpret_cast<::System::Data::DataExpression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _fNestedInDataset
[[deprecated("Use field access instead!")]] bool& System::Data::DataTable::dyn__fNestedInDataset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__fNestedInDataset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fNestedInDataset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo _culture
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& System::Data::DataTable::dyn__culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_culture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _cultureUserSet
[[deprecated("Use field access instead!")]] bool& System::Data::DataTable::dyn__cultureUserSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__cultureUserSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cultureUserSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareInfo _compareInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareInfo*& System::Data::DataTable::dyn__compareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__compareInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compareInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareOptions _compareFlags
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareOptions& System::Data::DataTable::dyn__compareFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__compareFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compareFlags"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IFormatProvider _formatProvider
[[deprecated("Use field access instead!")]] ::System::IFormatProvider*& System::Data::DataTable::dyn__formatProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__formatProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_formatProvider"))->offset;
  return *reinterpret_cast<::System::IFormatProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.StringComparer _hashCodeProvider
[[deprecated("Use field access instead!")]] ::System::StringComparer*& System::Data::DataTable::dyn__hashCodeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__hashCodeProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hashCodeProvider"))->offset;
  return *reinterpret_cast<::System::StringComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _caseSensitive
[[deprecated("Use field access instead!")]] bool& System::Data::DataTable::dyn__caseSensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__caseSensitive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caseSensitive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _caseSensitiveUserSet
[[deprecated("Use field access instead!")]] bool& System::Data::DataTable::dyn__caseSensitiveUserSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__caseSensitiveUserSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caseSensitiveUserSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _encodedTableName
[[deprecated("Use field access instead!")]] ::StringW& System::Data::DataTable::dyn__encodedTableName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__encodedTableName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encodedTableName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.DataColumn _xmlText
[[deprecated("Use field access instead!")]] ::System::Data::DataColumn*& System::Data::DataTable::dyn__xmlText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__xmlText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xmlText"))->offset;
  return *reinterpret_cast<::System::Data::DataColumn**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.DataColumn _colUnique
[[deprecated("Use field access instead!")]] ::System::Data::DataColumn*& System::Data::DataTable::dyn__colUnique() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__colUnique");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colUnique"))->offset;
  return *reinterpret_cast<::System::Data::DataColumn**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Decimal _minOccurs
[[deprecated("Use field access instead!")]] ::System::Decimal& System::Data::DataTable::dyn__minOccurs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__minOccurs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minOccurs"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Decimal _maxOccurs
[[deprecated("Use field access instead!")]] ::System::Decimal& System::Data::DataTable::dyn__maxOccurs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__maxOccurs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxOccurs"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _repeatableElement
[[deprecated("Use field access instead!")]] bool& System::Data::DataTable::dyn__repeatableElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__repeatableElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_repeatableElement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _typeName
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Data::DataTable::dyn__typeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__typeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeName"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.UniqueConstraint _primaryKey
[[deprecated("Use field access instead!")]] ::System::Data::UniqueConstraint*& System::Data::DataTable::dyn__primaryKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__primaryKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_primaryKey"))->offset;
  return *reinterpret_cast<::System::Data::UniqueConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.IndexField[] _primaryIndex
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::IndexField>& System::Data::DataTable::dyn__primaryIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__primaryIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_primaryIndex"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::IndexField>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataColumn[] _delayedSetPrimaryKey
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::DataColumn*>& System::Data::DataTable::dyn__delayedSetPrimaryKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__delayedSetPrimaryKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delayedSetPrimaryKey"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::DataColumn*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.Index _loadIndex
[[deprecated("Use field access instead!")]] ::System::Data::Index*& System::Data::DataTable::dyn__loadIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__loadIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadIndex"))->offset;
  return *reinterpret_cast<::System::Data::Index**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.Index _loadIndexwithOriginalAdded
[[deprecated("Use field access instead!")]] ::System::Data::Index*& System::Data::DataTable::dyn__loadIndexwithOriginalAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__loadIndexwithOriginalAdded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadIndexwithOriginalAdded"))->offset;
  return *reinterpret_cast<::System::Data::Index**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.Index _loadIndexwithCurrentDeleted
[[deprecated("Use field access instead!")]] ::System::Data::Index*& System::Data::DataTable::dyn__loadIndexwithCurrentDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__loadIndexwithCurrentDeleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadIndexwithCurrentDeleted"))->offset;
  return *reinterpret_cast<::System::Data::Index**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _suspendIndexEvents
[[deprecated("Use field access instead!")]] int& System::Data::DataTable::dyn__suspendIndexEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__suspendIndexEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suspendIndexEvents"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _inDataLoad
[[deprecated("Use field access instead!")]] bool& System::Data::DataTable::dyn__inDataLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__inDataLoad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inDataLoad"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _schemaLoading
[[deprecated("Use field access instead!")]] bool& System::Data::DataTable::dyn__schemaLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__schemaLoading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_schemaLoading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _enforceConstraints
[[deprecated("Use field access instead!")]] bool& System::Data::DataTable::dyn__enforceConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__enforceConstraints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enforceConstraints"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _suspendEnforceConstraints
[[deprecated("Use field access instead!")]] bool& System::Data::DataTable::dyn__suspendEnforceConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__suspendEnforceConstraints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suspendEnforceConstraints"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Boolean fInitInProgress
[[deprecated("Use field access instead!")]] bool& System::Data::DataTable::dyn_fInitInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn_fInitInProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fInitInProgress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _inLoad
[[deprecated("Use field access instead!")]] bool& System::Data::DataTable::dyn__inLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__inLoad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inLoad"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _fInLoadDiffgram
[[deprecated("Use field access instead!")]] bool& System::Data::DataTable::dyn__fInLoadDiffgram() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__fInLoadDiffgram");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fInLoadDiffgram"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _isTypedDataTable
[[deprecated("Use field access instead!")]] uint8_t& System::Data::DataTable::dyn__isTypedDataTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__isTypedDataTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isTypedDataTable"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataRow[] _emptyDataRowArray
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::DataRow*>& System::Data::DataTable::dyn__emptyDataRowArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__emptyDataRowArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emptyDataRowArray"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::DataRow*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyDescriptorCollection _propertyDescriptorCollectionCache
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyDescriptorCollection*& System::Data::DataTable::dyn__propertyDescriptorCollectionCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__propertyDescriptorCollectionCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propertyDescriptorCollectionCache"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyDescriptorCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataRelation[] _nestedParentRelations
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::DataRelation*>& System::Data::DataTable::dyn__nestedParentRelations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__nestedParentRelations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nestedParentRelations"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::DataRelation*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Data.DataColumn> _dependentColumns
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Data::DataColumn*>*& System::Data::DataTable::dyn__dependentColumns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__dependentColumns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dependentColumns"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Data::DataColumn*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _mergingData
[[deprecated("Use field access instead!")]] bool& System::Data::DataTable::dyn__mergingData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__mergingData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mergingData"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataRowChangeEventHandler _onRowChangedDelegate
[[deprecated("Use field access instead!")]] ::System::Data::DataRowChangeEventHandler*& System::Data::DataTable::dyn__onRowChangedDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__onRowChangedDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onRowChangedDelegate"))->offset;
  return *reinterpret_cast<::System::Data::DataRowChangeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataRowChangeEventHandler _onRowChangingDelegate
[[deprecated("Use field access instead!")]] ::System::Data::DataRowChangeEventHandler*& System::Data::DataTable::dyn__onRowChangingDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__onRowChangingDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onRowChangingDelegate"))->offset;
  return *reinterpret_cast<::System::Data::DataRowChangeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataRowChangeEventHandler _onRowDeletingDelegate
[[deprecated("Use field access instead!")]] ::System::Data::DataRowChangeEventHandler*& System::Data::DataTable::dyn__onRowDeletingDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__onRowDeletingDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onRowDeletingDelegate"))->offset;
  return *reinterpret_cast<::System::Data::DataRowChangeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataRowChangeEventHandler _onRowDeletedDelegate
[[deprecated("Use field access instead!")]] ::System::Data::DataRowChangeEventHandler*& System::Data::DataTable::dyn__onRowDeletedDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__onRowDeletedDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onRowDeletedDelegate"))->offset;
  return *reinterpret_cast<::System::Data::DataRowChangeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataColumnChangeEventHandler _onColumnChangedDelegate
[[deprecated("Use field access instead!")]] ::System::Data::DataColumnChangeEventHandler*& System::Data::DataTable::dyn__onColumnChangedDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__onColumnChangedDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onColumnChangedDelegate"))->offset;
  return *reinterpret_cast<::System::Data::DataColumnChangeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataColumnChangeEventHandler _onColumnChangingDelegate
[[deprecated("Use field access instead!")]] ::System::Data::DataColumnChangeEventHandler*& System::Data::DataTable::dyn__onColumnChangingDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__onColumnChangingDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onColumnChangingDelegate"))->offset;
  return *reinterpret_cast<::System::Data::DataColumnChangeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataTableClearEventHandler _onTableClearingDelegate
[[deprecated("Use field access instead!")]] ::System::Data::DataTableClearEventHandler*& System::Data::DataTable::dyn__onTableClearingDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__onTableClearingDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onTableClearingDelegate"))->offset;
  return *reinterpret_cast<::System::Data::DataTableClearEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataTableClearEventHandler _onTableClearedDelegate
[[deprecated("Use field access instead!")]] ::System::Data::DataTableClearEventHandler*& System::Data::DataTable::dyn__onTableClearedDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__onTableClearedDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onTableClearedDelegate"))->offset;
  return *reinterpret_cast<::System::Data::DataTableClearEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataTableNewRowEventHandler _onTableNewRowDelegate
[[deprecated("Use field access instead!")]] ::System::Data::DataTableNewRowEventHandler*& System::Data::DataTable::dyn__onTableNewRowDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__onTableNewRowDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onTableNewRowDelegate"))->offset;
  return *reinterpret_cast<::System::Data::DataTableNewRowEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyChangedEventHandler _onPropertyChangingDelegate
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyChangedEventHandler*& System::Data::DataTable::dyn__onPropertyChangingDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__onPropertyChangingDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onPropertyChangingDelegate"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataRowBuilder _rowBuilder
[[deprecated("Use field access instead!")]] ::System::Data::DataRowBuilder*& System::Data::DataTable::dyn__rowBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__rowBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowBuilder"))->offset;
  return *reinterpret_cast<::System::Data::DataRowBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Collections.Generic.List`1<System.Data.DataView> _delayedViews
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Data::DataView*>*& System::Data::DataTable::dyn__delayedViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__delayedViews");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delayedViews"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Data::DataView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Data.DataViewListener> _dataViewListeners
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Data::DataViewListener*>*& System::Data::DataTable::dyn__dataViewListeners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__dataViewListeners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataViewListeners"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Data::DataViewListener*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _rowDiffId
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Data::DataTable::dyn__rowDiffId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__rowDiffId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowDiffId"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Threading.ReaderWriterLockSlim _indexesLock
[[deprecated("Use field access instead!")]] ::System::Threading::ReaderWriterLockSlim*& System::Data::DataTable::dyn__indexesLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__indexesLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_indexesLock"))->offset;
  return *reinterpret_cast<::System::Threading::ReaderWriterLockSlim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _ukColumnPositionForInference
[[deprecated("Use field access instead!")]] int& System::Data::DataTable::dyn__ukColumnPositionForInference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__ukColumnPositionForInference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ukColumnPositionForInference"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.SerializationFormat _remotingFormat
[[deprecated("Use field access instead!")]] ::System::Data::SerializationFormat& System::Data::DataTable::dyn__remotingFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__remotingFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_remotingFormat"))->offset;
  return *reinterpret_cast<::System::Data::SerializationFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _objectID
[[deprecated("Use field access instead!")]] int& System::Data::DataTable::dyn__objectID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::dyn__objectID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataTable.get_CaseSensitive
bool System::Data::DataTable::get_CaseSensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_CaseSensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CaseSensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.set_CaseSensitive
void System::Data::DataTable::set_CaseSensitive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::set_CaseSensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CaseSensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataTable.get_AreIndexEventsSuspended
bool System::Data::DataTable::get_AreIndexEventsSuspended() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_AreIndexEventsSuspended");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AreIndexEventsSuspended", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_IsTypedDataTable
bool System::Data::DataTable::get_IsTypedDataTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_IsTypedDataTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsTypedDataTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_SelfNested
bool System::Data::DataTable::get_SelfNested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_SelfNested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelfNested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_LiveIndexes
::System::Collections::Generic::List_1<::System::Data::Index*>* System::Data::DataTable::get_LiveIndexes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_LiveIndexes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LiveIndexes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Data::Index*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_RemotingFormat
::System::Data::SerializationFormat System::Data::DataTable::get_RemotingFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_RemotingFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RemotingFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SerializationFormat, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.set_RemotingFormat
void System::Data::DataTable::set_RemotingFormat(::System::Data::SerializationFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::set_RemotingFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RemotingFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataTable.get_UKColumnPositionForInference
int System::Data::DataTable::get_UKColumnPositionForInference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_UKColumnPositionForInference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UKColumnPositionForInference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.set_UKColumnPositionForInference
void System::Data::DataTable::set_UKColumnPositionForInference(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::set_UKColumnPositionForInference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UKColumnPositionForInference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataTable.get_ChildRelations
::System::Data::DataRelationCollection* System::Data::DataTable::get_ChildRelations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_ChildRelations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChildRelations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRelationCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_Columns
::System::Data::DataColumnCollection* System::Data::DataTable::get_Columns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_Columns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Columns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataColumnCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_CompareInfo
::System::Globalization::CompareInfo* System::Data::DataTable::get_CompareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_CompareInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompareInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CompareInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_Constraints
::System::Data::ConstraintCollection* System::Data::DataTable::get_Constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_Constraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Constraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::ConstraintCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_DataSet
::System::Data::DataSet* System::Data::DataTable::get_DataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_DataSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataSet*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_DisplayExpressionInternal
::StringW System::Data::DataTable::get_DisplayExpressionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_DisplayExpressionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisplayExpressionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_EnforceConstraints
bool System::Data::DataTable::get_EnforceConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_EnforceConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnforceConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.set_EnforceConstraints
void System::Data::DataTable::set_EnforceConstraints(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::set_EnforceConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnforceConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataTable.get_SuspendEnforceConstraints
bool System::Data::DataTable::get_SuspendEnforceConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_SuspendEnforceConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SuspendEnforceConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.set_SuspendEnforceConstraints
void System::Data::DataTable::set_SuspendEnforceConstraints(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::set_SuspendEnforceConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SuspendEnforceConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataTable.get_ExtendedProperties
::System::Data::PropertyCollection* System::Data::DataTable::get_ExtendedProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_ExtendedProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExtendedProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::PropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_FormatProvider
::System::IFormatProvider* System::Data::DataTable::get_FormatProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_FormatProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FormatProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IFormatProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_Locale
::System::Globalization::CultureInfo* System::Data::DataTable::get_Locale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_Locale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Locale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.set_Locale
void System::Data::DataTable::set_Locale(::System::Globalization::CultureInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::set_Locale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Locale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataTable.get_MinimumCapacity
int System::Data::DataTable::get_MinimumCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_MinimumCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinimumCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.set_MinimumCapacity
void System::Data::DataTable::set_MinimumCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::set_MinimumCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MinimumCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataTable.get_RecordCapacity
int System::Data::DataTable::get_RecordCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_RecordCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecordCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_ElementColumnCount
int System::Data::DataTable::get_ElementColumnCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_ElementColumnCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementColumnCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.set_ElementColumnCount
void System::Data::DataTable::set_ElementColumnCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::set_ElementColumnCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ElementColumnCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataTable.get_ParentRelations
::System::Data::DataRelationCollection* System::Data::DataTable::get_ParentRelations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_ParentRelations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentRelations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRelationCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_MergingData
bool System::Data::DataTable::get_MergingData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_MergingData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MergingData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.set_MergingData
void System::Data::DataTable::set_MergingData(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::set_MergingData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MergingData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataTable.get_NestedParentRelations
::ArrayW<::System::Data::DataRelation*> System::Data::DataTable::get_NestedParentRelations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_NestedParentRelations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NestedParentRelations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataRelation*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_SchemaLoading
bool System::Data::DataTable::get_SchemaLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_SchemaLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_NestedParentsCount
int System::Data::DataTable::get_NestedParentsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_NestedParentsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NestedParentsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_PrimaryKey
::ArrayW<::System::Data::DataColumn*> System::Data::DataTable::get_PrimaryKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_PrimaryKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrimaryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataColumn*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.set_PrimaryKey
void System::Data::DataTable::set_PrimaryKey(::ArrayW<::System::Data::DataColumn*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::set_PrimaryKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PrimaryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataTable.get_Rows
::System::Data::DataRowCollection* System::Data::DataTable::get_Rows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_Rows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRowCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_TableName
::StringW System::Data::DataTable::get_TableName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_TableName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TableName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.set_TableName
void System::Data::DataTable::set_TableName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::set_TableName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TableName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataTable.get_EncodedTableName
::StringW System::Data::DataTable::get_EncodedTableName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_EncodedTableName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncodedTableName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_Namespace
::StringW System::Data::DataTable::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.set_Namespace
void System::Data::DataTable::set_Namespace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::set_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataTable.get_Prefix
::StringW System::Data::DataTable::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.set_Prefix
void System::Data::DataTable::set_Prefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::set_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataTable.get_XmlText
::System::Data::DataColumn* System::Data::DataTable::get_XmlText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_XmlText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataColumn*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.set_XmlText
void System::Data::DataTable::set_XmlText(::System::Data::DataColumn* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::set_XmlText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XmlText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataTable.get_MaxOccurs
::System::Decimal System::Data::DataTable::get_MaxOccurs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_MaxOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.set_MaxOccurs
void System::Data::DataTable::set_MaxOccurs(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::set_MaxOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataTable.get_MinOccurs
::System::Decimal System::Data::DataTable::get_MinOccurs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_MinOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.set_MinOccurs
void System::Data::DataTable::set_MinOccurs(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::set_MinOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MinOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataTable.get_NeedColumnChangeEvents
bool System::Data::DataTable::get_NeedColumnChangeEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_NeedColumnChangeEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NeedColumnChangeEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_TypeName
::System::Xml::XmlQualifiedName* System::Data::DataTable::get_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_TypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.set_TypeName
void System::Data::DataTable::set_TypeName(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::set_TypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataTable.get_RowDiffId
::System::Collections::Hashtable* System::Data::DataTable::get_RowDiffId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_RowDiffId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RowDiffId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.get_ObjectID
int System::Data::DataTable::get_ObjectID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_ObjectID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.GetObjectData
void System::Data::DataTable::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Data.DataTable.SerializeDataTable
void System::Data::DataTable::SerializeDataTable(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, bool isSingleTable, ::System::Data::SerializationFormat remotingFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::SerializeDataTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeDataTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(isSingleTable), ::il2cpp_utils::ExtractType(remotingFormat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context, isSingleTable, remotingFormat);
}
// Autogenerated method: System.Data.DataTable.DeserializeDataTable
void System::Data::DataTable::DeserializeDataTable(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, bool isSingleTable, ::System::Data::SerializationFormat remotingFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::DeserializeDataTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeDataTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(isSingleTable), ::il2cpp_utils::ExtractType(remotingFormat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context, isSingleTable, remotingFormat);
}
// Autogenerated method: System.Data.DataTable.SerializeTableSchema
void System::Data::DataTable::SerializeTableSchema(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, bool isSingleTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::SerializeTableSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeTableSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(isSingleTable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context, isSingleTable);
}
// Autogenerated method: System.Data.DataTable.DeserializeTableSchema
void System::Data::DataTable::DeserializeTableSchema(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, bool isSingleTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::DeserializeTableSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeTableSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(isSingleTable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context, isSingleTable);
}
// Autogenerated method: System.Data.DataTable.SerializeConstraints
void System::Data::DataTable::SerializeConstraints(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, int serIndex, bool allConstraints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::SerializeConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(serIndex), ::il2cpp_utils::ExtractType(allConstraints)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context, serIndex, allConstraints);
}
// Autogenerated method: System.Data.DataTable.DeserializeConstraints
void System::Data::DataTable::DeserializeConstraints(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, int serIndex, bool allConstraints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::DeserializeConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(serIndex), ::il2cpp_utils::ExtractType(allConstraints)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context, serIndex, allConstraints);
}
// Autogenerated method: System.Data.DataTable.SerializeExpressionColumns
void System::Data::DataTable::SerializeExpressionColumns(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, int serIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::SerializeExpressionColumns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeExpressionColumns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(serIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context, serIndex);
}
// Autogenerated method: System.Data.DataTable.DeserializeExpressionColumns
void System::Data::DataTable::DeserializeExpressionColumns(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, int serIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::DeserializeExpressionColumns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeExpressionColumns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(serIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context, serIndex);
}
// Autogenerated method: System.Data.DataTable.SerializeTableData
void System::Data::DataTable::SerializeTableData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, int serIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::SerializeTableData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeTableData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(serIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context, serIndex);
}
// Autogenerated method: System.Data.DataTable.DeserializeTableData
void System::Data::DataTable::DeserializeTableData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, int serIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::DeserializeTableData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeTableData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(serIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context, serIndex);
}
// Autogenerated method: System.Data.DataTable.ConvertToRowState
::System::Data::DataRowState System::Data::DataTable::ConvertToRowState(::System::Collections::BitArray* bitStates, int bitIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::ConvertToRowState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToRowState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitStates), ::il2cpp_utils::ExtractType(bitIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRowState, false>(this, ___internal__method, bitStates, bitIndex);
}
// Autogenerated method: System.Data.DataTable.GetRowAndColumnErrors
void System::Data::DataTable::GetRowAndColumnErrors(int rowIndex, ::System::Collections::Hashtable* rowErrors, ::System::Collections::Hashtable* colErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::GetRowAndColumnErrors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRowAndColumnErrors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rowIndex), ::il2cpp_utils::ExtractType(rowErrors), ::il2cpp_utils::ExtractType(colErrors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rowIndex, rowErrors, colErrors);
}
// Autogenerated method: System.Data.DataTable.ConvertToRowError
void System::Data::DataTable::ConvertToRowError(int rowIndex, ::System::Collections::Hashtable* rowErrors, ::System::Collections::Hashtable* colErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::ConvertToRowError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToRowError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rowIndex), ::il2cpp_utils::ExtractType(rowErrors), ::il2cpp_utils::ExtractType(colErrors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rowIndex, rowErrors, colErrors);
}
// Autogenerated method: System.Data.DataTable.RestoreIndexEvents
void System::Data::DataTable::RestoreIndexEvents(bool forceReset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::RestoreIndexEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestoreIndexEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forceReset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, forceReset);
}
// Autogenerated method: System.Data.DataTable.SuspendIndexEvents
void System::Data::DataTable::SuspendIndexEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::SuspendIndexEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SuspendIndexEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.SetCaseSensitiveValue
bool System::Data::DataTable::SetCaseSensitiveValue(bool isCaseSensitive, bool userSet, bool resetIndexes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::SetCaseSensitiveValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCaseSensitiveValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isCaseSensitive), ::il2cpp_utils::ExtractType(userSet), ::il2cpp_utils::ExtractType(resetIndexes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, isCaseSensitive, userSet, resetIndexes);
}
// Autogenerated method: System.Data.DataTable.ShouldSerializeCaseSensitive
bool System::Data::DataTable::ShouldSerializeCaseSensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::ShouldSerializeCaseSensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldSerializeCaseSensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.ResetConstraints
void System::Data::DataTable::ResetConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::ResetConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.SetDataSet
void System::Data::DataTable::SetDataSet(::System::Data::DataSet* dataSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::SetDataSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataSet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataSet);
}
// Autogenerated method: System.Data.DataTable.EnableConstraints
void System::Data::DataTable::EnableConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::EnableConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.SetLocaleValue
bool System::Data::DataTable::SetLocaleValue(::System::Globalization::CultureInfo* culture, bool userSet, bool resetIndexes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::SetLocaleValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocaleValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(userSet), ::il2cpp_utils::ExtractType(resetIndexes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, culture, userSet, resetIndexes);
}
// Autogenerated method: System.Data.DataTable.ShouldSerializeLocale
bool System::Data::DataTable::ShouldSerializeLocale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::ShouldSerializeLocale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldSerializeLocale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.CacheNestedParent
void System::Data::DataTable::CacheNestedParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::CacheNestedParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheNestedParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.FindNestedParentRelations
::ArrayW<::System::Data::DataRelation*> System::Data::DataTable::FindNestedParentRelations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::FindNestedParentRelations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindNestedParentRelations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataRelation*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.GetInheritedNamespace
::StringW System::Data::DataTable::GetInheritedNamespace(::System::Collections::Generic::List_1<::System::Data::DataTable*>* visitedTables) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::GetInheritedNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInheritedNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitedTables)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, visitedTables);
}
// Autogenerated method: System.Data.DataTable.IsNamespaceInherited
bool System::Data::DataTable::IsNamespaceInherited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::IsNamespaceInherited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsNamespaceInherited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.CheckCascadingNamespaceConflict
void System::Data::DataTable::CheckCascadingNamespaceConflict(::StringW realNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::CheckCascadingNamespaceConflict");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCascadingNamespaceConflict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realNamespace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, realNamespace);
}
// Autogenerated method: System.Data.DataTable.CheckNamespaceValidityForNestedRelations
void System::Data::DataTable::CheckNamespaceValidityForNestedRelations(::StringW realNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::CheckNamespaceValidityForNestedRelations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckNamespaceValidityForNestedRelations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(realNamespace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, realNamespace);
}
// Autogenerated method: System.Data.DataTable.CheckNamespaceValidityForNestedParentRelations
void System::Data::DataTable::CheckNamespaceValidityForNestedParentRelations(::StringW ns, ::System::Data::DataTable* parentTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::CheckNamespaceValidityForNestedParentRelations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckNamespaceValidityForNestedParentRelations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(parentTable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ns, parentTable);
}
// Autogenerated method: System.Data.DataTable.DoRaiseNamespaceChange
void System::Data::DataTable::DoRaiseNamespaceChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::DoRaiseNamespaceChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoRaiseNamespaceChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.SetKeyValues
void System::Data::DataTable::SetKeyValues(::System::Data::DataKey key, ::ArrayW<::Il2CppObject*> keyValues, int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::SetKeyValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKeyValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(keyValues), ::il2cpp_utils::ExtractType(record)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, keyValues, record);
}
// Autogenerated method: System.Data.DataTable.FindByIndex
::System::Data::DataRow* System::Data::DataTable::FindByIndex(::System::Data::Index* ndx, ::ArrayW<::Il2CppObject*> key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::FindByIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ndx), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(this, ___internal__method, ndx, key);
}
// Autogenerated method: System.Data.DataTable.FindMergeTarget
::System::Data::DataRow* System::Data::DataTable::FindMergeTarget(::System::Data::DataRow* row, ::System::Data::DataKey key, ::System::Data::Index* ndx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::FindMergeTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindMergeTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(ndx)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(this, ___internal__method, row, key, ndx);
}
// Autogenerated method: System.Data.DataTable.SetMergeRecords
void System::Data::DataTable::SetMergeRecords(::System::Data::DataRow* row, int newRecord, int oldRecord, ::System::Data::DataRowAction action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::SetMergeRecords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMergeRecords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(newRecord), ::il2cpp_utils::ExtractType(oldRecord), ::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, newRecord, oldRecord, action);
}
// Autogenerated method: System.Data.DataTable.MergeRow
::System::Data::DataRow* System::Data::DataTable::MergeRow(::System::Data::DataRow* row, ::System::Data::DataRow* targetRow, bool preserveChanges, ::System::Data::Index* idxSearch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::MergeRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MergeRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(targetRow), ::il2cpp_utils::ExtractType(preserveChanges), ::il2cpp_utils::ExtractType(idxSearch)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(this, ___internal__method, row, targetRow, preserveChanges, idxSearch);
}
// Autogenerated method: System.Data.DataTable.CreateInstance
::System::Data::DataTable* System::Data::DataTable::CreateInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::CreateInstance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.Clone
::System::Data::DataTable* System::Data::DataTable::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.Clone
::System::Data::DataTable* System::Data::DataTable::Clone(::System::Data::DataSet* cloneDS) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cloneDS)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method, cloneDS);
}
// Autogenerated method: System.Data.DataTable.IncrementalCloneTo
::System::Data::DataTable* System::Data::DataTable::IncrementalCloneTo(::System::Data::DataTable* sourceTable, ::System::Data::DataTable* targetTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::IncrementalCloneTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementalCloneTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceTable), ::il2cpp_utils::ExtractType(targetTable)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method, sourceTable, targetTable);
}
// Autogenerated method: System.Data.DataTable.CloneHierarchy
::System::Data::DataTable* System::Data::DataTable::CloneHierarchy(::System::Data::DataTable* sourceTable, ::System::Data::DataSet* ds, ::System::Collections::Hashtable* visitedMap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::CloneHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceTable), ::il2cpp_utils::ExtractType(ds), ::il2cpp_utils::ExtractType(visitedMap)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method, sourceTable, ds, visitedMap);
}
// Autogenerated method: System.Data.DataTable.CloneTo
::System::Data::DataTable* System::Data::DataTable::CloneTo(::System::Data::DataTable* clone, ::System::Data::DataSet* cloneDS, bool skipExpressionColumns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::CloneTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clone), ::il2cpp_utils::ExtractType(cloneDS), ::il2cpp_utils::ExtractType(skipExpressionColumns)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method, clone, cloneDS, skipExpressionColumns);
}
// Autogenerated method: System.Data.DataTable.AddRow
void System::Data::DataTable::AddRow(::System::Data::DataRow* row, int proposedID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::AddRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(proposedID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, proposedID);
}
// Autogenerated method: System.Data.DataTable.InsertRow
void System::Data::DataTable::InsertRow(::System::Data::DataRow* row, int proposedID, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::InsertRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(proposedID), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, proposedID, pos);
}
// Autogenerated method: System.Data.DataTable.InsertRow
void System::Data::DataTable::InsertRow(::System::Data::DataRow* row, int64_t proposedID, int pos, bool fireEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::InsertRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(proposedID), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(fireEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, proposedID, pos, fireEvent);
}
// Autogenerated method: System.Data.DataTable.CheckNotModifying
void System::Data::DataTable::CheckNotModifying(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::CheckNotModifying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckNotModifying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row);
}
// Autogenerated method: System.Data.DataTable.Clear
void System::Data::DataTable::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.Clear
void System::Data::DataTable::Clear(bool clearAll) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clearAll)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clearAll);
}
// Autogenerated method: System.Data.DataTable.CascadeAll
void System::Data::DataTable::CascadeAll(::System::Data::DataRow* row, ::System::Data::DataRowAction action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::CascadeAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CascadeAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, action);
}
// Autogenerated method: System.Data.DataTable.CommitRow
void System::Data::DataTable::CommitRow(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::CommitRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CommitRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row);
}
// Autogenerated method: System.Data.DataTable.Compare
int System::Data::DataTable::Compare(::StringW s1, ::StringW s2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(s2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s1, s2);
}
// Autogenerated method: System.Data.DataTable.Compare
int System::Data::DataTable::Compare(::StringW s1, ::StringW s2, ::System::Globalization::CompareInfo* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s1, s2, comparer);
}
// Autogenerated method: System.Data.DataTable.IndexOf
int System::Data::DataTable::IndexOf(::StringW s1, ::StringW s2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(s2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s1, s2);
}
// Autogenerated method: System.Data.DataTable.IsSuffix
bool System::Data::DataTable::IsSuffix(::StringW s1, ::StringW s2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::IsSuffix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSuffix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(s2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s1, s2);
}
// Autogenerated method: System.Data.DataTable.DeleteRow
void System::Data::DataTable::DeleteRow(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::DeleteRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row);
}
// Autogenerated method: System.Data.DataTable.FormatSortString
::StringW System::Data::DataTable::FormatSortString(::ArrayW<::System::Data::IndexField> indexDesc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::FormatSortString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatSortString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indexDesc)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, indexDesc);
}
// Autogenerated method: System.Data.DataTable.FreeRecord
void System::Data::DataTable::FreeRecord(ByRef<int> record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::FreeRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(record));
}
// Autogenerated method: System.Data.DataTable.GetIndex
::System::Data::Index* System::Data::DataTable::GetIndex(::StringW sort, ::System::Data::DataViewRowState recordStates, ::System::Data::IFilter* rowFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::GetIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sort), ::il2cpp_utils::ExtractType(recordStates), ::il2cpp_utils::ExtractType(rowFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Index*, false>(this, ___internal__method, sort, recordStates, rowFilter);
}
// Autogenerated method: System.Data.DataTable.GetIndex
::System::Data::Index* System::Data::DataTable::GetIndex(::ArrayW<::System::Data::IndexField> indexDesc, ::System::Data::DataViewRowState recordStates, ::System::Data::IFilter* rowFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::GetIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indexDesc), ::il2cpp_utils::ExtractType(recordStates), ::il2cpp_utils::ExtractType(rowFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Index*, false>(this, ___internal__method, indexDesc, recordStates, rowFilter);
}
// Autogenerated method: System.Data.DataTable.GetListeners
::System::Collections::Generic::List_1<::System::Data::DataViewListener*>* System::Data::DataTable::GetListeners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::GetListeners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetListeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Data::DataViewListener*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.GetSpecialHashCode
int System::Data::DataTable::GetSpecialHashCode(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::GetSpecialHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpecialHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Data.DataTable.InsertRow
void System::Data::DataTable::InsertRow(::System::Data::DataRow* row, int64_t proposedID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::InsertRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(proposedID)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, proposedID);
}
// Autogenerated method: System.Data.DataTable.NewRecord
int System::Data::DataTable::NewRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::NewRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NewRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.NewUninitializedRecord
int System::Data::DataTable::NewUninitializedRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::NewUninitializedRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NewUninitializedRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.NewRecord
int System::Data::DataTable::NewRecord(int sourceRecord) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::NewRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NewRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceRecord)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, sourceRecord);
}
// Autogenerated method: System.Data.DataTable.NewEmptyRow
::System::Data::DataRow* System::Data::DataTable::NewEmptyRow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::NewEmptyRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NewEmptyRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.NewUninitializedRow
::System::Data::DataRow* System::Data::DataTable::NewUninitializedRow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::NewUninitializedRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NewUninitializedRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.NewRow
::System::Data::DataRow* System::Data::DataTable::NewRow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::NewRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NewRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.CreateEmptyRow
::System::Data::DataRow* System::Data::DataTable::CreateEmptyRow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::CreateEmptyRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEmptyRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.NewRowCreated
void System::Data::DataTable::NewRowCreated(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::NewRowCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NewRowCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row);
}
// Autogenerated method: System.Data.DataTable.NewRow
::System::Data::DataRow* System::Data::DataTable::NewRow(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::NewRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NewRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.DataTable.NewRowFromBuilder
::System::Data::DataRow* System::Data::DataTable::NewRowFromBuilder(::System::Data::DataRowBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::NewRowFromBuilder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(this, ___internal__method, builder);
}
// Autogenerated method: System.Data.DataTable.GetRowType
::System::Type* System::Data::DataTable::GetRowType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::GetRowType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.NewRowArray
::ArrayW<::System::Data::DataRow*> System::Data::DataTable::NewRowArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::NewRowArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NewRowArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataRow*>, false>(this, ___internal__method, size);
}
// Autogenerated method: System.Data.DataTable.OnColumnChanging
void System::Data::DataTable::OnColumnChanging(::System::Data::DataColumnChangeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::OnColumnChanging");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Data.DataTable.OnColumnChanged
void System::Data::DataTable::OnColumnChanged(::System::Data::DataColumnChangeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::OnColumnChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Data.DataTable.OnPropertyChanging
void System::Data::DataTable::OnPropertyChanging(::System::ComponentModel::PropertyChangedEventArgs* pcevent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::OnPropertyChanging");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pcevent);
}
// Autogenerated method: System.Data.DataTable.OnRemoveColumnInternal
void System::Data::DataTable::OnRemoveColumnInternal(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::OnRemoveColumnInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRemoveColumnInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.DataTable.OnRemoveColumn
void System::Data::DataTable::OnRemoveColumn(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::OnRemoveColumn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.DataTable.OnRowChanged
::System::Data::DataRowChangeEventArgs* System::Data::DataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs* args, ::System::Data::DataRow* eRow, ::System::Data::DataRowAction eAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::OnRowChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRowChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(eRow), ::il2cpp_utils::ExtractType(eAction)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRowChangeEventArgs*, false>(this, ___internal__method, args, eRow, eAction);
}
// Autogenerated method: System.Data.DataTable.OnRowChanging
::System::Data::DataRowChangeEventArgs* System::Data::DataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs* args, ::System::Data::DataRow* eRow, ::System::Data::DataRowAction eAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::OnRowChanging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRowChanging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(eRow), ::il2cpp_utils::ExtractType(eAction)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRowChangeEventArgs*, false>(this, ___internal__method, args, eRow, eAction);
}
// Autogenerated method: System.Data.DataTable.OnRowChanged
void System::Data::DataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::OnRowChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Data.DataTable.OnRowChanging
void System::Data::DataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::OnRowChanging");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Data.DataTable.OnRowDeleting
void System::Data::DataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::OnRowDeleting");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Data.DataTable.OnRowDeleted
void System::Data::DataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::OnRowDeleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Data.DataTable.OnTableCleared
void System::Data::DataTable::OnTableCleared(::System::Data::DataTableClearEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::OnTableCleared");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Data.DataTable.OnTableClearing
void System::Data::DataTable::OnTableClearing(::System::Data::DataTableClearEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::OnTableClearing");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Data.DataTable.OnTableNewRow
void System::Data::DataTable::OnTableNewRow(::System::Data::DataTableNewRowEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::OnTableNewRow");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Data.DataTable.ParseSortString
::ArrayW<::System::Data::IndexField> System::Data::DataTable::ParseSortString(::StringW sortString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::ParseSortString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseSortString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sortString)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::IndexField>, false>(this, ___internal__method, sortString);
}
// Autogenerated method: System.Data.DataTable.RaisePropertyChanging
void System::Data::DataTable::RaisePropertyChanging(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::RaisePropertyChanging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaisePropertyChanging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Data.DataTable.RecordChanged
void System::Data::DataTable::RecordChanged(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::RecordChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.DataTable.RecordChanged
void System::Data::DataTable::RecordChanged(::ArrayW<int> oldIndex, ::ArrayW<int> newIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::RecordChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldIndex), ::il2cpp_utils::ExtractType(newIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldIndex, newIndex);
}
// Autogenerated method: System.Data.DataTable.RecordStateChanged
void System::Data::DataTable::RecordStateChanged(int record, ::System::Data::DataViewRowState oldState, ::System::Data::DataViewRowState newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::RecordStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record), ::il2cpp_utils::ExtractType(oldState), ::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, oldState, newState);
}
// Autogenerated method: System.Data.DataTable.RecordStateChanged
void System::Data::DataTable::RecordStateChanged(int record1, ::System::Data::DataViewRowState oldState1, ::System::Data::DataViewRowState newState1, int record2, ::System::Data::DataViewRowState oldState2, ::System::Data::DataViewRowState newState2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::RecordStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record1), ::il2cpp_utils::ExtractType(oldState1), ::il2cpp_utils::ExtractType(newState1), ::il2cpp_utils::ExtractType(record2), ::il2cpp_utils::ExtractType(oldState2), ::il2cpp_utils::ExtractType(newState2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record1, oldState1, newState1, record2, oldState2, newState2);
}
// Autogenerated method: System.Data.DataTable.RemoveRecordFromIndexes
::ArrayW<int> System::Data::DataTable::RemoveRecordFromIndexes(::System::Data::DataRow* row, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::RemoveRecordFromIndexes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveRecordFromIndexes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method, row, version);
}
// Autogenerated method: System.Data.DataTable.InsertRecordToIndexes
::ArrayW<int> System::Data::DataTable::InsertRecordToIndexes(::System::Data::DataRow* row, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::InsertRecordToIndexes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertRecordToIndexes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method, row, version);
}
// Autogenerated method: System.Data.DataTable.SilentlySetValue
void System::Data::DataTable::SilentlySetValue(::System::Data::DataRow* dr, ::System::Data::DataColumn* dc, ::System::Data::DataRowVersion version, ::Il2CppObject* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::SilentlySetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SilentlySetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dr), ::il2cpp_utils::ExtractType(dc), ::il2cpp_utils::ExtractType(version), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dr, dc, version, newValue);
}
// Autogenerated method: System.Data.DataTable.RemoveRow
void System::Data::DataTable::RemoveRow(::System::Data::DataRow* row, bool check) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::RemoveRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(check)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, check);
}
// Autogenerated method: System.Data.DataTable.Reset
void System::Data::DataTable::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.ResetIndexes
void System::Data::DataTable::ResetIndexes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::ResetIndexes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetIndexes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.ResetInternalIndexes
void System::Data::DataTable::ResetInternalIndexes(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::ResetInternalIndexes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetInternalIndexes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.DataTable.RollbackRow
void System::Data::DataTable::RollbackRow(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::RollbackRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RollbackRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row);
}
// Autogenerated method: System.Data.DataTable.RaiseRowChanged
::System::Data::DataRowChangeEventArgs* System::Data::DataTable::RaiseRowChanged(::System::Data::DataRowChangeEventArgs* args, ::System::Data::DataRow* eRow, ::System::Data::DataRowAction eAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::RaiseRowChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseRowChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(eRow), ::il2cpp_utils::ExtractType(eAction)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRowChangeEventArgs*, false>(this, ___internal__method, args, eRow, eAction);
}
// Autogenerated method: System.Data.DataTable.RaiseRowChanging
::System::Data::DataRowChangeEventArgs* System::Data::DataTable::RaiseRowChanging(::System::Data::DataRowChangeEventArgs* args, ::System::Data::DataRow* eRow, ::System::Data::DataRowAction eAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::RaiseRowChanging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseRowChanging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(eRow), ::il2cpp_utils::ExtractType(eAction)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRowChangeEventArgs*, false>(this, ___internal__method, args, eRow, eAction);
}
// Autogenerated method: System.Data.DataTable.RaiseRowChanging
::System::Data::DataRowChangeEventArgs* System::Data::DataTable::RaiseRowChanging(::System::Data::DataRowChangeEventArgs* args, ::System::Data::DataRow* eRow, ::System::Data::DataRowAction eAction, bool fireEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::RaiseRowChanging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseRowChanging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(eRow), ::il2cpp_utils::ExtractType(eAction), ::il2cpp_utils::ExtractType(fireEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRowChangeEventArgs*, false>(this, ___internal__method, args, eRow, eAction, fireEvent);
}
// Autogenerated method: System.Data.DataTable.SetNewRecord
void System::Data::DataTable::SetNewRecord(::System::Data::DataRow* row, int proposedRecord, ::System::Data::DataRowAction action, bool isInMerge, bool fireEvent, bool suppressEnsurePropertyChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::SetNewRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNewRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(proposedRecord), ::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(isInMerge), ::il2cpp_utils::ExtractType(fireEvent), ::il2cpp_utils::ExtractType(suppressEnsurePropertyChanged)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, proposedRecord, action, isInMerge, fireEvent, suppressEnsurePropertyChanged);
}
// Autogenerated method: System.Data.DataTable.SetNewRecordWorker
void System::Data::DataTable::SetNewRecordWorker(::System::Data::DataRow* row, int proposedRecord, ::System::Data::DataRowAction action, bool isInMerge, bool suppressEnsurePropertyChanged, int position, bool fireEvent, ByRef<::System::Exception*> deferredException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::SetNewRecordWorker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNewRecordWorker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(proposedRecord), ::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(isInMerge), ::il2cpp_utils::ExtractType(suppressEnsurePropertyChanged), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(fireEvent), ::il2cpp_utils::ExtractIndependentType<::System::Exception*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, proposedRecord, action, isInMerge, suppressEnsurePropertyChanged, position, fireEvent, byref(deferredException));
}
// Autogenerated method: System.Data.DataTable.SetOldRecord
void System::Data::DataTable::SetOldRecord(::System::Data::DataRow* row, int proposedRecord) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::SetOldRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOldRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(proposedRecord)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, proposedRecord);
}
// Autogenerated method: System.Data.DataTable.RestoreShadowIndexes
void System::Data::DataTable::RestoreShadowIndexes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::RestoreShadowIndexes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestoreShadowIndexes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.SetShadowIndexes
void System::Data::DataTable::SetShadowIndexes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::SetShadowIndexes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShadowIndexes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.ShadowIndexCopy
void System::Data::DataTable::ShadowIndexCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::ShadowIndexCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShadowIndexCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.UpdatingCurrent
bool System::Data::DataTable::UpdatingCurrent(::System::Data::DataRow* row, ::System::Data::DataRowAction action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::UpdatingCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatingCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, row, action);
}
// Autogenerated method: System.Data.DataTable.AddUniqueKey
::System::Data::DataColumn* System::Data::DataTable::AddUniqueKey(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::AddUniqueKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUniqueKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataColumn*, false>(this, ___internal__method, position);
}
// Autogenerated method: System.Data.DataTable.AddUniqueKey
::System::Data::DataColumn* System::Data::DataTable::AddUniqueKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::AddUniqueKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUniqueKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataColumn*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.AddForeignKey
::System::Data::DataColumn* System::Data::DataTable::AddForeignKey(::System::Data::DataColumn* parentKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::AddForeignKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddForeignKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataColumn*, false>(this, ___internal__method, parentKey);
}
// Autogenerated method: System.Data.DataTable.UpdatePropertyDescriptorCollectionCache
void System::Data::DataTable::UpdatePropertyDescriptorCollectionCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::UpdatePropertyDescriptorCollectionCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePropertyDescriptorCollectionCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.GetPropertyDescriptorCollection
::System::ComponentModel::PropertyDescriptorCollection* System::Data::DataTable::GetPropertyDescriptorCollection(::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::GetPropertyDescriptorCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyDescriptorCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, attributes);
}
// Autogenerated method: System.Data.DataTable.Merge
void System::Data::DataTable::Merge(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::Merge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Merge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.DataTable.Merge
void System::Data::DataTable::Merge(::System::Data::DataTable* table, bool preserveChanges, ::System::Data::MissingSchemaAction missingSchemaAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::Merge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Merge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(preserveChanges), ::il2cpp_utils::ExtractType(missingSchemaAction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table, preserveChanges, missingSchemaAction);
}
// Autogenerated method: System.Data.DataTable.WriteXml
void System::Data::DataTable::WriteXml(::System::Xml::XmlWriter* writer, ::System::Data::XmlWriteMode mode, bool writeHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::WriteXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(writeHierarchy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, mode, writeHierarchy);
}
// Autogenerated method: System.Data.DataTable.CheckForClosureOnExpressions
bool System::Data::DataTable::CheckForClosureOnExpressions(::System::Data::DataTable* dt, bool writeHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::CheckForClosureOnExpressions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForClosureOnExpressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt), ::il2cpp_utils::ExtractType(writeHierarchy)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, dt, writeHierarchy);
}
// Autogenerated method: System.Data.DataTable.CheckForClosureOnExpressionTables
bool System::Data::DataTable::CheckForClosureOnExpressionTables(::System::Collections::Generic::List_1<::System::Data::DataTable*>* tableList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::CheckForClosureOnExpressionTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForClosureOnExpressionTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableList)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tableList);
}
// Autogenerated method: System.Data.DataTable.WriteXmlSchema
void System::Data::DataTable::WriteXmlSchema(::System::Xml::XmlWriter* writer, bool writeHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::WriteXmlSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(writeHierarchy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, writeHierarchy);
}
// Autogenerated method: System.Data.DataTable.RestoreConstraint
void System::Data::DataTable::RestoreConstraint(bool originalEnforceConstraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::RestoreConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestoreConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalEnforceConstraint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, originalEnforceConstraint);
}
// Autogenerated method: System.Data.DataTable.IsEmptyXml
bool System::Data::DataTable::IsEmptyXml(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::IsEmptyXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmptyXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.DataTable.ReadXml
::System::Data::XmlReadMode System::Data::DataTable::ReadXml(::System::Xml::XmlReader* reader, ::System::Data::XmlReadMode mode, bool denyResolving) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::ReadXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(denyResolving)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::XmlReadMode, false>(this, ___internal__method, reader, mode, denyResolving);
}
// Autogenerated method: System.Data.DataTable.ReadEndElement
void System::Data::DataTable::ReadEndElement(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::ReadEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.DataTable.ReadXDRSchema
void System::Data::DataTable::ReadXDRSchema(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::ReadXDRSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadXDRSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.DataTable.MoveToElement
bool System::Data::DataTable::MoveToElement(::System::Xml::XmlReader* reader, int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::MoveToElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(depth)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reader, depth);
}
// Autogenerated method: System.Data.DataTable.ReadXmlDiffgram
void System::Data::DataTable::ReadXmlDiffgram(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::ReadXmlDiffgram");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadXmlDiffgram", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.DataTable.ReadXSDSchema
void System::Data::DataTable::ReadXSDSchema(::System::Xml::XmlReader* reader, bool denyResolving) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::ReadXSDSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadXSDSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(denyResolving)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, denyResolving);
}
// Autogenerated method: System.Data.DataTable.ReadXmlSchema
void System::Data::DataTable::ReadXmlSchema(::System::Xml::XmlReader* reader, bool denyResolving) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::ReadXmlSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadXmlSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(denyResolving)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, denyResolving);
}
// Autogenerated method: System.Data.DataTable.CreateTableList
void System::Data::DataTable::CreateTableList(::System::Data::DataTable* currentTable, ::System::Collections::Generic::List_1<::System::Data::DataTable*>* tableList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::CreateTableList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTableList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentTable), ::il2cpp_utils::ExtractType(tableList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentTable, tableList);
}
// Autogenerated method: System.Data.DataTable.CreateRelationList
void System::Data::DataTable::CreateRelationList(::System::Collections::Generic::List_1<::System::Data::DataTable*>* tableList, ::System::Collections::Generic::List_1<::System::Data::DataRelation*>* relationList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::CreateRelationList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRelationList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableList), ::il2cpp_utils::ExtractType(relationList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tableList, relationList);
}
// Autogenerated method: System.Data.DataTable.GetDataTableSchema
::System::Xml::Schema::XmlSchemaComplexType* System::Data::DataTable::GetDataTableSchema(::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::GetDataTableSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "DataTable", "GetDataTableSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaComplexType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaSet);
}
// Autogenerated method: System.Data.DataTable.System.Xml.Serialization.IXmlSerializable.GetSchema
::System::Xml::Schema::XmlSchema* System::Data::DataTable::System_Xml_Serialization_IXmlSerializable_GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::System.Xml.Serialization.IXmlSerializable.GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.GetSchema
::System::Xml::Schema::XmlSchema* System::Data::DataTable::GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.System.Xml.Serialization.IXmlSerializable.ReadXml
void System::Data::DataTable::System_Xml_Serialization_IXmlSerializable_ReadXml(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::System.Xml.Serialization.IXmlSerializable.ReadXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.DataTable.System.Xml.Serialization.IXmlSerializable.WriteXml
void System::Data::DataTable::System_Xml_Serialization_IXmlSerializable_WriteXml(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::System.Xml.Serialization.IXmlSerializable.WriteXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Data.DataTable.ReadXmlSerializable
void System::Data::DataTable::ReadXmlSerializable(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::ReadXmlSerializable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTable*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.DataTable.AddDependentColumn
void System::Data::DataTable::AddDependentColumn(::System::Data::DataColumn* expressionColumn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::AddDependentColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDependentColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expressionColumn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, expressionColumn);
}
// Autogenerated method: System.Data.DataTable.RemoveDependentColumn
void System::Data::DataTable::RemoveDependentColumn(::System::Data::DataColumn* expressionColumn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::RemoveDependentColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveDependentColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expressionColumn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, expressionColumn);
}
// Autogenerated method: System.Data.DataTable.EvaluateExpressions
void System::Data::DataTable::EvaluateExpressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::EvaluateExpressions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateExpressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.EvaluateExpressions
void System::Data::DataTable::EvaluateExpressions(::System::Data::DataRow* row, ::System::Data::DataRowAction action, ::System::Collections::Generic::List_1<::System::Data::DataRow*>* cachedRows) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::EvaluateExpressions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateExpressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(cachedRows)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, action, cachedRows);
}
// Autogenerated method: System.Data.DataTable.EvaluateExpressions
void System::Data::DataTable::EvaluateExpressions(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::EvaluateExpressions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateExpressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.DataTable.EvaluateDependentExpressions
void System::Data::DataTable::EvaluateDependentExpressions(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::EvaluateDependentExpressions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateDependentExpressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.DataTable.EvaluateDependentExpressions
void System::Data::DataTable::EvaluateDependentExpressions(::System::Collections::Generic::List_1<::System::Data::DataColumn*>* columns, ::System::Data::DataRow* row, ::System::Data::DataRowVersion version, ::System::Collections::Generic::List_1<::System::Data::DataRow*>* cachedRows) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::EvaluateDependentExpressions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateDependentExpressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(columns), ::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(version), ::il2cpp_utils::ExtractType(cachedRows)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, columns, row, version, cachedRows);
}
// Autogenerated method: System.Data.DataTable.get_Site
::System::ComponentModel::ISite* System::Data::DataTable::get_Site() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::get_Site");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ISite*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTable.ToString
::StringW System::Data::DataTable::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataTable/System.Data.RowDiffIdUsageSection
#include "System/Data/DataTable_RowDiffIdUsageSection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.DataTable _targetTable
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::DataTable::RowDiffIdUsageSection::dyn__targetTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::RowDiffIdUsageSection::dyn__targetTable");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetTable"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataTable/System.Data.RowDiffIdUsageSection.Prepare
void System::Data::DataTable::RowDiffIdUsageSection::Prepare(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::RowDiffIdUsageSection::Prepare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Prepare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataTable/System.Data.DSRowDiffIdUsageSection
#include "System/Data/DataTable_DSRowDiffIdUsageSection.hpp"
// Including type: System.Data.DataSet
#include "System/Data/DataSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.DataSet _targetDS
[[deprecated("Use field access instead!")]] ::System::Data::DataSet*& System::Data::DataTable::DSRowDiffIdUsageSection::dyn__targetDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::DSRowDiffIdUsageSection::dyn__targetDS");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetDS"))->offset;
  return *reinterpret_cast<::System::Data::DataSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataTable/System.Data.DSRowDiffIdUsageSection.Prepare
void System::Data::DataTable::DSRowDiffIdUsageSection::Prepare(::System::Data::DataSet* ds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTable::DSRowDiffIdUsageSection::Prepare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Prepare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ds);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataTableClearEventArgs
#include "System/Data/DataTableClearEventArgs.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataTable <Table>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::DataTableClearEventArgs::dyn_$Table$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableClearEventArgs::dyn_$Table$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Table>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.DataTableClearEventHandler
#include "System/Data/DataTableClearEventHandler.hpp"
// Including type: System.Data.DataTableClearEventArgs
#include "System/Data/DataTableClearEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.DataTableClearEventHandler.Invoke
void System::Data::DataTableClearEventHandler::Invoke(::Il2CppObject* sender, ::System::Data::DataTableClearEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableClearEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTableClearEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Data.DataTableClearEventHandler.BeginInvoke
::System::IAsyncResult* System::Data::DataTableClearEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::Data::DataTableClearEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableClearEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTableClearEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.Data.DataTableClearEventHandler.EndInvoke
void System::Data::DataTableClearEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableClearEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTableClearEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataTableCollection
#include "System/Data/DataTableCollection.hpp"
// Including type: System.Data.DataSet
#include "System/Data/DataSet.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.ComponentModel.CollectionChangeEventHandler
#include "System/ComponentModel/CollectionChangeEventHandler.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.ComponentModel.CollectionChangeEventArgs
#include "System/ComponentModel/CollectionChangeEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 s_objectTypeCount
int System::Data::DataTableCollection::_get_s_objectTypeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::_get_s_objectTypeCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data", "DataTableCollection", "s_objectTypeCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_objectTypeCount
void System::Data::DataTableCollection::_set_s_objectTypeCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::_set_s_objectTypeCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataTableCollection", "s_objectTypeCount", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataSet _dataSet
[[deprecated("Use field access instead!")]] ::System::Data::DataSet*& System::Data::DataTableCollection::dyn__dataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::dyn__dataSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSet"))->offset;
  return *reinterpret_cast<::System::Data::DataSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.ArrayList _list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Data::DataTableCollection::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _defaultNameIndex
[[deprecated("Use field access instead!")]] int& System::Data::DataTableCollection::dyn__defaultNameIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::dyn__defaultNameIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultNameIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataTable[] _delayedAddRangeTables
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::DataTable*>& System::Data::DataTableCollection::dyn__delayedAddRangeTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::dyn__delayedAddRangeTables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delayedAddRangeTables"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::DataTable*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.CollectionChangeEventHandler _onCollectionChangedDelegate
[[deprecated("Use field access instead!")]] ::System::ComponentModel::CollectionChangeEventHandler*& System::Data::DataTableCollection::dyn__onCollectionChangedDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::dyn__onCollectionChangedDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onCollectionChangedDelegate"))->offset;
  return *reinterpret_cast<::System::ComponentModel::CollectionChangeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.CollectionChangeEventHandler _onCollectionChangingDelegate
[[deprecated("Use field access instead!")]] ::System::ComponentModel::CollectionChangeEventHandler*& System::Data::DataTableCollection::dyn__onCollectionChangingDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::dyn__onCollectionChangingDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onCollectionChangingDelegate"))->offset;
  return *reinterpret_cast<::System::ComponentModel::CollectionChangeEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _objectID
[[deprecated("Use field access instead!")]] int& System::Data::DataTableCollection::dyn__objectID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::dyn__objectID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataTableCollection.get_ObjectID
int System::Data::DataTableCollection::get_ObjectID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::get_ObjectID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTableCollection.get_Item
::System::Data::DataTable* System::Data::DataTableCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Data.DataTableCollection.get_Item
::System::Data::DataTable* System::Data::DataTableCollection::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Data.DataTableCollection.get_Item
::System::Data::DataTable* System::Data::DataTableCollection::get_Item(::StringW name, ::StringW tableNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(tableNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method, name, tableNamespace);
}
// Autogenerated method: System.Data.DataTableCollection.GetTable
::System::Data::DataTable* System::Data::DataTableCollection::GetTable(::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::GetTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method, name, ns);
}
// Autogenerated method: System.Data.DataTableCollection.GetTableSmart
::System::Data::DataTable* System::Data::DataTableCollection::GetTableSmart(::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::GetTableSmart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTableSmart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method, name, ns);
}
// Autogenerated method: System.Data.DataTableCollection.Add
void System::Data::DataTableCollection::Add(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.DataTableCollection.ArrayAdd
void System::Data::DataTableCollection::ArrayAdd(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::ArrayAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ArrayAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.DataTableCollection.AssignName
::StringW System::Data::DataTableCollection::AssignName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::AssignName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTableCollection.BaseAdd
void System::Data::DataTableCollection::BaseAdd(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::BaseAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.DataTableCollection.BaseGroupSwitch
void System::Data::DataTableCollection::BaseGroupSwitch(::ArrayW<::System::Data::DataTable*> oldArray, int oldLength, ::ArrayW<::System::Data::DataTable*> newArray, int newLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::BaseGroupSwitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseGroupSwitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldArray), ::il2cpp_utils::ExtractType(oldLength), ::il2cpp_utils::ExtractType(newArray), ::il2cpp_utils::ExtractType(newLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldArray, oldLength, newArray, newLength);
}
// Autogenerated method: System.Data.DataTableCollection.BaseRemove
void System::Data::DataTableCollection::BaseRemove(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::BaseRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.DataTableCollection.CanRemove
bool System::Data::DataTableCollection::CanRemove(::System::Data::DataTable* table, bool fThrowException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::CanRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(fThrowException)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, table, fThrowException);
}
// Autogenerated method: System.Data.DataTableCollection.Clear
void System::Data::DataTableCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTableCollection.Contains
bool System::Data::DataTableCollection::Contains(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Data.DataTableCollection.Contains
bool System::Data::DataTableCollection::Contains(::StringW name, ::StringW tableNamespace, bool checkProperty, bool caseSensitive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(tableNamespace), ::il2cpp_utils::ExtractType(checkProperty), ::il2cpp_utils::ExtractType(caseSensitive)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, tableNamespace, checkProperty, caseSensitive);
}
// Autogenerated method: System.Data.DataTableCollection.Contains
bool System::Data::DataTableCollection::Contains(::StringW name, bool caseSensitive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(caseSensitive)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name, caseSensitive);
}
// Autogenerated method: System.Data.DataTableCollection.IndexOf
int System::Data::DataTableCollection::IndexOf(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.DataTableCollection.IndexOf
int System::Data::DataTableCollection::IndexOf(::StringW tableName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableName)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, tableName);
}
// Autogenerated method: System.Data.DataTableCollection.IndexOf
int System::Data::DataTableCollection::IndexOf(::StringW tableName, ::StringW tableNamespace, bool chekforNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableName), ::il2cpp_utils::ExtractType(tableNamespace), ::il2cpp_utils::ExtractType(chekforNull)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, tableName, tableNamespace, chekforNull);
}
// Autogenerated method: System.Data.DataTableCollection.ReplaceFromInference
void System::Data::DataTableCollection::ReplaceFromInference(::System::Collections::Generic::List_1<::System::Data::DataTable*>* tableList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::ReplaceFromInference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceFromInference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tableList);
}
// Autogenerated method: System.Data.DataTableCollection.InternalIndexOf
int System::Data::DataTableCollection::InternalIndexOf(::StringW tableName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::InternalIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableName)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, tableName);
}
// Autogenerated method: System.Data.DataTableCollection.InternalIndexOf
int System::Data::DataTableCollection::InternalIndexOf(::StringW tableName, ::StringW tableNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::InternalIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableName), ::il2cpp_utils::ExtractType(tableNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, tableName, tableNamespace);
}
// Autogenerated method: System.Data.DataTableCollection.MakeName
::StringW System::Data::DataTableCollection::MakeName(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::MakeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Data.DataTableCollection.OnCollectionChanged
void System::Data::DataTableCollection::OnCollectionChanged(::System::ComponentModel::CollectionChangeEventArgs* ccevent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::OnCollectionChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollectionChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ccevent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ccevent);
}
// Autogenerated method: System.Data.DataTableCollection.OnCollectionChanging
void System::Data::DataTableCollection::OnCollectionChanging(::System::ComponentModel::CollectionChangeEventArgs* ccevent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::OnCollectionChanging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollectionChanging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ccevent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ccevent);
}
// Autogenerated method: System.Data.DataTableCollection.RegisterName
void System::Data::DataTableCollection::RegisterName(::StringW name, ::StringW tbNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::RegisterName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(tbNamespace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, tbNamespace);
}
// Autogenerated method: System.Data.DataTableCollection.Remove
void System::Data::DataTableCollection::Remove(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.DataTableCollection.UnregisterName
void System::Data::DataTableCollection::UnregisterName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::UnregisterName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Data.DataTableCollection.get_List
::System::Collections::ArrayList* System::Data::DataTableCollection::get_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableCollection::get_List");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::InternalDataCollectionBase*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataTableNewRowEventArgs
#include "System/Data/DataTableNewRowEventArgs.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataRow <Row>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Data::DataRow*& System::Data::DataTableNewRowEventArgs::dyn_$Row$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableNewRowEventArgs::dyn_$Row$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Row>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Data::DataRow**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.DataTableNewRowEventHandler
#include "System/Data/DataTableNewRowEventHandler.hpp"
// Including type: System.Data.DataTableNewRowEventArgs
#include "System/Data/DataTableNewRowEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.DataTableNewRowEventHandler.Invoke
void System::Data::DataTableNewRowEventHandler::Invoke(::Il2CppObject* sender, ::System::Data::DataTableNewRowEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableNewRowEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTableNewRowEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Data.DataTableNewRowEventHandler.BeginInvoke
::System::IAsyncResult* System::Data::DataTableNewRowEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::Data::DataTableNewRowEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableNewRowEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTableNewRowEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.Data.DataTableNewRowEventHandler.EndInvoke
void System::Data::DataTableNewRowEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTableNewRowEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataTableNewRowEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataTableTypeConverter
#include "System/Data/DataTableTypeConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.DataView
#include "System/Data/DataView.hpp"
// Including type: System.Data.DataView/System.Data.DataRowReferenceComparer
#include "System/Data/DataView_DataRowReferenceComparer.hpp"
// Including type: System.Data.DataViewManager
#include "System/Data/DataViewManager.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Data.Index
#include "System/Data/Index.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.IFilter
#include "System/Data/IFilter.hpp"
// Including type: System.ComponentModel.ListChangedEventArgs
#include "System/ComponentModel/ListChangedEventArgs.hpp"
// Including type: System.ComponentModel.ListChangedEventHandler
#include "System/ComponentModel/ListChangedEventHandler.hpp"
// Including type: System.Data.DataRowView
#include "System/Data/DataRowView.hpp"
// Including type: System.Data.DataViewListener
#include "System/Data/DataViewListener.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.ComponentModel.ListChangedType
#include "System/ComponentModel/ListChangedType.hpp"
// Including type: System.ComponentModel.CollectionChangeEventArgs
#include "System/ComponentModel/CollectionChangeEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.ComponentModel.ListChangedEventArgs s_resetEventArgs
::System::ComponentModel::ListChangedEventArgs* System::Data::DataView::_get_s_resetEventArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::_get_s_resetEventArgs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedEventArgs*>("System.Data", "DataView", "s_resetEventArgs"));
}
// Autogenerated static field setter
// Set static field: static System.ComponentModel.ListChangedEventArgs s_resetEventArgs
void System::Data::DataView::_set_s_resetEventArgs(::System::ComponentModel::ListChangedEventArgs* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::_set_s_resetEventArgs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataView", "s_resetEventArgs", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_objectTypeCount
int System::Data::DataView::_get_s_objectTypeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::_get_s_objectTypeCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data", "DataView", "s_objectTypeCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_objectTypeCount
void System::Data::DataView::_set_s_objectTypeCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::_set_s_objectTypeCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataView", "s_objectTypeCount", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataViewManager _dataViewManager
[[deprecated("Use field access instead!")]] ::System::Data::DataViewManager*& System::Data::DataView::dyn__dataViewManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__dataViewManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataViewManager"))->offset;
  return *reinterpret_cast<::System::Data::DataViewManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataTable _table
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::DataView::dyn__table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_table"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _locked
[[deprecated("Use field access instead!")]] bool& System::Data::DataView::dyn__locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__locked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_locked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.Index _index
[[deprecated("Use field access instead!")]] ::System::Data::Index*& System::Data::DataView::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<::System::Data::Index**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Data.Index> _findIndexes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Data::Index*>*& System::Data::DataView::dyn__findIndexes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__findIndexes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_findIndexes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Data::Index*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _sort
[[deprecated("Use field access instead!")]] ::StringW& System::Data::DataView::dyn__sort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__sort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sort"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Comparison`1<System.Data.DataRow> _comparison
[[deprecated("Use field access instead!")]] ::System::Comparison_1<::System::Data::DataRow*>*& System::Data::DataView::dyn__comparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__comparison");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comparison"))->offset;
  return *reinterpret_cast<::System::Comparison_1<::System::Data::DataRow*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.IFilter _rowFilter
[[deprecated("Use field access instead!")]] ::System::Data::IFilter*& System::Data::DataView::dyn__rowFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__rowFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowFilter"))->offset;
  return *reinterpret_cast<::System::Data::IFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataViewRowState _recordStates
[[deprecated("Use field access instead!")]] ::System::Data::DataViewRowState& System::Data::DataView::dyn__recordStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__recordStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordStates"))->offset;
  return *reinterpret_cast<::System::Data::DataViewRowState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _shouldOpen
[[deprecated("Use field access instead!")]] bool& System::Data::DataView::dyn__shouldOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__shouldOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shouldOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _open
[[deprecated("Use field access instead!")]] bool& System::Data::DataView::dyn__open() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__open");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_open"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _allowNew
[[deprecated("Use field access instead!")]] bool& System::Data::DataView::dyn__allowNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__allowNew");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowNew"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _allowEdit
[[deprecated("Use field access instead!")]] bool& System::Data::DataView::dyn__allowEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__allowEdit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowEdit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _allowDelete
[[deprecated("Use field access instead!")]] bool& System::Data::DataView::dyn__allowDelete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__allowDelete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowDelete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _applyDefaultSort
[[deprecated("Use field access instead!")]] bool& System::Data::DataView::dyn__applyDefaultSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__applyDefaultSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_applyDefaultSort"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.DataRow _addNewRow
[[deprecated("Use field access instead!")]] ::System::Data::DataRow*& System::Data::DataView::dyn__addNewRow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__addNewRow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_addNewRow"))->offset;
  return *reinterpret_cast<::System::Data::DataRow**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ListChangedEventArgs _addNewMoved
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ListChangedEventArgs*& System::Data::DataView::dyn__addNewMoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__addNewMoved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_addNewMoved"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ListChangedEventArgs**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ListChangedEventHandler _onListChanged
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ListChangedEventHandler*& System::Data::DataView::dyn__onListChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__onListChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onListChanged"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ListChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataViewRowState _delayedRecordStates
[[deprecated("Use field access instead!")]] ::System::Data::DataViewRowState& System::Data::DataView::dyn__delayedRecordStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__delayedRecordStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delayedRecordStates"))->offset;
  return *reinterpret_cast<::System::Data::DataViewRowState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fEndInitInProgress
[[deprecated("Use field access instead!")]] bool& System::Data::DataView::dyn__fEndInitInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__fEndInitInProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fEndInitInProgress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Data.DataRow,System.Data.DataRowView> _rowViewCache
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Data::DataRow*, ::System::Data::DataRowView*>*& System::Data::DataView::dyn__rowViewCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__rowViewCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowViewCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Data::DataRow*, ::System::Data::DataRowView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Data.DataRow,System.Data.DataRowView> _rowViewBuffer
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Data::DataRow*, ::System::Data::DataRowView*>*& System::Data::DataView::dyn__rowViewBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__rowViewBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowViewBuffer"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Data::DataRow*, ::System::Data::DataRowView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataViewListener _dvListener
[[deprecated("Use field access instead!")]] ::System::Data::DataViewListener*& System::Data::DataView::dyn__dvListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__dvListener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dvListener"))->offset;
  return *reinterpret_cast<::System::Data::DataViewListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _objectID
[[deprecated("Use field access instead!")]] int& System::Data::DataView::dyn__objectID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::dyn__objectID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataView.get_AllowDelete
bool System::Data::DataView::get_AllowDelete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::get_AllowDelete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowDelete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.get_AllowNew
bool System::Data::DataView::get_AllowNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::get_AllowNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.get_Count
int System::Data::DataView::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 22));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.get_CountFromIndex
int System::Data::DataView::get_CountFromIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::get_CountFromIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CountFromIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.get_DataViewManager
::System::Data::DataViewManager* System::Data::DataView::get_DataViewManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::get_DataViewManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataViewManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataViewManager*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.get_IsOpen
bool System::Data::DataView::get_IsOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::get_IsOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.get_RowStateFilter
::System::Data::DataViewRowState System::Data::DataView::get_RowStateFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::get_RowStateFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RowStateFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataViewRowState, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.get_Sort
::StringW System::Data::DataView::get_Sort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::get_Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.get_SortComparison
::System::Comparison_1<::System::Data::DataRow*>* System::Data::DataView::get_SortComparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::get_SortComparison");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SortComparison", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Comparison_1<::System::Data::DataRow*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Data::DataView::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.get_Table
::System::Data::DataTable* System::Data::DataView::get_Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::get_Table");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Table", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.System.Collections.IList.get_Item
::Il2CppObject* System::Data::DataView::System_Collections_IList_get_Item(int recordIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordIndex);
}
// Autogenerated method: System.Data.DataView.System.Collections.IList.set_Item
void System::Data::DataView::System_Collections_IList_set_Item(int recordIndex, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordIndex, value);
}
// Autogenerated method: System.Data.DataView.get_Item
::System::Data::DataRowView* System::Data::DataView::get_Item(int recordIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRowView*, false>(this, ___internal__method, recordIndex);
}
// Autogenerated method: System.Data.DataView.System.Collections.IList.get_IsReadOnly
bool System::Data::DataView::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.System.Collections.IList.get_IsFixedSize
bool System::Data::DataView::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 16));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.get_ObjectID
int System::Data::DataView::get_ObjectID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::get_ObjectID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView..cctor
void System::Data::DataView::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "DataView", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.DataView.AddNew
::System::Data::DataRowView* System::Data::DataView::AddNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::AddNew");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRowView*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.CheckOpen
void System::Data::DataView::CheckOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::CheckOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.Close
void System::Data::DataView::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.CopyTo
void System::Data::DataView::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Data.DataView.CopyTo
void System::Data::DataView::CopyTo(::ArrayW<::System::Data::DataRowView*> array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Data.DataView.Delete
void System::Data::DataView::Delete(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Data.DataView.Delete
void System::Data::DataView::Delete(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row);
}
// Autogenerated method: System.Data.DataView.FinishAddNew
void System::Data::DataView::FinishAddNew(bool success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::FinishAddNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishAddNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, success);
}
// Autogenerated method: System.Data.DataView.GetEnumerator
::System::Collections::IEnumerator* System::Data::DataView::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.System.Collections.IList.Add
int System::Data::DataView::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataView.System.Collections.IList.Clear
void System::Data::DataView::System_Collections_IList_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::System.Collections.IList.Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.System.Collections.IList.Contains
bool System::Data::DataView::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataView.System.Collections.IList.IndexOf
int System::Data::DataView::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataView.IndexOf
int System::Data::DataView::IndexOf(::System::Data::DataRowView* rowview) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rowview)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, rowview);
}
// Autogenerated method: System.Data.DataView.IndexOfDataRowView
int System::Data::DataView::IndexOfDataRowView(::System::Data::DataRowView* rowview) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::IndexOfDataRowView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfDataRowView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rowview)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, rowview);
}
// Autogenerated method: System.Data.DataView.System.Collections.IList.Insert
void System::Data::DataView::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Data.DataView.System.Collections.IList.Remove
void System::Data::DataView::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.DataView.System.Collections.IList.RemoveAt
void System::Data::DataView::System_Collections_IList_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::System.Collections.IList.RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Data.DataView.GetFilter
::System::Data::IFilter* System::Data::DataView::GetFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::GetFilter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::IFilter*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.GetRecord
int System::Data::DataView::GetRecord(int recordIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::GetRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordIndex);
}
// Autogenerated method: System.Data.DataView.GetRow
::System::Data::DataRow* System::Data::DataView::GetRow(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::GetRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Data.DataView.GetRowView
::System::Data::DataRowView* System::Data::DataView::GetRowView(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::GetRowView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRowView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRowView*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.DataView.GetRowView
::System::Data::DataRowView* System::Data::DataView::GetRowView(::System::Data::DataRow* dr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::GetRowView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRowView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRowView*, false>(this, ___internal__method, dr);
}
// Autogenerated method: System.Data.DataView.IndexListChanged
void System::Data::DataView::IndexListChanged(::Il2CppObject* sender, ::System::ComponentModel::ListChangedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::IndexListChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Data.DataView.IndexListChangedInternal
void System::Data::DataView::IndexListChangedInternal(::System::ComponentModel::ListChangedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::IndexListChangedInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexListChangedInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Data.DataView.MaintainDataView
void System::Data::DataView::MaintainDataView(::System::ComponentModel::ListChangedType changedType, ::System::Data::DataRow* row, bool trackAddRemove) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::MaintainDataView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaintainDataView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(changedType), ::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(trackAddRemove)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, changedType, row, trackAddRemove);
}
// Autogenerated method: System.Data.DataView.OnListChanged
void System::Data::DataView::OnListChanged(::System::ComponentModel::ListChangedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::OnListChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Data.DataView.Reset
void System::Data::DataView::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.ResetRowViewCache
void System::Data::DataView::ResetRowViewCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::ResetRowViewCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetRowViewCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.SetDataViewManager
void System::Data::DataView::SetDataViewManager(::System::Data::DataViewManager* dataViewManager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::SetDataViewManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataViewManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataViewManager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataViewManager);
}
// Autogenerated method: System.Data.DataView.SetIndex
void System::Data::DataView::SetIndex(::StringW newSort, ::System::Data::DataViewRowState newRowStates, ::System::Data::IFilter* newRowFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::SetIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newSort, newRowStates, newRowFilter);
}
// Autogenerated method: System.Data.DataView.SetIndex2
void System::Data::DataView::SetIndex2(::StringW newSort, ::System::Data::DataViewRowState newRowStates, ::System::Data::IFilter* newRowFilter, bool fireEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::SetIndex2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIndex2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newSort), ::il2cpp_utils::ExtractType(newRowStates), ::il2cpp_utils::ExtractType(newRowFilter), ::il2cpp_utils::ExtractType(fireEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newSort, newRowStates, newRowFilter, fireEvent);
}
// Autogenerated method: System.Data.DataView.UpdateIndex
void System::Data::DataView::UpdateIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::UpdateIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataView.UpdateIndex
void System::Data::DataView::UpdateIndex(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::UpdateIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: System.Data.DataView.UpdateIndex
void System::Data::DataView::UpdateIndex(bool force, bool fireEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::UpdateIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force), ::il2cpp_utils::ExtractType(fireEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force, fireEvent);
}
// Autogenerated method: System.Data.DataView.ChildRelationCollectionChanged
void System::Data::DataView::ChildRelationCollectionChanged(::Il2CppObject* sender, ::System::ComponentModel::CollectionChangeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::ChildRelationCollectionChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChildRelationCollectionChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Data.DataView.ParentRelationCollectionChanged
void System::Data::DataView::ParentRelationCollectionChanged(::Il2CppObject* sender, ::System::ComponentModel::CollectionChangeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::ParentRelationCollectionChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParentRelationCollectionChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Data.DataView.ColumnCollectionChanged
void System::Data::DataView::ColumnCollectionChanged(::Il2CppObject* sender, ::System::ComponentModel::CollectionChangeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::ColumnCollectionChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Data.DataView.ColumnCollectionChangedInternal
void System::Data::DataView::ColumnCollectionChangedInternal(::Il2CppObject* sender, ::System::ComponentModel::CollectionChangeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::ColumnCollectionChangedInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColumnCollectionChangedInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Data.DataView.Dispose
void System::Data::DataView::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::MarshalByValueComponent*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataView/System.Data.DataRowReferenceComparer
#include "System/Data/DataView_DataRowReferenceComparer.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Data.DataView/System.Data.DataRowReferenceComparer s_default
::System::Data::DataView::DataRowReferenceComparer* System::Data::DataView::DataRowReferenceComparer::_get_s_default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::DataRowReferenceComparer::_get_s_default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataView::DataRowReferenceComparer*>("System.Data", "DataView/DataRowReferenceComparer", "s_default"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Data.DataView/System.Data.DataRowReferenceComparer s_default
void System::Data::DataView::DataRowReferenceComparer::_set_s_default(::System::Data::DataView::DataRowReferenceComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::DataRowReferenceComparer::_set_s_default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataView/DataRowReferenceComparer", "s_default", value));
}
// Autogenerated method: System.Data.DataView/System.Data.DataRowReferenceComparer..cctor
void System::Data::DataView::DataRowReferenceComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::DataRowReferenceComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "DataView/DataRowReferenceComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.DataView/System.Data.DataRowReferenceComparer.Equals
bool System::Data::DataView::DataRowReferenceComparer::Equals(::System::Data::DataRow* x, ::System::Data::DataRow* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::DataRowReferenceComparer::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView::DataRowReferenceComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Data.DataView/System.Data.DataRowReferenceComparer.GetHashCode
int System::Data::DataView::DataRowReferenceComparer::GetHashCode(::System::Data::DataRow* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataView::DataRowReferenceComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView::DataRowReferenceComparer*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.DataViewListener
#include "System/Data/DataViewListener.hpp"
// Including type: System.WeakReference
#include "System/WeakReference.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Data.Index
#include "System/Data/Index.hpp"
// Including type: System.Data.DataView
#include "System/Data/DataView.hpp"
// Including type: System.ComponentModel.CollectionChangeEventArgs
#include "System/ComponentModel/CollectionChangeEventArgs.hpp"
// Including type: System.ComponentModel.ListChangedType
#include "System/ComponentModel/ListChangedType.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.ComponentModel.ListChangedEventArgs
#include "System/ComponentModel/ListChangedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.WeakReference _dvWeak
[[deprecated("Use field access instead!")]] ::System::WeakReference*& System::Data::DataViewListener::dyn__dvWeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewListener::dyn__dvWeak");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dvWeak"))->offset;
  return *reinterpret_cast<::System::WeakReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataTable _table
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::DataViewListener::dyn__table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewListener::dyn__table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_table"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.Index _index
[[deprecated("Use field access instead!")]] ::System::Data::Index*& System::Data::DataViewListener::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewListener::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<::System::Data::Index**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _objectID
[[deprecated("Use field access instead!")]] int& System::Data::DataViewListener::dyn__objectID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewListener::dyn__objectID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataViewListener.ChildRelationCollectionChanged
void System::Data::DataViewListener::ChildRelationCollectionChanged(::Il2CppObject* sender, ::System::ComponentModel::CollectionChangeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewListener::ChildRelationCollectionChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChildRelationCollectionChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Data.DataViewListener.ParentRelationCollectionChanged
void System::Data::DataViewListener::ParentRelationCollectionChanged(::Il2CppObject* sender, ::System::ComponentModel::CollectionChangeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewListener::ParentRelationCollectionChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParentRelationCollectionChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Data.DataViewListener.ColumnCollectionChanged
void System::Data::DataViewListener::ColumnCollectionChanged(::Il2CppObject* sender, ::System::ComponentModel::CollectionChangeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewListener::ColumnCollectionChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColumnCollectionChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Data.DataViewListener.MaintainDataView
void System::Data::DataViewListener::MaintainDataView(::System::ComponentModel::ListChangedType changedType, ::System::Data::DataRow* row, bool trackAddRemove) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewListener::MaintainDataView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaintainDataView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(changedType), ::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(trackAddRemove)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, changedType, row, trackAddRemove);
}
// Autogenerated method: System.Data.DataViewListener.IndexListChanged
void System::Data::DataViewListener::IndexListChanged(::System::ComponentModel::ListChangedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewListener::IndexListChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexListChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Data.DataViewListener.RegisterMetaDataEvents
void System::Data::DataViewListener::RegisterMetaDataEvents(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewListener::RegisterMetaDataEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterMetaDataEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.DataViewListener.UnregisterMetaDataEvents
void System::Data::DataViewListener::UnregisterMetaDataEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewListener::UnregisterMetaDataEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterMetaDataEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataViewListener.UnregisterMetaDataEvents
void System::Data::DataViewListener::UnregisterMetaDataEvents(bool updateListeners) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewListener::UnregisterMetaDataEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterMetaDataEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateListeners)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateListeners);
}
// Autogenerated method: System.Data.DataViewListener.RegisterListChangedEvent
void System::Data::DataViewListener::RegisterListChangedEvent(::System::Data::Index* index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewListener::RegisterListChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterListChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Data.DataViewListener.UnregisterListChangedEvent
void System::Data::DataViewListener::UnregisterListChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewListener::UnregisterListChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterListChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataViewListener.CleanUp
void System::Data::DataViewListener::CleanUp(bool updateListeners) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewListener::CleanUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateListeners)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updateListeners);
}
// Autogenerated method: System.Data.DataViewListener.RegisterListener
void System::Data::DataViewListener::RegisterListener(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewListener::RegisterListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataViewManager
#include "System/Data/DataViewManager.hpp"
// Including type: System.Data.DataViewSettingCollection
#include "System/Data/DataViewSettingCollection.hpp"
// Including type: System.NotSupportedException
#include "System/NotSupportedException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.NotSupportedException s_notSupported
::System::NotSupportedException* System::Data::DataViewManager::_get_s_notSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewManager::_get_s_notSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::NotSupportedException*>("System.Data", "DataViewManager", "s_notSupported"));
}
// Autogenerated static field setter
// Set static field: static private System.NotSupportedException s_notSupported
void System::Data::DataViewManager::_set_s_notSupported(::System::NotSupportedException* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewManager::_set_s_notSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataViewManager", "s_notSupported", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataViewSettingCollection _dataViewSettingsCollection
[[deprecated("Use field access instead!")]] ::System::Data::DataViewSettingCollection*& System::Data::DataViewManager::dyn__dataViewSettingsCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewManager::dyn__dataViewSettingsCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataViewSettingsCollection"))->offset;
  return *reinterpret_cast<::System::Data::DataViewSettingCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _nViews
[[deprecated("Use field access instead!")]] int& System::Data::DataViewManager::dyn__nViews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewManager::dyn__nViews");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nViews"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataViewManager.get_DataViewSettings
::System::Data::DataViewSettingCollection* System::Data::DataViewManager::get_DataViewSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewManager::get_DataViewSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataViewSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataViewSettingCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataViewManager..cctor
void System::Data::DataViewManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "DataViewManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataViewRowState
#include "System/Data/DataViewRowState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.DataViewRowState None
::System::Data::DataViewRowState System::Data::DataViewRowState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewRowState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataViewRowState>("System.Data", "DataViewRowState", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataViewRowState None
void System::Data::DataViewRowState::_set_None(::System::Data::DataViewRowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewRowState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataViewRowState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataViewRowState Unchanged
::System::Data::DataViewRowState System::Data::DataViewRowState::_get_Unchanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewRowState::_get_Unchanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataViewRowState>("System.Data", "DataViewRowState", "Unchanged"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataViewRowState Unchanged
void System::Data::DataViewRowState::_set_Unchanged(::System::Data::DataViewRowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewRowState::_set_Unchanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataViewRowState", "Unchanged", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataViewRowState Added
::System::Data::DataViewRowState System::Data::DataViewRowState::_get_Added() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewRowState::_get_Added");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataViewRowState>("System.Data", "DataViewRowState", "Added"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataViewRowState Added
void System::Data::DataViewRowState::_set_Added(::System::Data::DataViewRowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewRowState::_set_Added");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataViewRowState", "Added", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataViewRowState Deleted
::System::Data::DataViewRowState System::Data::DataViewRowState::_get_Deleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewRowState::_get_Deleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataViewRowState>("System.Data", "DataViewRowState", "Deleted"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataViewRowState Deleted
void System::Data::DataViewRowState::_set_Deleted(::System::Data::DataViewRowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewRowState::_set_Deleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataViewRowState", "Deleted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataViewRowState ModifiedCurrent
::System::Data::DataViewRowState System::Data::DataViewRowState::_get_ModifiedCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewRowState::_get_ModifiedCurrent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataViewRowState>("System.Data", "DataViewRowState", "ModifiedCurrent"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataViewRowState ModifiedCurrent
void System::Data::DataViewRowState::_set_ModifiedCurrent(::System::Data::DataViewRowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewRowState::_set_ModifiedCurrent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataViewRowState", "ModifiedCurrent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataViewRowState ModifiedOriginal
::System::Data::DataViewRowState System::Data::DataViewRowState::_get_ModifiedOriginal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewRowState::_get_ModifiedOriginal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataViewRowState>("System.Data", "DataViewRowState", "ModifiedOriginal"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataViewRowState ModifiedOriginal
void System::Data::DataViewRowState::_set_ModifiedOriginal(::System::Data::DataViewRowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewRowState::_set_ModifiedOriginal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataViewRowState", "ModifiedOriginal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataViewRowState OriginalRows
::System::Data::DataViewRowState System::Data::DataViewRowState::_get_OriginalRows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewRowState::_get_OriginalRows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataViewRowState>("System.Data", "DataViewRowState", "OriginalRows"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataViewRowState OriginalRows
void System::Data::DataViewRowState::_set_OriginalRows(::System::Data::DataViewRowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewRowState::_set_OriginalRows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataViewRowState", "OriginalRows", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.DataViewRowState CurrentRows
::System::Data::DataViewRowState System::Data::DataViewRowState::_get_CurrentRows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewRowState::_get_CurrentRows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::DataViewRowState>("System.Data", "DataViewRowState", "CurrentRows"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.DataViewRowState CurrentRows
void System::Data::DataViewRowState::_set_CurrentRows(::System::Data::DataViewRowState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewRowState::_set_CurrentRows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "DataViewRowState", "CurrentRows", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::DataViewRowState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewRowState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataViewSetting
#include "System/Data/DataViewSetting.hpp"
// Including type: System.Data.DataViewManager
#include "System/Data/DataViewManager.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.DataViewManager _dataViewManager
[[deprecated("Use field access instead!")]] ::System::Data::DataViewManager*& System::Data::DataViewSetting::dyn__dataViewManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewSetting::dyn__dataViewManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataViewManager"))->offset;
  return *reinterpret_cast<::System::Data::DataViewManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataTable _table
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::DataViewSetting::dyn__table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewSetting::dyn__table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_table"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _sort
[[deprecated("Use field access instead!")]] ::StringW& System::Data::DataViewSetting::dyn__sort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewSetting::dyn__sort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sort"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _rowFilter
[[deprecated("Use field access instead!")]] ::StringW& System::Data::DataViewSetting::dyn__rowFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewSetting::dyn__rowFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowFilter"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataViewRowState _rowStateFilter
[[deprecated("Use field access instead!")]] ::System::Data::DataViewRowState& System::Data::DataViewSetting::dyn__rowStateFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewSetting::dyn__rowStateFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowStateFilter"))->offset;
  return *reinterpret_cast<::System::Data::DataViewRowState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _applyDefaultSort
[[deprecated("Use field access instead!")]] bool& System::Data::DataViewSetting::dyn__applyDefaultSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewSetting::dyn__applyDefaultSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_applyDefaultSort"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataViewSetting.get_ApplyDefaultSort
bool System::Data::DataViewSetting::get_ApplyDefaultSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewSetting::get_ApplyDefaultSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApplyDefaultSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataViewSetting.get_RowFilter
::StringW System::Data::DataViewSetting::get_RowFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewSetting::get_RowFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RowFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataViewSetting.get_RowStateFilter
::System::Data::DataViewRowState System::Data::DataViewSetting::get_RowStateFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewSetting::get_RowStateFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RowStateFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataViewRowState, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataViewSetting.get_Sort
::StringW System::Data::DataViewSetting::get_Sort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewSetting::get_Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataViewSetting.SetDataViewManager
void System::Data::DataViewSetting::SetDataViewManager(::System::Data::DataViewManager* dataViewManager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewSetting::SetDataViewManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataViewManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataViewManager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataViewManager);
}
// Autogenerated method: System.Data.DataViewSetting.SetDataTable
void System::Data::DataViewSetting::SetDataTable(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewSetting::SetDataTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataViewSettingCollection
#include "System/Data/DataViewSettingCollection.hpp"
// Including type: System.Data.DataViewManager
#include "System/Data/DataViewManager.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Data.DataViewSetting
#include "System/Data/DataViewSetting.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataViewManager _dataViewManager
[[deprecated("Use field access instead!")]] ::System::Data::DataViewManager*& System::Data::DataViewSettingCollection::dyn__dataViewManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewSettingCollection::dyn__dataViewManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataViewManager"))->offset;
  return *reinterpret_cast<::System::Data::DataViewManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Hashtable _list
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Data::DataViewSettingCollection::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewSettingCollection::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataViewSettingCollection.get_Item
::System::Data::DataViewSetting* System::Data::DataViewSettingCollection::get_Item(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewSettingCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataViewSettingCollection*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataViewSetting*, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.DataViewSettingCollection.set_Item
void System::Data::DataViewSettingCollection::set_Item(::System::Data::DataTable* table, ::System::Data::DataViewSetting* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewSettingCollection::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataViewSettingCollection*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table, value);
}
// Autogenerated method: System.Data.DataViewSettingCollection.Remove
void System::Data::DataViewSettingCollection::Remove(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataViewSettingCollection::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.DefaultValueTypeConverter
#include "System/Data/DefaultValueTypeConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.DefaultValueTypeConverter.ConvertTo
::Il2CppObject* System::Data::DefaultValueTypeConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DefaultValueTypeConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.Data.DefaultValueTypeConverter.ConvertFrom
::Il2CppObject* System::Data::DefaultValueTypeConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DefaultValueTypeConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::StringConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.Aggregate
#include "System/Data/Aggregate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.Aggregate None
::System::Data::Aggregate System::Data::Aggregate::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Aggregate::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Aggregate>("System.Data", "Aggregate", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Aggregate None
void System::Data::Aggregate::_set_None(::System::Data::Aggregate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Aggregate::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Aggregate", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Aggregate Sum
::System::Data::Aggregate System::Data::Aggregate::_get_Sum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Aggregate::_get_Sum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Aggregate>("System.Data", "Aggregate", "Sum"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Aggregate Sum
void System::Data::Aggregate::_set_Sum(::System::Data::Aggregate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Aggregate::_set_Sum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Aggregate", "Sum", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Aggregate Avg
::System::Data::Aggregate System::Data::Aggregate::_get_Avg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Aggregate::_get_Avg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Aggregate>("System.Data", "Aggregate", "Avg"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Aggregate Avg
void System::Data::Aggregate::_set_Avg(::System::Data::Aggregate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Aggregate::_set_Avg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Aggregate", "Avg", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Aggregate Min
::System::Data::Aggregate System::Data::Aggregate::_get_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Aggregate::_get_Min");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Aggregate>("System.Data", "Aggregate", "Min"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Aggregate Min
void System::Data::Aggregate::_set_Min(::System::Data::Aggregate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Aggregate::_set_Min");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Aggregate", "Min", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Aggregate Max
::System::Data::Aggregate System::Data::Aggregate::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Aggregate::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Aggregate>("System.Data", "Aggregate", "Max"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Aggregate Max
void System::Data::Aggregate::_set_Max(::System::Data::Aggregate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Aggregate::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Aggregate", "Max", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Aggregate Count
::System::Data::Aggregate System::Data::Aggregate::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Aggregate::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Aggregate>("System.Data", "Aggregate", "Count"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Aggregate Count
void System::Data::Aggregate::_set_Count(::System::Data::Aggregate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Aggregate::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Aggregate", "Count", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Aggregate StDev
::System::Data::Aggregate System::Data::Aggregate::_get_StDev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Aggregate::_get_StDev");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Aggregate>("System.Data", "Aggregate", "StDev"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Aggregate StDev
void System::Data::Aggregate::_set_StDev(::System::Data::Aggregate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Aggregate::_set_StDev");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Aggregate", "StDev", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Aggregate Var
::System::Data::Aggregate System::Data::Aggregate::_get_Var() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Aggregate::_get_Var");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Aggregate>("System.Data", "Aggregate", "Var"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Aggregate Var
void System::Data::Aggregate::_set_Var(::System::Data::Aggregate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Aggregate::_set_Var");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Aggregate", "Var", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::Aggregate::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Aggregate::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.AggregateNode
#include "System/Data/AggregateNode.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.DataRelation
#include "System/Data/DataRelation.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.DataRowVersion
#include "System/Data/DataRowVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.AggregateType _type
[[deprecated("Use field access instead!")]] ::System::Data::AggregateType& System::Data::AggregateNode::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::AggregateNode::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::System::Data::AggregateType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.Aggregate _aggregate
[[deprecated("Use field access instead!")]] ::System::Data::Aggregate& System::Data::AggregateNode::dyn__aggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::AggregateNode::dyn__aggregate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_aggregate"))->offset;
  return *reinterpret_cast<::System::Data::Aggregate*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _local
[[deprecated("Use field access instead!")]] bool& System::Data::AggregateNode::dyn__local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::AggregateNode::dyn__local");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_local"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _relationName
[[deprecated("Use field access instead!")]] ::StringW& System::Data::AggregateNode::dyn__relationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::AggregateNode::dyn__relationName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relationName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _columnName
[[deprecated("Use field access instead!")]] ::StringW& System::Data::AggregateNode::dyn__columnName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::AggregateNode::dyn__columnName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_columnName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataTable _childTable
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::AggregateNode::dyn__childTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::AggregateNode::dyn__childTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childTable"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataColumn _column
[[deprecated("Use field access instead!")]] ::System::Data::DataColumn*& System::Data::AggregateNode::dyn__column() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::AggregateNode::dyn__column");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_column"))->offset;
  return *reinterpret_cast<::System::Data::DataColumn**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataRelation _relation
[[deprecated("Use field access instead!")]] ::System::Data::DataRelation*& System::Data::AggregateNode::dyn__relation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::AggregateNode::dyn__relation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relation"))->offset;
  return *reinterpret_cast<::System::Data::DataRelation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.AggregateNode.Bind
void System::Data::AggregateNode::Bind(::System::Data::DataRelation* relation, ::System::Collections::Generic::List_1<::System::Data::DataColumn*>* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::AggregateNode::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "AggregateNode", "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relation), ::il2cpp_utils::ExtractType(list)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, relation, list);
}
// Autogenerated method: System.Data.AggregateNode.Bind
void System::Data::AggregateNode::Bind(::System::Data::DataTable* table, ::System::Collections::Generic::List_1<::System::Data::DataColumn*>* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::AggregateNode::Bind");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table, list);
}
// Autogenerated method: System.Data.AggregateNode.Eval
::Il2CppObject* System::Data::AggregateNode::Eval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::AggregateNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.AggregateNode.Eval
::Il2CppObject* System::Data::AggregateNode::Eval(::System::Data::DataRow* row, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::AggregateNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, row, version);
}
// Autogenerated method: System.Data.AggregateNode.Eval
::Il2CppObject* System::Data::AggregateNode::Eval(::ArrayW<int> records) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::AggregateNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records);
}
// Autogenerated method: System.Data.AggregateNode.IsConstant
bool System::Data::AggregateNode::IsConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::AggregateNode::IsConstant");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.AggregateNode.IsTableConstant
bool System::Data::AggregateNode::IsTableConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::AggregateNode::IsTableConstant");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.AggregateNode.HasLocalAggregate
bool System::Data::AggregateNode::HasLocalAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::AggregateNode::HasLocalAggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.AggregateNode.HasRemoteAggregate
bool System::Data::AggregateNode::HasRemoteAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::AggregateNode::HasRemoteAggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.AggregateNode.DependsOn
bool System::Data::AggregateNode::DependsOn(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::AggregateNode::DependsOn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.AggregateNode.Optimize
::System::Data::ExpressionNode* System::Data::AggregateNode::Optimize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::AggregateNode::Optimize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::ExpressionNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.BinaryNode
#include "System/Data/BinaryNode.hpp"
// Including type: System.Data.BinaryNode/System.Data.DataTypePrecedence
#include "System/Data/BinaryNode_DataTypePrecedence.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.DataRowVersion
#include "System/Data/DataRowVersion.hpp"
// Including type: System.Data.Common.StorageType
#include "System/Data/Common/StorageType.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 _op
[[deprecated("Use field access instead!")]] int& System::Data::BinaryNode::dyn__op() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::dyn__op");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_op"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.ExpressionNode _left
[[deprecated("Use field access instead!")]] ::System::Data::ExpressionNode*& System::Data::BinaryNode::dyn__left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::dyn__left");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_left"))->offset;
  return *reinterpret_cast<::System::Data::ExpressionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.ExpressionNode _right
[[deprecated("Use field access instead!")]] ::System::Data::ExpressionNode*& System::Data::BinaryNode::dyn__right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::dyn__right");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_right"))->offset;
  return *reinterpret_cast<::System::Data::ExpressionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.BinaryNode.SetTypeMismatchError
void System::Data::BinaryNode::SetTypeMismatchError(int op, ::System::Type* left, ::System::Type* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::SetTypeMismatchError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTypeMismatchError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op, left, right);
}
// Autogenerated method: System.Data.BinaryNode.Eval
::Il2CppObject* System::Data::BinaryNode::Eval(::System::Data::ExpressionNode* expr, ::System::Data::DataRow* row, ::System::Data::DataRowVersion version, ::ArrayW<int> recordNos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::Eval");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "BinaryNode", "Eval", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expr), ::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(version), ::il2cpp_utils::ExtractType(recordNos)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expr, row, version, recordNos);
}
// Autogenerated method: System.Data.BinaryNode.BinaryCompare
int System::Data::BinaryNode::BinaryCompare(::Il2CppObject* vLeft, ::Il2CppObject* vRight, ::System::Data::Common::StorageType resultType, int op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::BinaryCompare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BinaryCompare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vLeft), ::il2cpp_utils::ExtractType(vRight), ::il2cpp_utils::ExtractType(resultType), ::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, vLeft, vRight, resultType, op);
}
// Autogenerated method: System.Data.BinaryNode.BinaryCompare
int System::Data::BinaryNode::BinaryCompare(::Il2CppObject* vLeft, ::Il2CppObject* vRight, ::System::Data::Common::StorageType resultType, int op, ::System::Globalization::CompareInfo* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::BinaryCompare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BinaryCompare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vLeft), ::il2cpp_utils::ExtractType(vRight), ::il2cpp_utils::ExtractType(resultType), ::il2cpp_utils::ExtractType(op), ::il2cpp_utils::ExtractType(comparer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, vLeft, vRight, resultType, op, comparer);
}
// Autogenerated method: System.Data.BinaryNode.EvalBinaryOp
::Il2CppObject* System::Data::BinaryNode::EvalBinaryOp(int op, ::System::Data::ExpressionNode* left, ::System::Data::ExpressionNode* right, ::System::Data::DataRow* row, ::System::Data::DataRowVersion version, ::ArrayW<int> recordNos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::EvalBinaryOp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvalBinaryOp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(version), ::il2cpp_utils::ExtractType(recordNos)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, op, left, right, row, version, recordNos);
}
// Autogenerated method: System.Data.BinaryNode.GetPrecedence
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::GetPrecedence(::System::Data::Common::StorageType storageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::GetPrecedence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrecedence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(storageType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::BinaryNode::DataTypePrecedence, false>(this, ___internal__method, storageType);
}
// Autogenerated method: System.Data.BinaryNode.GetPrecedenceType
::System::Data::Common::StorageType System::Data::BinaryNode::GetPrecedenceType(::System::Data::BinaryNode::DataTypePrecedence code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::GetPrecedenceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "BinaryNode", "GetPrecedenceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Common::StorageType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: System.Data.BinaryNode.IsMixed
bool System::Data::BinaryNode::IsMixed(::System::Data::Common::StorageType left, ::System::Data::Common::StorageType right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::IsMixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, left, right);
}
// Autogenerated method: System.Data.BinaryNode.IsMixedSql
bool System::Data::BinaryNode::IsMixedSql(::System::Data::Common::StorageType left, ::System::Data::Common::StorageType right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::IsMixedSql");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMixedSql", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, left, right);
}
// Autogenerated method: System.Data.BinaryNode.ResultType
::System::Data::Common::StorageType System::Data::BinaryNode::ResultType(::System::Data::Common::StorageType left, ::System::Data::Common::StorageType right, bool lc, bool rc, int op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::ResultType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResultType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(lc), ::il2cpp_utils::ExtractType(rc), ::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Common::StorageType, false>(this, ___internal__method, left, right, lc, rc, op);
}
// Autogenerated method: System.Data.BinaryNode.ResultSqlType
::System::Data::Common::StorageType System::Data::BinaryNode::ResultSqlType(::System::Data::Common::StorageType left, ::System::Data::Common::StorageType right, bool lc, bool rc, int op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::ResultSqlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResultSqlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(lc), ::il2cpp_utils::ExtractType(rc), ::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Common::StorageType, false>(this, ___internal__method, left, right, lc, rc, op);
}
// Autogenerated method: System.Data.BinaryNode.SqlResultType
int System::Data::BinaryNode::SqlResultType(int typeCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::SqlResultType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SqlResultType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeCode)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, typeCode);
}
// Autogenerated method: System.Data.BinaryNode.Bind
void System::Data::BinaryNode::Bind(::System::Data::DataTable* table, ::System::Collections::Generic::List_1<::System::Data::DataColumn*>* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::Bind");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table, list);
}
// Autogenerated method: System.Data.BinaryNode.Eval
::Il2CppObject* System::Data::BinaryNode::Eval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.BinaryNode.Eval
::Il2CppObject* System::Data::BinaryNode::Eval(::System::Data::DataRow* row, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, row, version);
}
// Autogenerated method: System.Data.BinaryNode.Eval
::Il2CppObject* System::Data::BinaryNode::Eval(::ArrayW<int> recordNos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordNos);
}
// Autogenerated method: System.Data.BinaryNode.IsConstant
bool System::Data::BinaryNode::IsConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::IsConstant");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.BinaryNode.IsTableConstant
bool System::Data::BinaryNode::IsTableConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::IsTableConstant");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.BinaryNode.HasLocalAggregate
bool System::Data::BinaryNode::HasLocalAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::HasLocalAggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.BinaryNode.HasRemoteAggregate
bool System::Data::BinaryNode::HasRemoteAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::HasRemoteAggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.BinaryNode.DependsOn
bool System::Data::BinaryNode::DependsOn(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DependsOn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.BinaryNode.Optimize
::System::Data::ExpressionNode* System::Data::BinaryNode::Optimize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::Optimize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::ExpressionNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.BinaryNode/System.Data.DataTypePrecedence
#include "System/Data/BinaryNode_DataTypePrecedence.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlDateTime
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_SqlDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_SqlDateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "SqlDateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlDateTime
void System::Data::BinaryNode::DataTypePrecedence::_set_SqlDateTime(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_SqlDateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "SqlDateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence DateTimeOffset
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_DateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_DateTimeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "DateTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence DateTimeOffset
void System::Data::BinaryNode::DataTypePrecedence::_set_DateTimeOffset(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_DateTimeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "DateTimeOffset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence DateTime
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_DateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "DateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence DateTime
void System::Data::BinaryNode::DataTypePrecedence::_set_DateTime(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_DateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "DateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence TimeSpan
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_TimeSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_TimeSpan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "TimeSpan"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence TimeSpan
void System::Data::BinaryNode::DataTypePrecedence::_set_TimeSpan(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_TimeSpan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "TimeSpan", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlDouble
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_SqlDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_SqlDouble");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "SqlDouble"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlDouble
void System::Data::BinaryNode::DataTypePrecedence::_set_SqlDouble(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_SqlDouble");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "SqlDouble", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Double
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "Double"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Double
void System::Data::BinaryNode::DataTypePrecedence::_set_Double(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlSingle
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_SqlSingle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_SqlSingle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "SqlSingle"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlSingle
void System::Data::BinaryNode::DataTypePrecedence::_set_SqlSingle(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_SqlSingle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "SqlSingle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Single
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_Single() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_Single");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "Single"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Single
void System::Data::BinaryNode::DataTypePrecedence::_set_Single(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_Single");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "Single", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlDecimal
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_SqlDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_SqlDecimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "SqlDecimal"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlDecimal
void System::Data::BinaryNode::DataTypePrecedence::_set_SqlDecimal(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_SqlDecimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "SqlDecimal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Decimal
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_Decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "Decimal"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Decimal
void System::Data::BinaryNode::DataTypePrecedence::_set_Decimal(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_Decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "Decimal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlMoney
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_SqlMoney() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_SqlMoney");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "SqlMoney"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlMoney
void System::Data::BinaryNode::DataTypePrecedence::_set_SqlMoney(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_SqlMoney");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "SqlMoney", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence UInt64
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_UInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_UInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "UInt64"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence UInt64
void System::Data::BinaryNode::DataTypePrecedence::_set_UInt64(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_UInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "UInt64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlInt64
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_SqlInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_SqlInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "SqlInt64"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlInt64
void System::Data::BinaryNode::DataTypePrecedence::_set_SqlInt64(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_SqlInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "SqlInt64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Int64
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_Int64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_Int64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "Int64"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Int64
void System::Data::BinaryNode::DataTypePrecedence::_set_Int64(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_Int64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "Int64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence UInt32
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_UInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_UInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "UInt32"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence UInt32
void System::Data::BinaryNode::DataTypePrecedence::_set_UInt32(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_UInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "UInt32", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlInt32
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_SqlInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_SqlInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "SqlInt32"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlInt32
void System::Data::BinaryNode::DataTypePrecedence::_set_SqlInt32(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_SqlInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "SqlInt32", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Int32
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Int32
void System::Data::BinaryNode::DataTypePrecedence::_set_Int32(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence UInt16
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_UInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_UInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "UInt16"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence UInt16
void System::Data::BinaryNode::DataTypePrecedence::_set_UInt16(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_UInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "UInt16", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlInt16
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_SqlInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_SqlInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "SqlInt16"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlInt16
void System::Data::BinaryNode::DataTypePrecedence::_set_SqlInt16(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_SqlInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "SqlInt16", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Int16
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_Int16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_Int16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "Int16"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Int16
void System::Data::BinaryNode::DataTypePrecedence::_set_Int16(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_Int16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "Int16", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Byte
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_Byte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_Byte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "Byte"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Byte
void System::Data::BinaryNode::DataTypePrecedence::_set_Byte(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_Byte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "Byte", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlByte
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_SqlByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_SqlByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "SqlByte"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlByte
void System::Data::BinaryNode::DataTypePrecedence::_set_SqlByte(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_SqlByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "SqlByte", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SByte
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_SByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_SByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "SByte"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SByte
void System::Data::BinaryNode::DataTypePrecedence::_set_SByte(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_SByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "SByte", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Error
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Error
void System::Data::BinaryNode::DataTypePrecedence::_set_Error(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlBoolean
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_SqlBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_SqlBoolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "SqlBoolean"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlBoolean
void System::Data::BinaryNode::DataTypePrecedence::_set_SqlBoolean(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_SqlBoolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "SqlBoolean", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Boolean
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Boolean
void System::Data::BinaryNode::DataTypePrecedence::_set_Boolean(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlGuid
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_SqlGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_SqlGuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "SqlGuid"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlGuid
void System::Data::BinaryNode::DataTypePrecedence::_set_SqlGuid(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_SqlGuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "SqlGuid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlString
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_SqlString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_SqlString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "SqlString"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlString
void System::Data::BinaryNode::DataTypePrecedence::_set_SqlString(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_SqlString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "SqlString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence String
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "String"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence String
void System::Data::BinaryNode::DataTypePrecedence::_set_String(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlXml
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_SqlXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_SqlXml");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "SqlXml"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlXml
void System::Data::BinaryNode::DataTypePrecedence::_set_SqlXml(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_SqlXml");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "SqlXml", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlChars
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_SqlChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_SqlChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "SqlChars"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlChars
void System::Data::BinaryNode::DataTypePrecedence::_set_SqlChars(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_SqlChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "SqlChars", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Char
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_Char() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_Char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "Char"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence Char
void System::Data::BinaryNode::DataTypePrecedence::_set_Char(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_Char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "Char", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlBytes
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_SqlBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_SqlBytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "SqlBytes"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlBytes
void System::Data::BinaryNode::DataTypePrecedence::_set_SqlBytes(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_SqlBytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "SqlBytes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlBinary
::System::Data::BinaryNode::DataTypePrecedence System::Data::BinaryNode::DataTypePrecedence::_get_SqlBinary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_get_SqlBinary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::BinaryNode::DataTypePrecedence>("System.Data", "BinaryNode/DataTypePrecedence", "SqlBinary"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.BinaryNode/System.Data.DataTypePrecedence SqlBinary
void System::Data::BinaryNode::DataTypePrecedence::_set_SqlBinary(::System::Data::BinaryNode::DataTypePrecedence value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::_set_SqlBinary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "BinaryNode/DataTypePrecedence", "SqlBinary", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::BinaryNode::DataTypePrecedence::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::BinaryNode::DataTypePrecedence::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.LikeNode
#include "System/Data/LikeNode.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.DataRowVersion
#include "System/Data/DataRowVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _kind
[[deprecated("Use field access instead!")]] int& System::Data::LikeNode::dyn__kind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::LikeNode::dyn__kind");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_kind"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _pattern
[[deprecated("Use field access instead!")]] ::StringW& System::Data::LikeNode::dyn__pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::LikeNode::dyn__pattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.LikeNode.AnalyzePattern
::StringW System::Data::LikeNode::AnalyzePattern(::StringW pat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::LikeNode::AnalyzePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnalyzePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pat);
}
// Autogenerated method: System.Data.LikeNode.Eval
::Il2CppObject* System::Data::LikeNode::Eval(::System::Data::DataRow* row, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::LikeNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::BinaryNode*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, row, version);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.ConstNode
#include "System/Data/ConstNode.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.DataRowVersion
#include "System/Data/DataRowVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Object _val
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Data::ConstNode::dyn__val() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ConstNode::dyn__val");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_val"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.ConstNode.SmallestDecimal
::Il2CppObject* System::Data::ConstNode::SmallestDecimal(::Il2CppObject* constant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ConstNode::SmallestDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmallestDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constant)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, constant);
}
// Autogenerated method: System.Data.ConstNode.SmallestNumeric
::Il2CppObject* System::Data::ConstNode::SmallestNumeric(::Il2CppObject* constant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ConstNode::SmallestNumeric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SmallestNumeric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constant)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, constant);
}
// Autogenerated method: System.Data.ConstNode.Bind
void System::Data::ConstNode::Bind(::System::Data::DataTable* table, ::System::Collections::Generic::List_1<::System::Data::DataColumn*>* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ConstNode::Bind");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table, list);
}
// Autogenerated method: System.Data.ConstNode.Eval
::Il2CppObject* System::Data::ConstNode::Eval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ConstNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ConstNode.Eval
::Il2CppObject* System::Data::ConstNode::Eval(::System::Data::DataRow* row, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ConstNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, row, version);
}
// Autogenerated method: System.Data.ConstNode.Eval
::Il2CppObject* System::Data::ConstNode::Eval(::ArrayW<int> recordNos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ConstNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordNos);
}
// Autogenerated method: System.Data.ConstNode.IsConstant
bool System::Data::ConstNode::IsConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ConstNode::IsConstant");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ConstNode.IsTableConstant
bool System::Data::ConstNode::IsTableConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ConstNode::IsTableConstant");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ConstNode.HasLocalAggregate
bool System::Data::ConstNode::HasLocalAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ConstNode::HasLocalAggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ConstNode.HasRemoteAggregate
bool System::Data::ConstNode::HasRemoteAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ConstNode::HasRemoteAggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ConstNode.Optimize
::System::Data::ExpressionNode* System::Data::ConstNode::Optimize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ConstNode::Optimize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::ExpressionNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.DataExpression
#include "System/Data/DataExpression.hpp"
// Including type: System.Data.ExpressionNode
#include "System/Data/ExpressionNode.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.DataRowVersion
#include "System/Data/DataRowVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String _originalExpression
[[deprecated("Use field access instead!")]] ::StringW& System::Data::DataExpression::dyn__originalExpression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::dyn__originalExpression");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalExpression"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _parsed
[[deprecated("Use field access instead!")]] bool& System::Data::DataExpression::dyn__parsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::dyn__parsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parsed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _bound
[[deprecated("Use field access instead!")]] bool& System::Data::DataExpression::dyn__bound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::dyn__bound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bound"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.ExpressionNode _expr
[[deprecated("Use field access instead!")]] ::System::Data::ExpressionNode*& System::Data::DataExpression::dyn__expr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::dyn__expr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expr"))->offset;
  return *reinterpret_cast<::System::Data::ExpressionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataTable _table
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::DataExpression::dyn__table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::dyn__table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_table"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.Common.StorageType _storageType
[[deprecated("Use field access instead!")]] ::System::Data::Common::StorageType& System::Data::DataExpression::dyn__storageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::dyn__storageType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storageType"))->offset;
  return *reinterpret_cast<::System::Data::Common::StorageType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _dataType
[[deprecated("Use field access instead!")]] ::System::Type*& System::Data::DataExpression::dyn__dataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::dyn__dataType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataColumn[] _dependency
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::DataColumn*>& System::Data::DataExpression::dyn__dependency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::dyn__dependency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dependency"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::DataColumn*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataExpression.get_Expression
::StringW System::Data::DataExpression::get_Expression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::get_Expression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Expression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataExpression.get_HasValue
bool System::Data::DataExpression::get_HasValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::get_HasValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataExpression.Bind
void System::Data::DataExpression::Bind(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.DataExpression.DependsOn
bool System::Data::DataExpression::DependsOn(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::DependsOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DependsOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.DataExpression.Evaluate
::Il2CppObject* System::Data::DataExpression::Evaluate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::Evaluate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataExpression.Evaluate
::Il2CppObject* System::Data::DataExpression::Evaluate(::System::Data::DataRow* row, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::Evaluate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, row, version);
}
// Autogenerated method: System.Data.DataExpression.Invoke
bool System::Data::DataExpression::Invoke(::System::Data::DataRow* row, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataExpression*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, row, version);
}
// Autogenerated method: System.Data.DataExpression.GetDependency
::ArrayW<::System::Data::DataColumn*> System::Data::DataExpression::GetDependency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::GetDependency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDependency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataColumn*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataExpression.IsTableAggregate
bool System::Data::DataExpression::IsTableAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::IsTableAggregate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTableAggregate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataExpression.IsUnknown
bool System::Data::DataExpression::IsUnknown(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::IsUnknown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "DataExpression", "IsUnknown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.DataExpression.HasLocalAggregate
bool System::Data::DataExpression::HasLocalAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::HasLocalAggregate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasLocalAggregate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataExpression.HasRemoteAggregate
bool System::Data::DataExpression::HasRemoteAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::HasRemoteAggregate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasRemoteAggregate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataExpression.ToBoolean
bool System::Data::DataExpression::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataExpression::ToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "DataExpression", "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.ExpressionNode
#include "System/Data/ExpressionNode.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.DataRowVersion
#include "System/Data/DataRowVersion.hpp"
// Including type: System.Data.Common.StorageType
#include "System/Data/Common/StorageType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.DataTable _table
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::ExpressionNode::dyn__table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::dyn__table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_table"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.ExpressionNode.get_FormatProvider
::System::IFormatProvider* System::Data::ExpressionNode::get_FormatProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::get_FormatProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FormatProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IFormatProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionNode.get_IsSqlColumn
bool System::Data::ExpressionNode::get_IsSqlColumn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::get_IsSqlColumn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionNode.get_table
::System::Data::DataTable* System::Data::ExpressionNode::get_table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::get_table");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_table", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionNode.BindTable
void System::Data::ExpressionNode::BindTable(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::BindTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.ExpressionNode.Bind
void System::Data::ExpressionNode::Bind(::System::Data::DataTable* table, ::System::Collections::Generic::List_1<::System::Data::DataColumn*>* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::Bind");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table, list);
}
// Autogenerated method: System.Data.ExpressionNode.Eval
::Il2CppObject* System::Data::ExpressionNode::Eval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionNode.Eval
::Il2CppObject* System::Data::ExpressionNode::Eval(::System::Data::DataRow* row, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, row, version);
}
// Autogenerated method: System.Data.ExpressionNode.Eval
::Il2CppObject* System::Data::ExpressionNode::Eval(::ArrayW<int> recordNos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordNos);
}
// Autogenerated method: System.Data.ExpressionNode.IsConstant
bool System::Data::ExpressionNode::IsConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::IsConstant");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionNode.IsTableConstant
bool System::Data::ExpressionNode::IsTableConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::IsTableConstant");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionNode.HasLocalAggregate
bool System::Data::ExpressionNode::HasLocalAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::HasLocalAggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionNode.HasRemoteAggregate
bool System::Data::ExpressionNode::HasRemoteAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::HasRemoteAggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionNode.Optimize
::System::Data::ExpressionNode* System::Data::ExpressionNode::Optimize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::Optimize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::ExpressionNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionNode.DependsOn
bool System::Data::ExpressionNode::DependsOn(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::DependsOn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.ExpressionNode.IsInteger
bool System::Data::ExpressionNode::IsInteger(::System::Data::Common::StorageType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::IsInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExpressionNode", "IsInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Data.ExpressionNode.IsIntegerSql
bool System::Data::ExpressionNode::IsIntegerSql(::System::Data::Common::StorageType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::IsIntegerSql");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExpressionNode", "IsIntegerSql", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Data.ExpressionNode.IsSigned
bool System::Data::ExpressionNode::IsSigned(::System::Data::Common::StorageType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::IsSigned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExpressionNode", "IsSigned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Data.ExpressionNode.IsSignedSql
bool System::Data::ExpressionNode::IsSignedSql(::System::Data::Common::StorageType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::IsSignedSql");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExpressionNode", "IsSignedSql", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Data.ExpressionNode.IsUnsigned
bool System::Data::ExpressionNode::IsUnsigned(::System::Data::Common::StorageType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::IsUnsigned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExpressionNode", "IsUnsigned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Data.ExpressionNode.IsUnsignedSql
bool System::Data::ExpressionNode::IsUnsignedSql(::System::Data::Common::StorageType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::IsUnsignedSql");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExpressionNode", "IsUnsignedSql", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Data.ExpressionNode.IsNumeric
bool System::Data::ExpressionNode::IsNumeric(::System::Data::Common::StorageType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::IsNumeric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExpressionNode", "IsNumeric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Data.ExpressionNode.IsNumericSql
bool System::Data::ExpressionNode::IsNumericSql(::System::Data::Common::StorageType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::IsNumericSql");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExpressionNode", "IsNumericSql", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Data.ExpressionNode.IsFloat
bool System::Data::ExpressionNode::IsFloat(::System::Data::Common::StorageType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::IsFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExpressionNode", "IsFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Data.ExpressionNode.IsFloatSql
bool System::Data::ExpressionNode::IsFloatSql(::System::Data::Common::StorageType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionNode::IsFloatSql");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExpressionNode", "IsFloatSql", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.ValueType
#include "System/Data/ValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.ValueType Unknown
::System::Data::ValueType System::Data::ValueType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ValueType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::ValueType>("System.Data", "ValueType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.ValueType Unknown
void System::Data::ValueType::_set_Unknown(::System::Data::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ValueType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "ValueType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.ValueType Null
::System::Data::ValueType System::Data::ValueType::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ValueType::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::ValueType>("System.Data", "ValueType", "Null"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.ValueType Null
void System::Data::ValueType::_set_Null(::System::Data::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ValueType::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "ValueType", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.ValueType Bool
::System::Data::ValueType System::Data::ValueType::_get_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ValueType::_get_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::ValueType>("System.Data", "ValueType", "Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.ValueType Bool
void System::Data::ValueType::_set_Bool(::System::Data::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ValueType::_set_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "ValueType", "Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.ValueType Numeric
::System::Data::ValueType System::Data::ValueType::_get_Numeric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ValueType::_get_Numeric");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::ValueType>("System.Data", "ValueType", "Numeric"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.ValueType Numeric
void System::Data::ValueType::_set_Numeric(::System::Data::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ValueType::_set_Numeric");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "ValueType", "Numeric", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.ValueType Str
::System::Data::ValueType System::Data::ValueType::_get_Str() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ValueType::_get_Str");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::ValueType>("System.Data", "ValueType", "Str"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.ValueType Str
void System::Data::ValueType::_set_Str(::System::Data::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ValueType::_set_Str");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "ValueType", "Str", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.ValueType Float
::System::Data::ValueType System::Data::ValueType::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ValueType::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::ValueType>("System.Data", "ValueType", "Float"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.ValueType Float
void System::Data::ValueType::_set_Float(::System::Data::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ValueType::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "ValueType", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.ValueType Decimal
::System::Data::ValueType System::Data::ValueType::_get_Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ValueType::_get_Decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::ValueType>("System.Data", "ValueType", "Decimal"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.ValueType Decimal
void System::Data::ValueType::_set_Decimal(::System::Data::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ValueType::_set_Decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "ValueType", "Decimal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.ValueType Object
::System::Data::ValueType System::Data::ValueType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ValueType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::ValueType>("System.Data", "ValueType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.ValueType Object
void System::Data::ValueType::_set_Object(::System::Data::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ValueType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "ValueType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.ValueType Date
::System::Data::ValueType System::Data::ValueType::_get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ValueType::_get_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::ValueType>("System.Data", "ValueType", "Date"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.ValueType Date
void System::Data::ValueType::_set_Date(::System::Data::ValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ValueType::_set_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "ValueType", "Date", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::ValueType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ValueType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.Nodes
#include "System/Data/Nodes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.Nodes Noop
::System::Data::Nodes System::Data::Nodes::_get_Noop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_get_Noop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Nodes>("System.Data", "Nodes", "Noop"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Nodes Noop
void System::Data::Nodes::_set_Noop(::System::Data::Nodes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_set_Noop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Nodes", "Noop", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Nodes Unop
::System::Data::Nodes System::Data::Nodes::_get_Unop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_get_Unop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Nodes>("System.Data", "Nodes", "Unop"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Nodes Unop
void System::Data::Nodes::_set_Unop(::System::Data::Nodes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_set_Unop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Nodes", "Unop", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Nodes UnopSpec
::System::Data::Nodes System::Data::Nodes::_get_UnopSpec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_get_UnopSpec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Nodes>("System.Data", "Nodes", "UnopSpec"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Nodes UnopSpec
void System::Data::Nodes::_set_UnopSpec(::System::Data::Nodes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_set_UnopSpec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Nodes", "UnopSpec", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Nodes Binop
::System::Data::Nodes System::Data::Nodes::_get_Binop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_get_Binop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Nodes>("System.Data", "Nodes", "Binop"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Nodes Binop
void System::Data::Nodes::_set_Binop(::System::Data::Nodes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_set_Binop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Nodes", "Binop", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Nodes BinopSpec
::System::Data::Nodes System::Data::Nodes::_get_BinopSpec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_get_BinopSpec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Nodes>("System.Data", "Nodes", "BinopSpec"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Nodes BinopSpec
void System::Data::Nodes::_set_BinopSpec(::System::Data::Nodes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_set_BinopSpec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Nodes", "BinopSpec", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Nodes Zop
::System::Data::Nodes System::Data::Nodes::_get_Zop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_get_Zop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Nodes>("System.Data", "Nodes", "Zop"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Nodes Zop
void System::Data::Nodes::_set_Zop(::System::Data::Nodes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_set_Zop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Nodes", "Zop", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Nodes Call
::System::Data::Nodes System::Data::Nodes::_get_Call() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_get_Call");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Nodes>("System.Data", "Nodes", "Call"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Nodes Call
void System::Data::Nodes::_set_Call(::System::Data::Nodes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_set_Call");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Nodes", "Call", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Nodes Const
::System::Data::Nodes System::Data::Nodes::_get_Const() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_get_Const");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Nodes>("System.Data", "Nodes", "Const"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Nodes Const
void System::Data::Nodes::_set_Const(::System::Data::Nodes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_set_Const");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Nodes", "Const", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Nodes Name
::System::Data::Nodes System::Data::Nodes::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Nodes>("System.Data", "Nodes", "Name"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Nodes Name
void System::Data::Nodes::_set_Name(::System::Data::Nodes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Nodes", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Nodes Paren
::System::Data::Nodes System::Data::Nodes::_get_Paren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_get_Paren");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Nodes>("System.Data", "Nodes", "Paren"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Nodes Paren
void System::Data::Nodes::_set_Paren(::System::Data::Nodes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_set_Paren");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Nodes", "Paren", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Nodes Conv
::System::Data::Nodes System::Data::Nodes::_get_Conv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_get_Conv");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Nodes>("System.Data", "Nodes", "Conv"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Nodes Conv
void System::Data::Nodes::_set_Conv(::System::Data::Nodes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::_set_Conv");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Nodes", "Conv", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::Nodes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Nodes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.ExpressionParser
#include "System/Data/ExpressionParser.hpp"
// Including type: System.Data.FunctionId
#include "System/Data/FunctionId.hpp"
// Including type: System.Data.OperatorInfo
#include "System/Data/OperatorInfo.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Data.ExpressionNode
#include "System/Data/ExpressionNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Data.ExpressionParser/System.Data.ReservedWords[] s_reservedwords
::ArrayW<::System::Data::ExpressionParser::ReservedWords> System::Data::ExpressionParser::_get_s_reservedwords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::_get_s_reservedwords");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Data::ExpressionParser::ReservedWords>>("System.Data", "ExpressionParser", "s_reservedwords"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Data.ExpressionParser/System.Data.ReservedWords[] s_reservedwords
void System::Data::ExpressionParser::_set_s_reservedwords(::ArrayW<::System::Data::ExpressionParser::ReservedWords> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::_set_s_reservedwords");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "ExpressionParser", "s_reservedwords", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Char _escape
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Data::ExpressionParser::dyn__escape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::dyn__escape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_escape"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char _decimalSeparator
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Data::ExpressionParser::dyn__decimalSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::dyn__decimalSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_decimalSeparator"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char _listSeparator
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Data::ExpressionParser::dyn__listSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::dyn__listSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_listSeparator"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char _exponentL
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Data::ExpressionParser::dyn__exponentL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::dyn__exponentL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exponentL"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char _exponentU
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Data::ExpressionParser::dyn__exponentU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::dyn__exponentU");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exponentU"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Char[] _text
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Data::ExpressionParser::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _pos
[[deprecated("Use field access instead!")]] int& System::Data::ExpressionParser::dyn__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::dyn__pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _start
[[deprecated("Use field access instead!")]] int& System::Data::ExpressionParser::dyn__start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::dyn__start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.Tokens _token
[[deprecated("Use field access instead!")]] ::System::Data::Tokens& System::Data::ExpressionParser::dyn__token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::dyn__token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_token"))->offset;
  return *reinterpret_cast<::System::Data::Tokens*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _op
[[deprecated("Use field access instead!")]] int& System::Data::ExpressionParser::dyn__op() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::dyn__op");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_op"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.OperatorInfo[] _ops
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::OperatorInfo*>& System::Data::ExpressionParser::dyn__ops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::dyn__ops");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ops"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::OperatorInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _topOperator
[[deprecated("Use field access instead!")]] int& System::Data::ExpressionParser::dyn__topOperator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::dyn__topOperator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_topOperator"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _topNode
[[deprecated("Use field access instead!")]] int& System::Data::ExpressionParser::dyn__topNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::dyn__topNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_topNode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataTable _table
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::ExpressionParser::dyn__table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::dyn__table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_table"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.ExpressionNode[] _nodeStack
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::ExpressionNode*>& System::Data::ExpressionParser::dyn__nodeStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::dyn__nodeStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nodeStack"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::ExpressionNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _prevOperand
[[deprecated("Use field access instead!")]] int& System::Data::ExpressionParser::dyn__prevOperand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::dyn__prevOperand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevOperand"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.ExpressionNode _expression
[[deprecated("Use field access instead!")]] ::System::Data::ExpressionNode*& System::Data::ExpressionParser::dyn__expression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::dyn__expression");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expression"))->offset;
  return *reinterpret_cast<::System::Data::ExpressionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.ExpressionParser..cctor
void System::Data::ExpressionParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExpressionParser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExpressionParser.LoadExpression
void System::Data::ExpressionParser::LoadExpression(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::LoadExpression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Data.ExpressionParser.StartScan
void System::Data::ExpressionParser::StartScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::StartScan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartScan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionParser.Parse
::System::Data::ExpressionNode* System::Data::ExpressionParser::Parse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::ExpressionNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionParser.ParseAggregateArgument
::System::Data::ExpressionNode* System::Data::ExpressionParser::ParseAggregateArgument(::System::Data::FunctionId aggregate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::ParseAggregateArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAggregateArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aggregate)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::ExpressionNode*, false>(this, ___internal__method, aggregate);
}
// Autogenerated method: System.Data.ExpressionParser.NodePop
::System::Data::ExpressionNode* System::Data::ExpressionParser::NodePop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::NodePop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NodePop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::ExpressionNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionParser.NodePeek
::System::Data::ExpressionNode* System::Data::ExpressionParser::NodePeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::NodePeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NodePeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::ExpressionNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionParser.NodePush
void System::Data::ExpressionParser::NodePush(::System::Data::ExpressionNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::NodePush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NodePush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Data.ExpressionParser.BuildExpression
void System::Data::ExpressionParser::BuildExpression(int pri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::BuildExpression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pri);
}
// Autogenerated method: System.Data.ExpressionParser.CheckToken
void System::Data::ExpressionParser::CheckToken(::System::Data::Tokens token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::CheckToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Data.ExpressionParser.Scan
::System::Data::Tokens System::Data::ExpressionParser::Scan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::Scan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Tokens, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionParser.ScanNumeric
void System::Data::ExpressionParser::ScanNumeric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::ScanNumeric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanNumeric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionParser.ScanName
void System::Data::ExpressionParser::ScanName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::ScanName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionParser.ScanName
void System::Data::ExpressionParser::ScanName(::Il2CppChar chEnd, ::Il2CppChar esc, ::StringW charsToEscape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::ScanName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chEnd), ::il2cpp_utils::ExtractType(esc), ::il2cpp_utils::ExtractType(charsToEscape)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chEnd, esc, charsToEscape);
}
// Autogenerated method: System.Data.ExpressionParser.ScanDate
void System::Data::ExpressionParser::ScanDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::ScanDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionParser.ScanBinaryConstant
void System::Data::ExpressionParser::ScanBinaryConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::ScanBinaryConstant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanBinaryConstant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionParser.ScanReserved
void System::Data::ExpressionParser::ScanReserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::ScanReserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanReserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionParser.ScanString
void System::Data::ExpressionParser::ScanString(::Il2CppChar escape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::ScanString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(escape)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, escape);
}
// Autogenerated method: System.Data.ExpressionParser.ScanToken
void System::Data::ExpressionParser::ScanToken(::System::Data::Tokens token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::ScanToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Data.ExpressionParser.ScanWhite
void System::Data::ExpressionParser::ScanWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::ScanWhite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanWhite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ExpressionParser.IsWhiteSpace
bool System::Data::ExpressionParser::IsWhiteSpace(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::IsWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Data.ExpressionParser.IsAlphaNumeric
bool System::Data::ExpressionParser::IsAlphaNumeric(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::IsAlphaNumeric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAlphaNumeric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Data.ExpressionParser.IsDigit
bool System::Data::ExpressionParser::IsDigit(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::IsDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Data.ExpressionParser.IsAlpha
bool System::Data::ExpressionParser::IsAlpha(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::IsAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.ExpressionParser/System.Data.ReservedWords
#include "System/Data/ExpressionParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.String _word
[[deprecated("Use field access instead!")]] ::StringW& System::Data::ExpressionParser::ReservedWords::dyn__word() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::ReservedWords::dyn__word");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_word"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Data.Tokens _token
[[deprecated("Use field access instead!")]] ::System::Data::Tokens& System::Data::ExpressionParser::ReservedWords::dyn__token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::ReservedWords::dyn__token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_token"))->offset;
  return *reinterpret_cast<::System::Data::Tokens*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _op
[[deprecated("Use field access instead!")]] int& System::Data::ExpressionParser::ReservedWords::dyn__op() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExpressionParser::ReservedWords::dyn__op");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_op"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.ExpressionParser/System.Data.ReservedWords..ctor
// ABORTED elsewhere.  System::Data::ExpressionParser::ReservedWords::ReservedWords(::StringW word, ::System::Data::Tokens token, int op)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.Tokens
#include "System/Data/Tokens.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.Tokens None
::System::Data::Tokens System::Data::Tokens::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Tokens>("System.Data", "Tokens", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Tokens None
void System::Data::Tokens::_set_None(::System::Data::Tokens value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Tokens", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Tokens Name
::System::Data::Tokens System::Data::Tokens::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Tokens>("System.Data", "Tokens", "Name"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Tokens Name
void System::Data::Tokens::_set_Name(::System::Data::Tokens value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Tokens", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Tokens Numeric
::System::Data::Tokens System::Data::Tokens::_get_Numeric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_get_Numeric");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Tokens>("System.Data", "Tokens", "Numeric"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Tokens Numeric
void System::Data::Tokens::_set_Numeric(::System::Data::Tokens value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_set_Numeric");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Tokens", "Numeric", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Tokens Decimal
::System::Data::Tokens System::Data::Tokens::_get_Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_get_Decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Tokens>("System.Data", "Tokens", "Decimal"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Tokens Decimal
void System::Data::Tokens::_set_Decimal(::System::Data::Tokens value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_set_Decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Tokens", "Decimal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Tokens Float
::System::Data::Tokens System::Data::Tokens::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Tokens>("System.Data", "Tokens", "Float"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Tokens Float
void System::Data::Tokens::_set_Float(::System::Data::Tokens value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Tokens", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Tokens BinaryConst
::System::Data::Tokens System::Data::Tokens::_get_BinaryConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_get_BinaryConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Tokens>("System.Data", "Tokens", "BinaryConst"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Tokens BinaryConst
void System::Data::Tokens::_set_BinaryConst(::System::Data::Tokens value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_set_BinaryConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Tokens", "BinaryConst", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Tokens StringConst
::System::Data::Tokens System::Data::Tokens::_get_StringConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_get_StringConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Tokens>("System.Data", "Tokens", "StringConst"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Tokens StringConst
void System::Data::Tokens::_set_StringConst(::System::Data::Tokens value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_set_StringConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Tokens", "StringConst", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Tokens Date
::System::Data::Tokens System::Data::Tokens::_get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_get_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Tokens>("System.Data", "Tokens", "Date"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Tokens Date
void System::Data::Tokens::_set_Date(::System::Data::Tokens value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_set_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Tokens", "Date", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Tokens ListSeparator
::System::Data::Tokens System::Data::Tokens::_get_ListSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_get_ListSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Tokens>("System.Data", "Tokens", "ListSeparator"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Tokens ListSeparator
void System::Data::Tokens::_set_ListSeparator(::System::Data::Tokens value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_set_ListSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Tokens", "ListSeparator", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Tokens LeftParen
::System::Data::Tokens System::Data::Tokens::_get_LeftParen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_get_LeftParen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Tokens>("System.Data", "Tokens", "LeftParen"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Tokens LeftParen
void System::Data::Tokens::_set_LeftParen(::System::Data::Tokens value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_set_LeftParen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Tokens", "LeftParen", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Tokens RightParen
::System::Data::Tokens System::Data::Tokens::_get_RightParen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_get_RightParen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Tokens>("System.Data", "Tokens", "RightParen"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Tokens RightParen
void System::Data::Tokens::_set_RightParen(::System::Data::Tokens value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_set_RightParen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Tokens", "RightParen", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Tokens ZeroOp
::System::Data::Tokens System::Data::Tokens::_get_ZeroOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_get_ZeroOp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Tokens>("System.Data", "Tokens", "ZeroOp"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Tokens ZeroOp
void System::Data::Tokens::_set_ZeroOp(::System::Data::Tokens value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_set_ZeroOp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Tokens", "ZeroOp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Tokens UnaryOp
::System::Data::Tokens System::Data::Tokens::_get_UnaryOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_get_UnaryOp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Tokens>("System.Data", "Tokens", "UnaryOp"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Tokens UnaryOp
void System::Data::Tokens::_set_UnaryOp(::System::Data::Tokens value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_set_UnaryOp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Tokens", "UnaryOp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Tokens BinaryOp
::System::Data::Tokens System::Data::Tokens::_get_BinaryOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_get_BinaryOp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Tokens>("System.Data", "Tokens", "BinaryOp"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Tokens BinaryOp
void System::Data::Tokens::_set_BinaryOp(::System::Data::Tokens value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_set_BinaryOp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Tokens", "BinaryOp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Tokens Child
::System::Data::Tokens System::Data::Tokens::_get_Child() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_get_Child");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Tokens>("System.Data", "Tokens", "Child"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Tokens Child
void System::Data::Tokens::_set_Child(::System::Data::Tokens value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_set_Child");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Tokens", "Child", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Tokens Parent
::System::Data::Tokens System::Data::Tokens::_get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_get_Parent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Tokens>("System.Data", "Tokens", "Parent"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Tokens Parent
void System::Data::Tokens::_set_Parent(::System::Data::Tokens value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_set_Parent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Tokens", "Parent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Tokens Dot
::System::Data::Tokens System::Data::Tokens::_get_Dot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_get_Dot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Tokens>("System.Data", "Tokens", "Dot"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Tokens Dot
void System::Data::Tokens::_set_Dot(::System::Data::Tokens value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_set_Dot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Tokens", "Dot", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Tokens Unknown
::System::Data::Tokens System::Data::Tokens::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Tokens>("System.Data", "Tokens", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Tokens Unknown
void System::Data::Tokens::_set_Unknown(::System::Data::Tokens value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Tokens", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Tokens EOS
::System::Data::Tokens System::Data::Tokens::_get_EOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_get_EOS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Tokens>("System.Data", "Tokens", "EOS"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Tokens EOS
void System::Data::Tokens::_set_EOS(::System::Data::Tokens value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::_set_EOS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Tokens", "EOS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::Tokens::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Tokens::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.OperatorInfo
#include "System/Data/OperatorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Data.Nodes _type
[[deprecated("Use field access instead!")]] ::System::Data::Nodes& System::Data::OperatorInfo::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::OperatorInfo::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::System::Data::Nodes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _op
[[deprecated("Use field access instead!")]] int& System::Data::OperatorInfo::dyn__op() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::OperatorInfo::dyn__op");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_op"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _priority
[[deprecated("Use field access instead!")]] int& System::Data::OperatorInfo::dyn__priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::OperatorInfo::dyn__priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_priority"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.InvalidExpressionException
#include "System/Data/InvalidExpressionException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.EvaluateException
#include "System/Data/EvaluateException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.SyntaxErrorException
#include "System/Data/SyntaxErrorException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.ExprException
#include "System/Data/ExprException.hpp"
// Including type: System.OverflowException
#include "System/OverflowException.hpp"
// Including type: System.Data.InvalidExpressionException
#include "System/Data/InvalidExpressionException.hpp"
// Including type: System.Data.SyntaxErrorException
#include "System/Data/SyntaxErrorException.hpp"
// Including type: System.Data.EvaluateException
#include "System/Data/EvaluateException.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Data.OperatorInfo
#include "System/Data/OperatorInfo.hpp"
// Including type: System.Data.Tokens
#include "System/Data/Tokens.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.ExprException._Overflow
::System::OverflowException* System::Data::ExprException::_Overflow(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::_Overflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "_Overflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::OverflowException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.ExprException._Expr
::System::Data::InvalidExpressionException* System::Data::ExprException::_Expr(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::_Expr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "_Expr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::InvalidExpressionException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.ExprException._Syntax
::System::Data::SyntaxErrorException* System::Data::ExprException::_Syntax(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::_Syntax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "_Syntax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SyntaxErrorException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.ExprException._Eval
::System::Data::EvaluateException* System::Data::ExprException::_Eval(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::_Eval");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "_Eval", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::EvaluateException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.ExprException._Eval
::System::Data::EvaluateException* System::Data::ExprException::_Eval(::StringW error, ::System::Exception* innerException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::_Eval");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "_Eval", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error), ::il2cpp_utils::ExtractType(innerException)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::EvaluateException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error, innerException);
}
// Autogenerated method: System.Data.ExprException.InvokeArgument
::System::Exception* System::Data::ExprException::InvokeArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::InvokeArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "InvokeArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExprException.NYI
::System::Exception* System::Data::ExprException::NYI(::StringW moreinfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::NYI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "NYI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(moreinfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, moreinfo);
}
// Autogenerated method: System.Data.ExprException.MissingOperand
::System::Exception* System::Data::ExprException::MissingOperand(::System::Data::OperatorInfo* before) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::MissingOperand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "MissingOperand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(before)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, before);
}
// Autogenerated method: System.Data.ExprException.MissingOperator
::System::Exception* System::Data::ExprException::MissingOperator(::StringW token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::MissingOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "MissingOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: System.Data.ExprException.TypeMismatch
::System::Exception* System::Data::ExprException::TypeMismatch(::StringW expr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::TypeMismatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "TypeMismatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expr);
}
// Autogenerated method: System.Data.ExprException.FunctionArgumentOutOfRange
::System::Exception* System::Data::ExprException::FunctionArgumentOutOfRange(::StringW arg, ::StringW func) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::FunctionArgumentOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "FunctionArgumentOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(func)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg, func);
}
// Autogenerated method: System.Data.ExprException.ExpressionTooComplex
::System::Exception* System::Data::ExprException::ExpressionTooComplex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::ExpressionTooComplex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "ExpressionTooComplex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExprException.UnboundName
::System::Exception* System::Data::ExprException::UnboundName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::UnboundName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "UnboundName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExprException.InvalidString
::System::Exception* System::Data::ExprException::InvalidString(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::InvalidString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "InvalidString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Data.ExprException.UndefinedFunction
::System::Exception* System::Data::ExprException::UndefinedFunction(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::UndefinedFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "UndefinedFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExprException.SyntaxError
::System::Exception* System::Data::ExprException::SyntaxError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::SyntaxError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "SyntaxError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExprException.FunctionArgumentCount
::System::Exception* System::Data::ExprException::FunctionArgumentCount(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::FunctionArgumentCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "FunctionArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExprException.MissingRightParen
::System::Exception* System::Data::ExprException::MissingRightParen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::MissingRightParen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "MissingRightParen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExprException.UnknownToken
::System::Exception* System::Data::ExprException::UnknownToken(::StringW token, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::UnknownToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "UnknownToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token, position);
}
// Autogenerated method: System.Data.ExprException.UnknownToken
::System::Exception* System::Data::ExprException::UnknownToken(::System::Data::Tokens tokExpected, ::System::Data::Tokens tokCurr, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::UnknownToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "UnknownToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tokExpected), ::il2cpp_utils::ExtractType(tokCurr), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tokExpected, tokCurr, position);
}
// Autogenerated method: System.Data.ExprException.DatatypeConvertion
::System::Exception* System::Data::ExprException::DatatypeConvertion(::System::Type* type1, ::System::Type* type2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::DatatypeConvertion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "DatatypeConvertion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type1), ::il2cpp_utils::ExtractType(type2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type1, type2);
}
// Autogenerated method: System.Data.ExprException.DatavalueConvertion
::System::Exception* System::Data::ExprException::DatavalueConvertion(::Il2CppObject* value, ::System::Type* type, ::System::Exception* innerException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::DatavalueConvertion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "DatavalueConvertion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(innerException)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, type, innerException);
}
// Autogenerated method: System.Data.ExprException.InvalidName
::System::Exception* System::Data::ExprException::InvalidName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::InvalidName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "InvalidName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExprException.InvalidDate
::System::Exception* System::Data::ExprException::InvalidDate(::StringW date) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::InvalidDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "InvalidDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(date)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, date);
}
// Autogenerated method: System.Data.ExprException.NonConstantArgument
::System::Exception* System::Data::ExprException::NonConstantArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::NonConstantArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "NonConstantArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExprException.InvalidPattern
::System::Exception* System::Data::ExprException::InvalidPattern(::StringW pat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::InvalidPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "InvalidPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pat)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pat);
}
// Autogenerated method: System.Data.ExprException.InWithoutParentheses
::System::Exception* System::Data::ExprException::InWithoutParentheses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::InWithoutParentheses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "InWithoutParentheses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExprException.InWithoutList
::System::Exception* System::Data::ExprException::InWithoutList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::InWithoutList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "InWithoutList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExprException.InvalidIsSyntax
::System::Exception* System::Data::ExprException::InvalidIsSyntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::InvalidIsSyntax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "InvalidIsSyntax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExprException.Overflow
::System::Exception* System::Data::ExprException::Overflow(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::Overflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "Overflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Data.ExprException.ArgumentType
::System::Exception* System::Data::ExprException::ArgumentType(::StringW function, int arg, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::ArgumentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "ArgumentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(function), ::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, function, arg, type);
}
// Autogenerated method: System.Data.ExprException.ArgumentTypeInteger
::System::Exception* System::Data::ExprException::ArgumentTypeInteger(::StringW function, int arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::ArgumentTypeInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "ArgumentTypeInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(function), ::il2cpp_utils::ExtractType(arg)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, function, arg);
}
// Autogenerated method: System.Data.ExprException.TypeMismatchInBinop
::System::Exception* System::Data::ExprException::TypeMismatchInBinop(int op, ::System::Type* type1, ::System::Type* type2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::TypeMismatchInBinop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "TypeMismatchInBinop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op), ::il2cpp_utils::ExtractType(type1), ::il2cpp_utils::ExtractType(type2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, op, type1, type2);
}
// Autogenerated method: System.Data.ExprException.AmbiguousBinop
::System::Exception* System::Data::ExprException::AmbiguousBinop(int op, ::System::Type* type1, ::System::Type* type2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::AmbiguousBinop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "AmbiguousBinop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op), ::il2cpp_utils::ExtractType(type1), ::il2cpp_utils::ExtractType(type2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, op, type1, type2);
}
// Autogenerated method: System.Data.ExprException.UnsupportedOperator
::System::Exception* System::Data::ExprException::UnsupportedOperator(int op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::UnsupportedOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "UnsupportedOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, op);
}
// Autogenerated method: System.Data.ExprException.InvalidNameBracketing
::System::Exception* System::Data::ExprException::InvalidNameBracketing(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::InvalidNameBracketing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "InvalidNameBracketing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.ExprException.MissingOperandBefore
::System::Exception* System::Data::ExprException::MissingOperandBefore(::StringW op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::MissingOperandBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "MissingOperandBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, op);
}
// Autogenerated method: System.Data.ExprException.TooManyRightParentheses
::System::Exception* System::Data::ExprException::TooManyRightParentheses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::TooManyRightParentheses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "TooManyRightParentheses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExprException.UnresolvedRelation
::System::Exception* System::Data::ExprException::UnresolvedRelation(::StringW name, ::StringW expr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::UnresolvedRelation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "UnresolvedRelation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(expr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, expr);
}
// Autogenerated method: System.Data.ExprException.BindFailure
::System::Data::EvaluateException* System::Data::ExprException::BindFailure(::StringW relationName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::BindFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "BindFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relationName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::EvaluateException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, relationName);
}
// Autogenerated method: System.Data.ExprException.AggregateArgument
::System::Exception* System::Data::ExprException::AggregateArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::AggregateArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "AggregateArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExprException.AggregateUnbound
::System::Exception* System::Data::ExprException::AggregateUnbound(::StringW expr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::AggregateUnbound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "AggregateUnbound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expr);
}
// Autogenerated method: System.Data.ExprException.EvalNoContext
::System::Exception* System::Data::ExprException::EvalNoContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::EvalNoContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "EvalNoContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExprException.ExpressionUnbound
::System::Exception* System::Data::ExprException::ExpressionUnbound(::StringW expr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::ExpressionUnbound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "ExpressionUnbound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expr);
}
// Autogenerated method: System.Data.ExprException.ComputeNotAggregate
::System::Exception* System::Data::ExprException::ComputeNotAggregate(::StringW expr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::ComputeNotAggregate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "ComputeNotAggregate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expr);
}
// Autogenerated method: System.Data.ExprException.FilterConvertion
::System::Exception* System::Data::ExprException::FilterConvertion(::StringW expr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::FilterConvertion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "FilterConvertion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expr);
}
// Autogenerated method: System.Data.ExprException.LookupArgument
::System::Exception* System::Data::ExprException::LookupArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::LookupArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "LookupArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExprException.InvalidType
::System::Exception* System::Data::ExprException::InvalidType(::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::InvalidType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "InvalidType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeName);
}
// Autogenerated method: System.Data.ExprException.InvalidHoursArgument
::System::Exception* System::Data::ExprException::InvalidHoursArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::InvalidHoursArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "InvalidHoursArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExprException.InvalidMinutesArgument
::System::Exception* System::Data::ExprException::InvalidMinutesArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::InvalidMinutesArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "InvalidMinutesArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExprException.InvalidTimeZoneRange
::System::Exception* System::Data::ExprException::InvalidTimeZoneRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::InvalidTimeZoneRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "InvalidTimeZoneRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExprException.MismatchKindandTimeSpan
::System::Exception* System::Data::ExprException::MismatchKindandTimeSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::MismatchKindandTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "MismatchKindandTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.ExprException.UnsupportedDataType
::System::Exception* System::Data::ExprException::UnsupportedDataType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ExprException::UnsupportedDataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "ExprException", "UnsupportedDataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.FunctionNode
#include "System/Data/FunctionNode.hpp"
// Including type: System.Data.Function
#include "System/Data/Function.hpp"
// Including type: System.Data.FunctionId
#include "System/Data/FunctionId.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.DataRowVersion
#include "System/Data/DataRowVersion.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Data.Function[] s_funcs
::ArrayW<::System::Data::Function*> System::Data::FunctionNode::_get_s_funcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::_get_s_funcs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Data::Function*>>("System.Data", "FunctionNode", "s_funcs"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Data.Function[] s_funcs
void System::Data::FunctionNode::_set_s_funcs(::ArrayW<::System::Data::Function*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::_set_s_funcs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionNode", "s_funcs", value));
}
// Autogenerated instance field getter
// Get instance field: readonly System.String _name
[[deprecated("Use field access instead!")]] ::StringW& System::Data::FunctionNode::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _info
[[deprecated("Use field access instead!")]] int& System::Data::FunctionNode::dyn__info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::dyn__info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_info"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _argumentCount
[[deprecated("Use field access instead!")]] int& System::Data::FunctionNode::dyn__argumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::dyn__argumentCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_argumentCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.ExpressionNode[] _arguments
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::ExpressionNode*>& System::Data::FunctionNode::dyn__arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::dyn__arguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arguments"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::ExpressionNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.FunctionNode.get_Aggregate
::System::Data::FunctionId System::Data::FunctionNode::get_Aggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::get_Aggregate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Aggregate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::FunctionId, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.FunctionNode.get_IsAggregate
bool System::Data::FunctionNode::get_IsAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::get_IsAggregate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAggregate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.FunctionNode..cctor
void System::Data::FunctionNode::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "FunctionNode", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.FunctionNode.AddArgument
void System::Data::FunctionNode::AddArgument(::System::Data::ExpressionNode* argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::AddArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argument)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, argument);
}
// Autogenerated method: System.Data.FunctionNode.GetDataType
::System::Type* System::Data::FunctionNode::GetDataType(::System::Data::ExpressionNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::GetDataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Data.FunctionNode.EvalFunction
::Il2CppObject* System::Data::FunctionNode::EvalFunction(::System::Data::FunctionId id, ::ArrayW<::Il2CppObject*> argumentValues, ::System::Data::DataRow* row, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::EvalFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvalFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(argumentValues), ::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, id, argumentValues, row, version);
}
// Autogenerated method: System.Data.FunctionNode.Check
void System::Data::FunctionNode::Check() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::Check");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Check", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.FunctionNode.Bind
void System::Data::FunctionNode::Bind(::System::Data::DataTable* table, ::System::Collections::Generic::List_1<::System::Data::DataColumn*>* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::Bind");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table, list);
}
// Autogenerated method: System.Data.FunctionNode.Eval
::Il2CppObject* System::Data::FunctionNode::Eval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.FunctionNode.Eval
::Il2CppObject* System::Data::FunctionNode::Eval(::System::Data::DataRow* row, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, row, version);
}
// Autogenerated method: System.Data.FunctionNode.Eval
::Il2CppObject* System::Data::FunctionNode::Eval(::ArrayW<int> recordNos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordNos);
}
// Autogenerated method: System.Data.FunctionNode.IsConstant
bool System::Data::FunctionNode::IsConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::IsConstant");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.FunctionNode.IsTableConstant
bool System::Data::FunctionNode::IsTableConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::IsTableConstant");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.FunctionNode.HasLocalAggregate
bool System::Data::FunctionNode::HasLocalAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::HasLocalAggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.FunctionNode.HasRemoteAggregate
bool System::Data::FunctionNode::HasRemoteAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::HasRemoteAggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.FunctionNode.DependsOn
bool System::Data::FunctionNode::DependsOn(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::DependsOn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.FunctionNode.Optimize
::System::Data::ExpressionNode* System::Data::FunctionNode::Optimize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionNode::Optimize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::ExpressionNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.FunctionId
#include "System/Data/FunctionId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId none
::System::Data::FunctionId System::Data::FunctionId::_get_none() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_none");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "none"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId none
void System::Data::FunctionId::_set_none(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_none");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "none", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Ascii
::System::Data::FunctionId System::Data::FunctionId::_get_Ascii() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Ascii");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Ascii"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Ascii
void System::Data::FunctionId::_set_Ascii(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Ascii");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Ascii", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Char
::System::Data::FunctionId System::Data::FunctionId::_get_Char() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Char"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Char
void System::Data::FunctionId::_set_Char(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Char", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Charindex
::System::Data::FunctionId System::Data::FunctionId::_get_Charindex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Charindex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Charindex"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Charindex
void System::Data::FunctionId::_set_Charindex(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Charindex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Charindex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Difference
::System::Data::FunctionId System::Data::FunctionId::_get_Difference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Difference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Difference"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Difference
void System::Data::FunctionId::_set_Difference(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Difference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Difference", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Len
::System::Data::FunctionId System::Data::FunctionId::_get_Len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Len");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Len"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Len
void System::Data::FunctionId::_set_Len(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Len");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Len", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Lower
::System::Data::FunctionId System::Data::FunctionId::_get_Lower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Lower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Lower"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Lower
void System::Data::FunctionId::_set_Lower(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Lower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Lower", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId LTrim
::System::Data::FunctionId System::Data::FunctionId::_get_LTrim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_LTrim");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "LTrim"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId LTrim
void System::Data::FunctionId::_set_LTrim(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_LTrim");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "LTrim", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Patindex
::System::Data::FunctionId System::Data::FunctionId::_get_Patindex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Patindex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Patindex"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Patindex
void System::Data::FunctionId::_set_Patindex(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Patindex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Patindex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Replicate
::System::Data::FunctionId System::Data::FunctionId::_get_Replicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Replicate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Replicate"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Replicate
void System::Data::FunctionId::_set_Replicate(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Replicate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Replicate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Reverse
::System::Data::FunctionId System::Data::FunctionId::_get_Reverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Reverse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Reverse"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Reverse
void System::Data::FunctionId::_set_Reverse(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Reverse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Reverse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Right
::System::Data::FunctionId System::Data::FunctionId::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Right"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Right
void System::Data::FunctionId::_set_Right(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId RTrim
::System::Data::FunctionId System::Data::FunctionId::_get_RTrim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_RTrim");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "RTrim"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId RTrim
void System::Data::FunctionId::_set_RTrim(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_RTrim");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "RTrim", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Soundex
::System::Data::FunctionId System::Data::FunctionId::_get_Soundex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Soundex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Soundex"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Soundex
void System::Data::FunctionId::_set_Soundex(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Soundex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Soundex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Space
::System::Data::FunctionId System::Data::FunctionId::_get_Space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Space");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Space"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Space
void System::Data::FunctionId::_set_Space(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Space");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Space", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Str
::System::Data::FunctionId System::Data::FunctionId::_get_Str() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Str");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Str"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Str
void System::Data::FunctionId::_set_Str(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Str");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Str", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Stuff
::System::Data::FunctionId System::Data::FunctionId::_get_Stuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Stuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Stuff"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Stuff
void System::Data::FunctionId::_set_Stuff(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Stuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Stuff", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Substring
::System::Data::FunctionId System::Data::FunctionId::_get_Substring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Substring");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Substring"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Substring
void System::Data::FunctionId::_set_Substring(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Substring");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Substring", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Upper
::System::Data::FunctionId System::Data::FunctionId::_get_Upper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Upper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Upper"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Upper
void System::Data::FunctionId::_set_Upper(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Upper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Upper", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId IsNull
::System::Data::FunctionId System::Data::FunctionId::_get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_IsNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "IsNull"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId IsNull
void System::Data::FunctionId::_set_IsNull(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_IsNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "IsNull", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Iif
::System::Data::FunctionId System::Data::FunctionId::_get_Iif() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Iif");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Iif"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Iif
void System::Data::FunctionId::_set_Iif(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Iif");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Iif", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Convert
::System::Data::FunctionId System::Data::FunctionId::_get_Convert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Convert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Convert"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Convert
void System::Data::FunctionId::_set_Convert(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Convert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Convert", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId cInt
::System::Data::FunctionId System::Data::FunctionId::_get_cInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_cInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "cInt"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId cInt
void System::Data::FunctionId::_set_cInt(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_cInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "cInt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId cBool
::System::Data::FunctionId System::Data::FunctionId::_get_cBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_cBool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "cBool"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId cBool
void System::Data::FunctionId::_set_cBool(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_cBool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "cBool", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId cDate
::System::Data::FunctionId System::Data::FunctionId::_get_cDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_cDate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "cDate"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId cDate
void System::Data::FunctionId::_set_cDate(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_cDate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "cDate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId cDbl
::System::Data::FunctionId System::Data::FunctionId::_get_cDbl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_cDbl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "cDbl"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId cDbl
void System::Data::FunctionId::_set_cDbl(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_cDbl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "cDbl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId cStr
::System::Data::FunctionId System::Data::FunctionId::_get_cStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_cStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "cStr"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId cStr
void System::Data::FunctionId::_set_cStr(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_cStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "cStr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Abs
::System::Data::FunctionId System::Data::FunctionId::_get_Abs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Abs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Abs"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Abs
void System::Data::FunctionId::_set_Abs(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Abs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Abs", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Acos
::System::Data::FunctionId System::Data::FunctionId::_get_Acos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Acos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Acos"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Acos
void System::Data::FunctionId::_set_Acos(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Acos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Acos", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId In
::System::Data::FunctionId System::Data::FunctionId::_get_In() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_In");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "In"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId In
void System::Data::FunctionId::_set_In(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_In");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "In", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Trim
::System::Data::FunctionId System::Data::FunctionId::_get_Trim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Trim");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Trim"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Trim
void System::Data::FunctionId::_set_Trim(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Trim");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Trim", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Sum
::System::Data::FunctionId System::Data::FunctionId::_get_Sum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Sum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Sum"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Sum
void System::Data::FunctionId::_set_Sum(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Sum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Sum", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Avg
::System::Data::FunctionId System::Data::FunctionId::_get_Avg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Avg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Avg"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Avg
void System::Data::FunctionId::_set_Avg(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Avg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Avg", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Min
::System::Data::FunctionId System::Data::FunctionId::_get_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Min");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Min"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Min
void System::Data::FunctionId::_set_Min(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Min");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Min", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Max
::System::Data::FunctionId System::Data::FunctionId::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Max"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Max
void System::Data::FunctionId::_set_Max(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Max", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Count
::System::Data::FunctionId System::Data::FunctionId::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Count"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Count
void System::Data::FunctionId::_set_Count(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Count", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId StDev
::System::Data::FunctionId System::Data::FunctionId::_get_StDev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_StDev");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "StDev"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId StDev
void System::Data::FunctionId::_set_StDev(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_StDev");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "StDev", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId Var
::System::Data::FunctionId System::Data::FunctionId::_get_Var() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_Var");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "Var"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId Var
void System::Data::FunctionId::_set_Var(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_Var");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "Var", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.FunctionId DateTimeOffset
::System::Data::FunctionId System::Data::FunctionId::_get_DateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_get_DateTimeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::FunctionId>("System.Data", "FunctionId", "DateTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.FunctionId DateTimeOffset
void System::Data::FunctionId::_set_DateTimeOffset(::System::Data::FunctionId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::_set_DateTimeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "FunctionId", "DateTimeOffset", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::FunctionId::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::FunctionId::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.Function
#include "System/Data/Function.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String[] s_functionName
::ArrayW<::StringW> System::Data::Function::_get_s_functionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Function::_get_s_functionName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Data", "Function", "s_functionName"));
}
// Autogenerated static field setter
// Set static field: static System.String[] s_functionName
void System::Data::Function::_set_s_functionName(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Function::_set_s_functionName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Function", "s_functionName", value));
}
// Autogenerated instance field getter
// Get instance field: readonly System.String _name
[[deprecated("Use field access instead!")]] ::StringW& System::Data::Function::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Function::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Data.FunctionId _id
[[deprecated("Use field access instead!")]] ::System::Data::FunctionId& System::Data::Function::dyn__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Function::dyn__id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
  return *reinterpret_cast<::System::Data::FunctionId*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Type _result
[[deprecated("Use field access instead!")]] ::System::Type*& System::Data::Function::dyn__result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Function::dyn__result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_result"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Boolean _isValidateArguments
[[deprecated("Use field access instead!")]] bool& System::Data::Function::dyn__isValidateArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Function::dyn__isValidateArguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isValidateArguments"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Boolean _isVariantArgumentList
[[deprecated("Use field access instead!")]] bool& System::Data::Function::dyn__isVariantArgumentList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Function::dyn__isVariantArgumentList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isVariantArgumentList"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _argumentCount
[[deprecated("Use field access instead!")]] int& System::Data::Function::dyn__argumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Function::dyn__argumentCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_argumentCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Type[] _parameters
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& System::Data::Function::dyn__parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Function::dyn__parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parameters"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Type*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Function..cctor
void System::Data::Function::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Function::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "Function", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.IFilter
#include "System/Data/IFilter.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.DataRowVersion
#include "System/Data/DataRowVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.IFilter.Invoke
bool System::Data::IFilter::Invoke(::System::Data::DataRow* row, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::IFilter::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::IFilter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, row, version);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.LookupNode
#include "System/Data/LookupNode.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.DataRelation
#include "System/Data/DataRelation.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.DataRowVersion
#include "System/Data/DataRowVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String _relationName
[[deprecated("Use field access instead!")]] ::StringW& System::Data::LookupNode::dyn__relationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::LookupNode::dyn__relationName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relationName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _columnName
[[deprecated("Use field access instead!")]] ::StringW& System::Data::LookupNode::dyn__columnName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::LookupNode::dyn__columnName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_columnName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataColumn _column
[[deprecated("Use field access instead!")]] ::System::Data::DataColumn*& System::Data::LookupNode::dyn__column() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::LookupNode::dyn__column");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_column"))->offset;
  return *reinterpret_cast<::System::Data::DataColumn**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataRelation _relation
[[deprecated("Use field access instead!")]] ::System::Data::DataRelation*& System::Data::LookupNode::dyn__relation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::LookupNode::dyn__relation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relation"))->offset;
  return *reinterpret_cast<::System::Data::DataRelation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.LookupNode.Bind
void System::Data::LookupNode::Bind(::System::Data::DataTable* table, ::System::Collections::Generic::List_1<::System::Data::DataColumn*>* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::LookupNode::Bind");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table, list);
}
// Autogenerated method: System.Data.LookupNode.Eval
::Il2CppObject* System::Data::LookupNode::Eval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::LookupNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.LookupNode.Eval
::Il2CppObject* System::Data::LookupNode::Eval(::System::Data::DataRow* row, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::LookupNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, row, version);
}
// Autogenerated method: System.Data.LookupNode.Eval
::Il2CppObject* System::Data::LookupNode::Eval(::ArrayW<int> recordNos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::LookupNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordNos);
}
// Autogenerated method: System.Data.LookupNode.IsConstant
bool System::Data::LookupNode::IsConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::LookupNode::IsConstant");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.LookupNode.IsTableConstant
bool System::Data::LookupNode::IsTableConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::LookupNode::IsTableConstant");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.LookupNode.HasLocalAggregate
bool System::Data::LookupNode::HasLocalAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::LookupNode::HasLocalAggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.LookupNode.HasRemoteAggregate
bool System::Data::LookupNode::HasRemoteAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::LookupNode::HasRemoteAggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.LookupNode.DependsOn
bool System::Data::LookupNode::DependsOn(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::LookupNode::DependsOn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.LookupNode.Optimize
::System::Data::ExpressionNode* System::Data::LookupNode::Optimize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::LookupNode::Optimize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::ExpressionNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.NameNode
#include "System/Data/NameNode.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.DataRowVersion
#include "System/Data/DataRowVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String _name
[[deprecated("Use field access instead!")]] ::StringW& System::Data::NameNode::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NameNode::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _found
[[deprecated("Use field access instead!")]] bool& System::Data::NameNode::dyn__found() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NameNode::dyn__found");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_found"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.DataColumn _column
[[deprecated("Use field access instead!")]] ::System::Data::DataColumn*& System::Data::NameNode::dyn__column() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NameNode::dyn__column");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_column"))->offset;
  return *reinterpret_cast<::System::Data::DataColumn**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.NameNode.ParseName
::StringW System::Data::NameNode::ParseName(::ArrayW<::Il2CppChar> text, int start, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NameNode::ParseName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "NameNode", "ParseName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, start, pos);
}
// Autogenerated method: System.Data.NameNode.get_IsSqlColumn
bool System::Data::NameNode::get_IsSqlColumn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NameNode::get_IsSqlColumn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.NameNode.Bind
void System::Data::NameNode::Bind(::System::Data::DataTable* table, ::System::Collections::Generic::List_1<::System::Data::DataColumn*>* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NameNode::Bind");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table, list);
}
// Autogenerated method: System.Data.NameNode.Eval
::Il2CppObject* System::Data::NameNode::Eval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NameNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.NameNode.Eval
::Il2CppObject* System::Data::NameNode::Eval(::System::Data::DataRow* row, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NameNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, row, version);
}
// Autogenerated method: System.Data.NameNode.Eval
::Il2CppObject* System::Data::NameNode::Eval(::ArrayW<int> records) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NameNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records);
}
// Autogenerated method: System.Data.NameNode.IsConstant
bool System::Data::NameNode::IsConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NameNode::IsConstant");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.NameNode.IsTableConstant
bool System::Data::NameNode::IsTableConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NameNode::IsTableConstant");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.NameNode.HasLocalAggregate
bool System::Data::NameNode::HasLocalAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NameNode::HasLocalAggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.NameNode.HasRemoteAggregate
bool System::Data::NameNode::HasRemoteAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NameNode::HasRemoteAggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.NameNode.DependsOn
bool System::Data::NameNode::DependsOn(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NameNode::DependsOn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.NameNode.Optimize
::System::Data::ExpressionNode* System::Data::NameNode::Optimize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NameNode::Optimize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::ExpressionNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.Operators
#include "System/Data/Operators.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] s_priority
::ArrayW<int> System::Data::Operators::_get_s_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Operators::_get_s_priority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Data", "Operators", "s_priority"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] s_priority
void System::Data::Operators::_set_s_priority(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Operators::_set_s_priority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Operators", "s_priority", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] s_looks
::ArrayW<::StringW> System::Data::Operators::_get_s_looks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Operators::_get_s_looks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Data", "Operators", "s_looks"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] s_looks
void System::Data::Operators::_set_s_looks(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Operators::_set_s_looks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Operators", "s_looks", value));
}
// Autogenerated method: System.Data.Operators..cctor
void System::Data::Operators::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Operators::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "Operators", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.Operators.IsArithmetical
bool System::Data::Operators::IsArithmetical(int op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Operators::IsArithmetical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "Operators", "IsArithmetical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, op);
}
// Autogenerated method: System.Data.Operators.IsLogical
bool System::Data::Operators::IsLogical(int op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Operators::IsLogical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "Operators", "IsLogical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, op);
}
// Autogenerated method: System.Data.Operators.IsRelational
bool System::Data::Operators::IsRelational(int op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Operators::IsRelational");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "Operators", "IsRelational", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, op);
}
// Autogenerated method: System.Data.Operators.Priority
int System::Data::Operators::Priority(int op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Operators::Priority");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "Operators", "Priority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, op);
}
// Autogenerated method: System.Data.Operators.ToString
::StringW System::Data::Operators::ToString(int op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Operators::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "Operators", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, op);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.UnaryNode
#include "System/Data/UnaryNode.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.DataRowVersion
#include "System/Data/DataRowVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _op
[[deprecated("Use field access instead!")]] int& System::Data::UnaryNode::dyn__op() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UnaryNode::dyn__op");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_op"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.ExpressionNode _right
[[deprecated("Use field access instead!")]] ::System::Data::ExpressionNode*& System::Data::UnaryNode::dyn__right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UnaryNode::dyn__right");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_right"))->offset;
  return *reinterpret_cast<::System::Data::ExpressionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.UnaryNode.EvalUnaryOp
::Il2CppObject* System::Data::UnaryNode::EvalUnaryOp(int op, ::Il2CppObject* vl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UnaryNode::EvalUnaryOp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvalUnaryOp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op), ::il2cpp_utils::ExtractType(vl)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, op, vl);
}
// Autogenerated method: System.Data.UnaryNode.Bind
void System::Data::UnaryNode::Bind(::System::Data::DataTable* table, ::System::Collections::Generic::List_1<::System::Data::DataColumn*>* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UnaryNode::Bind");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table, list);
}
// Autogenerated method: System.Data.UnaryNode.Eval
::Il2CppObject* System::Data::UnaryNode::Eval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UnaryNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.UnaryNode.Eval
::Il2CppObject* System::Data::UnaryNode::Eval(::System::Data::DataRow* row, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UnaryNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, row, version);
}
// Autogenerated method: System.Data.UnaryNode.Eval
::Il2CppObject* System::Data::UnaryNode::Eval(::ArrayW<int> recordNos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UnaryNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordNos);
}
// Autogenerated method: System.Data.UnaryNode.IsConstant
bool System::Data::UnaryNode::IsConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UnaryNode::IsConstant");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.UnaryNode.IsTableConstant
bool System::Data::UnaryNode::IsTableConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UnaryNode::IsTableConstant");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.UnaryNode.HasLocalAggregate
bool System::Data::UnaryNode::HasLocalAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UnaryNode::HasLocalAggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.UnaryNode.HasRemoteAggregate
bool System::Data::UnaryNode::HasRemoteAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UnaryNode::HasRemoteAggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.UnaryNode.DependsOn
bool System::Data::UnaryNode::DependsOn(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UnaryNode::DependsOn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.UnaryNode.Optimize
::System::Data::ExpressionNode* System::Data::UnaryNode::Optimize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UnaryNode::Optimize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::ExpressionNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.ZeroOpNode
#include "System/Data/ZeroOpNode.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.DataRowVersion
#include "System/Data/DataRowVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _op
[[deprecated("Use field access instead!")]] int& System::Data::ZeroOpNode::dyn__op() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ZeroOpNode::dyn__op");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_op"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.ZeroOpNode.Bind
void System::Data::ZeroOpNode::Bind(::System::Data::DataTable* table, ::System::Collections::Generic::List_1<::System::Data::DataColumn*>* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ZeroOpNode::Bind");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table, list);
}
// Autogenerated method: System.Data.ZeroOpNode.Eval
::Il2CppObject* System::Data::ZeroOpNode::Eval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ZeroOpNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ZeroOpNode.Eval
::Il2CppObject* System::Data::ZeroOpNode::Eval(::System::Data::DataRow* row, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ZeroOpNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, row, version);
}
// Autogenerated method: System.Data.ZeroOpNode.Eval
::Il2CppObject* System::Data::ZeroOpNode::Eval(::ArrayW<int> recordNos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ZeroOpNode::Eval");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordNos);
}
// Autogenerated method: System.Data.ZeroOpNode.IsConstant
bool System::Data::ZeroOpNode::IsConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ZeroOpNode::IsConstant");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ZeroOpNode.IsTableConstant
bool System::Data::ZeroOpNode::IsTableConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ZeroOpNode::IsTableConstant");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ZeroOpNode.HasLocalAggregate
bool System::Data::ZeroOpNode::HasLocalAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ZeroOpNode::HasLocalAggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ZeroOpNode.HasRemoteAggregate
bool System::Data::ZeroOpNode::HasRemoteAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ZeroOpNode::HasRemoteAggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ZeroOpNode.Optimize
::System::Data::ExpressionNode* System::Data::ZeroOpNode::Optimize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ZeroOpNode::Optimize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ExpressionNode*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::ExpressionNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.ForeignKeyConstraint
#include "System/Data/ForeignKeyConstraint.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.DataRowAction
#include "System/Data/DataRowAction.hpp"
// Including type: System.Data.DataRelation
#include "System/Data/DataRelation.hpp"
// Including type: System.Data.ConstraintCollection
#include "System/Data/ConstraintCollection.hpp"
// Including type: System.Data.DataSet
#include "System/Data/DataSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Data.Rule _deleteRule
[[deprecated("Use field access instead!")]] ::System::Data::Rule& System::Data::ForeignKeyConstraint::dyn__deleteRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::dyn__deleteRule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deleteRule"))->offset;
  return *reinterpret_cast<::System::Data::Rule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.Rule _updateRule
[[deprecated("Use field access instead!")]] ::System::Data::Rule& System::Data::ForeignKeyConstraint::dyn__updateRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::dyn__updateRule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateRule"))->offset;
  return *reinterpret_cast<::System::Data::Rule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.AcceptRejectRule _acceptRejectRule
[[deprecated("Use field access instead!")]] ::System::Data::AcceptRejectRule& System::Data::ForeignKeyConstraint::dyn__acceptRejectRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::dyn__acceptRejectRule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_acceptRejectRule"))->offset;
  return *reinterpret_cast<::System::Data::AcceptRejectRule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataKey _childKey
[[deprecated("Use field access instead!")]] ::System::Data::DataKey& System::Data::ForeignKeyConstraint::dyn__childKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::dyn__childKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childKey"))->offset;
  return *reinterpret_cast<::System::Data::DataKey*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataKey _parentKey
[[deprecated("Use field access instead!")]] ::System::Data::DataKey& System::Data::ForeignKeyConstraint::dyn__parentKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::dyn__parentKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentKey"))->offset;
  return *reinterpret_cast<::System::Data::DataKey*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _constraintName
[[deprecated("Use field access instead!")]] ::StringW& System::Data::ForeignKeyConstraint::dyn__constraintName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::dyn__constraintName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_constraintName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] _parentColumnNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Data::ForeignKeyConstraint::dyn__parentColumnNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::dyn__parentColumnNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentColumnNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] _childColumnNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Data::ForeignKeyConstraint::dyn__childColumnNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::dyn__childColumnNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childColumnNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _parentTableName
[[deprecated("Use field access instead!")]] ::StringW& System::Data::ForeignKeyConstraint::dyn__parentTableName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::dyn__parentTableName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentTableName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.get_ChildKey
::System::Data::DataKey System::Data::ForeignKeyConstraint::get_ChildKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::get_ChildKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChildKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataKey, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.get_Columns
::ArrayW<::System::Data::DataColumn*> System::Data::ForeignKeyConstraint::get_Columns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::get_Columns");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ForeignKeyConstraint*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataColumn*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.get_ParentColumnNames
::ArrayW<::StringW> System::Data::ForeignKeyConstraint::get_ParentColumnNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::get_ParentColumnNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentColumnNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.get_ChildColumnNames
::ArrayW<::StringW> System::Data::ForeignKeyConstraint::get_ChildColumnNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::get_ChildColumnNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChildColumnNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.get_AcceptRejectRule
::System::Data::AcceptRejectRule System::Data::ForeignKeyConstraint::get_AcceptRejectRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::get_AcceptRejectRule");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ForeignKeyConstraint*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::AcceptRejectRule, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.set_AcceptRejectRule
void System::Data::ForeignKeyConstraint::set_AcceptRejectRule(::System::Data::AcceptRejectRule value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::set_AcceptRejectRule");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ForeignKeyConstraint*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.get_DeleteRule
::System::Data::Rule System::Data::ForeignKeyConstraint::get_DeleteRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::get_DeleteRule");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ForeignKeyConstraint*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Rule, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.set_DeleteRule
void System::Data::ForeignKeyConstraint::set_DeleteRule(::System::Data::Rule value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::set_DeleteRule");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ForeignKeyConstraint*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.get_RelatedColumns
::ArrayW<::System::Data::DataColumn*> System::Data::ForeignKeyConstraint::get_RelatedColumns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::get_RelatedColumns");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ForeignKeyConstraint*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataColumn*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.get_RelatedColumnsReference
::ArrayW<::System::Data::DataColumn*> System::Data::ForeignKeyConstraint::get_RelatedColumnsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::get_RelatedColumnsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RelatedColumnsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataColumn*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.get_ParentKey
::System::Data::DataKey System::Data::ForeignKeyConstraint::get_ParentKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::get_ParentKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataKey, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.get_RelatedTable
::System::Data::DataTable* System::Data::ForeignKeyConstraint::get_RelatedTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::get_RelatedTable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ForeignKeyConstraint*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.get_UpdateRule
::System::Data::Rule System::Data::ForeignKeyConstraint::get_UpdateRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::get_UpdateRule");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ForeignKeyConstraint*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Rule, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.set_UpdateRule
void System::Data::ForeignKeyConstraint::set_UpdateRule(::System::Data::Rule value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::set_UpdateRule");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::ForeignKeyConstraint*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.IsKeyNull
bool System::Data::ForeignKeyConstraint::IsKeyNull(::ArrayW<::Il2CppObject*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::IsKeyNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsKeyNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, values);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.CascadeCommit
void System::Data::ForeignKeyConstraint::CascadeCommit(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::CascadeCommit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CascadeCommit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.CascadeDelete
void System::Data::ForeignKeyConstraint::CascadeDelete(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::CascadeDelete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CascadeDelete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.CascadeRollback
void System::Data::ForeignKeyConstraint::CascadeRollback(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::CascadeRollback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CascadeRollback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.CascadeUpdate
void System::Data::ForeignKeyConstraint::CascadeUpdate(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::CascadeUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CascadeUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.CheckCanClearParentTable
void System::Data::ForeignKeyConstraint::CheckCanClearParentTable(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::CheckCanClearParentTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCanClearParentTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.CheckCanRemoveParentRow
void System::Data::ForeignKeyConstraint::CheckCanRemoveParentRow(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::CheckCanRemoveParentRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCanRemoveParentRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.CheckCascade
void System::Data::ForeignKeyConstraint::CheckCascade(::System::Data::DataRow* row, ::System::Data::DataRowAction action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::CheckCascade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCascade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, action);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.NonVirtualCheckState
void System::Data::ForeignKeyConstraint::NonVirtualCheckState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::NonVirtualCheckState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NonVirtualCheckState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.Clone
::System::Data::ForeignKeyConstraint* System::Data::ForeignKeyConstraint::Clone(::System::Data::DataTable* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::ForeignKeyConstraint*, false>(this, ___internal__method, destination);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.Create
void System::Data::ForeignKeyConstraint::Create(::StringW relationName, ::ArrayW<::System::Data::DataColumn*> parentColumns, ::ArrayW<::System::Data::DataColumn*> childColumns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relationName), ::il2cpp_utils::ExtractType(parentColumns), ::il2cpp_utils::ExtractType(childColumns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relationName, parentColumns, childColumns);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.FindParentRelation
::System::Data::DataRelation* System::Data::ForeignKeyConstraint::FindParentRelation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::FindParentRelation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindParentRelation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRelation*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.get_Table
::System::Data::DataTable* System::Data::ForeignKeyConstraint::get_Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::get_Table");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.CheckCanAddToCollection
void System::Data::ForeignKeyConstraint::CheckCanAddToCollection(::System::Data::ConstraintCollection* constraints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::CheckCanAddToCollection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, constraints);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.CanBeRemovedFromCollection
bool System::Data::ForeignKeyConstraint::CanBeRemovedFromCollection(::System::Data::ConstraintCollection* constraints, bool fThrowException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::CanBeRemovedFromCollection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, constraints, fThrowException);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.IsConstraintViolated
bool System::Data::ForeignKeyConstraint::IsConstraintViolated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::IsConstraintViolated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.CanEnableConstraint
bool System::Data::ForeignKeyConstraint::CanEnableConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::CanEnableConstraint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.CheckConstraint
void System::Data::ForeignKeyConstraint::CheckConstraint(::System::Data::DataRow* childRow, ::System::Data::DataRowAction action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::CheckConstraint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, childRow, action);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.CheckState
void System::Data::ForeignKeyConstraint::CheckState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::CheckState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.ContainsColumn
bool System::Data::ForeignKeyConstraint::ContainsColumn(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::ContainsColumn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.Clone
::System::Data::Constraint* System::Data::ForeignKeyConstraint::Clone(::System::Data::DataSet* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Constraint*, false>(this, ___internal__method, destination);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.Clone
::System::Data::Constraint* System::Data::ForeignKeyConstraint::Clone(::System::Data::DataSet* destination, bool ignorNSforTableLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Constraint*, false>(this, ___internal__method, destination, ignorNSforTableLookup);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.Equals
bool System::Data::ForeignKeyConstraint::Equals(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Data.ForeignKeyConstraint.GetHashCode
int System::Data::ForeignKeyConstraint::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ForeignKeyConstraint::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.MappingType
#include "System/Data/MappingType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.MappingType Element
::System::Data::MappingType System::Data::MappingType::_get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MappingType::_get_Element");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::MappingType>("System.Data", "MappingType", "Element"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.MappingType Element
void System::Data::MappingType::_set_Element(::System::Data::MappingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MappingType::_set_Element");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "MappingType", "Element", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.MappingType Attribute
::System::Data::MappingType System::Data::MappingType::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MappingType::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::MappingType>("System.Data", "MappingType", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.MappingType Attribute
void System::Data::MappingType::_set_Attribute(::System::Data::MappingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MappingType::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "MappingType", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.MappingType SimpleContent
::System::Data::MappingType System::Data::MappingType::_get_SimpleContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MappingType::_get_SimpleContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::MappingType>("System.Data", "MappingType", "SimpleContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.MappingType SimpleContent
void System::Data::MappingType::_set_SimpleContent(::System::Data::MappingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MappingType::_set_SimpleContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "MappingType", "SimpleContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.MappingType Hidden
::System::Data::MappingType System::Data::MappingType::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MappingType::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::MappingType>("System.Data", "MappingType", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.MappingType Hidden
void System::Data::MappingType::_set_Hidden(::System::Data::MappingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MappingType::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "MappingType", "Hidden", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::MappingType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MappingType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.MergeFailedEventArgs
#include "System/Data/MergeFailedEventArgs.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataTable <Table>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::MergeFailedEventArgs::dyn_$Table$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MergeFailedEventArgs::dyn_$Table$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Table>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Conflict>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::Data::MergeFailedEventArgs::dyn_$Conflict$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MergeFailedEventArgs::dyn_$Conflict$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Conflict>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.MergeFailedEventArgs.get_Conflict
::StringW System::Data::MergeFailedEventArgs::get_Conflict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MergeFailedEventArgs::get_Conflict");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Conflict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.MergeFailedEventHandler
#include "System/Data/MergeFailedEventHandler.hpp"
// Including type: System.Data.MergeFailedEventArgs
#include "System/Data/MergeFailedEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.MergeFailedEventHandler.Invoke
void System::Data::MergeFailedEventHandler::Invoke(::Il2CppObject* sender, ::System::Data::MergeFailedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MergeFailedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::MergeFailedEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Data.MergeFailedEventHandler.BeginInvoke
::System::IAsyncResult* System::Data::MergeFailedEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::Data::MergeFailedEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MergeFailedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::MergeFailedEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.Data.MergeFailedEventHandler.EndInvoke
void System::Data::MergeFailedEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MergeFailedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::MergeFailedEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.Merger
#include "System/Data/Merger.hpp"
// Including type: System.Data.DataSet
#include "System/Data/DataSet.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Data.DataRelation
#include "System/Data/DataRelation.hpp"
// Including type: System.Data.PropertyCollection
#include "System/Data/PropertyCollection.hpp"
// Including type: System.Data.DataKey
#include "System/Data/DataKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.DataSet _dataSet
[[deprecated("Use field access instead!")]] ::System::Data::DataSet*& System::Data::Merger::dyn__dataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Merger::dyn__dataSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSet"))->offset;
  return *reinterpret_cast<::System::Data::DataSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataTable _dataTable
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::Merger::dyn__dataTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Merger::dyn__dataTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataTable"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _preserveChanges
[[deprecated("Use field access instead!")]] bool& System::Data::Merger::dyn__preserveChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Merger::dyn__preserveChanges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_preserveChanges"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.MissingSchemaAction _missingSchemaAction
[[deprecated("Use field access instead!")]] ::System::Data::MissingSchemaAction& System::Data::Merger::dyn__missingSchemaAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Merger::dyn__missingSchemaAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missingSchemaAction"))->offset;
  return *reinterpret_cast<::System::Data::MissingSchemaAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isStandAlonetable
[[deprecated("Use field access instead!")]] bool& System::Data::Merger::dyn__isStandAlonetable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Merger::dyn__isStandAlonetable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isStandAlonetable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _IgnoreNSforTableLookup
[[deprecated("Use field access instead!")]] bool& System::Data::Merger::dyn__IgnoreNSforTableLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Merger::dyn__IgnoreNSforTableLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_IgnoreNSforTableLookup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Merger.MergeDataSet
void System::Data::Merger::MergeDataSet(::System::Data::DataSet* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Merger::MergeDataSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MergeDataSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: System.Data.Merger.MergeTable
void System::Data::Merger::MergeTable(::System::Data::DataTable* src) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Merger::MergeTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MergeTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src);
}
// Autogenerated method: System.Data.Merger.MergeTable
void System::Data::Merger::MergeTable(::System::Data::DataTable* src, ::System::Data::DataTable* dst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Merger::MergeTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MergeTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dst);
}
// Autogenerated method: System.Data.Merger.MergeSchema
::System::Data::DataTable* System::Data::Merger::MergeSchema(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Merger::MergeSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MergeSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.Merger.MergeTableData
void System::Data::Merger::MergeTableData(::System::Data::DataTable* src) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Merger::MergeTableData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MergeTableData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src);
}
// Autogenerated method: System.Data.Merger.MergeConstraints
void System::Data::Merger::MergeConstraints(::System::Data::DataSet* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Merger::MergeConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MergeConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: System.Data.Merger.MergeConstraints
void System::Data::Merger::MergeConstraints(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Merger::MergeConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MergeConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.Merger.MergeRelation
void System::Data::Merger::MergeRelation(::System::Data::DataRelation* relation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Merger::MergeRelation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MergeRelation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, relation);
}
// Autogenerated method: System.Data.Merger.MergeExtendedProperties
void System::Data::Merger::MergeExtendedProperties(::System::Data::PropertyCollection* src, ::System::Data::PropertyCollection* dst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Merger::MergeExtendedProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MergeExtendedProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, src, dst);
}
// Autogenerated method: System.Data.Merger.GetSrcKey
::System::Data::DataKey System::Data::Merger::GetSrcKey(::System::Data::DataTable* src, ::System::Data::DataTable* dst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Merger::GetSrcKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSrcKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataKey, false>(this, ___internal__method, src, dst);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.MissingSchemaAction
#include "System/Data/MissingSchemaAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.MissingSchemaAction Add
::System::Data::MissingSchemaAction System::Data::MissingSchemaAction::_get_Add() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MissingSchemaAction::_get_Add");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::MissingSchemaAction>("System.Data", "MissingSchemaAction", "Add"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.MissingSchemaAction Add
void System::Data::MissingSchemaAction::_set_Add(::System::Data::MissingSchemaAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MissingSchemaAction::_set_Add");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "MissingSchemaAction", "Add", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.MissingSchemaAction Ignore
::System::Data::MissingSchemaAction System::Data::MissingSchemaAction::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MissingSchemaAction::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::MissingSchemaAction>("System.Data", "MissingSchemaAction", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.MissingSchemaAction Ignore
void System::Data::MissingSchemaAction::_set_Ignore(::System::Data::MissingSchemaAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MissingSchemaAction::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "MissingSchemaAction", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.MissingSchemaAction Error
::System::Data::MissingSchemaAction System::Data::MissingSchemaAction::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MissingSchemaAction::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::MissingSchemaAction>("System.Data", "MissingSchemaAction", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.MissingSchemaAction Error
void System::Data::MissingSchemaAction::_set_Error(::System::Data::MissingSchemaAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MissingSchemaAction::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "MissingSchemaAction", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.MissingSchemaAction AddWithKey
::System::Data::MissingSchemaAction System::Data::MissingSchemaAction::_get_AddWithKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MissingSchemaAction::_get_AddWithKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::MissingSchemaAction>("System.Data", "MissingSchemaAction", "AddWithKey"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.MissingSchemaAction AddWithKey
void System::Data::MissingSchemaAction::_set_AddWithKey(::System::Data::MissingSchemaAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MissingSchemaAction::_set_AddWithKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "MissingSchemaAction", "AddWithKey", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::MissingSchemaAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::MissingSchemaAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.PrimaryKeyTypeConverter
#include "System/Data/PrimaryKeyTypeConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.PrimaryKeyTypeConverter.CanConvertTo
bool System::Data::PrimaryKeyTypeConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::PrimaryKeyTypeConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.Data.PrimaryKeyTypeConverter.ConvertTo
::Il2CppObject* System::Data::PrimaryKeyTypeConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::PrimaryKeyTypeConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::ReferenceConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.PropertyCollection
#include "System/Data/PropertyCollection.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.PropertyCollection.Clone
::Il2CppObject* System::Data::PropertyCollection::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::PropertyCollection::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::Hashtable*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.Range
#include "System/Data/Range.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _min
[[deprecated("Use field access instead!")]] int& System::Data::Range::dyn__min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Range::dyn__min");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_min"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _max
[[deprecated("Use field access instead!")]] int& System::Data::Range::dyn__max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Range::dyn__max");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_max"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isNotNull
[[deprecated("Use field access instead!")]] bool& System::Data::Range::dyn__isNotNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Range::dyn__isNotNull");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isNotNull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Range.get_Count
int System::Data::Range::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Range::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Range.get_IsNull
bool System::Data::Range::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Range::get_IsNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Range.get_Min
int System::Data::Range::get_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Range::get_Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Range..ctor
System::Data::Range::Range(int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Range::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, min, max);
}
// Autogenerated method: System.Data.Range.CheckNull
void System::Data::Range::CheckNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Range::CheckNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.RBTreeError
#include "System/Data/RBTreeError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.RBTreeError InvalidPageSize
::System::Data::RBTreeError System::Data::RBTreeError::_get_InvalidPageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_get_InvalidPageSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::RBTreeError>("System.Data", "RBTreeError", "InvalidPageSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.RBTreeError InvalidPageSize
void System::Data::RBTreeError::_set_InvalidPageSize(::System::Data::RBTreeError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_set_InvalidPageSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "RBTreeError", "InvalidPageSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.RBTreeError PagePositionInSlotInUse
::System::Data::RBTreeError System::Data::RBTreeError::_get_PagePositionInSlotInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_get_PagePositionInSlotInUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::RBTreeError>("System.Data", "RBTreeError", "PagePositionInSlotInUse"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.RBTreeError PagePositionInSlotInUse
void System::Data::RBTreeError::_set_PagePositionInSlotInUse(::System::Data::RBTreeError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_set_PagePositionInSlotInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "RBTreeError", "PagePositionInSlotInUse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.RBTreeError NoFreeSlots
::System::Data::RBTreeError System::Data::RBTreeError::_get_NoFreeSlots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_get_NoFreeSlots");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::RBTreeError>("System.Data", "RBTreeError", "NoFreeSlots"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.RBTreeError NoFreeSlots
void System::Data::RBTreeError::_set_NoFreeSlots(::System::Data::RBTreeError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_set_NoFreeSlots");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "RBTreeError", "NoFreeSlots", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.RBTreeError InvalidStateinInsert
::System::Data::RBTreeError System::Data::RBTreeError::_get_InvalidStateinInsert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_get_InvalidStateinInsert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::RBTreeError>("System.Data", "RBTreeError", "InvalidStateinInsert"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.RBTreeError InvalidStateinInsert
void System::Data::RBTreeError::_set_InvalidStateinInsert(::System::Data::RBTreeError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_set_InvalidStateinInsert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "RBTreeError", "InvalidStateinInsert", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.RBTreeError InvalidNextSizeInDelete
::System::Data::RBTreeError System::Data::RBTreeError::_get_InvalidNextSizeInDelete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_get_InvalidNextSizeInDelete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::RBTreeError>("System.Data", "RBTreeError", "InvalidNextSizeInDelete"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.RBTreeError InvalidNextSizeInDelete
void System::Data::RBTreeError::_set_InvalidNextSizeInDelete(::System::Data::RBTreeError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_set_InvalidNextSizeInDelete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "RBTreeError", "InvalidNextSizeInDelete", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.RBTreeError InvalidStateinDelete
::System::Data::RBTreeError System::Data::RBTreeError::_get_InvalidStateinDelete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_get_InvalidStateinDelete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::RBTreeError>("System.Data", "RBTreeError", "InvalidStateinDelete"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.RBTreeError InvalidStateinDelete
void System::Data::RBTreeError::_set_InvalidStateinDelete(::System::Data::RBTreeError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_set_InvalidStateinDelete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "RBTreeError", "InvalidStateinDelete", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.RBTreeError InvalidNodeSizeinDelete
::System::Data::RBTreeError System::Data::RBTreeError::_get_InvalidNodeSizeinDelete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_get_InvalidNodeSizeinDelete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::RBTreeError>("System.Data", "RBTreeError", "InvalidNodeSizeinDelete"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.RBTreeError InvalidNodeSizeinDelete
void System::Data::RBTreeError::_set_InvalidNodeSizeinDelete(::System::Data::RBTreeError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_set_InvalidNodeSizeinDelete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "RBTreeError", "InvalidNodeSizeinDelete", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.RBTreeError InvalidStateinEndDelete
::System::Data::RBTreeError System::Data::RBTreeError::_get_InvalidStateinEndDelete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_get_InvalidStateinEndDelete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::RBTreeError>("System.Data", "RBTreeError", "InvalidStateinEndDelete"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.RBTreeError InvalidStateinEndDelete
void System::Data::RBTreeError::_set_InvalidStateinEndDelete(::System::Data::RBTreeError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_set_InvalidStateinEndDelete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "RBTreeError", "InvalidStateinEndDelete", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.RBTreeError CannotRotateInvalidsuccessorNodeinDelete
::System::Data::RBTreeError System::Data::RBTreeError::_get_CannotRotateInvalidsuccessorNodeinDelete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_get_CannotRotateInvalidsuccessorNodeinDelete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::RBTreeError>("System.Data", "RBTreeError", "CannotRotateInvalidsuccessorNodeinDelete"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.RBTreeError CannotRotateInvalidsuccessorNodeinDelete
void System::Data::RBTreeError::_set_CannotRotateInvalidsuccessorNodeinDelete(::System::Data::RBTreeError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_set_CannotRotateInvalidsuccessorNodeinDelete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "RBTreeError", "CannotRotateInvalidsuccessorNodeinDelete", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.RBTreeError IndexOutOFRangeinGetNodeByIndex
::System::Data::RBTreeError System::Data::RBTreeError::_get_IndexOutOFRangeinGetNodeByIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_get_IndexOutOFRangeinGetNodeByIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::RBTreeError>("System.Data", "RBTreeError", "IndexOutOFRangeinGetNodeByIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.RBTreeError IndexOutOFRangeinGetNodeByIndex
void System::Data::RBTreeError::_set_IndexOutOFRangeinGetNodeByIndex(::System::Data::RBTreeError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_set_IndexOutOFRangeinGetNodeByIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "RBTreeError", "IndexOutOFRangeinGetNodeByIndex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.RBTreeError RBDeleteFixup
::System::Data::RBTreeError System::Data::RBTreeError::_get_RBDeleteFixup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_get_RBDeleteFixup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::RBTreeError>("System.Data", "RBTreeError", "RBDeleteFixup"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.RBTreeError RBDeleteFixup
void System::Data::RBTreeError::_set_RBDeleteFixup(::System::Data::RBTreeError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_set_RBDeleteFixup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "RBTreeError", "RBDeleteFixup", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.RBTreeError UnsupportedAccessMethod1
::System::Data::RBTreeError System::Data::RBTreeError::_get_UnsupportedAccessMethod1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_get_UnsupportedAccessMethod1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::RBTreeError>("System.Data", "RBTreeError", "UnsupportedAccessMethod1"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.RBTreeError UnsupportedAccessMethod1
void System::Data::RBTreeError::_set_UnsupportedAccessMethod1(::System::Data::RBTreeError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_set_UnsupportedAccessMethod1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "RBTreeError", "UnsupportedAccessMethod1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.RBTreeError UnsupportedAccessMethod2
::System::Data::RBTreeError System::Data::RBTreeError::_get_UnsupportedAccessMethod2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_get_UnsupportedAccessMethod2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::RBTreeError>("System.Data", "RBTreeError", "UnsupportedAccessMethod2"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.RBTreeError UnsupportedAccessMethod2
void System::Data::RBTreeError::_set_UnsupportedAccessMethod2(::System::Data::RBTreeError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_set_UnsupportedAccessMethod2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "RBTreeError", "UnsupportedAccessMethod2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.RBTreeError UnsupportedAccessMethodInNonNillRootSubtree
::System::Data::RBTreeError System::Data::RBTreeError::_get_UnsupportedAccessMethodInNonNillRootSubtree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_get_UnsupportedAccessMethodInNonNillRootSubtree");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::RBTreeError>("System.Data", "RBTreeError", "UnsupportedAccessMethodInNonNillRootSubtree"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.RBTreeError UnsupportedAccessMethodInNonNillRootSubtree
void System::Data::RBTreeError::_set_UnsupportedAccessMethodInNonNillRootSubtree(::System::Data::RBTreeError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_set_UnsupportedAccessMethodInNonNillRootSubtree");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "RBTreeError", "UnsupportedAccessMethodInNonNillRootSubtree", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.RBTreeError AttachedNodeWithZerorbTreeNodeId
::System::Data::RBTreeError System::Data::RBTreeError::_get_AttachedNodeWithZerorbTreeNodeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_get_AttachedNodeWithZerorbTreeNodeId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::RBTreeError>("System.Data", "RBTreeError", "AttachedNodeWithZerorbTreeNodeId"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.RBTreeError AttachedNodeWithZerorbTreeNodeId
void System::Data::RBTreeError::_set_AttachedNodeWithZerorbTreeNodeId(::System::Data::RBTreeError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_set_AttachedNodeWithZerorbTreeNodeId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "RBTreeError", "AttachedNodeWithZerorbTreeNodeId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.RBTreeError CompareNodeInDataRowTree
::System::Data::RBTreeError System::Data::RBTreeError::_get_CompareNodeInDataRowTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_get_CompareNodeInDataRowTree");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::RBTreeError>("System.Data", "RBTreeError", "CompareNodeInDataRowTree"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.RBTreeError CompareNodeInDataRowTree
void System::Data::RBTreeError::_set_CompareNodeInDataRowTree(::System::Data::RBTreeError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_set_CompareNodeInDataRowTree");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "RBTreeError", "CompareNodeInDataRowTree", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.RBTreeError CompareSateliteTreeNodeInDataRowTree
::System::Data::RBTreeError System::Data::RBTreeError::_get_CompareSateliteTreeNodeInDataRowTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_get_CompareSateliteTreeNodeInDataRowTree");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::RBTreeError>("System.Data", "RBTreeError", "CompareSateliteTreeNodeInDataRowTree"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.RBTreeError CompareSateliteTreeNodeInDataRowTree
void System::Data::RBTreeError::_set_CompareSateliteTreeNodeInDataRowTree(::System::Data::RBTreeError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_set_CompareSateliteTreeNodeInDataRowTree");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "RBTreeError", "CompareSateliteTreeNodeInDataRowTree", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.RBTreeError NestedSatelliteTreeEnumerator
::System::Data::RBTreeError System::Data::RBTreeError::_get_NestedSatelliteTreeEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_get_NestedSatelliteTreeEnumerator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::RBTreeError>("System.Data", "RBTreeError", "NestedSatelliteTreeEnumerator"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.RBTreeError NestedSatelliteTreeEnumerator
void System::Data::RBTreeError::_set_NestedSatelliteTreeEnumerator(::System::Data::RBTreeError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::_set_NestedSatelliteTreeEnumerator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "RBTreeError", "NestedSatelliteTreeEnumerator", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::RBTreeError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RBTreeError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.TreeAccessMethod
#include "System/Data/TreeAccessMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.TreeAccessMethod KEY_SEARCH_AND_INDEX
::System::Data::TreeAccessMethod System::Data::TreeAccessMethod::_get_KEY_SEARCH_AND_INDEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::TreeAccessMethod::_get_KEY_SEARCH_AND_INDEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::TreeAccessMethod>("System.Data", "TreeAccessMethod", "KEY_SEARCH_AND_INDEX"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.TreeAccessMethod KEY_SEARCH_AND_INDEX
void System::Data::TreeAccessMethod::_set_KEY_SEARCH_AND_INDEX(::System::Data::TreeAccessMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::TreeAccessMethod::_set_KEY_SEARCH_AND_INDEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "TreeAccessMethod", "KEY_SEARCH_AND_INDEX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.TreeAccessMethod INDEX_ONLY
::System::Data::TreeAccessMethod System::Data::TreeAccessMethod::_get_INDEX_ONLY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::TreeAccessMethod::_get_INDEX_ONLY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::TreeAccessMethod>("System.Data", "TreeAccessMethod", "INDEX_ONLY"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.TreeAccessMethod INDEX_ONLY
void System::Data::TreeAccessMethod::_set_INDEX_ONLY(::System::Data::TreeAccessMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::TreeAccessMethod::_set_INDEX_ONLY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "TreeAccessMethod", "INDEX_ONLY", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::TreeAccessMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::TreeAccessMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.RecordManager
#include "System/Data/RecordManager.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataTable _table
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::RecordManager::dyn__table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::dyn__table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_table"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastFreeRecord
[[deprecated("Use field access instead!")]] int& System::Data::RecordManager::dyn__lastFreeRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::dyn__lastFreeRecord");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFreeRecord"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _minimumCapacity
[[deprecated("Use field access instead!")]] int& System::Data::RecordManager::dyn__minimumCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::dyn__minimumCapacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minimumCapacity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _recordCapacity
[[deprecated("Use field access instead!")]] int& System::Data::RecordManager::dyn__recordCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::dyn__recordCapacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordCapacity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Int32> _freeRecordList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& System::Data::RecordManager::dyn__freeRecordList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::dyn__freeRecordList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_freeRecordList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataRow[] _rows
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::DataRow*>& System::Data::RecordManager::dyn__rows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::dyn__rows");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rows"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::DataRow*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.RecordManager.get_LastFreeRecord
int System::Data::RecordManager::get_LastFreeRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::get_LastFreeRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastFreeRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.RecordManager.get_MinimumCapacity
int System::Data::RecordManager::get_MinimumCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::get_MinimumCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinimumCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.RecordManager.set_MinimumCapacity
void System::Data::RecordManager::set_MinimumCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::set_MinimumCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MinimumCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.RecordManager.get_RecordCapacity
int System::Data::RecordManager::get_RecordCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::get_RecordCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecordCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.RecordManager.set_RecordCapacity
void System::Data::RecordManager::set_RecordCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::set_RecordCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RecordCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.RecordManager.get_Item
::System::Data::DataRow* System::Data::RecordManager::get_Item(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.RecordManager.set_Item
void System::Data::RecordManager::set_Item(int record, ::System::Data::DataRow* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.RecordManager.GrowRecordCapacity
void System::Data::RecordManager::GrowRecordCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::GrowRecordCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrowRecordCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.RecordManager.NewCapacity
int System::Data::RecordManager::NewCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::NewCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "RecordManager", "NewCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, capacity);
}
// Autogenerated method: System.Data.RecordManager.NormalizedMinimumCapacity
int System::Data::RecordManager::NormalizedMinimumCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::NormalizedMinimumCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NormalizedMinimumCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.RecordManager.NewRecordBase
int System::Data::RecordManager::NewRecordBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::NewRecordBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NewRecordBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.RecordManager.FreeRecord
void System::Data::RecordManager::FreeRecord(ByRef<int> record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::FreeRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(record));
}
// Autogenerated method: System.Data.RecordManager.Clear
void System::Data::RecordManager::Clear(bool clearAll) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clearAll)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clearAll);
}
// Autogenerated method: System.Data.RecordManager.ImportRecord
int System::Data::RecordManager::ImportRecord(::System::Data::DataTable* src, int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::ImportRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(record)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, src, record);
}
// Autogenerated method: System.Data.RecordManager.CopyRecord
int System::Data::RecordManager::CopyRecord(::System::Data::DataTable* src, int record, int copy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::CopyRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(record), ::il2cpp_utils::ExtractType(copy)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, src, record, copy);
}
// Autogenerated method: System.Data.RecordManager.SetRowCache
void System::Data::RecordManager::SetRowCache(::ArrayW<::System::Data::DataRow*> newRows) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RecordManager::SetRowCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRowCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newRows)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newRows);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.RelatedView
#include "System/Data/RelatedView.hpp"
// Including type: System.Data.DataRowView
#include "System/Data/DataRowView.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.DataRowVersion
#include "System/Data/DataRowVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Nullable`1<System.Data.DataKey> _parentKey
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::Data::DataKey>& System::Data::RelatedView::dyn__parentKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RelatedView::dyn__parentKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentKey"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::Data::DataKey>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataKey _childKey
[[deprecated("Use field access instead!")]] ::System::Data::DataKey& System::Data::RelatedView::dyn__childKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RelatedView::dyn__childKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childKey"))->offset;
  return *reinterpret_cast<::System::Data::DataKey*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataRowView _parentRowView
[[deprecated("Use field access instead!")]] ::System::Data::DataRowView*& System::Data::RelatedView::dyn__parentRowView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RelatedView::dyn__parentRowView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentRowView"))->offset;
  return *reinterpret_cast<::System::Data::DataRowView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object[] _filterValues
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& System::Data::RelatedView::dyn__filterValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RelatedView::dyn__filterValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filterValues"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.RelatedView.GetParentValues
::ArrayW<::Il2CppObject*> System::Data::RelatedView::GetParentValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RelatedView::GetParentValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParentValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.RelatedView.Invoke
bool System::Data::RelatedView::Invoke(::System::Data::DataRow* row, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RelatedView::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::RelatedView*), 32));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, row, version);
}
// Autogenerated method: System.Data.RelatedView.GetFilter
::System::Data::IFilter* System::Data::RelatedView::GetFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RelatedView::GetFilter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::IFilter*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.RelatedView.AddNew
::System::Data::DataRowView* System::Data::RelatedView::AddNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RelatedView::AddNew");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRowView*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.RelatedView.SetIndex
void System::Data::RelatedView::SetIndex(::StringW newSort, ::System::Data::DataViewRowState newRowStates, ::System::Data::IFilter* newRowFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RelatedView::SetIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::DataView*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newSort, newRowStates, newRowFilter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.RelationshipConverter
#include "System/Data/RelationshipConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.RelationshipConverter.CanConvertTo
bool System::Data::RelationshipConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RelationshipConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.Data.RelationshipConverter.ConvertTo
::Il2CppObject* System::Data::RelationshipConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::RelationshipConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::ComponentModel::TypeConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.Rule
#include "System/Data/Rule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.Rule None
::System::Data::Rule System::Data::Rule::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Rule::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Rule>("System.Data", "Rule", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Rule None
void System::Data::Rule::_set_None(::System::Data::Rule value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Rule::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Rule", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Rule Cascade
::System::Data::Rule System::Data::Rule::_get_Cascade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Rule::_get_Cascade");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Rule>("System.Data", "Rule", "Cascade"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Rule Cascade
void System::Data::Rule::_set_Cascade(::System::Data::Rule value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Rule::_set_Cascade");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Rule", "Cascade", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Rule SetNull
::System::Data::Rule System::Data::Rule::_get_SetNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Rule::_get_SetNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Rule>("System.Data", "Rule", "SetNull"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Rule SetNull
void System::Data::Rule::_set_SetNull(::System::Data::Rule value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Rule::_set_SetNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Rule", "SetNull", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Rule SetDefault
::System::Data::Rule System::Data::Rule::_get_SetDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Rule::_get_SetDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Rule>("System.Data", "Rule", "SetDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Rule SetDefault
void System::Data::Rule::_set_SetDefault(::System::Data::Rule value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Rule::_set_SetDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Rule", "SetDefault", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::Rule::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Rule::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.SchemaSerializationMode
#include "System/Data/SchemaSerializationMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.SchemaSerializationMode IncludeSchema
::System::Data::SchemaSerializationMode System::Data::SchemaSerializationMode::_get_IncludeSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SchemaSerializationMode::_get_IncludeSchema");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SchemaSerializationMode>("System.Data", "SchemaSerializationMode", "IncludeSchema"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SchemaSerializationMode IncludeSchema
void System::Data::SchemaSerializationMode::_set_IncludeSchema(::System::Data::SchemaSerializationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SchemaSerializationMode::_set_IncludeSchema");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "SchemaSerializationMode", "IncludeSchema", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.SchemaSerializationMode ExcludeSchema
::System::Data::SchemaSerializationMode System::Data::SchemaSerializationMode::_get_ExcludeSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SchemaSerializationMode::_get_ExcludeSchema");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SchemaSerializationMode>("System.Data", "SchemaSerializationMode", "ExcludeSchema"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SchemaSerializationMode ExcludeSchema
void System::Data::SchemaSerializationMode::_set_ExcludeSchema(::System::Data::SchemaSerializationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SchemaSerializationMode::_set_ExcludeSchema");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "SchemaSerializationMode", "ExcludeSchema", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::SchemaSerializationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SchemaSerializationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.IndexField
#include "System/Data/IndexField.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Data.DataColumn Column
[[deprecated("Use field access instead!")]] ::System::Data::DataColumn*& System::Data::IndexField::dyn_Column() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::IndexField::dyn_Column");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Column"))->offset;
  return *reinterpret_cast<::System::Data::DataColumn**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean IsDescending
[[deprecated("Use field access instead!")]] bool& System::Data::IndexField::dyn_IsDescending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::IndexField::dyn_IsDescending");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsDescending"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.IndexField..ctor
// ABORTED elsewhere.  System::Data::IndexField::IndexField(::System::Data::DataColumn* column, bool isDescending)
// Autogenerated method: System.Data.IndexField.Equals
bool System::Data::IndexField::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::IndexField::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Data.IndexField.GetHashCode
int System::Data::IndexField::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::IndexField::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.IndexField.op_Equality
bool System::Data::operator ==(const ::System::Data::IndexField& if1, const ::System::Data::IndexField& if2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::IndexField::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "IndexField", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(if1), ::il2cpp_utils::ExtractType(if2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, if1, if2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Index
#include "System/Data/Index.hpp"
// Including type: System.Data.Index/System.Data.IndexTree
#include "System/Data/Index_IndexTree.hpp"
// Including type: System.Data.Index/System.Data.<>c
#include "System/Data/Index_--c.hpp"
// Including type: System.Data.Index/System.Data.<>c__DisplayClass86_0
#include "System/Data/Index_--c__DisplayClass86_0.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.WeakReference
#include "System/WeakReference.hpp"
// Including type: System.Data.Listeners`1
#include "System/Data/Listeners_1.hpp"
// Including type: System.Data.DataViewListener
#include "System/Data/DataViewListener.hpp"
// Including type: System.Data.IFilter
#include "System/Data/IFilter.hpp"
// Including type: System.Data.DataColumnCollection
#include "System/Data/DataColumnCollection.hpp"
// Including type: System.Data.Range
#include "System/Data/Range.hpp"
// Including type: System.ComponentModel.ListChangedType
#include "System/ComponentModel/ListChangedType.hpp"
// Including type: System.ComponentModel.ListChangedEventArgs
#include "System/ComponentModel/ListChangedEventArgs.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Data.RBTree`1/System.Data.RBTreeEnumerator
#include "System/Data/RBTree_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 s_objectTypeCount
int System::Data::Index::_get_s_objectTypeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::_get_s_objectTypeCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data", "Index", "s_objectTypeCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_objectTypeCount
void System::Data::Index::_set_s_objectTypeCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::_set_s_objectTypeCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "Index", "s_objectTypeCount", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataTable _table
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::Index::dyn__table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::dyn__table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_table"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Data.IndexField[] _indexFields
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::IndexField>& System::Data::Index::dyn__indexFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::dyn__indexFields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_indexFields"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::IndexField>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Comparison`1<System.Data.DataRow> _comparison
[[deprecated("Use field access instead!")]] ::System::Comparison_1<::System::Data::DataRow*>*& System::Data::Index::dyn__comparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::dyn__comparison");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comparison"))->offset;
  return *reinterpret_cast<::System::Comparison_1<::System::Data::DataRow*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.DataViewRowState _recordStates
[[deprecated("Use field access instead!")]] ::System::Data::DataViewRowState& System::Data::Index::dyn__recordStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::dyn__recordStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordStates"))->offset;
  return *reinterpret_cast<::System::Data::DataViewRowState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.WeakReference _rowFilter
[[deprecated("Use field access instead!")]] ::System::WeakReference*& System::Data::Index::dyn__rowFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::dyn__rowFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowFilter"))->offset;
  return *reinterpret_cast<::System::WeakReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.Index/System.Data.IndexTree _records
[[deprecated("Use field access instead!")]] ::System::Data::Index::IndexTree*& System::Data::Index::dyn__records() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::dyn__records");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_records"))->offset;
  return *reinterpret_cast<::System::Data::Index::IndexTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _recordCount
[[deprecated("Use field access instead!")]] int& System::Data::Index::dyn__recordCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::dyn__recordCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _refCount
[[deprecated("Use field access instead!")]] int& System::Data::Index::dyn__refCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::dyn__refCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.Listeners`1<System.Data.DataViewListener> _listeners
[[deprecated("Use field access instead!")]] ::System::Data::Listeners_1<::System::Data::DataViewListener*>*& System::Data::Index::dyn__listeners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::dyn__listeners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_listeners"))->offset;
  return *reinterpret_cast<::System::Data::Listeners_1<::System::Data::DataViewListener*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _suspendEvents
[[deprecated("Use field access instead!")]] bool& System::Data::Index::dyn__suspendEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::dyn__suspendEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suspendEvents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isSharable
[[deprecated("Use field access instead!")]] bool& System::Data::Index::dyn__isSharable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::dyn__isSharable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isSharable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _hasRemoteAggregate
[[deprecated("Use field access instead!")]] bool& System::Data::Index::dyn__hasRemoteAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::dyn__hasRemoteAggregate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasRemoteAggregate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _objectID
[[deprecated("Use field access instead!")]] int& System::Data::Index::dyn__objectID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::dyn__objectID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Index.get_HasRemoteAggregate
bool System::Data::Index::get_HasRemoteAggregate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::get_HasRemoteAggregate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasRemoteAggregate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Index.get_ObjectID
int System::Data::Index::get_ObjectID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::get_ObjectID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Index.get_RecordStates
::System::Data::DataViewRowState System::Data::Index::get_RecordStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::get_RecordStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecordStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataViewRowState, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Index.get_RowFilter
::System::Data::IFilter* System::Data::Index::get_RowFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::get_RowFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RowFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::IFilter*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Index.get_HasDuplicates
bool System::Data::Index::get_HasDuplicates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::get_HasDuplicates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasDuplicates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Index.get_RecordCount
int System::Data::Index::get_RecordCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::get_RecordCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecordCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Index.get_RefCount
int System::Data::Index::get_RefCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::get_RefCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RefCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Index.get_DoListChanged
bool System::Data::Index::get_DoListChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::get_DoListChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DoListChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Index.get_Table
::System::Data::DataTable* System::Data::Index::get_Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::get_Table");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Table", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Index.GetAllFields
::ArrayW<::System::Data::IndexField> System::Data::Index::GetAllFields(::System::Data::DataColumnCollection* columns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::GetAllFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "Index", "GetAllFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(columns)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::IndexField>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, columns);
}
// Autogenerated method: System.Data.Index.Equal
bool System::Data::Index::Equal(::ArrayW<::System::Data::IndexField> indexDesc, ::System::Data::DataViewRowState recordStates, ::System::Data::IFilter* rowFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::Equal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indexDesc), ::il2cpp_utils::ExtractType(recordStates), ::il2cpp_utils::ExtractType(rowFilter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, indexDesc, recordStates, rowFilter);
}
// Autogenerated method: System.Data.Index.GetRecord
int System::Data::Index::GetRecord(int recordIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::GetRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordIndex);
}
// Autogenerated method: System.Data.Index.AcceptRecord
bool System::Data::Index::AcceptRecord(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::AcceptRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcceptRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Index.AcceptRecord
bool System::Data::Index::AcceptRecord(int record, ::System::Data::IFilter* filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::AcceptRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcceptRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record), ::il2cpp_utils::ExtractType(filter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record, filter);
}
// Autogenerated method: System.Data.Index.ListChangedAdd
void System::Data::Index::ListChangedAdd(::System::Data::DataViewListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::ListChangedAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListChangedAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener);
}
// Autogenerated method: System.Data.Index.ListChangedRemove
void System::Data::Index::ListChangedRemove(::System::Data::DataViewListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::ListChangedRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListChangedRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener);
}
// Autogenerated method: System.Data.Index.AddRef
void System::Data::Index::AddRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::AddRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Index.RemoveRef
int System::Data::Index::RemoveRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::RemoveRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Index.ApplyChangeAction
void System::Data::Index::ApplyChangeAction(int record, int action, int changeRecord) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::ApplyChangeAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyChangeAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record), ::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(changeRecord)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, action, changeRecord);
}
// Autogenerated method: System.Data.Index.CheckUnique
bool System::Data::Index::CheckUnique() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::CheckUnique");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckUnique", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Index.CompareRecords
int System::Data::Index::CompareRecords(int record1, int record2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::CompareRecords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareRecords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record1), ::il2cpp_utils::ExtractType(record2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, record1, record2);
}
// Autogenerated method: System.Data.Index.CompareDataRows
int System::Data::Index::CompareDataRows(int record1, int record2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::CompareDataRows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareDataRows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record1), ::il2cpp_utils::ExtractType(record2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, record1, record2);
}
// Autogenerated method: System.Data.Index.CompareDuplicateRecords
int System::Data::Index::CompareDuplicateRecords(int record1, int record2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::CompareDuplicateRecords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareDuplicateRecords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record1), ::il2cpp_utils::ExtractType(record2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, record1, record2);
}
// Autogenerated method: System.Data.Index.CompareRecordToKey
int System::Data::Index::CompareRecordToKey(int record1, ::ArrayW<::Il2CppObject*> vals) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::CompareRecordToKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareRecordToKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record1), ::il2cpp_utils::ExtractType(vals)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, record1, vals);
}
// Autogenerated method: System.Data.Index.DeleteRecordFromIndex
void System::Data::Index::DeleteRecordFromIndex(int recordIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::DeleteRecordFromIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteRecordFromIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordIndex);
}
// Autogenerated method: System.Data.Index.DeleteRecord
void System::Data::Index::DeleteRecord(int recordIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::DeleteRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordIndex);
}
// Autogenerated method: System.Data.Index.DeleteRecord
void System::Data::Index::DeleteRecord(int recordIndex, bool fireEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::DeleteRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordIndex), ::il2cpp_utils::ExtractType(fireEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordIndex, fireEvent);
}
// Autogenerated method: System.Data.Index.GetEnumerator
typename ::System::Data::RBTree_1<int>::RBTreeEnumerator System::Data::Index::GetEnumerator(int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<typename ::System::Data::RBTree_1<int>::RBTreeEnumerator, false>(this, ___internal__method, startIndex);
}
// Autogenerated method: System.Data.Index.GetIndex
int System::Data::Index::GetIndex(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::GetIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Index.GetIndex
int System::Data::Index::GetIndex(int record, int changeRecord) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::GetIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record), ::il2cpp_utils::ExtractType(changeRecord)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, record, changeRecord);
}
// Autogenerated method: System.Data.Index.GetUniqueKeyValues
::ArrayW<::Il2CppObject*> System::Data::Index::GetUniqueKeyValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::GetUniqueKeyValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUniqueKeyValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Index.FindNodeByKey
int System::Data::Index::FindNodeByKey(::Il2CppObject* originalKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::FindNodeByKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindNodeByKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalKey)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, originalKey);
}
// Autogenerated method: System.Data.Index.FindNodeByKeys
int System::Data::Index::FindNodeByKeys(::ArrayW<::Il2CppObject*> originalKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::FindNodeByKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindNodeByKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalKey)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, originalKey);
}
// Autogenerated method: System.Data.Index.FindNodeByKeyRecord
int System::Data::Index::FindNodeByKeyRecord(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::FindNodeByKeyRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindNodeByKeyRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Index.GetRangeFromNode
::System::Data::Range System::Data::Index::GetRangeFromNode(int nodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::GetRangeFromNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRangeFromNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Range, false>(this, ___internal__method, nodeId);
}
// Autogenerated method: System.Data.Index.FindRecords
::System::Data::Range System::Data::Index::FindRecords(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::FindRecords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindRecords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Range, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Data.Index.FindRecords
::System::Data::Range System::Data::Index::FindRecords(::ArrayW<::Il2CppObject*> key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::FindRecords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindRecords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Range, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Data.Index.FireResetEvent
void System::Data::Index::FireResetEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::FireResetEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireResetEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Index.GetChangeAction
int System::Data::Index::GetChangeAction(::System::Data::DataViewRowState oldState, ::System::Data::DataViewRowState newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::GetChangeAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChangeAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldState), ::il2cpp_utils::ExtractType(newState)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, oldState, newState);
}
// Autogenerated method: System.Data.Index.GetReplaceAction
int System::Data::Index::GetReplaceAction(::System::Data::DataViewRowState oldState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::GetReplaceAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "Index", "GetReplaceAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldState)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oldState);
}
// Autogenerated method: System.Data.Index.GetRow
::System::Data::DataRow* System::Data::Index::GetRow(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::GetRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Data.Index.GetRows
::ArrayW<::System::Data::DataRow*> System::Data::Index::GetRows(::ArrayW<::Il2CppObject*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::GetRows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataRow*>, false>(this, ___internal__method, values);
}
// Autogenerated method: System.Data.Index.GetRows
::ArrayW<::System::Data::DataRow*> System::Data::Index::GetRows(::System::Data::Range range) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::GetRows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(range)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataRow*>, false>(this, ___internal__method, range);
}
// Autogenerated method: System.Data.Index.InitRecords
void System::Data::Index::InitRecords(::System::Data::IFilter* filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::InitRecords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitRecords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, filter);
}
// Autogenerated method: System.Data.Index.InsertRecordToIndex
int System::Data::Index::InsertRecordToIndex(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::InsertRecordToIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertRecordToIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Index.InsertRecord
int System::Data::Index::InsertRecord(int record, bool fireEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::InsertRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record), ::il2cpp_utils::ExtractType(fireEvent)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, record, fireEvent);
}
// Autogenerated method: System.Data.Index.IsKeyInIndex
bool System::Data::Index::IsKeyInIndex(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::IsKeyInIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsKeyInIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Data.Index.IsKeyInIndex
bool System::Data::Index::IsKeyInIndex(::ArrayW<::Il2CppObject*> key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::IsKeyInIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsKeyInIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Data.Index.IsKeyRecordInIndex
bool System::Data::Index::IsKeyRecordInIndex(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::IsKeyRecordInIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsKeyRecordInIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Index.OnListChanged
void System::Data::Index::OnListChanged(::System::ComponentModel::ListChangedType changedType, int newIndex, int oldIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::OnListChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnListChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(changedType), ::il2cpp_utils::ExtractType(newIndex), ::il2cpp_utils::ExtractType(oldIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, changedType, newIndex, oldIndex);
}
// Autogenerated method: System.Data.Index.OnListChanged
void System::Data::Index::OnListChanged(::System::ComponentModel::ListChangedType changedType, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::OnListChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnListChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(changedType), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, changedType, index);
}
// Autogenerated method: System.Data.Index.OnListChanged
void System::Data::Index::OnListChanged(::System::ComponentModel::ListChangedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::OnListChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnListChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Data.Index.MaintainDataView
void System::Data::Index::MaintainDataView(::System::ComponentModel::ListChangedType changedType, int record, bool trackAddRemove) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::MaintainDataView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaintainDataView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(changedType), ::il2cpp_utils::ExtractType(record), ::il2cpp_utils::ExtractType(trackAddRemove)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, changedType, record, trackAddRemove);
}
// Autogenerated method: System.Data.Index.Reset
void System::Data::Index::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Index.RecordChanged
void System::Data::Index::RecordChanged(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::RecordChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Index.RecordChanged
void System::Data::Index::RecordChanged(int oldIndex, int newIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::RecordChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldIndex), ::il2cpp_utils::ExtractType(newIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldIndex, newIndex);
}
// Autogenerated method: System.Data.Index.RecordStateChanged
void System::Data::Index::RecordStateChanged(int record, ::System::Data::DataViewRowState oldState, ::System::Data::DataViewRowState newState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::RecordStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record), ::il2cpp_utils::ExtractType(oldState), ::il2cpp_utils::ExtractType(newState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, oldState, newState);
}
// Autogenerated method: System.Data.Index.RecordStateChanged
void System::Data::Index::RecordStateChanged(int oldRecord, ::System::Data::DataViewRowState oldOldState, ::System::Data::DataViewRowState oldNewState, int newRecord, ::System::Data::DataViewRowState newOldState, ::System::Data::DataViewRowState newNewState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::RecordStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldRecord), ::il2cpp_utils::ExtractType(oldOldState), ::il2cpp_utils::ExtractType(oldNewState), ::il2cpp_utils::ExtractType(newRecord), ::il2cpp_utils::ExtractType(newOldState), ::il2cpp_utils::ExtractType(newNewState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldRecord, oldOldState, oldNewState, newRecord, newOldState, newNewState);
}
// Autogenerated method: System.Data.Index.GetUniqueKeyValues
void System::Data::Index::GetUniqueKeyValues(::System::Collections::Generic::List_1<::ArrayW<::Il2CppObject*>>* list, int curNodeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::GetUniqueKeyValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUniqueKeyValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(curNodeId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, list, curNodeId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.Index/System.Data.IndexTree
#include "System/Data/Index_IndexTree.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Data.Index _index
[[deprecated("Use field access instead!")]] ::System::Data::Index*& System::Data::Index::IndexTree::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::IndexTree::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<::System::Data::Index**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Index/System.Data.IndexTree.CompareNode
int System::Data::Index::IndexTree::CompareNode(int record1, int record2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::IndexTree::CompareNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Index::IndexTree*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, record1, record2);
}
// Autogenerated method: System.Data.Index/System.Data.IndexTree.CompareSateliteTreeNode
int System::Data::Index::IndexTree::CompareSateliteTreeNode(int record1, int record2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::IndexTree::CompareSateliteTreeNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Index::IndexTree*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, record1, record2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.Index/System.Data.<>c
#include "System/Data/Index_--c.hpp"
// Including type: System.Data.DataViewListener
#include "System/Data/DataViewListener.hpp"
// Including type: System.ComponentModel.ListChangedEventArgs
#include "System/ComponentModel/ListChangedEventArgs.hpp"
// Including type: System.Data.Listeners`1/System.Data.Func`2
#include "System/Data/Listeners_1.hpp"
// Including type: System.Data.Listeners`1/System.Data.Action`4
// Already included the same include: System/Data/Listeners_1.hpp
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Data.Index/System.Data.<>c <>9
::System::Data::Index::$$c* System::Data::Index::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Data::Index::$$c*>("System.Data", "Index/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.Index/System.Data.<>c <>9
void System::Data::Index::$$c::_set_$$9(::System::Data::Index::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Data", "Index/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Listeners`1/System.Data.Func`2<System.Data.DataViewListener,System.Data.DataViewListener,System.Boolean> <>9__22_0
typename ::System::Data::Listeners_1<::System::Data::DataViewListener*>::Func_2<::System::Data::DataViewListener*, bool>* System::Data::Index::$$c::_get_$$9__22_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::$$c::_get_$$9__22_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::System::Data::Listeners_1<::System::Data::DataViewListener*>::Func_2<::System::Data::DataViewListener*, bool>*>("System.Data", "Index/<>c", "<>9__22_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Listeners`1/System.Data.Func`2<System.Data.DataViewListener,System.Data.DataViewListener,System.Boolean> <>9__22_0
void System::Data::Index::$$c::_set_$$9__22_0(typename ::System::Data::Listeners_1<::System::Data::DataViewListener*>::Func_2<::System::Data::DataViewListener*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::$$c::_set_$$9__22_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Data", "Index/<>c", "<>9__22_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Listeners`1/System.Data.Action`4<System.Data.DataViewListener,System.Data.DataViewListener,System.ComponentModel.ListChangedEventArgs,System.Boolean,System.Boolean> <>9__85_0
typename ::System::Data::Listeners_1<::System::Data::DataViewListener*>::Action_4<::System::Data::DataViewListener*, ::System::ComponentModel::ListChangedEventArgs*, bool, bool>* System::Data::Index::$$c::_get_$$9__85_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::$$c::_get_$$9__85_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::System::Data::Listeners_1<::System::Data::DataViewListener*>::Action_4<::System::Data::DataViewListener*, ::System::ComponentModel::ListChangedEventArgs*, bool, bool>*>("System.Data", "Index/<>c", "<>9__85_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Listeners`1/System.Data.Action`4<System.Data.DataViewListener,System.Data.DataViewListener,System.ComponentModel.ListChangedEventArgs,System.Boolean,System.Boolean> <>9__85_0
void System::Data::Index::$$c::_set_$$9__85_0(typename ::System::Data::Listeners_1<::System::Data::DataViewListener*>::Action_4<::System::Data::DataViewListener*, ::System::ComponentModel::ListChangedEventArgs*, bool, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::$$c::_set_$$9__85_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Data", "Index/<>c", "<>9__85_0", value)));
}
// Autogenerated method: System.Data.Index/System.Data.<>c..cctor
void System::Data::Index::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "Index/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.Index/System.Data.<>c.<.ctor>b__22_0
bool System::Data::Index::$$c::$_ctor$b__22_0(::System::Data::DataViewListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::$$c::<.ctor>b__22_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__22_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, listener);
}
// Autogenerated method: System.Data.Index/System.Data.<>c.<OnListChanged>b__85_0
void System::Data::Index::$$c::$OnListChanged$b__85_0(::System::Data::DataViewListener* listener, ::System::ComponentModel::ListChangedEventArgs* args, bool arg2, bool arg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::$$c::<OnListChanged>b__85_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnListChanged>b__85_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener, args, arg2, arg3);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.Index/System.Data.<>c__DisplayClass86_0
#include "System/Data/Index_--c__DisplayClass86_0.hpp"
// Including type: System.Data.DataViewListener
#include "System/Data/DataViewListener.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.ComponentModel.ListChangedType changedType
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ListChangedType& System::Data::Index::$$c__DisplayClass86_0::dyn_changedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::$$c__DisplayClass86_0::dyn_changedType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "changedType"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ListChangedType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Index/System.Data.<>c__DisplayClass86_0.<MaintainDataView>b__0
void System::Data::Index::$$c__DisplayClass86_0::$MaintainDataView$b__0(::System::Data::DataViewListener* listener, ::System::ComponentModel::ListChangedType type, ::System::Data::DataRow* row, bool track) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Index::$$c__DisplayClass86_0::<MaintainDataView>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<MaintainDataView>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(track)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener, type, row, track);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.SimpleType
#include "System/Data/SimpleType.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Data.Common.StorageType
#include "System/Data/Common/StorageType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _baseType
[[deprecated("Use field access instead!")]] ::StringW& System::Data::SimpleType::dyn__baseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::dyn__baseType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.SimpleType _baseSimpleType
[[deprecated("Use field access instead!")]] ::System::Data::SimpleType*& System::Data::SimpleType::dyn__baseSimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::dyn__baseSimpleType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseSimpleType"))->offset;
  return *reinterpret_cast<::System::Data::SimpleType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName _xmlBaseType
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Data::SimpleType::dyn__xmlBaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::dyn__xmlBaseType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xmlBaseType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _name
[[deprecated("Use field access instead!")]] ::StringW& System::Data::SimpleType::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _length
[[deprecated("Use field access instead!")]] int& System::Data::SimpleType::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _minLength
[[deprecated("Use field access instead!")]] int& System::Data::SimpleType::dyn__minLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::dyn__minLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxLength
[[deprecated("Use field access instead!")]] int& System::Data::SimpleType::dyn__maxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::dyn__maxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _pattern
[[deprecated("Use field access instead!")]] ::StringW& System::Data::SimpleType::dyn__pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::dyn__pattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _ns
[[deprecated("Use field access instead!")]] ::StringW& System::Data::SimpleType::dyn__ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::dyn__ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _maxExclusive
[[deprecated("Use field access instead!")]] ::StringW& System::Data::SimpleType::dyn__maxExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::dyn__maxExclusive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxExclusive"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _maxInclusive
[[deprecated("Use field access instead!")]] ::StringW& System::Data::SimpleType::dyn__maxInclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::dyn__maxInclusive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxInclusive"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _minExclusive
[[deprecated("Use field access instead!")]] ::StringW& System::Data::SimpleType::dyn__minExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::dyn__minExclusive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minExclusive"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _minInclusive
[[deprecated("Use field access instead!")]] ::StringW& System::Data::SimpleType::dyn__minInclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::dyn__minInclusive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minInclusive"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _enumeration
[[deprecated("Use field access instead!")]] ::StringW& System::Data::SimpleType::dyn__enumeration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::dyn__enumeration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enumeration"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.SimpleType.get_BaseType
::StringW System::Data::SimpleType::get_BaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::get_BaseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SimpleType.get_XmlBaseType
::System::Xml::XmlQualifiedName* System::Data::SimpleType::get_XmlBaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::get_XmlBaseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlBaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SimpleType.get_Name
::StringW System::Data::SimpleType::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SimpleType.get_Namespace
::StringW System::Data::SimpleType::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SimpleType.get_Length
int System::Data::SimpleType::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SimpleType.get_MaxLength
int System::Data::SimpleType::get_MaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::get_MaxLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SimpleType.set_MaxLength
void System::Data::SimpleType::set_MaxLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::set_MaxLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SimpleType.get_BaseSimpleType
::System::Data::SimpleType* System::Data::SimpleType::get_BaseSimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::get_BaseSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SimpleType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SimpleType.get_SimpleTypeQualifiedName
::StringW System::Data::SimpleType::get_SimpleTypeQualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::get_SimpleTypeQualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SimpleTypeQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SimpleType.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Data::SimpleType::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SimpleType*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Data.SimpleType.LoadTypeValues
void System::Data::SimpleType::LoadTypeValues(::System::Xml::Schema::XmlSchemaSimpleType* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::LoadTypeValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadTypeValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Data.SimpleType.IsPlainString
bool System::Data::SimpleType::IsPlainString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::IsPlainString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPlainString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SimpleType.QualifiedName
::StringW System::Data::SimpleType::QualifiedName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::QualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Data.SimpleType.ToNode
::System::Xml::XmlNode* System::Data::SimpleType::ToNode(::System::Xml::XmlDocument* dc, ::System::Collections::Hashtable* prefixes, bool inRemoting) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::ToNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dc), ::il2cpp_utils::ExtractType(prefixes), ::il2cpp_utils::ExtractType(inRemoting)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, dc, prefixes, inRemoting);
}
// Autogenerated method: System.Data.SimpleType.CreateEnumeratedType
::System::Data::SimpleType* System::Data::SimpleType::CreateEnumeratedType(::StringW values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::CreateEnumeratedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "SimpleType", "CreateEnumeratedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, values);
}
// Autogenerated method: System.Data.SimpleType.CreateByteArrayType
::System::Data::SimpleType* System::Data::SimpleType::CreateByteArrayType(::StringW encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::CreateByteArrayType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "SimpleType", "CreateByteArrayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, encoding);
}
// Autogenerated method: System.Data.SimpleType.CreateLimitedStringType
::System::Data::SimpleType* System::Data::SimpleType::CreateLimitedStringType(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::CreateLimitedStringType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "SimpleType", "CreateLimitedStringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length);
}
// Autogenerated method: System.Data.SimpleType.CreateSimpleType
::System::Data::SimpleType* System::Data::SimpleType::CreateSimpleType(::System::Data::Common::StorageType typeCode, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::CreateSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "SimpleType", "CreateSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeCode), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeCode, type);
}
// Autogenerated method: System.Data.SimpleType.HasConflictingDefinition
::StringW System::Data::SimpleType::HasConflictingDefinition(::System::Data::SimpleType* otherSimpleType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::HasConflictingDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasConflictingDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherSimpleType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, otherSimpleType);
}
// Autogenerated method: System.Data.SimpleType.CanHaveMaxLength
bool System::Data::SimpleType::CanHaveMaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::CanHaveMaxLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanHaveMaxLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SimpleType.ConvertToAnnonymousSimpleType
void System::Data::SimpleType::ConvertToAnnonymousSimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SimpleType::ConvertToAnnonymousSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToAnnonymousSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.UniqueConstraint
#include "System/Data/UniqueConstraint.hpp"
// Including type: System.Data.Index
#include "System/Data/Index.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Data.ConstraintCollection
#include "System/Data/ConstraintCollection.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.DataRowAction
#include "System/Data/DataRowAction.hpp"
// Including type: System.Data.DataSet
#include "System/Data/DataSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.DataKey _key
[[deprecated("Use field access instead!")]] ::System::Data::DataKey& System::Data::UniqueConstraint::dyn__key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::dyn__key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_key"))->offset;
  return *reinterpret_cast<::System::Data::DataKey*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.Index _constraintIndex
[[deprecated("Use field access instead!")]] ::System::Data::Index*& System::Data::UniqueConstraint::dyn__constraintIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::dyn__constraintIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_constraintIndex"))->offset;
  return *reinterpret_cast<::System::Data::Index**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _bPrimaryKey
[[deprecated("Use field access instead!")]] bool& System::Data::UniqueConstraint::dyn__bPrimaryKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::dyn__bPrimaryKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bPrimaryKey"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _constraintName
[[deprecated("Use field access instead!")]] ::StringW& System::Data::UniqueConstraint::dyn__constraintName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::dyn__constraintName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_constraintName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] _columnNames
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Data::UniqueConstraint::dyn__columnNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::dyn__columnNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_columnNames"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.UniqueConstraint.get_ColumnNames
::ArrayW<::StringW> System::Data::UniqueConstraint::get_ColumnNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::get_ColumnNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ColumnNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.UniqueConstraint.get_ConstraintIndex
::System::Data::Index* System::Data::UniqueConstraint::get_ConstraintIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::get_ConstraintIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConstraintIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Index*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.UniqueConstraint.get_Columns
::ArrayW<::System::Data::DataColumn*> System::Data::UniqueConstraint::get_Columns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::get_Columns");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::UniqueConstraint*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataColumn*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.UniqueConstraint.get_ColumnsReference
::ArrayW<::System::Data::DataColumn*> System::Data::UniqueConstraint::get_ColumnsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::get_ColumnsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ColumnsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataColumn*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.UniqueConstraint.get_IsPrimaryKey
bool System::Data::UniqueConstraint::get_IsPrimaryKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::get_IsPrimaryKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPrimaryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.UniqueConstraint.get_Key
::System::Data::DataKey System::Data::UniqueConstraint::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::get_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataKey, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.UniqueConstraint.ConstraintIndexClear
void System::Data::UniqueConstraint::ConstraintIndexClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::ConstraintIndexClear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstraintIndexClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.UniqueConstraint.ConstraintIndexInitialize
void System::Data::UniqueConstraint::ConstraintIndexInitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::ConstraintIndexInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstraintIndexInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.UniqueConstraint.NonVirtualCheckState
void System::Data::UniqueConstraint::NonVirtualCheckState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::NonVirtualCheckState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NonVirtualCheckState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.UniqueConstraint.Clone
::System::Data::UniqueConstraint* System::Data::UniqueConstraint::Clone(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::UniqueConstraint*, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.UniqueConstraint.Create
void System::Data::UniqueConstraint::Create(::StringW constraintName, ::ArrayW<::System::Data::DataColumn*> columns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constraintName), ::il2cpp_utils::ExtractType(columns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, constraintName, columns);
}
// Autogenerated method: System.Data.UniqueConstraint.set_InCollection
void System::Data::UniqueConstraint::set_InCollection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::set_InCollection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.UniqueConstraint.get_Table
::System::Data::DataTable* System::Data::UniqueConstraint::get_Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::get_Table");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.UniqueConstraint.CheckState
void System::Data::UniqueConstraint::CheckState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::CheckState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.UniqueConstraint.CheckCanAddToCollection
void System::Data::UniqueConstraint::CheckCanAddToCollection(::System::Data::ConstraintCollection* constraints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::CheckCanAddToCollection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, constraints);
}
// Autogenerated method: System.Data.UniqueConstraint.CanBeRemovedFromCollection
bool System::Data::UniqueConstraint::CanBeRemovedFromCollection(::System::Data::ConstraintCollection* constraints, bool fThrowException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::CanBeRemovedFromCollection");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, constraints, fThrowException);
}
// Autogenerated method: System.Data.UniqueConstraint.CanEnableConstraint
bool System::Data::UniqueConstraint::CanEnableConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::CanEnableConstraint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.UniqueConstraint.IsConstraintViolated
bool System::Data::UniqueConstraint::IsConstraintViolated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::IsConstraintViolated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.UniqueConstraint.CheckConstraint
void System::Data::UniqueConstraint::CheckConstraint(::System::Data::DataRow* row, ::System::Data::DataRowAction action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::CheckConstraint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, action);
}
// Autogenerated method: System.Data.UniqueConstraint.ContainsColumn
bool System::Data::UniqueConstraint::ContainsColumn(::System::Data::DataColumn* column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::ContainsColumn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, column);
}
// Autogenerated method: System.Data.UniqueConstraint.Clone
::System::Data::Constraint* System::Data::UniqueConstraint::Clone(::System::Data::DataSet* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Constraint*, false>(this, ___internal__method, destination);
}
// Autogenerated method: System.Data.UniqueConstraint.Clone
::System::Data::Constraint* System::Data::UniqueConstraint::Clone(::System::Data::DataSet* destination, bool ignorNSforTableLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Constraint*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Constraint*, false>(this, ___internal__method, destination, ignorNSforTableLookup);
}
// Autogenerated method: System.Data.UniqueConstraint.Equals
bool System::Data::UniqueConstraint::Equals(::Il2CppObject* key2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key2);
}
// Autogenerated method: System.Data.UniqueConstraint.GetHashCode
int System::Data::UniqueConstraint::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::UniqueConstraint::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.XDRSchema
#include "System/Data/XDRSchema.hpp"
// Including type: System.Data.XDRSchema/System.Data.NameType
#include "System/Data/XDRSchema_NameType.hpp"
// Including type: System.Xml.XmlElement
#include "System/Xml/XmlElement.hpp"
// Including type: System.Data.DataSet
#include "System/Data/DataSet.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] s_colonArray
::ArrayW<::Il2CppChar> System::Data::XDRSchema::_get_s_colonArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::_get_s_colonArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Data", "XDRSchema", "s_colonArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] s_colonArray
void System::Data::XDRSchema::_set_s_colonArray(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::_set_s_colonArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "XDRSchema", "s_colonArray", value));
}
// Autogenerated static field getter
// Get static field: static private System.Data.XDRSchema/System.Data.NameType[] s_mapNameTypeXdr
::ArrayW<::System::Data::XDRSchema::NameType*> System::Data::XDRSchema::_get_s_mapNameTypeXdr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::_get_s_mapNameTypeXdr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Data::XDRSchema::NameType*>>("System.Data", "XDRSchema", "s_mapNameTypeXdr"));
}
// Autogenerated static field setter
// Set static field: static private System.Data.XDRSchema/System.Data.NameType[] s_mapNameTypeXdr
void System::Data::XDRSchema::_set_s_mapNameTypeXdr(::ArrayW<::System::Data::XDRSchema::NameType*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::_set_s_mapNameTypeXdr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "XDRSchema", "s_mapNameTypeXdr", value));
}
// Autogenerated static field getter
// Get static field: static private System.Data.XDRSchema/System.Data.NameType s_enumerationNameType
::System::Data::XDRSchema::NameType* System::Data::XDRSchema::_get_s_enumerationNameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::_get_s_enumerationNameType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::XDRSchema::NameType*>("System.Data", "XDRSchema", "s_enumerationNameType"));
}
// Autogenerated static field setter
// Set static field: static private System.Data.XDRSchema/System.Data.NameType s_enumerationNameType
void System::Data::XDRSchema::_set_s_enumerationNameType(::System::Data::XDRSchema::NameType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::_set_s_enumerationNameType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "XDRSchema", "s_enumerationNameType", value));
}
// Autogenerated instance field getter
// Get instance field: System.String _schemaName
[[deprecated("Use field access instead!")]] ::StringW& System::Data::XDRSchema::dyn__schemaName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::dyn__schemaName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_schemaName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _schemaUri
[[deprecated("Use field access instead!")]] ::StringW& System::Data::XDRSchema::dyn__schemaUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::dyn__schemaUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_schemaUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlElement _schemaRoot
[[deprecated("Use field access instead!")]] ::System::Xml::XmlElement*& System::Data::XDRSchema::dyn__schemaRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::dyn__schemaRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_schemaRoot"))->offset;
  return *reinterpret_cast<::System::Xml::XmlElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.DataSet _ds
[[deprecated("Use field access instead!")]] ::System::Data::DataSet*& System::Data::XDRSchema::dyn__ds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::dyn__ds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ds"))->offset;
  return *reinterpret_cast<::System::Data::DataSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.XDRSchema..cctor
void System::Data::XDRSchema::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XDRSchema", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.XDRSchema.LoadSchema
void System::Data::XDRSchema::LoadSchema(::System::Xml::XmlElement* schemaRoot, ::System::Data::DataSet* ds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::LoadSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaRoot), ::il2cpp_utils::ExtractType(ds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schemaRoot, ds);
}
// Autogenerated method: System.Data.XDRSchema.FindTypeNode
::System::Xml::XmlElement* System::Data::XDRSchema::FindTypeNode(::System::Xml::XmlElement* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::FindTypeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTypeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlElement*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Data.XDRSchema.IsTextOnlyContent
bool System::Data::XDRSchema::IsTextOnlyContent(::System::Xml::XmlElement* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::IsTextOnlyContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTextOnlyContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Data.XDRSchema.IsXDRField
bool System::Data::XDRSchema::IsXDRField(::System::Xml::XmlElement* node, ::System::Xml::XmlElement* typeNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::IsXDRField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsXDRField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(typeNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node, typeNode);
}
// Autogenerated method: System.Data.XDRSchema.HandleTable
::System::Data::DataTable* System::Data::XDRSchema::HandleTable(::System::Xml::XmlElement* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::HandleTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Data.XDRSchema.FindNameType
::System::Data::XDRSchema::NameType* System::Data::XDRSchema::FindNameType(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::FindNameType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XDRSchema", "FindNameType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::XDRSchema::NameType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.XDRSchema.ParseDataType
::System::Type* System::Data::XDRSchema::ParseDataType(::StringW dt, ::StringW dtValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::ParseDataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseDataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt), ::il2cpp_utils::ExtractType(dtValues)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, dt, dtValues);
}
// Autogenerated method: System.Data.XDRSchema.GetInstanceName
::StringW System::Data::XDRSchema::GetInstanceName(::System::Xml::XmlElement* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::GetInstanceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInstanceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Data.XDRSchema.HandleColumn
void System::Data::XDRSchema::HandleColumn(::System::Xml::XmlElement* node, ::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::HandleColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, table);
}
// Autogenerated method: System.Data.XDRSchema.GetMinMax
void System::Data::XDRSchema::GetMinMax(::System::Xml::XmlElement* elNode, ByRef<int> minOccurs, ByRef<int> maxOccurs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::GetMinMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMinMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elNode), ::il2cpp_utils::ExtractType(minOccurs), ::il2cpp_utils::ExtractType(maxOccurs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, elNode, byref(minOccurs), byref(maxOccurs));
}
// Autogenerated method: System.Data.XDRSchema.GetMinMax
void System::Data::XDRSchema::GetMinMax(::System::Xml::XmlElement* elNode, bool isAttribute, ByRef<int> minOccurs, ByRef<int> maxOccurs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::GetMinMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMinMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elNode), ::il2cpp_utils::ExtractType(isAttribute), ::il2cpp_utils::ExtractType(minOccurs), ::il2cpp_utils::ExtractType(maxOccurs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, elNode, isAttribute, byref(minOccurs), byref(maxOccurs));
}
// Autogenerated method: System.Data.XDRSchema.HandleTypeNode
void System::Data::XDRSchema::HandleTypeNode(::System::Xml::XmlElement* typeNode, ::System::Data::DataTable* table, ::System::Collections::ArrayList* tableChildren) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::HandleTypeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTypeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeNode), ::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(tableChildren)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, typeNode, table, tableChildren);
}
// Autogenerated method: System.Data.XDRSchema.InstantiateTable
::System::Data::DataTable* System::Data::XDRSchema::InstantiateTable(::System::Data::DataSet* dataSet, ::System::Xml::XmlElement* node, ::System::Xml::XmlElement* typeNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::InstantiateTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataSet), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(typeNode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method, dataSet, node, typeNode);
}
// Autogenerated method: System.Data.XDRSchema.InstantiateSimpleTable
::System::Data::DataTable* System::Data::XDRSchema::InstantiateSimpleTable(::System::Data::DataSet* dataSet, ::System::Xml::XmlElement* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::InstantiateSimpleTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateSimpleTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataSet), ::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method, dataSet, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.XDRSchema/System.Data.NameType
#include "System/Data/XDRSchema_NameType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Data::XDRSchema::NameType::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::NameType::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Data::XDRSchema::NameType::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::NameType::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.XDRSchema/System.Data.NameType.CompareTo
int System::Data::XDRSchema::NameType::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XDRSchema::NameType::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::XDRSchema::NameType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.XMLDiffLoader
#include "System/Data/XMLDiffLoader.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Data.DataSet
#include "System/Data/DataSet.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _tables
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Data::XMLDiffLoader::dyn__tables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLDiffLoader::dyn__tables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tables"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataSet _dataSet
[[deprecated("Use field access instead!")]] ::System::Data::DataSet*& System::Data::XMLDiffLoader::dyn__dataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLDiffLoader::dyn__dataSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSet"))->offset;
  return *reinterpret_cast<::System::Data::DataSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataTable _dataTable
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::XMLDiffLoader::dyn__dataTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLDiffLoader::dyn__dataTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataTable"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.XMLDiffLoader.LoadDiffGram
void System::Data::XMLDiffLoader::LoadDiffGram(::System::Data::DataSet* ds, ::System::Xml::XmlReader* dataTextReader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLDiffLoader::LoadDiffGram");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadDiffGram", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ds), ::il2cpp_utils::ExtractType(dataTextReader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ds, dataTextReader);
}
// Autogenerated method: System.Data.XMLDiffLoader.CreateTablesHierarchy
void System::Data::XMLDiffLoader::CreateTablesHierarchy(::System::Data::DataTable* dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLDiffLoader::CreateTablesHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTablesHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dt);
}
// Autogenerated method: System.Data.XMLDiffLoader.LoadDiffGram
void System::Data::XMLDiffLoader::LoadDiffGram(::System::Data::DataTable* dt, ::System::Xml::XmlReader* dataTextReader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLDiffLoader::LoadDiffGram");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadDiffGram", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt), ::il2cpp_utils::ExtractType(dataTextReader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dt, dataTextReader);
}
// Autogenerated method: System.Data.XMLDiffLoader.ProcessDiffs
void System::Data::XMLDiffLoader::ProcessDiffs(::System::Data::DataSet* ds, ::System::Xml::XmlReader* ssync) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLDiffLoader::ProcessDiffs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessDiffs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ds), ::il2cpp_utils::ExtractType(ssync)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ds, ssync);
}
// Autogenerated method: System.Data.XMLDiffLoader.ProcessDiffs
void System::Data::XMLDiffLoader::ProcessDiffs(::System::Collections::ArrayList* tableList, ::System::Xml::XmlReader* ssync) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLDiffLoader::ProcessDiffs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessDiffs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableList), ::il2cpp_utils::ExtractType(ssync)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tableList, ssync);
}
// Autogenerated method: System.Data.XMLDiffLoader.ProcessErrors
void System::Data::XMLDiffLoader::ProcessErrors(::System::Data::DataSet* ds, ::System::Xml::XmlReader* ssync) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLDiffLoader::ProcessErrors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessErrors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ds), ::il2cpp_utils::ExtractType(ssync)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ds, ssync);
}
// Autogenerated method: System.Data.XMLDiffLoader.ProcessErrors
void System::Data::XMLDiffLoader::ProcessErrors(::System::Collections::ArrayList* dt, ::System::Xml::XmlReader* ssync) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLDiffLoader::ProcessErrors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessErrors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt), ::il2cpp_utils::ExtractType(ssync)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dt, ssync);
}
// Autogenerated method: System.Data.XMLDiffLoader.GetTable
::System::Data::DataTable* System::Data::XMLDiffLoader::GetTable(::StringW tableName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLDiffLoader::GetTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableName), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method, tableName, ns);
}
// Autogenerated method: System.Data.XMLDiffLoader.ReadOldRowData
int System::Data::XMLDiffLoader::ReadOldRowData(::System::Data::DataSet* ds, ByRef<::System::Data::DataTable*> table, ByRef<int> pos, ::System::Xml::XmlReader* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLDiffLoader::ReadOldRowData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadOldRowData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ds), ::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ds, byref(table), byref(pos), row);
}
// Autogenerated method: System.Data.XMLDiffLoader.SkipWhitespaces
void System::Data::XMLDiffLoader::SkipWhitespaces(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLDiffLoader::SkipWhitespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipWhitespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.XMLSchema
#include "System/Data/XMLSchema.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.XmlAttributeCollection
#include "System/Xml/XmlAttributeCollection.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Xml.XmlElement
#include "System/Xml/XmlElement.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.XMLSchema.GetConverter
::System::ComponentModel::TypeConverter* System::Data::XMLSchema::GetConverter(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLSchema::GetConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XMLSchema", "GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Data.XMLSchema.SetProperties
void System::Data::XMLSchema::SetProperties(::Il2CppObject* instance, ::System::Xml::XmlAttributeCollection* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLSchema::SetProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XMLSchema", "SetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(attrs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, attrs);
}
// Autogenerated method: System.Data.XMLSchema.FEqualIdentity
bool System::Data::XMLSchema::FEqualIdentity(::System::Xml::XmlNode* node, ::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLSchema::FEqualIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XMLSchema", "FEqualIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node, name, ns);
}
// Autogenerated method: System.Data.XMLSchema.GetBooleanAttribute
bool System::Data::XMLSchema::GetBooleanAttribute(::System::Xml::XmlElement* element, ::StringW attrName, ::StringW attrNS, bool defVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLSchema::GetBooleanAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XMLSchema", "GetBooleanAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attrName), ::il2cpp_utils::ExtractType(attrNS), ::il2cpp_utils::ExtractType(defVal)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element, attrName, attrNS, defVal);
}
// Autogenerated method: System.Data.XMLSchema.GenUniqueColumnName
::StringW System::Data::XMLSchema::GenUniqueColumnName(::StringW proposedName, ::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XMLSchema::GenUniqueColumnName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XMLSchema", "GenUniqueColumnName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proposedName), ::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proposedName, table);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.ConstraintTable
#include "System/Data/ConstraintTable.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Xml.Schema.XmlSchemaIdentityConstraint
#include "System/Xml/Schema/XmlSchemaIdentityConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Data.DataTable table
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::ConstraintTable::dyn_table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ConstraintTable::dyn_table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "table"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.XmlSchemaIdentityConstraint constraint
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaIdentityConstraint*& System::Data::ConstraintTable::dyn_constraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::ConstraintTable::dyn_constraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constraint"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaIdentityConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.XSDSchema
#include "System/Data/XSDSchema.hpp"
// Including type: System.Data.XSDSchema/System.Data.NameType
#include "System/Data/XSDSchema_NameType.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
// Including type: System.Xml.Schema.XmlSchemaElement
#include "System/Xml/Schema/XmlSchemaElement.hpp"
// Including type: System.Data.DataSet
#include "System/Data/DataSet.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlAttribute
#include "System/Xml/XmlAttribute.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnnotated
#include "System/Xml/Schema/XmlSchemaAnnotated.hpp"
// Including type: System.Xml.XmlAttributeCollection
#include "System/Xml/XmlAttributeCollection.hpp"
// Including type: System.Xml.XmlElement
#include "System/Xml/XmlElement.hpp"
// Including type: System.Xml.Schema.XmlSchemaParticle
#include "System/Xml/Schema/XmlSchemaParticle.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnnotation
#include "System/Xml/Schema/XmlSchemaAnnotation.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttributeGroup
#include "System/Xml/Schema/XmlSchemaAttributeGroup.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexType
#include "System/Xml/Schema/XmlSchemaComplexType.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Xml.Schema.XmlSchemaIdentityConstraint
#include "System/Xml/Schema/XmlSchemaIdentityConstraint.hpp"
// Including type: System.Data.AcceptRejectRule
#include "System/Data/AcceptRejectRule.hpp"
// Including type: System.Data.Rule
#include "System/Data/Rule.hpp"
// Including type: System.Xml.Schema.XmlSchemaKeyref
#include "System/Xml/Schema/XmlSchemaKeyref.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttribute
#include "System/Xml/Schema/XmlSchemaAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Data.XSDSchema/System.Data.NameType[] s_mapNameTypeXsd
::ArrayW<::System::Data::XSDSchema::NameType*> System::Data::XSDSchema::_get_s_mapNameTypeXsd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::_get_s_mapNameTypeXsd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Data::XSDSchema::NameType*>>("System.Data", "XSDSchema", "s_mapNameTypeXsd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Data.XSDSchema/System.Data.NameType[] s_mapNameTypeXsd
void System::Data::XSDSchema::_set_s_mapNameTypeXsd(::ArrayW<::System::Data::XSDSchema::NameType*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::_set_s_mapNameTypeXsd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "XSDSchema", "s_mapNameTypeXsd", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSet _schemaSet
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSet*& System::Data::XSDSchema::dyn__schemaSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::dyn__schemaSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_schemaSet"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaElement _dsElement
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaElement*& System::Data::XSDSchema::dyn__dsElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::dyn__dsElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dsElement"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataSet _ds
[[deprecated("Use field access instead!")]] ::System::Data::DataSet*& System::Data::XSDSchema::dyn__ds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::dyn__ds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ds"))->offset;
  return *reinterpret_cast<::System::Data::DataSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _schemaName
[[deprecated("Use field access instead!")]] ::StringW& System::Data::XSDSchema::dyn__schemaName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::dyn__schemaName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_schemaName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _columnExpressions
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Data::XSDSchema::dyn__columnExpressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::dyn__columnExpressions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_columnExpressions"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _constraintNodes
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Data::XSDSchema::dyn__constraintNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::dyn__constraintNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_constraintNodes"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _refTables
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Data::XSDSchema::dyn__refTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::dyn__refTables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_refTables"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _complexTypes
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Data::XSDSchema::dyn__complexTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::dyn__complexTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_complexTypes"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectCollection _annotations
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectCollection*& System::Data::XSDSchema::dyn__annotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::dyn__annotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_annotations"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectCollection _elements
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectCollection*& System::Data::XSDSchema::dyn__elements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::dyn__elements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elements"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _attributes
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Data::XSDSchema::dyn__attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::dyn__attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributes"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _elementsTable
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Data::XSDSchema::dyn__elementsTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::dyn__elementsTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementsTable"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _attributeGroups
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Data::XSDSchema::dyn__attributeGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::dyn__attributeGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributeGroups"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _schemaTypes
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Data::XSDSchema::dyn__schemaTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::dyn__schemaTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_schemaTypes"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _expressions
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Data::XSDSchema::dyn__expressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::dyn__expressions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expressions"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Data.DataTable,System.Collections.Generic.List`1<System.Data.DataTable>> _tableDictionary
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Data::DataTable*, ::System::Collections::Generic::List_1<::System::Data::DataTable*>*>*& System::Data::XSDSchema::dyn__tableDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::dyn__tableDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Data::DataTable*, ::System::Collections::Generic::List_1<::System::Data::DataTable*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _udSimpleTypes
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Data::XSDSchema::dyn__udSimpleTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::dyn__udSimpleTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_udSimpleTypes"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _existingSimpleTypeMap
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Data::XSDSchema::dyn__existingSimpleTypeMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::dyn__existingSimpleTypeMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_existingSimpleTypeMap"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fromInference
[[deprecated("Use field access instead!")]] bool& System::Data::XSDSchema::dyn__fromInference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::dyn__fromInference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fromInference"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.XSDSchema.get_FromInference
bool System::Data::XSDSchema::get_FromInference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::get_FromInference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FromInference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.XSDSchema.set_FromInference
void System::Data::XSDSchema::set_FromInference(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::set_FromInference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FromInference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.XSDSchema..cctor
void System::Data::XSDSchema::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XSDSchema", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.XSDSchema.CollectElementsAnnotations
void System::Data::XSDSchema::CollectElementsAnnotations(::System::Xml::Schema::XmlSchema* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::CollectElementsAnnotations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CollectElementsAnnotations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schema);
}
// Autogenerated method: System.Data.XSDSchema.CollectElementsAnnotations
void System::Data::XSDSchema::CollectElementsAnnotations(::System::Xml::Schema::XmlSchema* schema, ::System::Collections::ArrayList* schemaList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::CollectElementsAnnotations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CollectElementsAnnotations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema), ::il2cpp_utils::ExtractType(schemaList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schema, schemaList);
}
// Autogenerated method: System.Data.XSDSchema.QualifiedName
::StringW System::Data::XSDSchema::QualifiedName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::QualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XSDSchema", "QualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.XSDSchema.SetProperties
void System::Data::XSDSchema::SetProperties(::Il2CppObject* instance, ::ArrayW<::System::Xml::XmlAttribute*> attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::SetProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XSDSchema", "SetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(attrs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, attrs);
}
// Autogenerated method: System.Data.XSDSchema.SetExtProperties
void System::Data::XSDSchema::SetExtProperties(::Il2CppObject* instance, ::ArrayW<::System::Xml::XmlAttribute*> attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::SetExtProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XSDSchema", "SetExtProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(attrs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, attrs);
}
// Autogenerated method: System.Data.XSDSchema.HandleColumnExpression
void System::Data::XSDSchema::HandleColumnExpression(::Il2CppObject* instance, ::ArrayW<::System::Xml::XmlAttribute*> attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::HandleColumnExpression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleColumnExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(attrs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instance, attrs);
}
// Autogenerated method: System.Data.XSDSchema.GetMsdataAttribute
::StringW System::Data::XSDSchema::GetMsdataAttribute(::System::Xml::Schema::XmlSchemaAnnotated* node, ::StringW ln) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::GetMsdataAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XSDSchema", "GetMsdataAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(ln)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node, ln);
}
// Autogenerated method: System.Data.XSDSchema.SetExtProperties
void System::Data::XSDSchema::SetExtProperties(::Il2CppObject* instance, ::System::Xml::XmlAttributeCollection* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::SetExtProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XSDSchema", "SetExtProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(attrs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, attrs);
}
// Autogenerated method: System.Data.XSDSchema.HandleRefTableProperties
void System::Data::XSDSchema::HandleRefTableProperties(::System::Collections::ArrayList* RefTables, ::System::Xml::Schema::XmlSchemaElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::HandleRefTableProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRefTableProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(RefTables), ::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, RefTables, element);
}
// Autogenerated method: System.Data.XSDSchema.HandleRelation
void System::Data::XSDSchema::HandleRelation(::System::Xml::XmlElement* node, bool fNested) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::HandleRelation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRelation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(fNested)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, fNested);
}
// Autogenerated method: System.Data.XSDSchema.HasAttributes
bool System::Data::XSDSchema::HasAttributes(::System::Xml::Schema::XmlSchemaObjectCollection* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::HasAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributes);
}
// Autogenerated method: System.Data.XSDSchema.IsDatasetParticle
bool System::Data::XSDSchema::IsDatasetParticle(::System::Xml::Schema::XmlSchemaParticle* pt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::IsDatasetParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDatasetParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pt)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pt);
}
// Autogenerated method: System.Data.XSDSchema.DatasetElementCount
int System::Data::XSDSchema::DatasetElementCount(::System::Xml::Schema::XmlSchemaObjectCollection* elements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::DatasetElementCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DatasetElementCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elements)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, elements);
}
// Autogenerated method: System.Data.XSDSchema.FindDatasetElement
::System::Xml::Schema::XmlSchemaElement* System::Data::XSDSchema::FindDatasetElement(::System::Xml::Schema::XmlSchemaObjectCollection* elements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::FindDatasetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindDatasetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elements)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaElement*, false>(this, ___internal__method, elements);
}
// Autogenerated method: System.Data.XSDSchema.LoadSchema
void System::Data::XSDSchema::LoadSchema(::System::Xml::Schema::XmlSchemaSet* schemaSet, ::System::Data::DataTable* dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::LoadSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet), ::il2cpp_utils::ExtractType(dt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schemaSet, dt);
}
// Autogenerated method: System.Data.XSDSchema.LoadSchema
void System::Data::XSDSchema::LoadSchema(::System::Xml::Schema::XmlSchemaSet* schemaSet, ::System::Data::DataSet* ds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::LoadSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet), ::il2cpp_utils::ExtractType(ds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schemaSet, ds);
}
// Autogenerated method: System.Data.XSDSchema.HandleRelations
void System::Data::XSDSchema::HandleRelations(::System::Xml::Schema::XmlSchemaAnnotation* ann, bool fNested) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::HandleRelations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRelations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ann), ::il2cpp_utils::ExtractType(fNested)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ann, fNested);
}
// Autogenerated method: System.Data.XSDSchema.GetParticleItems
::System::Xml::Schema::XmlSchemaObjectCollection* System::Data::XSDSchema::GetParticleItems(::System::Xml::Schema::XmlSchemaParticle* pt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::GetParticleItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParticleItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pt)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectCollection*, false>(this, ___internal__method, pt);
}
// Autogenerated method: System.Data.XSDSchema.HandleParticle
void System::Data::XSDSchema::HandleParticle(::System::Xml::Schema::XmlSchemaParticle* pt, ::System::Data::DataTable* table, ::System::Collections::ArrayList* tableChildren, bool isBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::HandleParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pt), ::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(tableChildren), ::il2cpp_utils::ExtractType(isBase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pt, table, tableChildren, isBase);
}
// Autogenerated method: System.Data.XSDSchema.HandleAttributes
void System::Data::XSDSchema::HandleAttributes(::System::Xml::Schema::XmlSchemaObjectCollection* attributes, ::System::Data::DataTable* table, bool isBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::HandleAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes), ::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(isBase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributes, table, isBase);
}
// Autogenerated method: System.Data.XSDSchema.HandleAttributeGroup
void System::Data::XSDSchema::HandleAttributeGroup(::System::Xml::Schema::XmlSchemaAttributeGroup* attributeGroup, ::System::Data::DataTable* table, bool isBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::HandleAttributeGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAttributeGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeGroup), ::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(isBase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributeGroup, table, isBase);
}
// Autogenerated method: System.Data.XSDSchema.HandleComplexType
void System::Data::XSDSchema::HandleComplexType(::System::Xml::Schema::XmlSchemaComplexType* ct, ::System::Data::DataTable* table, ::System::Collections::ArrayList* tableChildren, bool isNillable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::HandleComplexType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleComplexType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ct), ::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(tableChildren), ::il2cpp_utils::ExtractType(isNillable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ct, table, tableChildren, isNillable);
}
// Autogenerated method: System.Data.XSDSchema.GetParticle
::System::Xml::Schema::XmlSchemaParticle* System::Data::XSDSchema::GetParticle(::System::Xml::Schema::XmlSchemaComplexType* ct) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::GetParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ct)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaParticle*, false>(this, ___internal__method, ct);
}
// Autogenerated method: System.Data.XSDSchema.FindField
::System::Data::DataColumn* System::Data::XSDSchema::FindField(::System::Data::DataTable* table, ::StringW field) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::FindField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(field)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataColumn*, false>(this, ___internal__method, table, field);
}
// Autogenerated method: System.Data.XSDSchema.BuildKey
::ArrayW<::System::Data::DataColumn*> System::Data::XSDSchema::BuildKey(::System::Xml::Schema::XmlSchemaIdentityConstraint* keyNode, ::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::BuildKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyNode), ::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataColumn*>, false>(this, ___internal__method, keyNode, table);
}
// Autogenerated method: System.Data.XSDSchema.GetBooleanAttribute
bool System::Data::XSDSchema::GetBooleanAttribute(::System::Xml::Schema::XmlSchemaAnnotated* element, ::StringW attrName, bool defVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::GetBooleanAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBooleanAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attrName), ::il2cpp_utils::ExtractType(defVal)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, element, attrName, defVal);
}
// Autogenerated method: System.Data.XSDSchema.GetStringAttribute
::StringW System::Data::XSDSchema::GetStringAttribute(::System::Xml::Schema::XmlSchemaAnnotated* element, ::StringW attrName, ::StringW defVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::GetStringAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(attrName), ::il2cpp_utils::ExtractType(defVal)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, element, attrName, defVal);
}
// Autogenerated method: System.Data.XSDSchema.TranslateAcceptRejectRule
::System::Data::AcceptRejectRule System::Data::XSDSchema::TranslateAcceptRejectRule(::StringW strRule) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::TranslateAcceptRejectRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XSDSchema", "TranslateAcceptRejectRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strRule)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::AcceptRejectRule, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strRule);
}
// Autogenerated method: System.Data.XSDSchema.TranslateRule
::System::Data::Rule System::Data::XSDSchema::TranslateRule(::StringW strRule) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::TranslateRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XSDSchema", "TranslateRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strRule)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Rule, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strRule);
}
// Autogenerated method: System.Data.XSDSchema.HandleKeyref
void System::Data::XSDSchema::HandleKeyref(::System::Xml::Schema::XmlSchemaKeyref* keyref) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::HandleKeyref");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleKeyref", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyref)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyref);
}
// Autogenerated method: System.Data.XSDSchema.HandleConstraint
void System::Data::XSDSchema::HandleConstraint(::System::Xml::Schema::XmlSchemaIdentityConstraint* keyNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::HandleConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyNode);
}
// Autogenerated method: System.Data.XSDSchema.InstantiateSimpleTable
::System::Data::DataTable* System::Data::XSDSchema::InstantiateSimpleTable(::System::Xml::Schema::XmlSchemaElement* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::InstantiateSimpleTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateSimpleTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Data.XSDSchema.GetInstanceName
::StringW System::Data::XSDSchema::GetInstanceName(::System::Xml::Schema::XmlSchemaAnnotated* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::GetInstanceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInstanceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Data.XSDSchema.InstantiateTable
::System::Data::DataTable* System::Data::XSDSchema::InstantiateTable(::System::Xml::Schema::XmlSchemaElement* node, ::System::Xml::Schema::XmlSchemaComplexType* typeNode, bool isRef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::InstantiateTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantiateTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(typeNode), ::il2cpp_utils::ExtractType(isRef)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method, node, typeNode, isRef);
}
// Autogenerated method: System.Data.XSDSchema.XsdtoClr
::System::Type* System::Data::XSDSchema::XsdtoClr(::StringW xsdTypeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::XsdtoClr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XSDSchema", "XsdtoClr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xsdTypeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xsdTypeName);
}
// Autogenerated method: System.Data.XSDSchema.FindNameType
::System::Data::XSDSchema::NameType* System::Data::XSDSchema::FindNameType(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::FindNameType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XSDSchema", "FindNameType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::XSDSchema::NameType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.XSDSchema.ParseDataType
::System::Type* System::Data::XSDSchema::ParseDataType(::StringW dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::ParseDataType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseDataType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, dt);
}
// Autogenerated method: System.Data.XSDSchema.IsXsdType
bool System::Data::XSDSchema::IsXsdType(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::IsXsdType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XSDSchema", "IsXsdType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Data.XSDSchema.FindTypeNode
::System::Xml::Schema::XmlSchemaAnnotated* System::Data::XSDSchema::FindTypeNode(::System::Xml::Schema::XmlSchemaAnnotated* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::FindTypeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTypeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaAnnotated*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Data.XSDSchema.HandleSimpleTypeSimpleContentColumn
void System::Data::XSDSchema::HandleSimpleTypeSimpleContentColumn(::System::Xml::Schema::XmlSchemaSimpleType* typeNode, ::StringW strType, ::System::Data::DataTable* table, bool isBase, ::ArrayW<::System::Xml::XmlAttribute*> attrs, bool isNillable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::HandleSimpleTypeSimpleContentColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSimpleTypeSimpleContentColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeNode), ::il2cpp_utils::ExtractType(strType), ::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(isBase), ::il2cpp_utils::ExtractType(attrs), ::il2cpp_utils::ExtractType(isNillable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, typeNode, strType, table, isBase, attrs, isNillable);
}
// Autogenerated method: System.Data.XSDSchema.HandleSimpleContentColumn
void System::Data::XSDSchema::HandleSimpleContentColumn(::StringW strType, ::System::Data::DataTable* table, bool isBase, ::ArrayW<::System::Xml::XmlAttribute*> attrs, bool isNillable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::HandleSimpleContentColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSimpleContentColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strType), ::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(isBase), ::il2cpp_utils::ExtractType(attrs), ::il2cpp_utils::ExtractType(isNillable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, strType, table, isBase, attrs, isNillable);
}
// Autogenerated method: System.Data.XSDSchema.HandleAttributeColumn
void System::Data::XSDSchema::HandleAttributeColumn(::System::Xml::Schema::XmlSchemaAttribute* attrib, ::System::Data::DataTable* table, bool isBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::HandleAttributeColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAttributeColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attrib), ::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(isBase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attrib, table, isBase);
}
// Autogenerated method: System.Data.XSDSchema.HandleElementColumn
void System::Data::XSDSchema::HandleElementColumn(::System::Xml::Schema::XmlSchemaElement* elem, ::System::Data::DataTable* table, bool isBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::HandleElementColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleElementColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elem), ::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(isBase)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, elem, table, isBase);
}
// Autogenerated method: System.Data.XSDSchema.HandleDataSet
void System::Data::XSDSchema::HandleDataSet(::System::Xml::Schema::XmlSchemaElement* node, bool isNewDataSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::HandleDataSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDataSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(isNewDataSet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, isNewDataSet);
}
// Autogenerated method: System.Data.XSDSchema.AddTablesToList
void System::Data::XSDSchema::AddTablesToList(::System::Collections::Generic::List_1<::System::Data::DataTable*>* tableList, ::System::Data::DataTable* dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::AddTablesToList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTablesToList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableList), ::il2cpp_utils::ExtractType(dt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tableList, dt);
}
// Autogenerated method: System.Data.XSDSchema.GetPrefix
::StringW System::Data::XSDSchema::GetPrefix(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::GetPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ns);
}
// Autogenerated method: System.Data.XSDSchema.GetNamespaceFromPrefix
::StringW System::Data::XSDSchema::GetNamespaceFromPrefix(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::GetNamespaceFromPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNamespaceFromPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Data.XSDSchema.GetTableNamespace
::StringW System::Data::XSDSchema::GetTableNamespace(::System::Xml::Schema::XmlSchemaIdentityConstraint* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::GetTableNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTableNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Data.XSDSchema.GetTableName
::StringW System::Data::XSDSchema::GetTableName(::System::Xml::Schema::XmlSchemaIdentityConstraint* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::GetTableName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTableName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Data.XSDSchema.IsTable
bool System::Data::XSDSchema::IsTable(::System::Xml::Schema::XmlSchemaElement* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::IsTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Data.XSDSchema.HandleTable
::System::Data::DataTable* System::Data::XSDSchema::HandleTable(::System::Xml::Schema::XmlSchemaElement* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::HandleTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.XSDSchema/System.Data.NameType
#include "System/Data/XSDSchema_NameType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Data::XSDSchema::NameType::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::NameType::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Data::XSDSchema::NameType::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::NameType::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.XSDSchema/System.Data.NameType.CompareTo
int System::Data::XSDSchema::NameType::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XSDSchema::NameType::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::XSDSchema::NameType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.XmlIgnoreNamespaceReader
#include "System/Data/XmlIgnoreNamespaceReader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> _namespacesToIgnore
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Data::XmlIgnoreNamespaceReader::dyn__namespacesToIgnore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlIgnoreNamespaceReader::dyn__namespacesToIgnore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_namespacesToIgnore"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.XmlIgnoreNamespaceReader.MoveToFirstAttribute
bool System::Data::XmlIgnoreNamespaceReader::MoveToFirstAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlIgnoreNamespaceReader::MoveToFirstAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNodeReader*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.XmlIgnoreNamespaceReader.MoveToNextAttribute
bool System::Data::XmlIgnoreNamespaceReader::MoveToNextAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlIgnoreNamespaceReader::MoveToNextAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNodeReader*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.XmlDataLoader
#include "System/Data/XmlDataLoader.hpp"
// Including type: System.Data.DataSet
#include "System/Data/DataSet.hpp"
// Including type: System.Data.XmlToDatasetMap
#include "System/Data/XmlToDatasetMap.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: System.Xml.XmlElement
#include "System/Xml/XmlElement.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.DataSet _dataSet
[[deprecated("Use field access instead!")]] ::System::Data::DataSet*& System::Data::XmlDataLoader::dyn__dataSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__dataSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSet"))->offset;
  return *reinterpret_cast<::System::Data::DataSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.XmlToDatasetMap _nodeToSchemaMap
[[deprecated("Use field access instead!")]] ::System::Data::XmlToDatasetMap*& System::Data::XmlDataLoader::dyn__nodeToSchemaMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__nodeToSchemaMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nodeToSchemaMap"))->offset;
  return *reinterpret_cast<::System::Data::XmlToDatasetMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _nodeToRowMap
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Data::XmlDataLoader::dyn__nodeToRowMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__nodeToRowMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nodeToRowMap"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Stack _childRowsStack
[[deprecated("Use field access instead!")]] ::System::Collections::Stack*& System::Data::XmlDataLoader::dyn__childRowsStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__childRowsStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childRowsStack"))->offset;
  return *reinterpret_cast<::System::Collections::Stack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _htableExcludedNS
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Data::XmlDataLoader::dyn__htableExcludedNS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__htableExcludedNS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_htableExcludedNS"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fIsXdr
[[deprecated("Use field access instead!")]] bool& System::Data::XmlDataLoader::dyn__fIsXdr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__fIsXdr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fIsXdr"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _isDiffgram
[[deprecated("Use field access instead!")]] bool& System::Data::XmlDataLoader::dyn__isDiffgram() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__isDiffgram");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDiffgram"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlElement _topMostNode
[[deprecated("Use field access instead!")]] ::System::Xml::XmlElement*& System::Data::XmlDataLoader::dyn__topMostNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__topMostNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_topMostNode"))->offset;
  return *reinterpret_cast<::System::Xml::XmlElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _ignoreSchema
[[deprecated("Use field access instead!")]] bool& System::Data::XmlDataLoader::dyn__ignoreSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__ignoreSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoreSchema"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataTable _dataTable
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::XmlDataLoader::dyn__dataTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__dataTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataTable"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isTableLevel
[[deprecated("Use field access instead!")]] bool& System::Data::XmlDataLoader::dyn__isTableLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__isTableLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isTableLevel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fromInference
[[deprecated("Use field access instead!")]] bool& System::Data::XmlDataLoader::dyn__fromInference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__fromInference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fromInference"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlReader _dataReader
[[deprecated("Use field access instead!")]] ::System::Xml::XmlReader*& System::Data::XmlDataLoader::dyn__dataReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__dataReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataReader"))->offset;
  return *reinterpret_cast<::System::Xml::XmlReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _XSD_XMLNS_NS
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Data::XmlDataLoader::dyn__XSD_XMLNS_NS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__XSD_XMLNS_NS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_XSD_XMLNS_NS"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _XDR_SCHEMA
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Data::XmlDataLoader::dyn__XDR_SCHEMA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__XDR_SCHEMA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_XDR_SCHEMA"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _XDRNS
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Data::XmlDataLoader::dyn__XDRNS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__XDRNS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_XDRNS"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _SQL_SYNC
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Data::XmlDataLoader::dyn__SQL_SYNC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__SQL_SYNC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_SQL_SYNC"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _UPDGNS
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Data::XmlDataLoader::dyn__UPDGNS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__UPDGNS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_UPDGNS"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _XSD_SCHEMA
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Data::XmlDataLoader::dyn__XSD_SCHEMA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__XSD_SCHEMA");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_XSD_SCHEMA"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _XSDNS
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Data::XmlDataLoader::dyn__XSDNS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__XSDNS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_XSDNS"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _DFFNS
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Data::XmlDataLoader::dyn__DFFNS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__DFFNS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_DFFNS"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _MSDNS
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Data::XmlDataLoader::dyn__MSDNS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__MSDNS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MSDNS"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _DIFFID
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Data::XmlDataLoader::dyn__DIFFID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__DIFFID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_DIFFID"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _HASCHANGES
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Data::XmlDataLoader::dyn__HASCHANGES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__HASCHANGES");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_HASCHANGES"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _ROWORDER
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Data::XmlDataLoader::dyn__ROWORDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::dyn__ROWORDER");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ROWORDER"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.XmlDataLoader.get_FromInference
bool System::Data::XmlDataLoader::get_FromInference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::get_FromInference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FromInference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.XmlDataLoader.set_FromInference
void System::Data::XmlDataLoader::set_FromInference(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::set_FromInference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FromInference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.XmlDataLoader.AttachRows
void System::Data::XmlDataLoader::AttachRows(::System::Data::DataRow* parentRow, ::System::Xml::XmlNode* parentElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::AttachRows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachRows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentRow), ::il2cpp_utils::ExtractType(parentElement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentRow, parentElement);
}
// Autogenerated method: System.Data.XmlDataLoader.CountNonNSAttributes
int System::Data::XmlDataLoader::CountNonNSAttributes(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::CountNonNSAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CountNonNSAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Data.XmlDataLoader.GetValueForTextOnlyColums
::StringW System::Data::XmlDataLoader::GetValueForTextOnlyColums(::System::Xml::XmlNode* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::GetValueForTextOnlyColums");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValueForTextOnlyColums", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, n);
}
// Autogenerated method: System.Data.XmlDataLoader.GetInitialTextFromNodes
::StringW System::Data::XmlDataLoader::GetInitialTextFromNodes(ByRef<::System::Xml::XmlNode*> n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::GetInitialTextFromNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitialTextFromNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, byref(n));
}
// Autogenerated method: System.Data.XmlDataLoader.GetTextOnlyColumn
::System::Data::DataColumn* System::Data::XmlDataLoader::GetTextOnlyColumn(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::GetTextOnlyColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextOnlyColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataColumn*, false>(this, ___internal__method, row);
}
// Autogenerated method: System.Data.XmlDataLoader.GetRowFromElement
::System::Data::DataRow* System::Data::XmlDataLoader::GetRowFromElement(::System::Xml::XmlElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::GetRowFromElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRowFromElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataRow*, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Data.XmlDataLoader.FColumnElement
bool System::Data::XmlDataLoader::FColumnElement(::System::Xml::XmlElement* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::FColumnElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FColumnElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Data.XmlDataLoader.FExcludedNamespace
bool System::Data::XmlDataLoader::FExcludedNamespace(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::FExcludedNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FExcludedNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ns);
}
// Autogenerated method: System.Data.XmlDataLoader.FIgnoreNamespace
bool System::Data::XmlDataLoader::FIgnoreNamespace(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::FIgnoreNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FIgnoreNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Data.XmlDataLoader.FIgnoreNamespace
bool System::Data::XmlDataLoader::FIgnoreNamespace(::System::Xml::XmlReader* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::FIgnoreNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FIgnoreNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Data.XmlDataLoader.IsTextLikeNode
bool System::Data::XmlDataLoader::IsTextLikeNode(::System::Xml::XmlNodeType n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::IsTextLikeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTextLikeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, n);
}
// Autogenerated method: System.Data.XmlDataLoader.IsTextOnly
bool System::Data::XmlDataLoader::IsTextOnly(::System::Data::DataColumn* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::IsTextOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTextOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Data.XmlDataLoader.LoadData
void System::Data::XmlDataLoader::LoadData(::System::Xml::XmlDocument* xdoc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::LoadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xdoc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xdoc);
}
// Autogenerated method: System.Data.XmlDataLoader.LoadRowData
void System::Data::XmlDataLoader::LoadRowData(::System::Data::DataRow* row, ::System::Xml::XmlElement* rowElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::LoadRowData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRowData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(rowElement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, rowElement);
}
// Autogenerated method: System.Data.XmlDataLoader.LoadRows
void System::Data::XmlDataLoader::LoadRows(::System::Data::DataRow* parentRow, ::System::Xml::XmlNode* parentElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::LoadRows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentRow), ::il2cpp_utils::ExtractType(parentElement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentRow, parentElement);
}
// Autogenerated method: System.Data.XmlDataLoader.SetRowValueFromXmlText
void System::Data::XmlDataLoader::SetRowValueFromXmlText(::System::Data::DataRow* row, ::System::Data::DataColumn* col, ::StringW xmlText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::SetRowValueFromXmlText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRowValueFromXmlText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(col), ::il2cpp_utils::ExtractType(xmlText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, col, xmlText);
}
// Autogenerated method: System.Data.XmlDataLoader.InitNameTable
void System::Data::XmlDataLoader::InitNameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::InitNameTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitNameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.XmlDataLoader.LoadData
void System::Data::XmlDataLoader::LoadData(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::LoadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.XmlDataLoader.LoadTopMostTable
void System::Data::XmlDataLoader::LoadTopMostTable(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::LoadTopMostTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadTopMostTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.XmlDataLoader.LoadTable
void System::Data::XmlDataLoader::LoadTable(::System::Data::DataTable* table, bool isNested) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::LoadTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(isNested)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table, isNested);
}
// Autogenerated method: System.Data.XmlDataLoader.LoadColumn
void System::Data::XmlDataLoader::LoadColumn(::System::Data::DataColumn* column, ::ArrayW<::Il2CppObject*> foundColumns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::LoadColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column), ::il2cpp_utils::ExtractType(foundColumns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, column, foundColumns);
}
// Autogenerated method: System.Data.XmlDataLoader.ProcessXsdSchema
bool System::Data::XmlDataLoader::ProcessXsdSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataLoader::ProcessXsdSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessXsdSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.XmlReadMode
#include "System/Data/XmlReadMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.XmlReadMode Auto
::System::Data::XmlReadMode System::Data::XmlReadMode::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlReadMode::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::XmlReadMode>("System.Data", "XmlReadMode", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.XmlReadMode Auto
void System::Data::XmlReadMode::_set_Auto(::System::Data::XmlReadMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlReadMode::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "XmlReadMode", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.XmlReadMode ReadSchema
::System::Data::XmlReadMode System::Data::XmlReadMode::_get_ReadSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlReadMode::_get_ReadSchema");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::XmlReadMode>("System.Data", "XmlReadMode", "ReadSchema"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.XmlReadMode ReadSchema
void System::Data::XmlReadMode::_set_ReadSchema(::System::Data::XmlReadMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlReadMode::_set_ReadSchema");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "XmlReadMode", "ReadSchema", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.XmlReadMode IgnoreSchema
::System::Data::XmlReadMode System::Data::XmlReadMode::_get_IgnoreSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlReadMode::_get_IgnoreSchema");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::XmlReadMode>("System.Data", "XmlReadMode", "IgnoreSchema"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.XmlReadMode IgnoreSchema
void System::Data::XmlReadMode::_set_IgnoreSchema(::System::Data::XmlReadMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlReadMode::_set_IgnoreSchema");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "XmlReadMode", "IgnoreSchema", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.XmlReadMode InferSchema
::System::Data::XmlReadMode System::Data::XmlReadMode::_get_InferSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlReadMode::_get_InferSchema");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::XmlReadMode>("System.Data", "XmlReadMode", "InferSchema"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.XmlReadMode InferSchema
void System::Data::XmlReadMode::_set_InferSchema(::System::Data::XmlReadMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlReadMode::_set_InferSchema");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "XmlReadMode", "InferSchema", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.XmlReadMode DiffGram
::System::Data::XmlReadMode System::Data::XmlReadMode::_get_DiffGram() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlReadMode::_get_DiffGram");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::XmlReadMode>("System.Data", "XmlReadMode", "DiffGram"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.XmlReadMode DiffGram
void System::Data::XmlReadMode::_set_DiffGram(::System::Data::XmlReadMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlReadMode::_set_DiffGram");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "XmlReadMode", "DiffGram", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.XmlReadMode Fragment
::System::Data::XmlReadMode System::Data::XmlReadMode::_get_Fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlReadMode::_get_Fragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::XmlReadMode>("System.Data", "XmlReadMode", "Fragment"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.XmlReadMode Fragment
void System::Data::XmlReadMode::_set_Fragment(::System::Data::XmlReadMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlReadMode::_set_Fragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "XmlReadMode", "Fragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.XmlReadMode InferTypedSchema
::System::Data::XmlReadMode System::Data::XmlReadMode::_get_InferTypedSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlReadMode::_get_InferTypedSchema");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::XmlReadMode>("System.Data", "XmlReadMode", "InferTypedSchema"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.XmlReadMode InferTypedSchema
void System::Data::XmlReadMode::_set_InferTypedSchema(::System::Data::XmlReadMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlReadMode::_set_InferTypedSchema");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "XmlReadMode", "InferTypedSchema", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::XmlReadMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlReadMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.XmlToDatasetMap
#include "System/Data/XmlToDatasetMap.hpp"
// Including type: System.Data.XmlToDatasetMap/System.Data.XmlNodeIdentety
#include "System/Data/XmlToDatasetMap_XmlNodeIdentety.hpp"
// Including type: System.Data.XmlToDatasetMap/System.Data.XmlNodeIdHashtable
#include "System/Data/XmlToDatasetMap_XmlNodeIdHashtable.hpp"
// Including type: System.Data.XmlToDatasetMap/System.Data.TableSchemaInfo
#include "System/Data/XmlToDatasetMap_TableSchemaInfo.hpp"
// Including type: System.Data.DataSet
#include "System/Data/DataSet.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.XmlToDatasetMap/System.Data.XmlNodeIdHashtable _tableSchemaMap
[[deprecated("Use field access instead!")]] ::System::Data::XmlToDatasetMap::XmlNodeIdHashtable*& System::Data::XmlToDatasetMap::dyn__tableSchemaMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::dyn__tableSchemaMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableSchemaMap"))->offset;
  return *reinterpret_cast<::System::Data::XmlToDatasetMap::XmlNodeIdHashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.XmlToDatasetMap/System.Data.TableSchemaInfo _lastTableSchemaInfo
[[deprecated("Use field access instead!")]] ::System::Data::XmlToDatasetMap::TableSchemaInfo*& System::Data::XmlToDatasetMap::dyn__lastTableSchemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::dyn__lastTableSchemaInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastTableSchemaInfo"))->offset;
  return *reinterpret_cast<::System::Data::XmlToDatasetMap::TableSchemaInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.XmlToDatasetMap.IsMappedColumn
bool System::Data::XmlToDatasetMap::IsMappedColumn(::System::Data::DataColumn* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::IsMappedColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XmlToDatasetMap", "IsMappedColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Data.XmlToDatasetMap.AddTableSchema
::System::Data::XmlToDatasetMap::TableSchemaInfo* System::Data::XmlToDatasetMap::AddTableSchema(::System::Data::DataTable* table, ::System::Xml::XmlNameTable* nameTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::AddTableSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTableSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(nameTable)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::XmlToDatasetMap::TableSchemaInfo*, false>(this, ___internal__method, table, nameTable);
}
// Autogenerated method: System.Data.XmlToDatasetMap.AddTableSchema
::System::Data::XmlToDatasetMap::TableSchemaInfo* System::Data::XmlToDatasetMap::AddTableSchema(::System::Xml::XmlNameTable* nameTable, ::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::AddTableSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTableSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::XmlToDatasetMap::TableSchemaInfo*, false>(this, ___internal__method, nameTable, table);
}
// Autogenerated method: System.Data.XmlToDatasetMap.AddColumnSchema
bool System::Data::XmlToDatasetMap::AddColumnSchema(::System::Data::DataColumn* col, ::System::Xml::XmlNameTable* nameTable, ::System::Data::XmlToDatasetMap::XmlNodeIdHashtable* columns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::AddColumnSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddColumnSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(columns)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, col, nameTable, columns);
}
// Autogenerated method: System.Data.XmlToDatasetMap.AddColumnSchema
bool System::Data::XmlToDatasetMap::AddColumnSchema(::System::Xml::XmlNameTable* nameTable, ::System::Data::DataColumn* col, ::System::Data::XmlToDatasetMap::XmlNodeIdHashtable* columns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::AddColumnSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddColumnSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(col), ::il2cpp_utils::ExtractType(columns)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, nameTable, col, columns);
}
// Autogenerated method: System.Data.XmlToDatasetMap.BuildIdentityMap
void System::Data::XmlToDatasetMap::BuildIdentityMap(::System::Data::DataSet* dataSet, ::System::Xml::XmlNameTable* nameTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::BuildIdentityMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildIdentityMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataSet), ::il2cpp_utils::ExtractType(nameTable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataSet, nameTable);
}
// Autogenerated method: System.Data.XmlToDatasetMap.BuildIdentityMap
void System::Data::XmlToDatasetMap::BuildIdentityMap(::System::Xml::XmlNameTable* nameTable, ::System::Data::DataSet* dataSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::BuildIdentityMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildIdentityMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(dataSet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nameTable, dataSet);
}
// Autogenerated method: System.Data.XmlToDatasetMap.BuildIdentityMap
void System::Data::XmlToDatasetMap::BuildIdentityMap(::System::Data::DataTable* dataTable, ::System::Xml::XmlNameTable* nameTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::BuildIdentityMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildIdentityMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataTable), ::il2cpp_utils::ExtractType(nameTable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataTable, nameTable);
}
// Autogenerated method: System.Data.XmlToDatasetMap.BuildIdentityMap
void System::Data::XmlToDatasetMap::BuildIdentityMap(::System::Xml::XmlNameTable* nameTable, ::System::Data::DataTable* dataTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::BuildIdentityMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildIdentityMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(dataTable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nameTable, dataTable);
}
// Autogenerated method: System.Data.XmlToDatasetMap.GetSelfAndDescendants
::System::Collections::ArrayList* System::Data::XmlToDatasetMap::GetSelfAndDescendants(::System::Data::DataTable* dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::GetSelfAndDescendants");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelfAndDescendants", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method, dt);
}
// Autogenerated method: System.Data.XmlToDatasetMap.GetColumnSchema
::Il2CppObject* System::Data::XmlToDatasetMap::GetColumnSchema(::System::Xml::XmlNode* node, bool fIgnoreNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::GetColumnSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColumnSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(fIgnoreNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, node, fIgnoreNamespace);
}
// Autogenerated method: System.Data.XmlToDatasetMap.GetColumnSchema
::Il2CppObject* System::Data::XmlToDatasetMap::GetColumnSchema(::System::Data::DataTable* table, ::System::Xml::XmlReader* dataReader, bool fIgnoreNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::GetColumnSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColumnSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(dataReader), ::il2cpp_utils::ExtractType(fIgnoreNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, table, dataReader, fIgnoreNamespace);
}
// Autogenerated method: System.Data.XmlToDatasetMap.GetSchemaForNode
::Il2CppObject* System::Data::XmlToDatasetMap::GetSchemaForNode(::System::Xml::XmlNode* node, bool fIgnoreNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::GetSchemaForNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSchemaForNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(fIgnoreNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, node, fIgnoreNamespace);
}
// Autogenerated method: System.Data.XmlToDatasetMap.GetTableForNode
::System::Data::DataTable* System::Data::XmlToDatasetMap::GetTableForNode(::System::Xml::XmlReader* node, bool fIgnoreNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::GetTableForNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTableForNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(fIgnoreNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataTable*, false>(this, ___internal__method, node, fIgnoreNamespace);
}
// Autogenerated method: System.Data.XmlToDatasetMap.HandleSpecialColumn
void System::Data::XmlToDatasetMap::HandleSpecialColumn(::System::Data::DataColumn* col, ::System::Xml::XmlNameTable* nameTable, ::System::Data::XmlToDatasetMap::XmlNodeIdHashtable* columns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::HandleSpecialColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSpecialColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col), ::il2cpp_utils::ExtractType(nameTable), ::il2cpp_utils::ExtractType(columns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col, nameTable, columns);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.XmlToDatasetMap/System.Data.XmlNodeIdentety
#include "System/Data/XmlToDatasetMap_XmlNodeIdentety.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String LocalName
[[deprecated("Use field access instead!")]] ::StringW& System::Data::XmlToDatasetMap::XmlNodeIdentety::dyn_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::XmlNodeIdentety::dyn_LocalName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LocalName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String NamespaceURI
[[deprecated("Use field access instead!")]] ::StringW& System::Data::XmlToDatasetMap::XmlNodeIdentety::dyn_NamespaceURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::XmlNodeIdentety::dyn_NamespaceURI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NamespaceURI"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.XmlToDatasetMap/System.Data.XmlNodeIdentety.GetHashCode
int System::Data::XmlToDatasetMap::XmlNodeIdentety::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::XmlNodeIdentety::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.XmlToDatasetMap/System.Data.XmlNodeIdentety.Equals
bool System::Data::XmlToDatasetMap::XmlNodeIdentety::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::XmlNodeIdentety::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.XmlToDatasetMap/System.Data.XmlNodeIdHashtable
#include "System/Data/XmlToDatasetMap_XmlNodeIdHashtable.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Data.XmlToDatasetMap/System.Data.XmlNodeIdentety
#include "System/Data/XmlToDatasetMap_XmlNodeIdentety.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.XmlToDatasetMap/System.Data.XmlNodeIdentety _id
[[deprecated("Use field access instead!")]] ::System::Data::XmlToDatasetMap::XmlNodeIdentety*& System::Data::XmlToDatasetMap::XmlNodeIdHashtable::dyn__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::XmlNodeIdHashtable::dyn__id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
  return *reinterpret_cast<::System::Data::XmlToDatasetMap::XmlNodeIdentety**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.XmlToDatasetMap/System.Data.XmlNodeIdHashtable.get_Item
::Il2CppObject* System::Data::XmlToDatasetMap::XmlNodeIdHashtable::get_Item(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::XmlNodeIdHashtable::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Data.XmlToDatasetMap/System.Data.XmlNodeIdHashtable.get_Item
::Il2CppObject* System::Data::XmlToDatasetMap::XmlNodeIdHashtable::get_Item(::System::Xml::XmlReader* dataReader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::XmlNodeIdHashtable::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataReader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, dataReader);
}
// Autogenerated method: System.Data.XmlToDatasetMap/System.Data.XmlNodeIdHashtable.get_Item
::Il2CppObject* System::Data::XmlToDatasetMap::XmlNodeIdHashtable::get_Item(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::XmlNodeIdHashtable::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.XmlToDatasetMap/System.Data.XmlNodeIdHashtable.get_Item
::Il2CppObject* System::Data::XmlToDatasetMap::XmlNodeIdHashtable::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::XmlNodeIdHashtable::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.XmlToDatasetMap/System.Data.TableSchemaInfo
#include "System/Data/XmlToDatasetMap_TableSchemaInfo.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Data.XmlToDatasetMap/System.Data.XmlNodeIdHashtable
#include "System/Data/XmlToDatasetMap_XmlNodeIdHashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Data.DataTable TableSchema
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::XmlToDatasetMap::TableSchemaInfo::dyn_TableSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::TableSchemaInfo::dyn_TableSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TableSchema"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Data.XmlToDatasetMap/System.Data.XmlNodeIdHashtable ColumnsSchemaMap
[[deprecated("Use field access instead!")]] ::System::Data::XmlToDatasetMap::XmlNodeIdHashtable*& System::Data::XmlToDatasetMap::TableSchemaInfo::dyn_ColumnsSchemaMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlToDatasetMap::TableSchemaInfo::dyn_ColumnsSchemaMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ColumnsSchemaMap"))->offset;
  return *reinterpret_cast<::System::Data::XmlToDatasetMap::XmlNodeIdHashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.XmlWriteMode
#include "System/Data/XmlWriteMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.XmlWriteMode WriteSchema
::System::Data::XmlWriteMode System::Data::XmlWriteMode::_get_WriteSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlWriteMode::_get_WriteSchema");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::XmlWriteMode>("System.Data", "XmlWriteMode", "WriteSchema"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.XmlWriteMode WriteSchema
void System::Data::XmlWriteMode::_set_WriteSchema(::System::Data::XmlWriteMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlWriteMode::_set_WriteSchema");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "XmlWriteMode", "WriteSchema", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.XmlWriteMode IgnoreSchema
::System::Data::XmlWriteMode System::Data::XmlWriteMode::_get_IgnoreSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlWriteMode::_get_IgnoreSchema");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::XmlWriteMode>("System.Data", "XmlWriteMode", "IgnoreSchema"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.XmlWriteMode IgnoreSchema
void System::Data::XmlWriteMode::_set_IgnoreSchema(::System::Data::XmlWriteMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlWriteMode::_set_IgnoreSchema");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "XmlWriteMode", "IgnoreSchema", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.XmlWriteMode DiffGram
::System::Data::XmlWriteMode System::Data::XmlWriteMode::_get_DiffGram() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlWriteMode::_get_DiffGram");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::XmlWriteMode>("System.Data", "XmlWriteMode", "DiffGram"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.XmlWriteMode DiffGram
void System::Data::XmlWriteMode::_set_DiffGram(::System::Data::XmlWriteMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlWriteMode::_set_DiffGram");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "XmlWriteMode", "DiffGram", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::XmlWriteMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlWriteMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.SchemaFormat
#include "System/Data/SchemaFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.SchemaFormat Public
::System::Data::SchemaFormat System::Data::SchemaFormat::_get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SchemaFormat::_get_Public");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SchemaFormat>("System.Data", "SchemaFormat", "Public"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SchemaFormat Public
void System::Data::SchemaFormat::_set_Public(::System::Data::SchemaFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SchemaFormat::_set_Public");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "SchemaFormat", "Public", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.SchemaFormat Remoting
::System::Data::SchemaFormat System::Data::SchemaFormat::_get_Remoting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SchemaFormat::_get_Remoting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SchemaFormat>("System.Data", "SchemaFormat", "Remoting"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SchemaFormat Remoting
void System::Data::SchemaFormat::_set_Remoting(::System::Data::SchemaFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SchemaFormat::_set_Remoting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "SchemaFormat", "Remoting", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.SchemaFormat WebService
::System::Data::SchemaFormat System::Data::SchemaFormat::_get_WebService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SchemaFormat::_get_WebService");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SchemaFormat>("System.Data", "SchemaFormat", "WebService"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SchemaFormat WebService
void System::Data::SchemaFormat::_set_WebService(::System::Data::SchemaFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SchemaFormat::_set_WebService");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "SchemaFormat", "WebService", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.SchemaFormat RemotingSkipSchema
::System::Data::SchemaFormat System::Data::SchemaFormat::_get_RemotingSkipSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SchemaFormat::_get_RemotingSkipSchema");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SchemaFormat>("System.Data", "SchemaFormat", "RemotingSkipSchema"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SchemaFormat RemotingSkipSchema
void System::Data::SchemaFormat::_set_RemotingSkipSchema(::System::Data::SchemaFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SchemaFormat::_set_RemotingSkipSchema");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "SchemaFormat", "RemotingSkipSchema", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.SchemaFormat WebServiceSkipSchema
::System::Data::SchemaFormat System::Data::SchemaFormat::_get_WebServiceSkipSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SchemaFormat::_get_WebServiceSkipSchema");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SchemaFormat>("System.Data", "SchemaFormat", "WebServiceSkipSchema"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SchemaFormat WebServiceSkipSchema
void System::Data::SchemaFormat::_set_WebServiceSkipSchema(::System::Data::SchemaFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SchemaFormat::_set_WebServiceSkipSchema");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data", "SchemaFormat", "WebServiceSkipSchema", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::SchemaFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SchemaFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.Data.XmlTreeGen
#include "System/Data/XmlTreeGen.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Data.DataSet
#include "System/Data/DataSet.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Xml.XmlElement
#include "System/Xml/XmlElement.hpp"
// Including type: System.Converter`2
#include "System/Converter_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Data.PropertyCollection
#include "System/Data/PropertyCollection.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Data.DataRelation
#include "System/Data/DataRelation.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AcceptRejectRule
#include "System/Data/AcceptRejectRule.hpp"
// Including type: System.Data.Rule
#include "System/Data/Rule.hpp"
// Including type: System.Data.UniqueConstraint
#include "System/Data/UniqueConstraint.hpp"
// Including type: System.Data.ForeignKeyConstraint
#include "System/Data/ForeignKeyConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _constraintNames
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Data::XmlTreeGen::dyn__constraintNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::dyn__constraintNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_constraintNames"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _namespaces
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Data::XmlTreeGen::dyn__namespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::dyn__namespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_namespaces"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _autogenerated
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Data::XmlTreeGen::dyn__autogenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::dyn__autogenerated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_autogenerated"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _prefixes
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Data::XmlTreeGen::dyn__prefixes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::dyn__prefixes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefixes"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataSet _ds
[[deprecated("Use field access instead!")]] ::System::Data::DataSet*& System::Data::XmlTreeGen::dyn__ds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::dyn__ds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ds"))->offset;
  return *reinterpret_cast<::System::Data::DataSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _tables
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Data::XmlTreeGen::dyn__tables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::dyn__tables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tables"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _relations
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Data::XmlTreeGen::dyn__relations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::dyn__relations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relations"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlDocument _dc
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDocument*& System::Data::XmlTreeGen::dyn__dc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::dyn__dc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dc"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlElement _sRoot
[[deprecated("Use field access instead!")]] ::System::Xml::XmlElement*& System::Data::XmlTreeGen::dyn__sRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::dyn__sRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sRoot"))->offset;
  return *reinterpret_cast<::System::Xml::XmlElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prefixCount
[[deprecated("Use field access instead!")]] int& System::Data::XmlTreeGen::dyn__prefixCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::dyn__prefixCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefixCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.SchemaFormat _schFormat
[[deprecated("Use field access instead!")]] ::System::Data::SchemaFormat& System::Data::XmlTreeGen::dyn__schFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::dyn__schFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_schFormat"))->offset;
  return *reinterpret_cast<::System::Data::SchemaFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _filePath
[[deprecated("Use field access instead!")]] ::StringW& System::Data::XmlTreeGen::dyn__filePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::dyn__filePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _fileName
[[deprecated("Use field access instead!")]] ::StringW& System::Data::XmlTreeGen::dyn__fileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::dyn__fileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _fileExt
[[deprecated("Use field access instead!")]] ::StringW& System::Data::XmlTreeGen::dyn__fileExt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::dyn__fileExt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileExt"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlElement _dsElement
[[deprecated("Use field access instead!")]] ::System::Xml::XmlElement*& System::Data::XmlTreeGen::dyn__dsElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::dyn__dsElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dsElement"))->offset;
  return *reinterpret_cast<::System::Xml::XmlElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlElement _constraintSeparator
[[deprecated("Use field access instead!")]] ::System::Xml::XmlElement*& System::Data::XmlTreeGen::dyn__constraintSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::dyn__constraintSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_constraintSeparator"))->offset;
  return *reinterpret_cast<::System::Xml::XmlElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Converter`2<System.Type,System.String> _targetConverter
[[deprecated("Use field access instead!")]] ::System::Converter_2<::System::Type*, ::StringW>*& System::Data::XmlTreeGen::dyn__targetConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::dyn__targetConverter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetConverter"))->offset;
  return *reinterpret_cast<::System::Converter_2<::System::Type*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.XmlTreeGen.AddExtendedProperties
void System::Data::XmlTreeGen::AddExtendedProperties(::System::Data::PropertyCollection* props, ::System::Xml::XmlElement* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::AddExtendedProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XmlTreeGen", "AddExtendedProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(props), ::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, props, node);
}
// Autogenerated method: System.Data.XmlTreeGen.AddExtendedProperties
void System::Data::XmlTreeGen::AddExtendedProperties(::System::Data::PropertyCollection* props, ::System::Xml::XmlElement* node, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::AddExtendedProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XmlTreeGen", "AddExtendedProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(props), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, props, node, type);
}
// Autogenerated method: System.Data.XmlTreeGen.AddXdoProperties
void System::Data::XmlTreeGen::AddXdoProperties(::Il2CppObject* instance, ::System::Xml::XmlElement* root, ::System::Xml::XmlDocument* xd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::AddXdoProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddXdoProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(xd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instance, root, xd);
}
// Autogenerated method: System.Data.XmlTreeGen.AddXdoProperty
void System::Data::XmlTreeGen::AddXdoProperty(::System::ComponentModel::PropertyDescriptor* pd, ::Il2CppObject* instance, ::System::Xml::XmlElement* root, ::System::Xml::XmlDocument* xd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::AddXdoProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddXdoProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pd), ::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(xd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pd, instance, root, xd);
}
// Autogenerated method: System.Data.XmlTreeGen.XmlDataTypeName
::StringW System::Data::XmlTreeGen::XmlDataTypeName(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::XmlDataTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XmlTreeGen", "XmlDataTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Data.XmlTreeGen.GenerateConstraintNames
void System::Data::XmlTreeGen::GenerateConstraintNames(::System::Data::DataTable* table, bool fromTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::GenerateConstraintNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateConstraintNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(fromTable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table, fromTable);
}
// Autogenerated method: System.Data.XmlTreeGen.GenerateConstraintNames
void System::Data::XmlTreeGen::GenerateConstraintNames(::System::Collections::ArrayList* tables) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::GenerateConstraintNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateConstraintNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tables)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tables);
}
// Autogenerated method: System.Data.XmlTreeGen.GenerateConstraintNames
void System::Data::XmlTreeGen::GenerateConstraintNames(::System::Data::DataSet* ds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::GenerateConstraintNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateConstraintNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ds);
}
// Autogenerated method: System.Data.XmlTreeGen._PropsNotEmpty
bool System::Data::XmlTreeGen::_PropsNotEmpty(::System::Data::PropertyCollection* props) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::_PropsNotEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XmlTreeGen", "_PropsNotEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(props)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, props);
}
// Autogenerated method: System.Data.XmlTreeGen.HaveExtendedProperties
bool System::Data::XmlTreeGen::HaveExtendedProperties(::System::Data::DataSet* ds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::HaveExtendedProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HaveExtendedProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ds)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ds);
}
// Autogenerated method: System.Data.XmlTreeGen.WriteSchemaRoot
void System::Data::XmlTreeGen::WriteSchemaRoot(::System::Xml::XmlDocument* xd, ::System::Xml::XmlElement* rootSchema, ::StringW targetNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::WriteSchemaRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSchemaRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xd), ::il2cpp_utils::ExtractType(rootSchema), ::il2cpp_utils::ExtractType(targetNamespace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xd, rootSchema, targetNamespace);
}
// Autogenerated method: System.Data.XmlTreeGen.ValidateColumnMapping
void System::Data::XmlTreeGen::ValidateColumnMapping(::System::Type* columnType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::ValidateColumnMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XmlTreeGen", "ValidateColumnMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(columnType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, columnType);
}
// Autogenerated method: System.Data.XmlTreeGen.SetupAutoGenerated
void System::Data::XmlTreeGen::SetupAutoGenerated(::System::Data::DataSet* ds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::SetupAutoGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupAutoGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ds);
}
// Autogenerated method: System.Data.XmlTreeGen.SetupAutoGenerated
void System::Data::XmlTreeGen::SetupAutoGenerated(::System::Collections::ArrayList* dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::SetupAutoGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupAutoGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dt);
}
// Autogenerated method: System.Data.XmlTreeGen.SetupAutoGenerated
void System::Data::XmlTreeGen::SetupAutoGenerated(::System::Data::DataTable* dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::SetupAutoGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupAutoGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dt);
}
// Autogenerated method: System.Data.XmlTreeGen.CreateTablesHierarchy
void System::Data::XmlTreeGen::CreateTablesHierarchy(::System::Data::DataTable* dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::CreateTablesHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTablesHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dt);
}
// Autogenerated method: System.Data.XmlTreeGen.CreateRelations
void System::Data::XmlTreeGen::CreateRelations(::System::Data::DataTable* dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::CreateRelations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRelations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dt);
}
// Autogenerated method: System.Data.XmlTreeGen.CreateToplevelTables
::ArrayW<::System::Data::DataTable*> System::Data::XmlTreeGen::CreateToplevelTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::CreateToplevelTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateToplevelTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataTable*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.XmlTreeGen.SchemaTree
void System::Data::XmlTreeGen::SchemaTree(::System::Xml::XmlDocument* xd, ::System::Xml::XmlWriter* xmlWriter, ::System::Data::DataSet* ds, ::System::Data::DataTable* dt, bool writeHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::SchemaTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SchemaTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xd), ::il2cpp_utils::ExtractType(xmlWriter), ::il2cpp_utils::ExtractType(ds), ::il2cpp_utils::ExtractType(dt), ::il2cpp_utils::ExtractType(writeHierarchy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xd, xmlWriter, ds, dt, writeHierarchy);
}
// Autogenerated method: System.Data.XmlTreeGen.SchemaTree
::System::Xml::XmlElement* System::Data::XmlTreeGen::SchemaTree(::System::Xml::XmlDocument* xd, ::System::Data::DataTable* dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::SchemaTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SchemaTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xd), ::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlElement*, false>(this, ___internal__method, xd, dt);
}
// Autogenerated method: System.Data.XmlTreeGen.FillDataSetElement
::System::Xml::XmlElement* System::Data::XmlTreeGen::FillDataSetElement(::System::Xml::XmlDocument* xd, ::System::Data::DataSet* ds, ::System::Data::DataTable* dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::FillDataSetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillDataSetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xd), ::il2cpp_utils::ExtractType(ds), ::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlElement*, false>(this, ___internal__method, xd, ds, dt);
}
// Autogenerated method: System.Data.XmlTreeGen.SetPath
void System::Data::XmlTreeGen::SetPath(::System::Xml::XmlWriter* xw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::SetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xw)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xw);
}
// Autogenerated method: System.Data.XmlTreeGen.Save
void System::Data::XmlTreeGen::Save(::System::Data::DataSet* ds, ::System::Xml::XmlWriter* xw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ds), ::il2cpp_utils::ExtractType(xw)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ds, xw);
}
// Autogenerated method: System.Data.XmlTreeGen.Save
void System::Data::XmlTreeGen::Save(::System::Data::DataTable* dt, ::System::Xml::XmlWriter* xw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt), ::il2cpp_utils::ExtractType(xw)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dt, xw);
}
// Autogenerated method: System.Data.XmlTreeGen.Save
void System::Data::XmlTreeGen::Save(::System::Data::DataSet* ds, ::System::Data::DataTable* dt, ::System::Xml::XmlWriter* xw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ds), ::il2cpp_utils::ExtractType(dt), ::il2cpp_utils::ExtractType(xw)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ds, dt, xw);
}
// Autogenerated method: System.Data.XmlTreeGen.Save
void System::Data::XmlTreeGen::Save(::System::Data::DataSet* ds, ::System::Data::DataTable* dt, ::System::Xml::XmlWriter* xw, bool writeHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ds), ::il2cpp_utils::ExtractType(dt), ::il2cpp_utils::ExtractType(xw), ::il2cpp_utils::ExtractType(writeHierarchy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ds, dt, xw, writeHierarchy);
}
// Autogenerated method: System.Data.XmlTreeGen.Save
void System::Data::XmlTreeGen::Save(::System::Data::DataSet* ds, ::System::Data::DataTable* dt, ::System::Xml::XmlWriter* xw, bool writeHierarchy, ::System::Converter_2<::System::Type*, ::StringW>* multipleTargetConverter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ds), ::il2cpp_utils::ExtractType(dt), ::il2cpp_utils::ExtractType(xw), ::il2cpp_utils::ExtractType(writeHierarchy), ::il2cpp_utils::ExtractType(multipleTargetConverter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ds, dt, xw, writeHierarchy, multipleTargetConverter);
}
// Autogenerated method: System.Data.XmlTreeGen.HandleRelation
::System::Xml::XmlElement* System::Data::XmlTreeGen::HandleRelation(::System::Data::DataRelation* rel, ::System::Xml::XmlDocument* dc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::HandleRelation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRelation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rel), ::il2cpp_utils::ExtractType(dc)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlElement*, false>(this, ___internal__method, rel, dc);
}
// Autogenerated method: System.Data.XmlTreeGen.FindSimpleType
::System::Xml::XmlElement* System::Data::XmlTreeGen::FindSimpleType(::System::Xml::XmlElement* schema, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::FindSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XmlTreeGen", "FindSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlElement*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schema, name);
}
// Autogenerated method: System.Data.XmlTreeGen.GetSchema
::System::Xml::XmlElement* System::Data::XmlTreeGen::GetSchema(::StringW NamespaceURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::GetSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(NamespaceURI)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlElement*, false>(this, ___internal__method, NamespaceURI);
}
// Autogenerated method: System.Data.XmlTreeGen.HandleColumnType
void System::Data::XmlTreeGen::HandleColumnType(::System::Data::DataColumn* col, ::System::Xml::XmlDocument* dc, ::System::Xml::XmlElement* root, ::System::Xml::XmlElement* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::HandleColumnType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleColumnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col), ::il2cpp_utils::ExtractType(dc), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(schema)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col, dc, root, schema);
}
// Autogenerated method: System.Data.XmlTreeGen.AddColumnProperties
void System::Data::XmlTreeGen::AddColumnProperties(::System::Data::DataColumn* col, ::System::Xml::XmlElement* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::AddColumnProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddColumnProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col), ::il2cpp_utils::ExtractType(root)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, col, root);
}
// Autogenerated method: System.Data.XmlTreeGen.FindTargetNamespace
::StringW System::Data::XmlTreeGen::FindTargetNamespace(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::FindTargetNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTargetNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.XmlTreeGen.HandleColumn
::System::Xml::XmlElement* System::Data::XmlTreeGen::HandleColumn(::System::Data::DataColumn* col, ::System::Xml::XmlDocument* dc, ::System::Xml::XmlElement* schema, bool fWriteOrdinal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::HandleColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col), ::il2cpp_utils::ExtractType(dc), ::il2cpp_utils::ExtractType(schema), ::il2cpp_utils::ExtractType(fWriteOrdinal)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlElement*, false>(this, ___internal__method, col, dc, schema, fWriteOrdinal);
}
// Autogenerated method: System.Data.XmlTreeGen.TranslateAcceptRejectRule
::StringW System::Data::XmlTreeGen::TranslateAcceptRejectRule(::System::Data::AcceptRejectRule rule) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::TranslateAcceptRejectRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XmlTreeGen", "TranslateAcceptRejectRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rule)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rule);
}
// Autogenerated method: System.Data.XmlTreeGen.TranslateRule
::StringW System::Data::XmlTreeGen::TranslateRule(::System::Data::Rule rule) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::TranslateRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XmlTreeGen", "TranslateRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rule)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rule);
}
// Autogenerated method: System.Data.XmlTreeGen.AppendChildWithoutRef
void System::Data::XmlTreeGen::AppendChildWithoutRef(::System::Xml::XmlElement* node, ::StringW Namespace, ::System::Xml::XmlElement* el, ::StringW refString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::AppendChildWithoutRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChildWithoutRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(Namespace), ::il2cpp_utils::ExtractType(el), ::il2cpp_utils::ExtractType(refString)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, Namespace, el, refString);
}
// Autogenerated method: System.Data.XmlTreeGen.FindTypeNode
::System::Xml::XmlElement* System::Data::XmlTreeGen::FindTypeNode(::System::Xml::XmlElement* node, ::StringW strType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::FindTypeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindTypeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(strType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlElement*, false>(this, ___internal__method, node, strType);
}
// Autogenerated method: System.Data.XmlTreeGen.HandleTable
::System::Xml::XmlElement* System::Data::XmlTreeGen::HandleTable(::System::Data::DataTable* table, ::System::Xml::XmlDocument* dc, ::System::Xml::XmlElement* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::HandleTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(dc), ::il2cpp_utils::ExtractType(schema)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlElement*, false>(this, ___internal__method, table, dc, schema);
}
// Autogenerated method: System.Data.XmlTreeGen.HasMixedColumns
bool System::Data::XmlTreeGen::HasMixedColumns(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::HasMixedColumns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasMixedColumns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.XmlTreeGen.AutoGenerated
bool System::Data::XmlTreeGen::AutoGenerated(::System::Data::DataColumn* col) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::AutoGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XmlTreeGen", "AutoGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(col)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, col);
}
// Autogenerated method: System.Data.XmlTreeGen.AutoGenerated
bool System::Data::XmlTreeGen::AutoGenerated(::System::Data::DataRelation* rel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::AutoGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XmlTreeGen", "AutoGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rel)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rel);
}
// Autogenerated method: System.Data.XmlTreeGen.AutoGenerated
bool System::Data::XmlTreeGen::AutoGenerated(::System::Data::UniqueConstraint* unique) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::AutoGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XmlTreeGen", "AutoGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unique)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unique);
}
// Autogenerated method: System.Data.XmlTreeGen.AutoGenerated
bool System::Data::XmlTreeGen::AutoGenerated(::System::Data::ForeignKeyConstraint* fk) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::AutoGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fk)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, fk);
}
// Autogenerated method: System.Data.XmlTreeGen.AutoGenerated
bool System::Data::XmlTreeGen::AutoGenerated(::System::Data::ForeignKeyConstraint* fk, bool checkRelation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::AutoGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XmlTreeGen", "AutoGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fk), ::il2cpp_utils::ExtractType(checkRelation)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fk, checkRelation);
}
// Autogenerated method: System.Data.XmlTreeGen.IsAutoGenerated
bool System::Data::XmlTreeGen::IsAutoGenerated(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::IsAutoGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAutoGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Data.XmlTreeGen.HandleTable
::System::Xml::XmlElement* System::Data::XmlTreeGen::HandleTable(::System::Data::DataTable* table, ::System::Xml::XmlDocument* dc, ::System::Xml::XmlElement* schema, bool genNested) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::HandleTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(dc), ::il2cpp_utils::ExtractType(schema), ::il2cpp_utils::ExtractType(genNested)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlElement*, false>(this, ___internal__method, table, dc, schema, genNested);
}
// Autogenerated method: System.Data.XmlTreeGen.SetMSDataAttribute
void System::Data::XmlTreeGen::SetMSDataAttribute(::System::Xml::XmlElement* root, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlTreeGen::SetMSDataAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMSDataAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, root, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.NewDiffgramGen
#include "System/Data/NewDiffgramGen.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Data.DataSet
#include "System/Data/DataSet.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.DataRowVersion
#include "System/Data/DataRowVersion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlDocument _doc
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDocument*& System::Data::NewDiffgramGen::dyn__doc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NewDiffgramGen::dyn__doc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doc"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.DataSet _ds
[[deprecated("Use field access instead!")]] ::System::Data::DataSet*& System::Data::NewDiffgramGen::dyn__ds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NewDiffgramGen::dyn__ds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ds"))->offset;
  return *reinterpret_cast<::System::Data::DataSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.DataTable _dt
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::NewDiffgramGen::dyn__dt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NewDiffgramGen::dyn__dt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dt"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlWriter _xmlw
[[deprecated("Use field access instead!")]] ::System::Xml::XmlWriter*& System::Data::NewDiffgramGen::dyn__xmlw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NewDiffgramGen::dyn__xmlw");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xmlw"))->offset;
  return *reinterpret_cast<::System::Xml::XmlWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fBefore
[[deprecated("Use field access instead!")]] bool& System::Data::NewDiffgramGen::dyn__fBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NewDiffgramGen::dyn__fBefore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fBefore"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fErrors
[[deprecated("Use field access instead!")]] bool& System::Data::NewDiffgramGen::dyn__fErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NewDiffgramGen::dyn__fErrors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fErrors"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _rowsOrder
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Data::NewDiffgramGen::dyn__rowsOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NewDiffgramGen::dyn__rowsOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowsOrder"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _tables
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Data::NewDiffgramGen::dyn__tables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NewDiffgramGen::dyn__tables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tables"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _writeHierarchy
[[deprecated("Use field access instead!")]] bool& System::Data::NewDiffgramGen::dyn__writeHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NewDiffgramGen::dyn__writeHierarchy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeHierarchy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.NewDiffgramGen.CreateTableHierarchy
void System::Data::NewDiffgramGen::CreateTableHierarchy(::System::Data::DataTable* dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NewDiffgramGen::CreateTableHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTableHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dt);
}
// Autogenerated method: System.Data.NewDiffgramGen.DoAssignments
void System::Data::NewDiffgramGen::DoAssignments(::System::Collections::ArrayList* tables) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NewDiffgramGen::DoAssignments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoAssignments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tables)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tables);
}
// Autogenerated method: System.Data.NewDiffgramGen.EmptyData
bool System::Data::NewDiffgramGen::EmptyData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NewDiffgramGen::EmptyData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EmptyData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.NewDiffgramGen.Save
void System::Data::NewDiffgramGen::Save(::System::Xml::XmlWriter* xmlw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NewDiffgramGen::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlw)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmlw);
}
// Autogenerated method: System.Data.NewDiffgramGen.Save
void System::Data::NewDiffgramGen::Save(::System::Xml::XmlWriter* xmlw, ::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NewDiffgramGen::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlw), ::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmlw, table);
}
// Autogenerated method: System.Data.NewDiffgramGen.GenerateTable
void System::Data::NewDiffgramGen::GenerateTable(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NewDiffgramGen::GenerateTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.NewDiffgramGen.GenerateTableErrors
void System::Data::NewDiffgramGen::GenerateTableErrors(::System::Data::DataTable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NewDiffgramGen::GenerateTableErrors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTableErrors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, table);
}
// Autogenerated method: System.Data.NewDiffgramGen.GenerateRow
void System::Data::NewDiffgramGen::GenerateRow(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NewDiffgramGen::GenerateRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row);
}
// Autogenerated method: System.Data.NewDiffgramGen.GenerateColumn
void System::Data::NewDiffgramGen::GenerateColumn(::System::Data::DataRow* row, ::System::Data::DataColumn* col, ::System::Data::DataRowVersion version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NewDiffgramGen::GenerateColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(col), ::il2cpp_utils::ExtractType(version)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, col, version);
}
// Autogenerated method: System.Data.NewDiffgramGen.QualifiedName
::StringW System::Data::NewDiffgramGen::QualifiedName(::StringW prefix, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::NewDiffgramGen::QualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "NewDiffgramGen", "QualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefix, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.XmlDataTreeWriter
#include "System/Data/XmlDataTreeWriter.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Data.DataSet
#include "System/Data/DataSet.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Data.DataRow
#include "System/Data/DataRow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlWriter _xmlw
[[deprecated("Use field access instead!")]] ::System::Xml::XmlWriter*& System::Data::XmlDataTreeWriter::dyn__xmlw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataTreeWriter::dyn__xmlw");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xmlw"))->offset;
  return *reinterpret_cast<::System::Xml::XmlWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataSet _ds
[[deprecated("Use field access instead!")]] ::System::Data::DataSet*& System::Data::XmlDataTreeWriter::dyn__ds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataTreeWriter::dyn__ds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ds"))->offset;
  return *reinterpret_cast<::System::Data::DataSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataTable _dt
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::XmlDataTreeWriter::dyn__dt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataTreeWriter::dyn__dt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dt"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _dTables
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Data::XmlDataTreeWriter::dyn__dTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataTreeWriter::dyn__dTables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dTables"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.DataTable[] _topLevelTables
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::DataTable*>& System::Data::XmlDataTreeWriter::dyn__topLevelTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataTreeWriter::dyn__topLevelTables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_topLevelTables"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::DataTable*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fFromTable
[[deprecated("Use field access instead!")]] bool& System::Data::XmlDataTreeWriter::dyn__fFromTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataTreeWriter::dyn__fFromTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fFromTable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDiffgram
[[deprecated("Use field access instead!")]] bool& System::Data::XmlDataTreeWriter::dyn__isDiffgram() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataTreeWriter::dyn__isDiffgram");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDiffgram"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _rowsOrder
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Data::XmlDataTreeWriter::dyn__rowsOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataTreeWriter::dyn__rowsOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowsOrder"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _writeHierarchy
[[deprecated("Use field access instead!")]] bool& System::Data::XmlDataTreeWriter::dyn__writeHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataTreeWriter::dyn__writeHierarchy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writeHierarchy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.XmlDataTreeWriter.CreateToplevelTables
::ArrayW<::System::Data::DataTable*> System::Data::XmlDataTreeWriter::CreateToplevelTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataTreeWriter::CreateToplevelTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateToplevelTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Data::DataTable*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.XmlDataTreeWriter.CreateTablesHierarchy
void System::Data::XmlDataTreeWriter::CreateTablesHierarchy(::System::Data::DataTable* dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataTreeWriter::CreateTablesHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTablesHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dt);
}
// Autogenerated method: System.Data.XmlDataTreeWriter.RowHasErrors
bool System::Data::XmlDataTreeWriter::RowHasErrors(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataTreeWriter::RowHasErrors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XmlDataTreeWriter", "RowHasErrors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, row);
}
// Autogenerated method: System.Data.XmlDataTreeWriter.SaveDiffgramData
void System::Data::XmlDataTreeWriter::SaveDiffgramData(::System::Xml::XmlWriter* xw, ::System::Collections::Hashtable* rowsOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataTreeWriter::SaveDiffgramData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveDiffgramData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xw), ::il2cpp_utils::ExtractType(rowsOrder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xw, rowsOrder);
}
// Autogenerated method: System.Data.XmlDataTreeWriter.Save
void System::Data::XmlDataTreeWriter::Save(::System::Xml::XmlWriter* xw, bool writeSchema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataTreeWriter::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xw), ::il2cpp_utils::ExtractType(writeSchema)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xw, writeSchema);
}
// Autogenerated method: System.Data.XmlDataTreeWriter.GetNestedChildRelations
::System::Collections::ArrayList* System::Data::XmlDataTreeWriter::GetNestedChildRelations(::System::Data::DataRow* row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataTreeWriter::GetNestedChildRelations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNestedChildRelations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method, row);
}
// Autogenerated method: System.Data.XmlDataTreeWriter.XmlDataRowWriter
void System::Data::XmlDataTreeWriter::XmlDataRowWriter(::System::Data::DataRow* row, ::StringW encodedTableName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataTreeWriter::XmlDataRowWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "XmlDataRowWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(encodedTableName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, encodedTableName);
}
// Autogenerated method: System.Data.XmlDataTreeWriter.PreserveSpace
bool System::Data::XmlDataTreeWriter::PreserveSpace(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::XmlDataTreeWriter::PreserveSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "XmlDataTreeWriter", "PreserveSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataTextWriter
#include "System/Data/DataTextWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Xml.WriteState
#include "System/Xml/WriteState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlWriter _xmltextWriter
[[deprecated("Use field access instead!")]] ::System::Xml::XmlWriter*& System::Data::DataTextWriter::dyn__xmltextWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::dyn__xmltextWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xmltextWriter"))->offset;
  return *reinterpret_cast<::System::Xml::XmlWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataTextWriter.get_BaseStream
::System::IO::Stream* System::Data::DataTextWriter::get_BaseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::get_BaseStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextWriter.CreateWriter
::System::Xml::XmlWriter* System::Data::DataTextWriter::CreateWriter(::System::Xml::XmlWriter* xw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::CreateWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "DataTextWriter", "CreateWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xw)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlWriter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xw);
}
// Autogenerated method: System.Data.DataTextWriter.get_WriteState
::System::Xml::WriteState System::Data::DataTextWriter::get_WriteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::get_WriteState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::WriteState, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextWriter.WriteStartDocument
void System::Data::DataTextWriter::WriteStartDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteStartDocument");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextWriter.WriteStartDocument
void System::Data::DataTextWriter::WriteStartDocument(bool standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteStartDocument");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Data.DataTextWriter.WriteEndDocument
void System::Data::DataTextWriter::WriteEndDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteEndDocument");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextWriter.WriteDocType
void System::Data::DataTextWriter::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Data.DataTextWriter.WriteStartElement
void System::Data::DataTextWriter::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Data.DataTextWriter.WriteEndElement
void System::Data::DataTextWriter::WriteEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextWriter.WriteFullEndElement
void System::Data::DataTextWriter::WriteFullEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextWriter.WriteStartAttribute
void System::Data::DataTextWriter::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Data.DataTextWriter.WriteEndAttribute
void System::Data::DataTextWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextWriter.WriteCData
void System::Data::DataTextWriter::WriteCData(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Data.DataTextWriter.WriteComment
void System::Data::DataTextWriter::WriteComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Data.DataTextWriter.WriteProcessingInstruction
void System::Data::DataTextWriter::WriteProcessingInstruction(::StringW name, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Data.DataTextWriter.WriteEntityRef
void System::Data::DataTextWriter::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Data.DataTextWriter.WriteCharEntity
void System::Data::DataTextWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Data.DataTextWriter.WriteWhitespace
void System::Data::DataTextWriter::WriteWhitespace(::StringW ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Data.DataTextWriter.WriteString
void System::Data::DataTextWriter::WriteString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Data.DataTextWriter.WriteSurrogateCharEntity
void System::Data::DataTextWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Data.DataTextWriter.WriteChars
void System::Data::DataTextWriter::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Data.DataTextWriter.WriteRaw
void System::Data::DataTextWriter::WriteRaw(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Data.DataTextWriter.WriteRaw
void System::Data::DataTextWriter::WriteRaw(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Data.DataTextWriter.WriteBase64
void System::Data::DataTextWriter::WriteBase64(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteBase64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Data.DataTextWriter.WriteBinHex
void System::Data::DataTextWriter::WriteBinHex(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::WriteBinHex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Data.DataTextWriter.Close
void System::Data::DataTextWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextWriter.Flush
void System::Data::DataTextWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextWriter.LookupPrefix
::StringW System::Data::DataTextWriter::LookupPrefix(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextWriter::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlWriter*), 30));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ns);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.DataTextReader
#include "System/Data/DataTextReader.hpp"
// Including type: System.Xml.XmlReaderSettings
#include "System/Xml/XmlReaderSettings.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlSpace
#include "System/Xml/XmlSpace.hpp"
// Including type: System.Xml.ReadState
#include "System/Xml/ReadState.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlReader _xmlreader
[[deprecated("Use field access instead!")]] ::System::Xml::XmlReader*& System::Data::DataTextReader::dyn__xmlreader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::dyn__xmlreader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xmlreader"))->offset;
  return *reinterpret_cast<::System::Xml::XmlReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.DataTextReader.CreateReader
::System::Xml::XmlReader* System::Data::DataTextReader::CreateReader(::System::Xml::XmlReader* xr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::CreateReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data", "DataTextReader", "CreateReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlReader*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xr);
}
// Autogenerated method: System.Data.DataTextReader.get_Settings
::System::Xml::XmlReaderSettings* System::Data::DataTextReader::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_Settings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlReaderSettings*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.get_NodeType
::System::Xml::XmlNodeType System::Data::DataTextReader::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.get_Name
::StringW System::Data::DataTextReader::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.get_LocalName
::StringW System::Data::DataTextReader::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.get_NamespaceURI
::StringW System::Data::DataTextReader::get_NamespaceURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_NamespaceURI");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.get_Prefix
::StringW System::Data::DataTextReader::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_Prefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.get_Value
::StringW System::Data::DataTextReader::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.get_Depth
int System::Data::DataTextReader::get_Depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_Depth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.get_BaseURI
::StringW System::Data::DataTextReader::get_BaseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_BaseURI");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.get_IsEmptyElement
bool System::Data::DataTextReader::get_IsEmptyElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_IsEmptyElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.get_IsDefault
bool System::Data::DataTextReader::get_IsDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_IsDefault");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.get_QuoteChar
::Il2CppChar System::Data::DataTextReader::get_QuoteChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_QuoteChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.get_XmlSpace
::System::Xml::XmlSpace System::Data::DataTextReader::get_XmlSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_XmlSpace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.get_XmlLang
::StringW System::Data::DataTextReader::get_XmlLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_XmlLang");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.get_AttributeCount
int System::Data::DataTextReader::get_AttributeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_AttributeCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.get_EOF
bool System::Data::DataTextReader::get_EOF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_EOF");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 32));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.get_ReadState
::System::Xml::ReadState System::Data::DataTextReader::get_ReadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_ReadState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::ReadState, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.get_NameTable
::System::Xml::XmlNameTable* System::Data::DataTextReader::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_NameTable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.get_CanResolveEntity
bool System::Data::DataTextReader::get_CanResolveEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_CanResolveEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 38));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.get_CanReadValueChunk
bool System::Data::DataTextReader::get_CanReadValueChunk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::get_CanReadValueChunk");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 40));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.GetAttribute
::StringW System::Data::DataTextReader::GetAttribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::GetAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Data.DataTextReader.GetAttribute
::StringW System::Data::DataTextReader::GetAttribute(::StringW localName, ::StringW namespaceURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::GetAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, localName, namespaceURI);
}
// Autogenerated method: System.Data.DataTextReader.GetAttribute
::StringW System::Data::DataTextReader::GetAttribute(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::GetAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Data.DataTextReader.MoveToAttribute
bool System::Data::DataTextReader::MoveToAttribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::MoveToAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Data.DataTextReader.MoveToAttribute
void System::Data::DataTextReader::MoveToAttribute(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::MoveToAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Data.DataTextReader.MoveToFirstAttribute
bool System::Data::DataTextReader::MoveToFirstAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::MoveToFirstAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.MoveToNextAttribute
bool System::Data::DataTextReader::MoveToNextAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::MoveToNextAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.MoveToElement
bool System::Data::DataTextReader::MoveToElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::MoveToElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 29));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.ReadAttributeValue
bool System::Data::DataTextReader::ReadAttributeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::ReadAttributeValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 30));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.Read
bool System::Data::DataTextReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.Close
void System::Data::DataTextReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.Skip
void System::Data::DataTextReader::Skip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::Skip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.LookupNamespace
::StringW System::Data::DataTextReader::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Data.DataTextReader.ResolveEntity
void System::Data::DataTextReader::ResolveEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::ResolveEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.DataTextReader.ReadString
::StringW System::Data::DataTextReader::ReadString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::DataTextReader::ReadString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 42));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.SqlTypes.SQLResource
#include "System/Data/SqlTypes/SQLResource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.SqlTypes.SQLResource.get_NullString
::StringW System::Data::SqlTypes::SQLResource::get_NullString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SQLResource::get_NullString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SQLResource", "get_NullString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SQLResource.get_ArithOverflowMessage
::StringW System::Data::SqlTypes::SQLResource::get_ArithOverflowMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SQLResource::get_ArithOverflowMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SQLResource", "get_ArithOverflowMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SQLResource.get_DivideByZeroMessage
::StringW System::Data::SqlTypes::SQLResource::get_DivideByZeroMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SQLResource::get_DivideByZeroMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SQLResource", "get_DivideByZeroMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SQLResource.get_NullValueMessage
::StringW System::Data::SqlTypes::SQLResource::get_NullValueMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SQLResource::get_NullValueMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SQLResource", "get_NullValueMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SQLResource.get_TruncationMessage
::StringW System::Data::SqlTypes::SQLResource::get_TruncationMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SQLResource::get_TruncationMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SQLResource", "get_TruncationMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SQLResource.get_DateTimeOverflowMessage
::StringW System::Data::SqlTypes::SQLResource::get_DateTimeOverflowMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SQLResource::get_DateTimeOverflowMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SQLResource", "get_DateTimeOverflowMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SQLResource.get_ConcatDiffCollationMessage
::StringW System::Data::SqlTypes::SQLResource::get_ConcatDiffCollationMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SQLResource::get_ConcatDiffCollationMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SQLResource", "get_ConcatDiffCollationMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SQLResource.get_CompareDiffCollationMessage
::StringW System::Data::SqlTypes::SQLResource::get_CompareDiffCollationMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SQLResource::get_CompareDiffCollationMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SQLResource", "get_CompareDiffCollationMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SQLResource.get_ConversionOverflowMessage
::StringW System::Data::SqlTypes::SQLResource::get_ConversionOverflowMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SQLResource::get_ConversionOverflowMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SQLResource", "get_ConversionOverflowMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SQLResource.get_TimeZoneSpecifiedMessage
::StringW System::Data::SqlTypes::SQLResource::get_TimeZoneSpecifiedMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SQLResource::get_TimeZoneSpecifiedMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SQLResource", "get_TimeZoneSpecifiedMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SQLResource.get_InvalidPrecScaleMessage
::StringW System::Data::SqlTypes::SQLResource::get_InvalidPrecScaleMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SQLResource::get_InvalidPrecScaleMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SQLResource", "get_InvalidPrecScaleMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SQLResource.get_FormatMessage
::StringW System::Data::SqlTypes::SQLResource::get_FormatMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SQLResource::get_FormatMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SQLResource", "get_FormatMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SQLResource.InvalidOpStreamClosed
::StringW System::Data::SqlTypes::SQLResource::InvalidOpStreamClosed(::StringW method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SQLResource::InvalidOpStreamClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SQLResource", "InvalidOpStreamClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method);
}
// Autogenerated method: System.Data.SqlTypes.SQLResource.InvalidOpStreamNonWritable
::StringW System::Data::SqlTypes::SQLResource::InvalidOpStreamNonWritable(::StringW method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SQLResource::InvalidOpStreamNonWritable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SQLResource", "InvalidOpStreamNonWritable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method);
}
// Autogenerated method: System.Data.SqlTypes.SQLResource.InvalidOpStreamNonReadable
::StringW System::Data::SqlTypes::SQLResource::InvalidOpStreamNonReadable(::StringW method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SQLResource::InvalidOpStreamNonReadable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SQLResource", "InvalidOpStreamNonReadable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method);
}
// Autogenerated method: System.Data.SqlTypes.SQLResource.InvalidOpStreamNonSeekable
::StringW System::Data::SqlTypes::SQLResource::InvalidOpStreamNonSeekable(::StringW method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SQLResource::InvalidOpStreamNonSeekable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SQLResource", "InvalidOpStreamNonSeekable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.SqlTypes.INullable
#include "System/Data/SqlTypes/INullable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.SqlTypes.INullable.get_IsNull
bool System::Data::SqlTypes::INullable::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::INullable::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SqlTypes::INullable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.SqlTypes.SqlBinary
#include "System/Data/SqlTypes/SqlBinary.hpp"
// Including type: System.Data.SqlTypes.EComparison
#include "System/Data/SqlTypes/EComparison.hpp"
// Including type: System.Data.SqlTypes.SqlBoolean
#include "System/Data/SqlTypes/SqlBoolean.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlBinary Null
::System::Data::SqlTypes::SqlBinary System::Data::SqlTypes::SqlBinary::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlBinary>("System.Data.SqlTypes", "SqlBinary", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlBinary Null
void System::Data::SqlTypes::SqlBinary::_set_Null(::System::Data::SqlTypes::SqlBinary value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlBinary", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _value
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Data::SqlTypes::SqlBinary::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::dyn__value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.SqlTypes.SqlBinary.get_IsNull
bool System::Data::SqlTypes::SqlBinary::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlBinary), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBinary.get_Value
::ArrayW<uint8_t> System::Data::SqlTypes::SqlBinary::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBinary..ctor
System::Data::SqlTypes::SqlBinary::SqlBinary(bool fNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fNull)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fNull);
}
// Autogenerated method: System.Data.SqlTypes.SqlBinary..ctor
// ABORTED elsewhere.  System::Data::SqlTypes::SqlBinary::SqlBinary(::ArrayW<uint8_t> value)
// Autogenerated method: System.Data.SqlTypes.SqlBinary..cctor
void System::Data::SqlTypes::SqlBinary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlBinary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBinary.PerformCompareByte
::System::Data::SqlTypes::EComparison System::Data::SqlTypes::SqlBinary::PerformCompareByte(::ArrayW<uint8_t> x, ::ArrayW<uint8_t> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::PerformCompareByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlBinary", "PerformCompareByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::EComparison, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlBinary.CompareTo
int System::Data::SqlTypes::SqlBinary::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlBinary), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlBinary.CompareTo
int System::Data::SqlTypes::SqlBinary::CompareTo(::System::Data::SqlTypes::SqlBinary value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::CompareTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlBinary.HashByteArray
int System::Data::SqlTypes::SqlBinary::HashByteArray(::ArrayW<uint8_t> rgbValue, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::HashByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlBinary", "HashByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbValue), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgbValue, length);
}
// Autogenerated method: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.GetSchema
::System::Xml::Schema::XmlSchema* System::Data::SqlTypes::SqlBinary::System_Xml_Serialization_IXmlSerializable_GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::System.Xml.Serialization.IXmlSerializable.GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlBinary), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.ReadXml
void System::Data::SqlTypes::SqlBinary::System_Xml_Serialization_IXmlSerializable_ReadXml(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::System.Xml.Serialization.IXmlSerializable.ReadXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlBinary), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.WriteXml
void System::Data::SqlTypes::SqlBinary::System_Xml_Serialization_IXmlSerializable_WriteXml(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::System.Xml.Serialization.IXmlSerializable.WriteXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlBinary), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Data.SqlTypes.SqlBinary.GetXsdType
::System::Xml::XmlQualifiedName* System::Data::SqlTypes::SqlBinary::GetXsdType(::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::GetXsdType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlBinary", "GetXsdType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaSet);
}
// Autogenerated method: System.Data.SqlTypes.SqlBinary.ToString
::StringW System::Data::SqlTypes::SqlBinary::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBinary.Equals
bool System::Data::SqlTypes::SqlBinary::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlBinary.GetHashCode
int System::Data::SqlTypes::SqlBinary::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBinary.op_Equality
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator ==(const ::System::Data::SqlTypes::SqlBinary& x, const ::System::Data::SqlTypes::SqlBinary& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlBinary", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlBinary.op_LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator <(const ::System::Data::SqlTypes::SqlBinary& x, const ::System::Data::SqlTypes::SqlBinary& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlBinary", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlBinary.op_GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator >(const ::System::Data::SqlTypes::SqlBinary& x, const ::System::Data::SqlTypes::SqlBinary& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBinary::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlBinary", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.SqlTypes.SqlBoolean
#include "System/Data/SqlTypes/SqlBoolean.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlBoolean True
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlBoolean::_get_True() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::_get_True");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlBoolean>("System.Data.SqlTypes", "SqlBoolean", "True"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlBoolean True
void System::Data::SqlTypes::SqlBoolean::_set_True(::System::Data::SqlTypes::SqlBoolean value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::_set_True");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlBoolean", "True", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlBoolean False
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlBoolean::_get_False() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::_get_False");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlBoolean>("System.Data.SqlTypes", "SqlBoolean", "False"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlBoolean False
void System::Data::SqlTypes::SqlBoolean::_set_False(::System::Data::SqlTypes::SqlBoolean value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::_set_False");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlBoolean", "False", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlBoolean Null
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlBoolean::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlBoolean>("System.Data.SqlTypes", "SqlBoolean", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlBoolean Null
void System::Data::SqlTypes::SqlBoolean::_set_Null(::System::Data::SqlTypes::SqlBoolean value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlBoolean", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlBoolean Zero
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlBoolean::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlBoolean>("System.Data.SqlTypes", "SqlBoolean", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlBoolean Zero
void System::Data::SqlTypes::SqlBoolean::_set_Zero(::System::Data::SqlTypes::SqlBoolean value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlBoolean", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlBoolean One
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlBoolean::_get_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::_get_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlBoolean>("System.Data.SqlTypes", "SqlBoolean", "One"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlBoolean One
void System::Data::SqlTypes::SqlBoolean::_set_One(::System::Data::SqlTypes::SqlBoolean value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::_set_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlBoolean", "One", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte m_value
[[deprecated("Use field access instead!")]] uint8_t& System::Data::SqlTypes::SqlBoolean::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.get_IsNull
bool System::Data::SqlTypes::SqlBoolean::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlBoolean), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.get_Value
bool System::Data::SqlTypes::SqlBoolean::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.get_IsTrue
bool System::Data::SqlTypes::SqlBoolean::get_IsTrue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::get_IsTrue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsTrue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.get_IsFalse
bool System::Data::SqlTypes::SqlBoolean::get_IsFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::get_IsFalse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsFalse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.get_ByteValue
uint8_t System::Data::SqlTypes::SqlBoolean::get_ByteValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::get_ByteValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ByteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean..ctor
System::Data::SqlTypes::SqlBoolean::SqlBoolean(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean..ctor
System::Data::SqlTypes::SqlBoolean::SqlBoolean(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean..ctor
System::Data::SqlTypes::SqlBoolean::SqlBoolean(int value, bool fNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(fNull)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, fNull);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean..cctor
void System::Data::SqlTypes::SqlBoolean::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlBoolean", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.op_True
bool System::Data::SqlTypes::SqlBoolean::op_True(::System::Data::SqlTypes::SqlBoolean x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::op_True");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlBoolean", "op_True", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.And
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlBoolean::And(::System::Data::SqlTypes::SqlBoolean x, ::System::Data::SqlTypes::SqlBoolean y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::And");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlBoolean", "And", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.Or
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlBoolean::Or(::System::Data::SqlTypes::SqlBoolean x, ::System::Data::SqlTypes::SqlBoolean y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::Or");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlBoolean", "Or", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.CompareTo
int System::Data::SqlTypes::SqlBoolean::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlBoolean), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.CompareTo
int System::Data::SqlTypes::SqlBoolean::CompareTo(::System::Data::SqlTypes::SqlBoolean value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::CompareTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.GetSchema
::System::Xml::Schema::XmlSchema* System::Data::SqlTypes::SqlBoolean::System_Xml_Serialization_IXmlSerializable_GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::System.Xml.Serialization.IXmlSerializable.GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlBoolean), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.ReadXml
void System::Data::SqlTypes::SqlBoolean::System_Xml_Serialization_IXmlSerializable_ReadXml(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::System.Xml.Serialization.IXmlSerializable.ReadXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlBoolean), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.System.Xml.Serialization.IXmlSerializable.WriteXml
void System::Data::SqlTypes::SqlBoolean::System_Xml_Serialization_IXmlSerializable_WriteXml(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::System.Xml.Serialization.IXmlSerializable.WriteXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlBoolean), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.GetXsdType
::System::Xml::XmlQualifiedName* System::Data::SqlTypes::SqlBoolean::GetXsdType(::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::GetXsdType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlBoolean", "GetXsdType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaSet);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.ToString
::StringW System::Data::SqlTypes::SqlBoolean::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.Equals
bool System::Data::SqlTypes::SqlBoolean::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.GetHashCode
int System::Data::SqlTypes::SqlBoolean::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.op_BitwiseAnd
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator&(const ::System::Data::SqlTypes::SqlBoolean& x, const ::System::Data::SqlTypes::SqlBoolean& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::op_BitwiseAnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlBoolean", "op_BitwiseAnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.op_BitwiseOr
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator|(const ::System::Data::SqlTypes::SqlBoolean& x, const ::System::Data::SqlTypes::SqlBoolean& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::op_BitwiseOr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlBoolean", "op_BitwiseOr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlBoolean.op_Equality
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator ==(const ::System::Data::SqlTypes::SqlBoolean& x, const ::System::Data::SqlTypes::SqlBoolean& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBoolean::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlBoolean", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.SqlTypes.SqlByte
#include "System/Data/SqlTypes/SqlByte.hpp"
// Including type: System.Data.SqlTypes.SqlInt64
#include "System/Data/SqlTypes/SqlInt64.hpp"
// Including type: System.Data.SqlTypes.SqlBoolean
#include "System/Data/SqlTypes/SqlBoolean.hpp"
// Including type: System.Data.SqlTypes.SqlDouble
#include "System/Data/SqlTypes/SqlDouble.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 s_iBitNotByteMax
int System::Data::SqlTypes::SqlByte::_get_s_iBitNotByteMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::_get_s_iBitNotByteMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlByte", "s_iBitNotByteMax"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 s_iBitNotByteMax
void System::Data::SqlTypes::SqlByte::_set_s_iBitNotByteMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::_set_s_iBitNotByteMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlByte", "s_iBitNotByteMax", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlByte Null
::System::Data::SqlTypes::SqlByte System::Data::SqlTypes::SqlByte::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlByte>("System.Data.SqlTypes", "SqlByte", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlByte Null
void System::Data::SqlTypes::SqlByte::_set_Null(::System::Data::SqlTypes::SqlByte value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlByte", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlByte Zero
::System::Data::SqlTypes::SqlByte System::Data::SqlTypes::SqlByte::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlByte>("System.Data.SqlTypes", "SqlByte", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlByte Zero
void System::Data::SqlTypes::SqlByte::_set_Zero(::System::Data::SqlTypes::SqlByte value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlByte", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlByte MinValue
::System::Data::SqlTypes::SqlByte System::Data::SqlTypes::SqlByte::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlByte>("System.Data.SqlTypes", "SqlByte", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlByte MinValue
void System::Data::SqlTypes::SqlByte::_set_MinValue(::System::Data::SqlTypes::SqlByte value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlByte", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlByte MaxValue
::System::Data::SqlTypes::SqlByte System::Data::SqlTypes::SqlByte::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlByte>("System.Data.SqlTypes", "SqlByte", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlByte MaxValue
void System::Data::SqlTypes::SqlByte::_set_MaxValue(::System::Data::SqlTypes::SqlByte value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlByte", "MaxValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_fNotNull
[[deprecated("Use field access instead!")]] bool& System::Data::SqlTypes::SqlByte::dyn_m_fNotNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::dyn_m_fNotNull");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fNotNull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte m_value
[[deprecated("Use field access instead!")]] uint8_t& System::Data::SqlTypes::SqlByte::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.get_IsNull
bool System::Data::SqlTypes::SqlByte::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlByte), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.get_Value
uint8_t System::Data::SqlTypes::SqlByte::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte..ctor
System::Data::SqlTypes::SqlByte::SqlByte(bool fNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fNull)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fNull);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte..ctor
System::Data::SqlTypes::SqlByte::SqlByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte..cctor
void System::Data::SqlTypes::SqlByte::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlByte", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.op_Explicit
System::Data::SqlTypes::SqlByte::SqlByte(::System::Data::SqlTypes::SqlInt64& x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlByte", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlByte, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlByte::LessThan(::System::Data::SqlTypes::SqlByte x, ::System::Data::SqlTypes::SqlByte y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlByte", "LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlByte::GreaterThan(::System::Data::SqlTypes::SqlByte x, ::System::Data::SqlTypes::SqlByte y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlByte", "GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.ToSqlDouble
::System::Data::SqlTypes::SqlDouble System::Data::SqlTypes::SqlByte::ToSqlDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::ToSqlDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToSqlDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDouble, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.ToSqlInt64
::System::Data::SqlTypes::SqlInt64 System::Data::SqlTypes::SqlByte::ToSqlInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::ToSqlInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToSqlInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt64, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.CompareTo
int System::Data::SqlTypes::SqlByte::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlByte), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.CompareTo
int System::Data::SqlTypes::SqlByte::CompareTo(::System::Data::SqlTypes::SqlByte value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::CompareTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.System.Xml.Serialization.IXmlSerializable.GetSchema
::System::Xml::Schema::XmlSchema* System::Data::SqlTypes::SqlByte::System_Xml_Serialization_IXmlSerializable_GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::System.Xml.Serialization.IXmlSerializable.GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlByte), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.System.Xml.Serialization.IXmlSerializable.ReadXml
void System::Data::SqlTypes::SqlByte::System_Xml_Serialization_IXmlSerializable_ReadXml(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::System.Xml.Serialization.IXmlSerializable.ReadXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlByte), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.System.Xml.Serialization.IXmlSerializable.WriteXml
void System::Data::SqlTypes::SqlByte::System_Xml_Serialization_IXmlSerializable_WriteXml(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::System.Xml.Serialization.IXmlSerializable.WriteXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlByte), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.GetXsdType
::System::Xml::XmlQualifiedName* System::Data::SqlTypes::SqlByte::GetXsdType(::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::GetXsdType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlByte", "GetXsdType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaSet);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.ToString
::StringW System::Data::SqlTypes::SqlByte::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.Equals
bool System::Data::SqlTypes::SqlByte::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.GetHashCode
int System::Data::SqlTypes::SqlByte::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.op_Addition
::System::Data::SqlTypes::SqlByte System::Data::SqlTypes::operator+(const ::System::Data::SqlTypes::SqlByte& x, const ::System::Data::SqlTypes::SqlByte& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlByte", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlByte, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.op_Subtraction
::System::Data::SqlTypes::SqlByte System::Data::SqlTypes::operator-(const ::System::Data::SqlTypes::SqlByte& x, const ::System::Data::SqlTypes::SqlByte& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlByte", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlByte, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.op_Multiply
::System::Data::SqlTypes::SqlByte System::Data::SqlTypes::operator*(const ::System::Data::SqlTypes::SqlByte& x, const ::System::Data::SqlTypes::SqlByte& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlByte", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlByte, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.op_Division
::System::Data::SqlTypes::SqlByte System::Data::SqlTypes::operator/(const ::System::Data::SqlTypes::SqlByte& x, const ::System::Data::SqlTypes::SqlByte& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlByte", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlByte, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.op_Equality
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator ==(const ::System::Data::SqlTypes::SqlByte& x, const ::System::Data::SqlTypes::SqlByte& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlByte", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.op_LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator <(const ::System::Data::SqlTypes::SqlByte& x, const ::System::Data::SqlTypes::SqlByte& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlByte", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlByte.op_GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator >(const ::System::Data::SqlTypes::SqlByte& x, const ::System::Data::SqlTypes::SqlByte& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlByte::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlByte", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.SqlTypes.SqlBytesCharsState
#include "System/Data/SqlTypes/SqlBytesCharsState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.SqlTypes.SqlBytesCharsState Null
::System::Data::SqlTypes::SqlBytesCharsState System::Data::SqlTypes::SqlBytesCharsState::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytesCharsState::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlBytesCharsState>("System.Data.SqlTypes", "SqlBytesCharsState", "Null"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SqlTypes.SqlBytesCharsState Null
void System::Data::SqlTypes::SqlBytesCharsState::_set_Null(::System::Data::SqlTypes::SqlBytesCharsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytesCharsState::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlBytesCharsState", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.SqlTypes.SqlBytesCharsState Buffer
::System::Data::SqlTypes::SqlBytesCharsState System::Data::SqlTypes::SqlBytesCharsState::_get_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytesCharsState::_get_Buffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlBytesCharsState>("System.Data.SqlTypes", "SqlBytesCharsState", "Buffer"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SqlTypes.SqlBytesCharsState Buffer
void System::Data::SqlTypes::SqlBytesCharsState::_set_Buffer(::System::Data::SqlTypes::SqlBytesCharsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytesCharsState::_set_Buffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlBytesCharsState", "Buffer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.SqlTypes.SqlBytesCharsState Stream
::System::Data::SqlTypes::SqlBytesCharsState System::Data::SqlTypes::SqlBytesCharsState::_get_Stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytesCharsState::_get_Stream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlBytesCharsState>("System.Data.SqlTypes", "SqlBytesCharsState", "Stream"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SqlTypes.SqlBytesCharsState Stream
void System::Data::SqlTypes::SqlBytesCharsState::_set_Stream(::System::Data::SqlTypes::SqlBytesCharsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytesCharsState::_set_Stream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlBytesCharsState", "Stream", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::SqlTypes::SqlBytesCharsState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytesCharsState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.SqlTypes.SqlBytes
#include "System/Data/SqlTypes/SqlBytes.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Byte[] _rgbBuf
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Data::SqlTypes::SqlBytes::dyn__rgbBuf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytes::dyn__rgbBuf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rgbBuf"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _lCurLen
[[deprecated("Use field access instead!")]] int64_t& System::Data::SqlTypes::SqlBytes::dyn__lCurLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytes::dyn__lCurLen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lCurLen"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.IO.Stream _stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Data::SqlTypes::SqlBytes::dyn__stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytes::dyn__stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.SqlTypes.SqlBytesCharsState _state
[[deprecated("Use field access instead!")]] ::System::Data::SqlTypes::SqlBytesCharsState& System::Data::SqlTypes::SqlBytes::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytes::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::System::Data::SqlTypes::SqlBytesCharsState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _rgbWorkBuf
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Data::SqlTypes::SqlBytes::dyn__rgbWorkBuf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytes::dyn__rgbWorkBuf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rgbWorkBuf"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.SqlTypes.SqlBytes.get_IsNull
bool System::Data::SqlTypes::SqlBytes::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytes::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SqlTypes::SqlBytes*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBytes.get_Buffer
::ArrayW<uint8_t> System::Data::SqlTypes::SqlBytes::get_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytes::get_Buffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Buffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBytes.get_Length
int64_t System::Data::SqlTypes::SqlBytes::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytes::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBytes.get_Value
::ArrayW<uint8_t> System::Data::SqlTypes::SqlBytes::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytes::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBytes.get_Null
::System::Data::SqlTypes::SqlBytes* System::Data::SqlTypes::SqlBytes::get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytes::get_Null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlBytes", "get_Null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBytes*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBytes.SetNull
void System::Data::SqlTypes::SqlBytes::SetNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytes::SetNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBytes.CopyStreamToBuffer
void System::Data::SqlTypes::SqlBytes::CopyStreamToBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytes::CopyStreamToBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyStreamToBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBytes.FStream
bool System::Data::SqlTypes::SqlBytes::FStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytes::FStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBytes.SetBuffer
void System::Data::SqlTypes::SqlBytes::SetBuffer(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytes::SetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.Data.SqlTypes.SqlBytes.System.Xml.Serialization.IXmlSerializable.GetSchema
::System::Xml::Schema::XmlSchema* System::Data::SqlTypes::SqlBytes::System_Xml_Serialization_IXmlSerializable_GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytes::System.Xml.Serialization.IXmlSerializable.GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SqlTypes::SqlBytes*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlBytes.System.Xml.Serialization.IXmlSerializable.ReadXml
void System::Data::SqlTypes::SqlBytes::System_Xml_Serialization_IXmlSerializable_ReadXml(::System::Xml::XmlReader* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytes::System.Xml.Serialization.IXmlSerializable.ReadXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SqlTypes::SqlBytes*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, r);
}
// Autogenerated method: System.Data.SqlTypes.SqlBytes.System.Xml.Serialization.IXmlSerializable.WriteXml
void System::Data::SqlTypes::SqlBytes::System_Xml_Serialization_IXmlSerializable_WriteXml(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytes::System.Xml.Serialization.IXmlSerializable.WriteXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SqlTypes::SqlBytes*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Data.SqlTypes.SqlBytes.GetXsdType
::System::Xml::XmlQualifiedName* System::Data::SqlTypes::SqlBytes::GetXsdType(::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytes::GetXsdType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlBytes", "GetXsdType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaSet);
}
// Autogenerated method: System.Data.SqlTypes.SqlBytes.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Data::SqlTypes::SqlBytes::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlBytes::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SqlTypes::SqlBytes*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.SqlTypes.SqlChars
#include "System/Data/SqlTypes/SqlChars.hpp"
// Including type: System.Data.SqlTypes.SqlStreamChars
#include "System/Data/SqlTypes/SqlStreamChars.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Char[] _rgchBuf
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Data::SqlTypes::SqlChars::dyn__rgchBuf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlChars::dyn__rgchBuf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rgchBuf"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _lCurLen
[[deprecated("Use field access instead!")]] int64_t& System::Data::SqlTypes::SqlChars::dyn__lCurLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlChars::dyn__lCurLen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lCurLen"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Data.SqlTypes.SqlStreamChars _stream
[[deprecated("Use field access instead!")]] ::System::Data::SqlTypes::SqlStreamChars*& System::Data::SqlTypes::SqlChars::dyn__stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlChars::dyn__stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stream"))->offset;
  return *reinterpret_cast<::System::Data::SqlTypes::SqlStreamChars**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.SqlTypes.SqlBytesCharsState _state
[[deprecated("Use field access instead!")]] ::System::Data::SqlTypes::SqlBytesCharsState& System::Data::SqlTypes::SqlChars::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlChars::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::System::Data::SqlTypes::SqlBytesCharsState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] _rgchWorkBuf
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Data::SqlTypes::SqlChars::dyn__rgchWorkBuf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlChars::dyn__rgchWorkBuf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rgchWorkBuf"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.SqlTypes.SqlChars.get_IsNull
bool System::Data::SqlTypes::SqlChars::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlChars::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SqlTypes::SqlChars*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlChars.get_Buffer
::ArrayW<::Il2CppChar> System::Data::SqlTypes::SqlChars::get_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlChars::get_Buffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Buffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlChars.get_Length
int64_t System::Data::SqlTypes::SqlChars::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlChars::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlChars.get_Value
::ArrayW<::Il2CppChar> System::Data::SqlTypes::SqlChars::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlChars::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlChars.get_Null
::System::Data::SqlTypes::SqlChars* System::Data::SqlTypes::SqlChars::get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlChars::get_Null");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlChars", "get_Null", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlChars*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlChars.SetNull
void System::Data::SqlTypes::SqlChars::SetNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlChars::SetNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlChars.FStream
bool System::Data::SqlTypes::SqlChars::FStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlChars::FStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlChars.CopyStreamToBuffer
void System::Data::SqlTypes::SqlChars::CopyStreamToBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlChars::CopyStreamToBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyStreamToBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlChars.SetBuffer
void System::Data::SqlTypes::SqlChars::SetBuffer(::ArrayW<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlChars::SetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.Data.SqlTypes.SqlChars.System.Xml.Serialization.IXmlSerializable.GetSchema
::System::Xml::Schema::XmlSchema* System::Data::SqlTypes::SqlChars::System_Xml_Serialization_IXmlSerializable_GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlChars::System.Xml.Serialization.IXmlSerializable.GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SqlTypes::SqlChars*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlChars.System.Xml.Serialization.IXmlSerializable.ReadXml
void System::Data::SqlTypes::SqlChars::System_Xml_Serialization_IXmlSerializable_ReadXml(::System::Xml::XmlReader* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlChars::System.Xml.Serialization.IXmlSerializable.ReadXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SqlTypes::SqlChars*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, r);
}
// Autogenerated method: System.Data.SqlTypes.SqlChars.System.Xml.Serialization.IXmlSerializable.WriteXml
void System::Data::SqlTypes::SqlChars::System_Xml_Serialization_IXmlSerializable_WriteXml(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlChars::System.Xml.Serialization.IXmlSerializable.WriteXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SqlTypes::SqlChars*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Data.SqlTypes.SqlChars.GetXsdType
::System::Xml::XmlQualifiedName* System::Data::SqlTypes::SqlChars::GetXsdType(::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlChars::GetXsdType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlChars", "GetXsdType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaSet);
}
// Autogenerated method: System.Data.SqlTypes.SqlChars.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Data::SqlTypes::SqlChars::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlChars::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SqlTypes::SqlChars*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.SqlTypes.SqlDateTime
#include "System/Data/SqlTypes/SqlDateTime.hpp"
// Including type: System.Data.SqlTypes.SqlBoolean
#include "System/Data/SqlTypes/SqlBoolean.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Double s_SQLTicksPerMillisecond
double System::Data::SqlTypes::SqlDateTime::_get_s_SQLTicksPerMillisecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_SQLTicksPerMillisecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System.Data.SqlTypes", "SqlDateTime", "s_SQLTicksPerMillisecond"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Double s_SQLTicksPerMillisecond
void System::Data::SqlTypes::SqlDateTime::_set_s_SQLTicksPerMillisecond(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_SQLTicksPerMillisecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_SQLTicksPerMillisecond", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 SQLTicksPerSecond
int System::Data::SqlTypes::SqlDateTime::_get_SQLTicksPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_SQLTicksPerSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlDateTime", "SQLTicksPerSecond"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 SQLTicksPerSecond
void System::Data::SqlTypes::SqlDateTime::_set_SQLTicksPerSecond(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_SQLTicksPerSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "SQLTicksPerSecond", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 SQLTicksPerMinute
int System::Data::SqlTypes::SqlDateTime::_get_SQLTicksPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_SQLTicksPerMinute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlDateTime", "SQLTicksPerMinute"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 SQLTicksPerMinute
void System::Data::SqlTypes::SqlDateTime::_set_SQLTicksPerMinute(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_SQLTicksPerMinute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "SQLTicksPerMinute", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 SQLTicksPerHour
int System::Data::SqlTypes::SqlDateTime::_get_SQLTicksPerHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_SQLTicksPerHour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlDateTime", "SQLTicksPerHour"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 SQLTicksPerHour
void System::Data::SqlTypes::SqlDateTime::_set_SQLTicksPerHour(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_SQLTicksPerHour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "SQLTicksPerHour", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 s_SQLTicksPerDay
int System::Data::SqlTypes::SqlDateTime::_get_s_SQLTicksPerDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_SQLTicksPerDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlDateTime", "s_SQLTicksPerDay"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 s_SQLTicksPerDay
void System::Data::SqlTypes::SqlDateTime::_set_s_SQLTicksPerDay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_SQLTicksPerDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_SQLTicksPerDay", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 s_ticksPerSecond
int64_t System::Data::SqlTypes::SqlDateTime::_get_s_ticksPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_ticksPerSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Data.SqlTypes", "SqlDateTime", "s_ticksPerSecond"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 s_ticksPerSecond
void System::Data::SqlTypes::SqlDateTime::_set_s_ticksPerSecond(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_ticksPerSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_ticksPerSecond", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.DateTime s_SQLBaseDate
::System::DateTime System::Data::SqlTypes::SqlDateTime::_get_s_SQLBaseDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_SQLBaseDate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System.Data.SqlTypes", "SqlDateTime", "s_SQLBaseDate"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.DateTime s_SQLBaseDate
void System::Data::SqlTypes::SqlDateTime::_set_s_SQLBaseDate(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_SQLBaseDate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_SQLBaseDate", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 s_SQLBaseDateTicks
int64_t System::Data::SqlTypes::SqlDateTime::_get_s_SQLBaseDateTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_SQLBaseDateTicks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Data.SqlTypes", "SqlDateTime", "s_SQLBaseDateTicks"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 s_SQLBaseDateTicks
void System::Data::SqlTypes::SqlDateTime::_set_s_SQLBaseDateTicks(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_SQLBaseDateTicks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_SQLBaseDateTicks", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 s_minYear
int System::Data::SqlTypes::SqlDateTime::_get_s_minYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_minYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlDateTime", "s_minYear"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 s_minYear
void System::Data::SqlTypes::SqlDateTime::_set_s_minYear(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_minYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_minYear", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 s_maxYear
int System::Data::SqlTypes::SqlDateTime::_get_s_maxYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_maxYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlDateTime", "s_maxYear"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 s_maxYear
void System::Data::SqlTypes::SqlDateTime::_set_s_maxYear(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_maxYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_maxYear", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 s_minDay
int System::Data::SqlTypes::SqlDateTime::_get_s_minDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_minDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlDateTime", "s_minDay"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 s_minDay
void System::Data::SqlTypes::SqlDateTime::_set_s_minDay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_minDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_minDay", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 s_maxDay
int System::Data::SqlTypes::SqlDateTime::_get_s_maxDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_maxDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlDateTime", "s_maxDay"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 s_maxDay
void System::Data::SqlTypes::SqlDateTime::_set_s_maxDay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_maxDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_maxDay", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 s_minTime
int System::Data::SqlTypes::SqlDateTime::_get_s_minTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_minTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlDateTime", "s_minTime"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 s_minTime
void System::Data::SqlTypes::SqlDateTime::_set_s_minTime(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_minTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_minTime", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 s_maxTime
int System::Data::SqlTypes::SqlDateTime::_get_s_maxTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_maxTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlDateTime", "s_maxTime"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 s_maxTime
void System::Data::SqlTypes::SqlDateTime::_set_s_maxTime(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_maxTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_maxTime", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 s_dayBase
int System::Data::SqlTypes::SqlDateTime::_get_s_dayBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_dayBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlDateTime", "s_dayBase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 s_dayBase
void System::Data::SqlTypes::SqlDateTime::_set_s_dayBase(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_dayBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_dayBase", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] s_daysToMonth365
::ArrayW<int> System::Data::SqlTypes::SqlDateTime::_get_s_daysToMonth365() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_daysToMonth365");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Data.SqlTypes", "SqlDateTime", "s_daysToMonth365"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] s_daysToMonth365
void System::Data::SqlTypes::SqlDateTime::_set_s_daysToMonth365(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_daysToMonth365");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_daysToMonth365", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] s_daysToMonth366
::ArrayW<int> System::Data::SqlTypes::SqlDateTime::_get_s_daysToMonth366() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_daysToMonth366");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Data.SqlTypes", "SqlDateTime", "s_daysToMonth366"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] s_daysToMonth366
void System::Data::SqlTypes::SqlDateTime::_set_s_daysToMonth366(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_daysToMonth366");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_daysToMonth366", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.DateTime s_minDateTime
::System::DateTime System::Data::SqlTypes::SqlDateTime::_get_s_minDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_minDateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System.Data.SqlTypes", "SqlDateTime", "s_minDateTime"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.DateTime s_minDateTime
void System::Data::SqlTypes::SqlDateTime::_set_s_minDateTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_minDateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_minDateTime", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.DateTime s_maxDateTime
::System::DateTime System::Data::SqlTypes::SqlDateTime::_get_s_maxDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_maxDateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System.Data.SqlTypes", "SqlDateTime", "s_maxDateTime"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.DateTime s_maxDateTime
void System::Data::SqlTypes::SqlDateTime::_set_s_maxDateTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_maxDateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_maxDateTime", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.TimeSpan s_minTimeSpan
::System::TimeSpan System::Data::SqlTypes::SqlDateTime::_get_s_minTimeSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_minTimeSpan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System.Data.SqlTypes", "SqlDateTime", "s_minTimeSpan"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.TimeSpan s_minTimeSpan
void System::Data::SqlTypes::SqlDateTime::_set_s_minTimeSpan(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_minTimeSpan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_minTimeSpan", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.TimeSpan s_maxTimeSpan
::System::TimeSpan System::Data::SqlTypes::SqlDateTime::_get_s_maxTimeSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_maxTimeSpan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System.Data.SqlTypes", "SqlDateTime", "s_maxTimeSpan"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.TimeSpan s_maxTimeSpan
void System::Data::SqlTypes::SqlDateTime::_set_s_maxTimeSpan(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_maxTimeSpan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_maxTimeSpan", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String s_ISO8601_DateTimeFormat
::StringW System::Data::SqlTypes::SqlDateTime::_get_s_ISO8601_DateTimeFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_ISO8601_DateTimeFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Data.SqlTypes", "SqlDateTime", "s_ISO8601_DateTimeFormat"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String s_ISO8601_DateTimeFormat
void System::Data::SqlTypes::SqlDateTime::_set_s_ISO8601_DateTimeFormat(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_ISO8601_DateTimeFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_ISO8601_DateTimeFormat", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] s_dateTimeFormats
::ArrayW<::StringW> System::Data::SqlTypes::SqlDateTime::_get_s_dateTimeFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_s_dateTimeFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Data.SqlTypes", "SqlDateTime", "s_dateTimeFormats"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] s_dateTimeFormats
void System::Data::SqlTypes::SqlDateTime::_set_s_dateTimeFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_s_dateTimeFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "s_dateTimeFormats", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlDateTime MinValue
::System::Data::SqlTypes::SqlDateTime System::Data::SqlTypes::SqlDateTime::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlDateTime>("System.Data.SqlTypes", "SqlDateTime", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlDateTime MinValue
void System::Data::SqlTypes::SqlDateTime::_set_MinValue(::System::Data::SqlTypes::SqlDateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlDateTime MaxValue
::System::Data::SqlTypes::SqlDateTime System::Data::SqlTypes::SqlDateTime::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlDateTime>("System.Data.SqlTypes", "SqlDateTime", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlDateTime MaxValue
void System::Data::SqlTypes::SqlDateTime::_set_MaxValue(::System::Data::SqlTypes::SqlDateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlDateTime Null
::System::Data::SqlTypes::SqlDateTime System::Data::SqlTypes::SqlDateTime::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlDateTime>("System.Data.SqlTypes", "SqlDateTime", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlDateTime Null
void System::Data::SqlTypes::SqlDateTime::_set_Null(::System::Data::SqlTypes::SqlDateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDateTime", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_fNotNull
[[deprecated("Use field access instead!")]] bool& System::Data::SqlTypes::SqlDateTime::dyn_m_fNotNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::dyn_m_fNotNull");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fNotNull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_day
[[deprecated("Use field access instead!")]] int& System::Data::SqlTypes::SqlDateTime::dyn_m_day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::dyn_m_day");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_day"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_time
[[deprecated("Use field access instead!")]] int& System::Data::SqlTypes::SqlDateTime::dyn_m_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::dyn_m_time");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_time"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.get_IsNull
bool System::Data::SqlTypes::SqlDateTime::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlDateTime), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.get_Value
::System::DateTime System::Data::SqlTypes::SqlDateTime::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.get_DayTicks
int System::Data::SqlTypes::SqlDateTime::get_DayTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::get_DayTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DayTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.get_TimeTicks
int System::Data::SqlTypes::SqlDateTime::get_TimeTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::get_TimeTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_TimeTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime..ctor
System::Data::SqlTypes::SqlDateTime::SqlDateTime(bool fNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fNull)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fNull);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime..ctor
System::Data::SqlTypes::SqlDateTime::SqlDateTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime..ctor
System::Data::SqlTypes::SqlDateTime::SqlDateTime(int dayTicks, int timeTicks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dayTicks), ::il2cpp_utils::ExtractType(timeTicks)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dayTicks, timeTicks);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime..cctor
void System::Data::SqlTypes::SqlDateTime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDateTime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.ToTimeSpan
::System::TimeSpan System::Data::SqlTypes::SqlDateTime::ToTimeSpan(::System::Data::SqlTypes::SqlDateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::ToTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDateTime", "ToTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.ToDateTime
::System::DateTime System::Data::SqlTypes::SqlDateTime::ToDateTime(::System::Data::SqlTypes::SqlDateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::ToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDateTime", "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.FromTimeSpan
::System::Data::SqlTypes::SqlDateTime System::Data::SqlTypes::SqlDateTime::FromTimeSpan(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::FromTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDateTime", "FromTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.FromDateTime
::System::Data::SqlTypes::SqlDateTime System::Data::SqlTypes::SqlDateTime::FromDateTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::FromDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDateTime", "FromDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlDateTime::LessThan(::System::Data::SqlTypes::SqlDateTime x, ::System::Data::SqlTypes::SqlDateTime y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDateTime", "LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlDateTime::GreaterThan(::System::Data::SqlTypes::SqlDateTime x, ::System::Data::SqlTypes::SqlDateTime y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDateTime", "GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.CompareTo
int System::Data::SqlTypes::SqlDateTime::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlDateTime), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.CompareTo
int System::Data::SqlTypes::SqlDateTime::CompareTo(::System::Data::SqlTypes::SqlDateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::CompareTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.System.Xml.Serialization.IXmlSerializable.GetSchema
::System::Xml::Schema::XmlSchema* System::Data::SqlTypes::SqlDateTime::System_Xml_Serialization_IXmlSerializable_GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::System.Xml.Serialization.IXmlSerializable.GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlDateTime), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.System.Xml.Serialization.IXmlSerializable.ReadXml
void System::Data::SqlTypes::SqlDateTime::System_Xml_Serialization_IXmlSerializable_ReadXml(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::System.Xml.Serialization.IXmlSerializable.ReadXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlDateTime), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.System.Xml.Serialization.IXmlSerializable.WriteXml
void System::Data::SqlTypes::SqlDateTime::System_Xml_Serialization_IXmlSerializable_WriteXml(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::System.Xml.Serialization.IXmlSerializable.WriteXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlDateTime), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.GetXsdType
::System::Xml::XmlQualifiedName* System::Data::SqlTypes::SqlDateTime::GetXsdType(::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::GetXsdType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDateTime", "GetXsdType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaSet);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.ToString
::StringW System::Data::SqlTypes::SqlDateTime::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.Equals
bool System::Data::SqlTypes::SqlDateTime::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.GetHashCode
int System::Data::SqlTypes::SqlDateTime::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.op_Equality
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator ==(const ::System::Data::SqlTypes::SqlDateTime& x, const ::System::Data::SqlTypes::SqlDateTime& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDateTime", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.op_LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator <(const ::System::Data::SqlTypes::SqlDateTime& x, const ::System::Data::SqlTypes::SqlDateTime& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDateTime", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDateTime.op_GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator >(const ::System::Data::SqlTypes::SqlDateTime& x, const ::System::Data::SqlTypes::SqlDateTime& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDateTime::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDateTime", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.SqlTypes.SqlDecimal
#include "System/Data/SqlTypes/SqlDecimal.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.Data.SqlTypes.SqlByte
#include "System/Data/SqlTypes/SqlByte.hpp"
// Including type: System.Data.SqlTypes.SqlInt16
#include "System/Data/SqlTypes/SqlInt16.hpp"
// Including type: System.Data.SqlTypes.SqlInt32
#include "System/Data/SqlTypes/SqlInt32.hpp"
// Including type: System.Data.SqlTypes.SqlInt64
#include "System/Data/SqlTypes/SqlInt64.hpp"
// Including type: System.Data.SqlTypes.SqlMoney
#include "System/Data/SqlTypes/SqlMoney.hpp"
// Including type: System.Data.SqlTypes.EComparison
#include "System/Data/SqlTypes/EComparison.hpp"
// Including type: System.Data.SqlTypes.SqlBoolean
#include "System/Data/SqlTypes/SqlBoolean.hpp"
// Including type: System.Data.SqlTypes.SqlDouble
#include "System/Data/SqlTypes/SqlDouble.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte s_NUMERIC_MAX_PRECISION
uint8_t System::Data::SqlTypes::SqlDecimal::_get_s_NUMERIC_MAX_PRECISION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_NUMERIC_MAX_PRECISION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Data.SqlTypes", "SqlDecimal", "s_NUMERIC_MAX_PRECISION"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte s_NUMERIC_MAX_PRECISION
void System::Data::SqlTypes::SqlDecimal::_set_s_NUMERIC_MAX_PRECISION(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_NUMERIC_MAX_PRECISION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_NUMERIC_MAX_PRECISION", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte MaxPrecision
uint8_t System::Data::SqlTypes::SqlDecimal::_get_MaxPrecision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_MaxPrecision");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Data.SqlTypes", "SqlDecimal", "MaxPrecision"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte MaxPrecision
void System::Data::SqlTypes::SqlDecimal::_set_MaxPrecision(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_MaxPrecision");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "MaxPrecision", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Byte MaxScale
uint8_t System::Data::SqlTypes::SqlDecimal::_get_MaxScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_MaxScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Data.SqlTypes", "SqlDecimal", "MaxScale"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Byte MaxScale
void System::Data::SqlTypes::SqlDecimal::_set_MaxScale(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_MaxScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "MaxScale", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte s_bNullMask
uint8_t System::Data::SqlTypes::SqlDecimal::_get_s_bNullMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_bNullMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Data.SqlTypes", "SqlDecimal", "s_bNullMask"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte s_bNullMask
void System::Data::SqlTypes::SqlDecimal::_set_s_bNullMask(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_bNullMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_bNullMask", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte s_bIsNull
uint8_t System::Data::SqlTypes::SqlDecimal::_get_s_bIsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_bIsNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Data.SqlTypes", "SqlDecimal", "s_bIsNull"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte s_bIsNull
void System::Data::SqlTypes::SqlDecimal::_set_s_bIsNull(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_bIsNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_bIsNull", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte s_bNotNull
uint8_t System::Data::SqlTypes::SqlDecimal::_get_s_bNotNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_bNotNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Data.SqlTypes", "SqlDecimal", "s_bNotNull"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte s_bNotNull
void System::Data::SqlTypes::SqlDecimal::_set_s_bNotNull(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_bNotNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_bNotNull", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte s_bReverseNullMask
uint8_t System::Data::SqlTypes::SqlDecimal::_get_s_bReverseNullMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_bReverseNullMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Data.SqlTypes", "SqlDecimal", "s_bReverseNullMask"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte s_bReverseNullMask
void System::Data::SqlTypes::SqlDecimal::_set_s_bReverseNullMask(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_bReverseNullMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_bReverseNullMask", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte s_bSignMask
uint8_t System::Data::SqlTypes::SqlDecimal::_get_s_bSignMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_bSignMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Data.SqlTypes", "SqlDecimal", "s_bSignMask"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte s_bSignMask
void System::Data::SqlTypes::SqlDecimal::_set_s_bSignMask(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_bSignMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_bSignMask", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte s_bPositive
uint8_t System::Data::SqlTypes::SqlDecimal::_get_s_bPositive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_bPositive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Data.SqlTypes", "SqlDecimal", "s_bPositive"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte s_bPositive
void System::Data::SqlTypes::SqlDecimal::_set_s_bPositive(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_bPositive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_bPositive", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte s_bNegative
uint8_t System::Data::SqlTypes::SqlDecimal::_get_s_bNegative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_bNegative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Data.SqlTypes", "SqlDecimal", "s_bNegative"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte s_bNegative
void System::Data::SqlTypes::SqlDecimal::_set_s_bNegative(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_bNegative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_bNegative", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte s_bReverseSignMask
uint8_t System::Data::SqlTypes::SqlDecimal::_get_s_bReverseSignMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_bReverseSignMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Data.SqlTypes", "SqlDecimal", "s_bReverseSignMask"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte s_bReverseSignMask
void System::Data::SqlTypes::SqlDecimal::_set_s_bReverseSignMask(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_bReverseSignMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_bReverseSignMask", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 s_uiZero
uint System::Data::SqlTypes::SqlDecimal::_get_s_uiZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_uiZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Data.SqlTypes", "SqlDecimal", "s_uiZero"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 s_uiZero
void System::Data::SqlTypes::SqlDecimal::_set_s_uiZero(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_uiZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_uiZero", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 s_cNumeMax
int System::Data::SqlTypes::SqlDecimal::_get_s_cNumeMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_cNumeMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlDecimal", "s_cNumeMax"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 s_cNumeMax
void System::Data::SqlTypes::SqlDecimal::_set_s_cNumeMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_cNumeMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_cNumeMax", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 s_lInt32Base
int64_t System::Data::SqlTypes::SqlDecimal::_get_s_lInt32Base() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_lInt32Base");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Data.SqlTypes", "SqlDecimal", "s_lInt32Base"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 s_lInt32Base
void System::Data::SqlTypes::SqlDecimal::_set_s_lInt32Base(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_lInt32Base");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_lInt32Base", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64 s_ulInt32Base
uint64_t System::Data::SqlTypes::SqlDecimal::_get_s_ulInt32Base() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_ulInt32Base");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Data.SqlTypes", "SqlDecimal", "s_ulInt32Base"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64 s_ulInt32Base
void System::Data::SqlTypes::SqlDecimal::_set_s_ulInt32Base(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_ulInt32Base");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_ulInt32Base", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64 s_ulInt32BaseForMod
uint64_t System::Data::SqlTypes::SqlDecimal::_get_s_ulInt32BaseForMod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_ulInt32BaseForMod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Data.SqlTypes", "SqlDecimal", "s_ulInt32BaseForMod"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64 s_ulInt32BaseForMod
void System::Data::SqlTypes::SqlDecimal::_set_s_ulInt32BaseForMod(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_ulInt32BaseForMod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_ulInt32BaseForMod", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.UInt64 s_llMax
uint64_t System::Data::SqlTypes::SqlDecimal::_get_s_llMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_llMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Data.SqlTypes", "SqlDecimal", "s_llMax"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt64 s_llMax
void System::Data::SqlTypes::SqlDecimal::_set_s_llMax(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_llMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_llMax", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 s_ulBase10
uint System::Data::SqlTypes::SqlDecimal::_get_s_ulBase10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_ulBase10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Data.SqlTypes", "SqlDecimal", "s_ulBase10"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 s_ulBase10
void System::Data::SqlTypes::SqlDecimal::_set_s_ulBase10(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_ulBase10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_ulBase10", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Double s_DUINT_BASE
double System::Data::SqlTypes::SqlDecimal::_get_s_DUINT_BASE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_DUINT_BASE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System.Data.SqlTypes", "SqlDecimal", "s_DUINT_BASE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Double s_DUINT_BASE
void System::Data::SqlTypes::SqlDecimal::_set_s_DUINT_BASE(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_DUINT_BASE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_DUINT_BASE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Double s_DUINT_BASE2
double System::Data::SqlTypes::SqlDecimal::_get_s_DUINT_BASE2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_DUINT_BASE2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System.Data.SqlTypes", "SqlDecimal", "s_DUINT_BASE2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Double s_DUINT_BASE2
void System::Data::SqlTypes::SqlDecimal::_set_s_DUINT_BASE2(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_DUINT_BASE2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_DUINT_BASE2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Double s_DUINT_BASE3
double System::Data::SqlTypes::SqlDecimal::_get_s_DUINT_BASE3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_DUINT_BASE3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System.Data.SqlTypes", "SqlDecimal", "s_DUINT_BASE3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Double s_DUINT_BASE3
void System::Data::SqlTypes::SqlDecimal::_set_s_DUINT_BASE3(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_DUINT_BASE3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_DUINT_BASE3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Double s_DMAX_NUME
double System::Data::SqlTypes::SqlDecimal::_get_s_DMAX_NUME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_DMAX_NUME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System.Data.SqlTypes", "SqlDecimal", "s_DMAX_NUME"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Double s_DMAX_NUME
void System::Data::SqlTypes::SqlDecimal::_set_s_DMAX_NUME(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_DMAX_NUME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_DMAX_NUME", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 s_DBL_DIG
uint System::Data::SqlTypes::SqlDecimal::_get_s_DBL_DIG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_DBL_DIG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Data.SqlTypes", "SqlDecimal", "s_DBL_DIG"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 s_DBL_DIG
void System::Data::SqlTypes::SqlDecimal::_set_s_DBL_DIG(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_DBL_DIG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_DBL_DIG", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte s_cNumeDivScaleMin
uint8_t System::Data::SqlTypes::SqlDecimal::_get_s_cNumeDivScaleMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_cNumeDivScaleMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Data.SqlTypes", "SqlDecimal", "s_cNumeDivScaleMin"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte s_cNumeDivScaleMin
void System::Data::SqlTypes::SqlDecimal::_set_s_cNumeDivScaleMin(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_cNumeDivScaleMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_cNumeDivScaleMin", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_rgulShiftBase
::ArrayW<uint> System::Data::SqlTypes::SqlDecimal::_get_s_rgulShiftBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_rgulShiftBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Data.SqlTypes", "SqlDecimal", "s_rgulShiftBase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_rgulShiftBase
void System::Data::SqlTypes::SqlDecimal::_set_s_rgulShiftBase(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_rgulShiftBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_rgulShiftBase", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_decimalHelpersLo
::ArrayW<uint> System::Data::SqlTypes::SqlDecimal::_get_s_decimalHelpersLo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_decimalHelpersLo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Data.SqlTypes", "SqlDecimal", "s_decimalHelpersLo"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_decimalHelpersLo
void System::Data::SqlTypes::SqlDecimal::_set_s_decimalHelpersLo(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_decimalHelpersLo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_decimalHelpersLo", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_decimalHelpersMid
::ArrayW<uint> System::Data::SqlTypes::SqlDecimal::_get_s_decimalHelpersMid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_decimalHelpersMid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Data.SqlTypes", "SqlDecimal", "s_decimalHelpersMid"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_decimalHelpersMid
void System::Data::SqlTypes::SqlDecimal::_set_s_decimalHelpersMid(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_decimalHelpersMid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_decimalHelpersMid", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_decimalHelpersHi
::ArrayW<uint> System::Data::SqlTypes::SqlDecimal::_get_s_decimalHelpersHi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_decimalHelpersHi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Data.SqlTypes", "SqlDecimal", "s_decimalHelpersHi"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_decimalHelpersHi
void System::Data::SqlTypes::SqlDecimal::_set_s_decimalHelpersHi(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_decimalHelpersHi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_decimalHelpersHi", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_decimalHelpersHiHi
::ArrayW<uint> System::Data::SqlTypes::SqlDecimal::_get_s_decimalHelpersHiHi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_decimalHelpersHiHi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Data.SqlTypes", "SqlDecimal", "s_decimalHelpersHiHi"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_decimalHelpersHiHi
void System::Data::SqlTypes::SqlDecimal::_set_s_decimalHelpersHiHi(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_decimalHelpersHiHi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_decimalHelpersHiHi", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] s_rgCLenFromPrec
::ArrayW<uint8_t> System::Data::SqlTypes::SqlDecimal::_get_s_rgCLenFromPrec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_rgCLenFromPrec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Data.SqlTypes", "SqlDecimal", "s_rgCLenFromPrec"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] s_rgCLenFromPrec
void System::Data::SqlTypes::SqlDecimal::_set_s_rgCLenFromPrec(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_rgCLenFromPrec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_rgCLenFromPrec", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 s_ulT1
uint System::Data::SqlTypes::SqlDecimal::_get_s_ulT1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_ulT1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Data.SqlTypes", "SqlDecimal", "s_ulT1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 s_ulT1
void System::Data::SqlTypes::SqlDecimal::_set_s_ulT1(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_ulT1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_ulT1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 s_ulT2
uint System::Data::SqlTypes::SqlDecimal::_get_s_ulT2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_ulT2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Data.SqlTypes", "SqlDecimal", "s_ulT2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 s_ulT2
void System::Data::SqlTypes::SqlDecimal::_set_s_ulT2(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_ulT2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_ulT2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 s_ulT3
uint System::Data::SqlTypes::SqlDecimal::_get_s_ulT3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_ulT3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Data.SqlTypes", "SqlDecimal", "s_ulT3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 s_ulT3
void System::Data::SqlTypes::SqlDecimal::_set_s_ulT3(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_ulT3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_ulT3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 s_ulT4
uint System::Data::SqlTypes::SqlDecimal::_get_s_ulT4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_ulT4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Data.SqlTypes", "SqlDecimal", "s_ulT4"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 s_ulT4
void System::Data::SqlTypes::SqlDecimal::_set_s_ulT4(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_ulT4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_ulT4", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 s_ulT5
uint System::Data::SqlTypes::SqlDecimal::_get_s_ulT5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_ulT5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Data.SqlTypes", "SqlDecimal", "s_ulT5"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 s_ulT5
void System::Data::SqlTypes::SqlDecimal::_set_s_ulT5(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_ulT5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_ulT5", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 s_ulT6
uint System::Data::SqlTypes::SqlDecimal::_get_s_ulT6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_ulT6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Data.SqlTypes", "SqlDecimal", "s_ulT6"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 s_ulT6
void System::Data::SqlTypes::SqlDecimal::_set_s_ulT6(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_ulT6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_ulT6", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 s_ulT7
uint System::Data::SqlTypes::SqlDecimal::_get_s_ulT7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_ulT7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Data.SqlTypes", "SqlDecimal", "s_ulT7"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 s_ulT7
void System::Data::SqlTypes::SqlDecimal::_set_s_ulT7(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_ulT7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_ulT7", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 s_ulT8
uint System::Data::SqlTypes::SqlDecimal::_get_s_ulT8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_ulT8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Data.SqlTypes", "SqlDecimal", "s_ulT8"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 s_ulT8
void System::Data::SqlTypes::SqlDecimal::_set_s_ulT8(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_ulT8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_ulT8", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 s_ulT9
uint System::Data::SqlTypes::SqlDecimal::_get_s_ulT9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_ulT9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Data.SqlTypes", "SqlDecimal", "s_ulT9"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 s_ulT9
void System::Data::SqlTypes::SqlDecimal::_set_s_ulT9(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_ulT9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_ulT9", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64 s_dwlT10
uint64_t System::Data::SqlTypes::SqlDecimal::_get_s_dwlT10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_dwlT10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Data.SqlTypes", "SqlDecimal", "s_dwlT10"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64 s_dwlT10
void System::Data::SqlTypes::SqlDecimal::_set_s_dwlT10(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_dwlT10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_dwlT10", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64 s_dwlT11
uint64_t System::Data::SqlTypes::SqlDecimal::_get_s_dwlT11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_dwlT11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Data.SqlTypes", "SqlDecimal", "s_dwlT11"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64 s_dwlT11
void System::Data::SqlTypes::SqlDecimal::_set_s_dwlT11(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_dwlT11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_dwlT11", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64 s_dwlT12
uint64_t System::Data::SqlTypes::SqlDecimal::_get_s_dwlT12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_dwlT12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Data.SqlTypes", "SqlDecimal", "s_dwlT12"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64 s_dwlT12
void System::Data::SqlTypes::SqlDecimal::_set_s_dwlT12(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_dwlT12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_dwlT12", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64 s_dwlT13
uint64_t System::Data::SqlTypes::SqlDecimal::_get_s_dwlT13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_dwlT13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Data.SqlTypes", "SqlDecimal", "s_dwlT13"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64 s_dwlT13
void System::Data::SqlTypes::SqlDecimal::_set_s_dwlT13(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_dwlT13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_dwlT13", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64 s_dwlT14
uint64_t System::Data::SqlTypes::SqlDecimal::_get_s_dwlT14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_dwlT14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Data.SqlTypes", "SqlDecimal", "s_dwlT14"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64 s_dwlT14
void System::Data::SqlTypes::SqlDecimal::_set_s_dwlT14(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_dwlT14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_dwlT14", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64 s_dwlT15
uint64_t System::Data::SqlTypes::SqlDecimal::_get_s_dwlT15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_dwlT15");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Data.SqlTypes", "SqlDecimal", "s_dwlT15"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64 s_dwlT15
void System::Data::SqlTypes::SqlDecimal::_set_s_dwlT15(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_dwlT15");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_dwlT15", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64 s_dwlT16
uint64_t System::Data::SqlTypes::SqlDecimal::_get_s_dwlT16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_dwlT16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Data.SqlTypes", "SqlDecimal", "s_dwlT16"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64 s_dwlT16
void System::Data::SqlTypes::SqlDecimal::_set_s_dwlT16(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_dwlT16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_dwlT16", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64 s_dwlT17
uint64_t System::Data::SqlTypes::SqlDecimal::_get_s_dwlT17() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_dwlT17");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Data.SqlTypes", "SqlDecimal", "s_dwlT17"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64 s_dwlT17
void System::Data::SqlTypes::SqlDecimal::_set_s_dwlT17(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_dwlT17");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_dwlT17", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64 s_dwlT18
uint64_t System::Data::SqlTypes::SqlDecimal::_get_s_dwlT18() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_dwlT18");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Data.SqlTypes", "SqlDecimal", "s_dwlT18"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64 s_dwlT18
void System::Data::SqlTypes::SqlDecimal::_set_s_dwlT18(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_dwlT18");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_dwlT18", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64 s_dwlT19
uint64_t System::Data::SqlTypes::SqlDecimal::_get_s_dwlT19() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_s_dwlT19");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Data.SqlTypes", "SqlDecimal", "s_dwlT19"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64 s_dwlT19
void System::Data::SqlTypes::SqlDecimal::_set_s_dwlT19(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_s_dwlT19");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "s_dwlT19", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlDecimal Null
::System::Data::SqlTypes::SqlDecimal System::Data::SqlTypes::SqlDecimal::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlDecimal>("System.Data.SqlTypes", "SqlDecimal", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlDecimal Null
void System::Data::SqlTypes::SqlDecimal::_set_Null(::System::Data::SqlTypes::SqlDecimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlDecimal MinValue
::System::Data::SqlTypes::SqlDecimal System::Data::SqlTypes::SqlDecimal::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlDecimal>("System.Data.SqlTypes", "SqlDecimal", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlDecimal MinValue
void System::Data::SqlTypes::SqlDecimal::_set_MinValue(::System::Data::SqlTypes::SqlDecimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlDecimal MaxValue
::System::Data::SqlTypes::SqlDecimal System::Data::SqlTypes::SqlDecimal::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlDecimal>("System.Data.SqlTypes", "SqlDecimal", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlDecimal MaxValue
void System::Data::SqlTypes::SqlDecimal::_set_MaxValue(::System::Data::SqlTypes::SqlDecimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDecimal", "MaxValue", value));
}
// Autogenerated instance field getter
// Get instance field: System.Byte _bStatus
[[deprecated("Use field access instead!")]] uint8_t& System::Data::SqlTypes::SqlDecimal::dyn__bStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::dyn__bStatus");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bStatus"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte _bLen
[[deprecated("Use field access instead!")]] uint8_t& System::Data::SqlTypes::SqlDecimal::dyn__bLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::dyn__bLen");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bLen"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte _bPrec
[[deprecated("Use field access instead!")]] uint8_t& System::Data::SqlTypes::SqlDecimal::dyn__bPrec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::dyn__bPrec");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bPrec"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte _bScale
[[deprecated("Use field access instead!")]] uint8_t& System::Data::SqlTypes::SqlDecimal::dyn__bScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::dyn__bScale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bScale"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 _data1
[[deprecated("Use field access instead!")]] uint& System::Data::SqlTypes::SqlDecimal::dyn__data1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::dyn__data1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data1"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 _data2
[[deprecated("Use field access instead!")]] uint& System::Data::SqlTypes::SqlDecimal::dyn__data2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::dyn__data2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data2"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 _data3
[[deprecated("Use field access instead!")]] uint& System::Data::SqlTypes::SqlDecimal::dyn__data3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::dyn__data3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data3"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 _data4
[[deprecated("Use field access instead!")]] uint& System::Data::SqlTypes::SqlDecimal::dyn__data4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::dyn__data4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data4"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.get_IsNull
bool System::Data::SqlTypes::SqlDecimal::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlDecimal), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.get_Value
::System::Decimal System::Data::SqlTypes::SqlDecimal::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.get_IsPositive
bool System::Data::SqlTypes::SqlDecimal::get_IsPositive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::get_IsPositive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsPositive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.get_Scale
uint8_t System::Data::SqlTypes::SqlDecimal::get_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::get_Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.get_Data
::ArrayW<int> System::Data::SqlTypes::SqlDecimal::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::get_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal..ctor
System::Data::SqlTypes::SqlDecimal::SqlDecimal(bool fNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fNull)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fNull);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal..ctor
System::Data::SqlTypes::SqlDecimal::SqlDecimal(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal..ctor
System::Data::SqlTypes::SqlDecimal::SqlDecimal(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal..ctor
System::Data::SqlTypes::SqlDecimal::SqlDecimal(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal..ctor
System::Data::SqlTypes::SqlDecimal::SqlDecimal(::ArrayW<uint> rglData, uint8_t bLen, uint8_t bPrec, uint8_t bScale, bool fPositive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rglData), ::il2cpp_utils::ExtractType(bLen), ::il2cpp_utils::ExtractType(bPrec), ::il2cpp_utils::ExtractType(bScale), ::il2cpp_utils::ExtractType(fPositive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rglData, bLen, bPrec, bScale, fPositive);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal..cctor
void System::Data::SqlTypes::SqlDecimal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.CalculatePrecision
uint8_t System::Data::SqlTypes::SqlDecimal::CalculatePrecision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::CalculatePrecision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CalculatePrecision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.VerifyPrecision
bool System::Data::SqlTypes::SqlDecimal::VerifyPrecision(uint8_t precision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::VerifyPrecision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "VerifyPrecision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(precision)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, precision);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.SetPositive
void System::Data::SqlTypes::SqlDecimal::SetPositive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::SetPositive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetPositive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.SetSignBit
void System::Data::SqlTypes::SqlDecimal::SetSignBit(bool fPositive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::SetSignBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetSignBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fPositive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fPositive);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.Parse
::System::Data::SqlTypes::SqlDecimal System::Data::SqlTypes::SqlDecimal::Parse(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDecimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.ToDouble
double System::Data::SqlTypes::SqlDecimal::ToDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.ToDecimal
::System::Decimal System::Data::SqlTypes::SqlDecimal::ToDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.ZeroToMaxLen
void System::Data::SqlTypes::SqlDecimal::ZeroToMaxLen(::ArrayW<uint> rgulData, int cUI4sCur) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::ZeroToMaxLen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "ZeroToMaxLen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgulData), ::il2cpp_utils::ExtractType(cUI4sCur)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgulData, cUI4sCur);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.FZero
bool System::Data::SqlTypes::SqlDecimal::FZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::FZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.FGt10_38
bool System::Data::SqlTypes::SqlDecimal::FGt10_38() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::FGt10_38");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FGt10_38", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.FGt10_38
bool System::Data::SqlTypes::SqlDecimal::FGt10_38(::ArrayW<uint> rglData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::FGt10_38");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FGt10_38", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rglData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rglData);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.BGetPrecUI4
uint8_t System::Data::SqlTypes::SqlDecimal::BGetPrecUI4(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::BGetPrecUI4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "BGetPrecUI4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.BGetPrecUI8
uint8_t System::Data::SqlTypes::SqlDecimal::BGetPrecUI8(uint64_t dwlVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::BGetPrecUI8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "BGetPrecUI8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dwlVal)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dwlVal);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.AddULong
void System::Data::SqlTypes::SqlDecimal::AddULong(uint ulAdd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::AddULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulAdd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ulAdd);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.MultByULong
void System::Data::SqlTypes::SqlDecimal::MultByULong(uint uiMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::MultByULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MultByULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uiMultiplier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uiMultiplier);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.DivByULong
uint System::Data::SqlTypes::SqlDecimal::DivByULong(uint iDivisor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::DivByULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "DivByULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iDivisor)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, iDivisor);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.AdjustScale
void System::Data::SqlTypes::SqlDecimal::AdjustScale(int digits, bool fRound) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::AdjustScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AdjustScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(fRound)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, digits, fRound);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.LAbsCmp
int System::Data::SqlTypes::SqlDecimal::LAbsCmp(::System::Data::SqlTypes::SqlDecimal snumOp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::LAbsCmp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "LAbsCmp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(snumOp)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, snumOp);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.MpMove
void System::Data::SqlTypes::SqlDecimal::MpMove(::ArrayW<uint> rgulS, int ciulS, ::ArrayW<uint> rgulD, ByRef<int> ciulD) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::MpMove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "MpMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgulS), ::il2cpp_utils::ExtractType(ciulS), ::il2cpp_utils::ExtractType(rgulD), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgulS, ciulS, rgulD, byref(ciulD));
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.MpSet
void System::Data::SqlTypes::SqlDecimal::MpSet(::ArrayW<uint> rgulD, ByRef<int> ciulD, uint iulN) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::MpSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "MpSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgulD), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(iulN)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgulD, byref(ciulD), iulN);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.MpNormalize
void System::Data::SqlTypes::SqlDecimal::MpNormalize(::ArrayW<uint> rgulU, ByRef<int> ciulU) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::MpNormalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "MpNormalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgulU), ::il2cpp_utils::ExtractType(ciulU)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgulU, byref(ciulU));
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.MpMul1
void System::Data::SqlTypes::SqlDecimal::MpMul1(::ArrayW<uint> piulD, ByRef<int> ciulD, uint iulX) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::MpMul1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "MpMul1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(piulD), ::il2cpp_utils::ExtractType(ciulD), ::il2cpp_utils::ExtractType(iulX)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, piulD, byref(ciulD), iulX);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.MpDiv1
void System::Data::SqlTypes::SqlDecimal::MpDiv1(::ArrayW<uint> rgulU, ByRef<int> ciulU, uint iulD, ByRef<uint> iulR) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::MpDiv1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "MpDiv1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgulU), ::il2cpp_utils::ExtractType(ciulU), ::il2cpp_utils::ExtractType(iulD), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgulU, byref(ciulU), iulD, byref(iulR));
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.DWL
uint64_t System::Data::SqlTypes::SqlDecimal::DWL(uint lo, uint hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::DWL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "DWL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lo), ::il2cpp_utils::ExtractType(hi)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lo, hi);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.HI
uint System::Data::SqlTypes::SqlDecimal::HI(uint64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::HI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "HI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.LO
uint System::Data::SqlTypes::SqlDecimal::LO(uint64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::LO");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "LO", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.MpDiv
void System::Data::SqlTypes::SqlDecimal::MpDiv(::ArrayW<uint> rgulU, int ciulU, ::ArrayW<uint> rgulD, int ciulD, ::ArrayW<uint> rgulQ, ByRef<int> ciulQ, ::ArrayW<uint> rgulR, ByRef<int> ciulR) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::MpDiv");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "MpDiv", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgulU), ::il2cpp_utils::ExtractType(ciulU), ::il2cpp_utils::ExtractType(rgulD), ::il2cpp_utils::ExtractType(ciulD), ::il2cpp_utils::ExtractType(rgulQ), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(rgulR), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgulU, ciulU, rgulD, ciulD, rgulQ, byref(ciulQ), rgulR, byref(ciulR));
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.CompareNm
::System::Data::SqlTypes::EComparison System::Data::SqlTypes::SqlDecimal::CompareNm(::System::Data::SqlTypes::SqlDecimal snumOp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::CompareNm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareNm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(snumOp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::EComparison, false>(this, ___internal__method, snumOp);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.CheckValidPrecScale
void System::Data::SqlTypes::SqlDecimal::CheckValidPrecScale(uint8_t bPrec, uint8_t bScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::CheckValidPrecScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "CheckValidPrecScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bPrec), ::il2cpp_utils::ExtractType(bScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bPrec, bScale);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlDecimal::LessThan(::System::Data::SqlTypes::SqlDecimal x, ::System::Data::SqlTypes::SqlDecimal y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlDecimal::GreaterThan(::System::Data::SqlTypes::SqlDecimal x, ::System::Data::SqlTypes::SqlDecimal y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.ToSqlDouble
::System::Data::SqlTypes::SqlDouble System::Data::SqlTypes::SqlDecimal::ToSqlDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::ToSqlDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToSqlDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDouble, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.ToSqlInt64
::System::Data::SqlTypes::SqlInt64 System::Data::SqlTypes::SqlDecimal::ToSqlInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::ToSqlInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToSqlInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt64, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.ToSqlMoney
::System::Data::SqlTypes::SqlMoney System::Data::SqlTypes::SqlDecimal::ToSqlMoney() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::ToSqlMoney");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToSqlMoney", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlMoney, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.ChFromDigit
::Il2CppChar System::Data::SqlTypes::SqlDecimal::ChFromDigit(uint uiDigit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::ChFromDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "ChFromDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uiDigit)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uiDigit);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.StoreFromWorkingArray
void System::Data::SqlTypes::SqlDecimal::StoreFromWorkingArray(::ArrayW<uint> rguiData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::StoreFromWorkingArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "StoreFromWorkingArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rguiData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rguiData);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.SetToZero
void System::Data::SqlTypes::SqlDecimal::SetToZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::SetToZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetToZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.CompareTo
int System::Data::SqlTypes::SqlDecimal::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlDecimal), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.CompareTo
int System::Data::SqlTypes::SqlDecimal::CompareTo(::System::Data::SqlTypes::SqlDecimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::CompareTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.System.Xml.Serialization.IXmlSerializable.GetSchema
::System::Xml::Schema::XmlSchema* System::Data::SqlTypes::SqlDecimal::System_Xml_Serialization_IXmlSerializable_GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::System.Xml.Serialization.IXmlSerializable.GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlDecimal), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.System.Xml.Serialization.IXmlSerializable.ReadXml
void System::Data::SqlTypes::SqlDecimal::System_Xml_Serialization_IXmlSerializable_ReadXml(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::System.Xml.Serialization.IXmlSerializable.ReadXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlDecimal), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.System.Xml.Serialization.IXmlSerializable.WriteXml
void System::Data::SqlTypes::SqlDecimal::System_Xml_Serialization_IXmlSerializable_WriteXml(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::System.Xml.Serialization.IXmlSerializable.WriteXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlDecimal), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.GetXsdType
::System::Xml::XmlQualifiedName* System::Data::SqlTypes::SqlDecimal::GetXsdType(::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::GetXsdType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "GetXsdType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaSet);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.ToString
::StringW System::Data::SqlTypes::SqlDecimal::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.Equals
bool System::Data::SqlTypes::SqlDecimal::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.GetHashCode
int System::Data::SqlTypes::SqlDecimal::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.op_UnaryNegation
::System::Data::SqlTypes::SqlDecimal System::Data::SqlTypes::operator-(const ::System::Data::SqlTypes::SqlDecimal& x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::op_UnaryNegation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "op_UnaryNegation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDecimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.op_Addition
::System::Data::SqlTypes::SqlDecimal System::Data::SqlTypes::operator+(const ::System::Data::SqlTypes::SqlDecimal& x, const ::System::Data::SqlTypes::SqlDecimal& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDecimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.op_Subtraction
::System::Data::SqlTypes::SqlDecimal System::Data::SqlTypes::operator-(const ::System::Data::SqlTypes::SqlDecimal& x, const ::System::Data::SqlTypes::SqlDecimal& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDecimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.op_Multiply
::System::Data::SqlTypes::SqlDecimal System::Data::SqlTypes::operator*(const ::System::Data::SqlTypes::SqlDecimal& x, const ::System::Data::SqlTypes::SqlDecimal& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDecimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.op_Division
::System::Data::SqlTypes::SqlDecimal System::Data::SqlTypes::operator/(const ::System::Data::SqlTypes::SqlDecimal& x, const ::System::Data::SqlTypes::SqlDecimal& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDecimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.op_Equality
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator ==(const ::System::Data::SqlTypes::SqlDecimal& x, const ::System::Data::SqlTypes::SqlDecimal& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.op_LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator <(const ::System::Data::SqlTypes::SqlDecimal& x, const ::System::Data::SqlTypes::SqlDecimal& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDecimal.op_GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator >(const ::System::Data::SqlTypes::SqlDecimal& x, const ::System::Data::SqlTypes::SqlDecimal& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDecimal::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDecimal", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.SqlTypes.SqlDouble
#include "System/Data/SqlTypes/SqlDouble.hpp"
// Including type: System.Data.SqlTypes.SqlByte
#include "System/Data/SqlTypes/SqlByte.hpp"
// Including type: System.Data.SqlTypes.SqlInt16
#include "System/Data/SqlTypes/SqlInt16.hpp"
// Including type: System.Data.SqlTypes.SqlInt32
#include "System/Data/SqlTypes/SqlInt32.hpp"
// Including type: System.Data.SqlTypes.SqlInt64
#include "System/Data/SqlTypes/SqlInt64.hpp"
// Including type: System.Data.SqlTypes.SqlSingle
#include "System/Data/SqlTypes/SqlSingle.hpp"
// Including type: System.Data.SqlTypes.SqlMoney
#include "System/Data/SqlTypes/SqlMoney.hpp"
// Including type: System.Data.SqlTypes.SqlDecimal
#include "System/Data/SqlTypes/SqlDecimal.hpp"
// Including type: System.Data.SqlTypes.SqlBoolean
#include "System/Data/SqlTypes/SqlBoolean.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlDouble Null
::System::Data::SqlTypes::SqlDouble System::Data::SqlTypes::SqlDouble::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlDouble>("System.Data.SqlTypes", "SqlDouble", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlDouble Null
void System::Data::SqlTypes::SqlDouble::_set_Null(::System::Data::SqlTypes::SqlDouble value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDouble", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlDouble Zero
::System::Data::SqlTypes::SqlDouble System::Data::SqlTypes::SqlDouble::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlDouble>("System.Data.SqlTypes", "SqlDouble", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlDouble Zero
void System::Data::SqlTypes::SqlDouble::_set_Zero(::System::Data::SqlTypes::SqlDouble value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDouble", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlDouble MinValue
::System::Data::SqlTypes::SqlDouble System::Data::SqlTypes::SqlDouble::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlDouble>("System.Data.SqlTypes", "SqlDouble", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlDouble MinValue
void System::Data::SqlTypes::SqlDouble::_set_MinValue(::System::Data::SqlTypes::SqlDouble value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDouble", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlDouble MaxValue
::System::Data::SqlTypes::SqlDouble System::Data::SqlTypes::SqlDouble::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlDouble>("System.Data.SqlTypes", "SqlDouble", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlDouble MaxValue
void System::Data::SqlTypes::SqlDouble::_set_MaxValue(::System::Data::SqlTypes::SqlDouble value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlDouble", "MaxValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_fNotNull
[[deprecated("Use field access instead!")]] bool& System::Data::SqlTypes::SqlDouble::dyn_m_fNotNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::dyn_m_fNotNull");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fNotNull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_value
[[deprecated("Use field access instead!")]] double& System::Data::SqlTypes::SqlDouble::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.get_IsNull
bool System::Data::SqlTypes::SqlDouble::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlDouble), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.get_Value
double System::Data::SqlTypes::SqlDouble::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble..ctor
System::Data::SqlTypes::SqlDouble::SqlDouble(bool fNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fNull)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fNull);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble..ctor
System::Data::SqlTypes::SqlDouble::SqlDouble(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble..cctor
void System::Data::SqlTypes::SqlDouble::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDouble", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlDouble::LessThan(::System::Data::SqlTypes::SqlDouble x, ::System::Data::SqlTypes::SqlDouble y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDouble", "LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlDouble::GreaterThan(::System::Data::SqlTypes::SqlDouble x, ::System::Data::SqlTypes::SqlDouble y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDouble", "GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.ToSqlSingle
::System::Data::SqlTypes::SqlSingle System::Data::SqlTypes::SqlDouble::ToSqlSingle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::ToSqlSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToSqlSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlSingle, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.CompareTo
int System::Data::SqlTypes::SqlDouble::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlDouble), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.CompareTo
int System::Data::SqlTypes::SqlDouble::CompareTo(::System::Data::SqlTypes::SqlDouble value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::CompareTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.System.Xml.Serialization.IXmlSerializable.GetSchema
::System::Xml::Schema::XmlSchema* System::Data::SqlTypes::SqlDouble::System_Xml_Serialization_IXmlSerializable_GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::System.Xml.Serialization.IXmlSerializable.GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlDouble), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.System.Xml.Serialization.IXmlSerializable.ReadXml
void System::Data::SqlTypes::SqlDouble::System_Xml_Serialization_IXmlSerializable_ReadXml(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::System.Xml.Serialization.IXmlSerializable.ReadXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlDouble), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.System.Xml.Serialization.IXmlSerializable.WriteXml
void System::Data::SqlTypes::SqlDouble::System_Xml_Serialization_IXmlSerializable_WriteXml(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::System.Xml.Serialization.IXmlSerializable.WriteXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlDouble), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.GetXsdType
::System::Xml::XmlQualifiedName* System::Data::SqlTypes::SqlDouble::GetXsdType(::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::GetXsdType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDouble", "GetXsdType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaSet);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.ToString
::StringW System::Data::SqlTypes::SqlDouble::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.Equals
bool System::Data::SqlTypes::SqlDouble::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.GetHashCode
int System::Data::SqlTypes::SqlDouble::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.op_UnaryNegation
::System::Data::SqlTypes::SqlDouble System::Data::SqlTypes::operator-(const ::System::Data::SqlTypes::SqlDouble& x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::op_UnaryNegation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDouble", "op_UnaryNegation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDouble, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.op_Addition
::System::Data::SqlTypes::SqlDouble System::Data::SqlTypes::operator+(const ::System::Data::SqlTypes::SqlDouble& x, const ::System::Data::SqlTypes::SqlDouble& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDouble", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDouble, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.op_Subtraction
::System::Data::SqlTypes::SqlDouble System::Data::SqlTypes::operator-(const ::System::Data::SqlTypes::SqlDouble& x, const ::System::Data::SqlTypes::SqlDouble& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDouble", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDouble, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.op_Multiply
::System::Data::SqlTypes::SqlDouble System::Data::SqlTypes::operator*(const ::System::Data::SqlTypes::SqlDouble& x, const ::System::Data::SqlTypes::SqlDouble& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDouble", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDouble, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.op_Division
::System::Data::SqlTypes::SqlDouble System::Data::SqlTypes::operator/(const ::System::Data::SqlTypes::SqlDouble& x, const ::System::Data::SqlTypes::SqlDouble& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDouble", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDouble, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.op_Equality
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator ==(const ::System::Data::SqlTypes::SqlDouble& x, const ::System::Data::SqlTypes::SqlDouble& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDouble", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.op_LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator <(const ::System::Data::SqlTypes::SqlDouble& x, const ::System::Data::SqlTypes::SqlDouble& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDouble", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlDouble.op_GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator >(const ::System::Data::SqlTypes::SqlDouble& x, const ::System::Data::SqlTypes::SqlDouble& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlDouble::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlDouble", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.SqlTypes.SqlGuid
#include "System/Data/SqlTypes/SqlGuid.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Data.SqlTypes.EComparison
#include "System/Data/SqlTypes/EComparison.hpp"
// Including type: System.Data.SqlTypes.SqlBoolean
#include "System/Data/SqlTypes/SqlBoolean.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 s_sizeOfGuid
int System::Data::SqlTypes::SqlGuid::_get_s_sizeOfGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::_get_s_sizeOfGuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlGuid", "s_sizeOfGuid"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 s_sizeOfGuid
void System::Data::SqlTypes::SqlGuid::_set_s_sizeOfGuid(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::_set_s_sizeOfGuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlGuid", "s_sizeOfGuid", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] s_rgiGuidOrder
::ArrayW<int> System::Data::SqlTypes::SqlGuid::_get_s_rgiGuidOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::_get_s_rgiGuidOrder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Data.SqlTypes", "SqlGuid", "s_rgiGuidOrder"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] s_rgiGuidOrder
void System::Data::SqlTypes::SqlGuid::_set_s_rgiGuidOrder(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::_set_s_rgiGuidOrder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlGuid", "s_rgiGuidOrder", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlGuid Null
::System::Data::SqlTypes::SqlGuid System::Data::SqlTypes::SqlGuid::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlGuid>("System.Data.SqlTypes", "SqlGuid", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlGuid Null
void System::Data::SqlTypes::SqlGuid::_set_Null(::System::Data::SqlTypes::SqlGuid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlGuid", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_value
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Data::SqlTypes::SqlGuid::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.SqlTypes.SqlGuid.get_IsNull
bool System::Data::SqlTypes::SqlGuid::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlGuid), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlGuid.get_Value
::System::Guid System::Data::SqlTypes::SqlGuid::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlGuid..ctor
System::Data::SqlTypes::SqlGuid::SqlGuid(bool fNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fNull)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fNull);
}
// Autogenerated method: System.Data.SqlTypes.SqlGuid..ctor
System::Data::SqlTypes::SqlGuid::SqlGuid(::System::Guid g) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, g);
}
// Autogenerated method: System.Data.SqlTypes.SqlGuid..cctor
void System::Data::SqlTypes::SqlGuid::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlGuid", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlGuid.Compare
::System::Data::SqlTypes::EComparison System::Data::SqlTypes::SqlGuid::Compare(::System::Data::SqlTypes::SqlGuid x, ::System::Data::SqlTypes::SqlGuid y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlGuid", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::EComparison, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlGuid.CompareTo
int System::Data::SqlTypes::SqlGuid::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlGuid), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlGuid.CompareTo
int System::Data::SqlTypes::SqlGuid::CompareTo(::System::Data::SqlTypes::SqlGuid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::CompareTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlGuid.System.Xml.Serialization.IXmlSerializable.GetSchema
::System::Xml::Schema::XmlSchema* System::Data::SqlTypes::SqlGuid::System_Xml_Serialization_IXmlSerializable_GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::System.Xml.Serialization.IXmlSerializable.GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlGuid), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlGuid.System.Xml.Serialization.IXmlSerializable.ReadXml
void System::Data::SqlTypes::SqlGuid::System_Xml_Serialization_IXmlSerializable_ReadXml(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::System.Xml.Serialization.IXmlSerializable.ReadXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlGuid), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.SqlTypes.SqlGuid.System.Xml.Serialization.IXmlSerializable.WriteXml
void System::Data::SqlTypes::SqlGuid::System_Xml_Serialization_IXmlSerializable_WriteXml(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::System.Xml.Serialization.IXmlSerializable.WriteXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlGuid), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Data.SqlTypes.SqlGuid.GetXsdType
::System::Xml::XmlQualifiedName* System::Data::SqlTypes::SqlGuid::GetXsdType(::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::GetXsdType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlGuid", "GetXsdType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaSet);
}
// Autogenerated method: System.Data.SqlTypes.SqlGuid.ToString
::StringW System::Data::SqlTypes::SqlGuid::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlGuid.Equals
bool System::Data::SqlTypes::SqlGuid::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlGuid.GetHashCode
int System::Data::SqlTypes::SqlGuid::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlGuid.op_Equality
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator ==(const ::System::Data::SqlTypes::SqlGuid& x, const ::System::Data::SqlTypes::SqlGuid& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlGuid", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlGuid.op_LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator <(const ::System::Data::SqlTypes::SqlGuid& x, const ::System::Data::SqlTypes::SqlGuid& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlGuid", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlGuid.op_GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator >(const ::System::Data::SqlTypes::SqlGuid& x, const ::System::Data::SqlTypes::SqlGuid& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlGuid::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlGuid", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.SqlTypes.SqlInt16
#include "System/Data/SqlTypes/SqlInt16.hpp"
// Including type: System.Data.SqlTypes.SqlByte
#include "System/Data/SqlTypes/SqlByte.hpp"
// Including type: System.Data.SqlTypes.SqlInt64
#include "System/Data/SqlTypes/SqlInt64.hpp"
// Including type: System.Data.SqlTypes.SqlBoolean
#include "System/Data/SqlTypes/SqlBoolean.hpp"
// Including type: System.Data.SqlTypes.SqlDouble
#include "System/Data/SqlTypes/SqlDouble.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 s_MASKI2
int System::Data::SqlTypes::SqlInt16::_get_s_MASKI2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::_get_s_MASKI2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlInt16", "s_MASKI2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 s_MASKI2
void System::Data::SqlTypes::SqlInt16::_set_s_MASKI2(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::_set_s_MASKI2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlInt16", "s_MASKI2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlInt16 Null
::System::Data::SqlTypes::SqlInt16 System::Data::SqlTypes::SqlInt16::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlInt16>("System.Data.SqlTypes", "SqlInt16", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlInt16 Null
void System::Data::SqlTypes::SqlInt16::_set_Null(::System::Data::SqlTypes::SqlInt16 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlInt16", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlInt16 Zero
::System::Data::SqlTypes::SqlInt16 System::Data::SqlTypes::SqlInt16::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlInt16>("System.Data.SqlTypes", "SqlInt16", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlInt16 Zero
void System::Data::SqlTypes::SqlInt16::_set_Zero(::System::Data::SqlTypes::SqlInt16 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlInt16", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlInt16 MinValue
::System::Data::SqlTypes::SqlInt16 System::Data::SqlTypes::SqlInt16::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlInt16>("System.Data.SqlTypes", "SqlInt16", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlInt16 MinValue
void System::Data::SqlTypes::SqlInt16::_set_MinValue(::System::Data::SqlTypes::SqlInt16 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlInt16", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlInt16 MaxValue
::System::Data::SqlTypes::SqlInt16 System::Data::SqlTypes::SqlInt16::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlInt16>("System.Data.SqlTypes", "SqlInt16", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlInt16 MaxValue
void System::Data::SqlTypes::SqlInt16::_set_MaxValue(::System::Data::SqlTypes::SqlInt16 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlInt16", "MaxValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_fNotNull
[[deprecated("Use field access instead!")]] bool& System::Data::SqlTypes::SqlInt16::dyn_m_fNotNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::dyn_m_fNotNull");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fNotNull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 m_value
[[deprecated("Use field access instead!")]] int16_t& System::Data::SqlTypes::SqlInt16::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.get_IsNull
bool System::Data::SqlTypes::SqlInt16::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlInt16), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.get_Value
int16_t System::Data::SqlTypes::SqlInt16::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16..ctor
System::Data::SqlTypes::SqlInt16::SqlInt16(bool fNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fNull)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fNull);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16..ctor
System::Data::SqlTypes::SqlInt16::SqlInt16(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16..cctor
void System::Data::SqlTypes::SqlInt16::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt16", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.op_Explicit
System::Data::SqlTypes::SqlInt16::SqlInt16(::System::Data::SqlTypes::SqlInt64& x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt16", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt16, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlInt16::LessThan(::System::Data::SqlTypes::SqlInt16 x, ::System::Data::SqlTypes::SqlInt16 y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt16", "LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlInt16::GreaterThan(::System::Data::SqlTypes::SqlInt16 x, ::System::Data::SqlTypes::SqlInt16 y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt16", "GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.ToSqlDouble
::System::Data::SqlTypes::SqlDouble System::Data::SqlTypes::SqlInt16::ToSqlDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::ToSqlDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToSqlDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDouble, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.ToSqlInt64
::System::Data::SqlTypes::SqlInt64 System::Data::SqlTypes::SqlInt16::ToSqlInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::ToSqlInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToSqlInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt64, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.CompareTo
int System::Data::SqlTypes::SqlInt16::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlInt16), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.CompareTo
int System::Data::SqlTypes::SqlInt16::CompareTo(::System::Data::SqlTypes::SqlInt16 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::CompareTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.System.Xml.Serialization.IXmlSerializable.GetSchema
::System::Xml::Schema::XmlSchema* System::Data::SqlTypes::SqlInt16::System_Xml_Serialization_IXmlSerializable_GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::System.Xml.Serialization.IXmlSerializable.GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlInt16), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.System.Xml.Serialization.IXmlSerializable.ReadXml
void System::Data::SqlTypes::SqlInt16::System_Xml_Serialization_IXmlSerializable_ReadXml(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::System.Xml.Serialization.IXmlSerializable.ReadXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlInt16), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.System.Xml.Serialization.IXmlSerializable.WriteXml
void System::Data::SqlTypes::SqlInt16::System_Xml_Serialization_IXmlSerializable_WriteXml(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::System.Xml.Serialization.IXmlSerializable.WriteXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlInt16), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.GetXsdType
::System::Xml::XmlQualifiedName* System::Data::SqlTypes::SqlInt16::GetXsdType(::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::GetXsdType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt16", "GetXsdType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaSet);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.ToString
::StringW System::Data::SqlTypes::SqlInt16::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.Equals
bool System::Data::SqlTypes::SqlInt16::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.GetHashCode
int System::Data::SqlTypes::SqlInt16::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.op_UnaryNegation
::System::Data::SqlTypes::SqlInt16 System::Data::SqlTypes::operator-(const ::System::Data::SqlTypes::SqlInt16& x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::op_UnaryNegation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt16", "op_UnaryNegation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt16, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.op_Addition
::System::Data::SqlTypes::SqlInt16 System::Data::SqlTypes::operator+(const ::System::Data::SqlTypes::SqlInt16& x, const ::System::Data::SqlTypes::SqlInt16& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt16", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt16, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.op_Subtraction
::System::Data::SqlTypes::SqlInt16 System::Data::SqlTypes::operator-(const ::System::Data::SqlTypes::SqlInt16& x, const ::System::Data::SqlTypes::SqlInt16& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt16", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt16, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.op_Multiply
::System::Data::SqlTypes::SqlInt16 System::Data::SqlTypes::operator*(const ::System::Data::SqlTypes::SqlInt16& x, const ::System::Data::SqlTypes::SqlInt16& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt16", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt16, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.op_Division
::System::Data::SqlTypes::SqlInt16 System::Data::SqlTypes::operator/(const ::System::Data::SqlTypes::SqlInt16& x, const ::System::Data::SqlTypes::SqlInt16& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt16", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt16, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.op_Equality
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator ==(const ::System::Data::SqlTypes::SqlInt16& x, const ::System::Data::SqlTypes::SqlInt16& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt16", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.op_LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator <(const ::System::Data::SqlTypes::SqlInt16& x, const ::System::Data::SqlTypes::SqlInt16& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt16", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt16.op_GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator >(const ::System::Data::SqlTypes::SqlInt16& x, const ::System::Data::SqlTypes::SqlInt16& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt16::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt16", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.SqlTypes.SqlInt32
#include "System/Data/SqlTypes/SqlInt32.hpp"
// Including type: System.Data.SqlTypes.SqlByte
#include "System/Data/SqlTypes/SqlByte.hpp"
// Including type: System.Data.SqlTypes.SqlInt16
#include "System/Data/SqlTypes/SqlInt16.hpp"
// Including type: System.Data.SqlTypes.SqlInt64
#include "System/Data/SqlTypes/SqlInt64.hpp"
// Including type: System.Data.SqlTypes.SqlBoolean
#include "System/Data/SqlTypes/SqlBoolean.hpp"
// Including type: System.Data.SqlTypes.SqlDouble
#include "System/Data/SqlTypes/SqlDouble.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 s_iIntMin
int64_t System::Data::SqlTypes::SqlInt32::_get_s_iIntMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::_get_s_iIntMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Data.SqlTypes", "SqlInt32", "s_iIntMin"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 s_iIntMin
void System::Data::SqlTypes::SqlInt32::_set_s_iIntMin(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::_set_s_iIntMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlInt32", "s_iIntMin", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 s_lBitNotIntMax
int64_t System::Data::SqlTypes::SqlInt32::_get_s_lBitNotIntMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::_get_s_lBitNotIntMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Data.SqlTypes", "SqlInt32", "s_lBitNotIntMax"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 s_lBitNotIntMax
void System::Data::SqlTypes::SqlInt32::_set_s_lBitNotIntMax(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::_set_s_lBitNotIntMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlInt32", "s_lBitNotIntMax", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlInt32 Null
::System::Data::SqlTypes::SqlInt32 System::Data::SqlTypes::SqlInt32::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlInt32>("System.Data.SqlTypes", "SqlInt32", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlInt32 Null
void System::Data::SqlTypes::SqlInt32::_set_Null(::System::Data::SqlTypes::SqlInt32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlInt32", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlInt32 Zero
::System::Data::SqlTypes::SqlInt32 System::Data::SqlTypes::SqlInt32::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlInt32>("System.Data.SqlTypes", "SqlInt32", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlInt32 Zero
void System::Data::SqlTypes::SqlInt32::_set_Zero(::System::Data::SqlTypes::SqlInt32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlInt32", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlInt32 MinValue
::System::Data::SqlTypes::SqlInt32 System::Data::SqlTypes::SqlInt32::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlInt32>("System.Data.SqlTypes", "SqlInt32", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlInt32 MinValue
void System::Data::SqlTypes::SqlInt32::_set_MinValue(::System::Data::SqlTypes::SqlInt32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlInt32", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlInt32 MaxValue
::System::Data::SqlTypes::SqlInt32 System::Data::SqlTypes::SqlInt32::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlInt32>("System.Data.SqlTypes", "SqlInt32", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlInt32 MaxValue
void System::Data::SqlTypes::SqlInt32::_set_MaxValue(::System::Data::SqlTypes::SqlInt32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlInt32", "MaxValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_fNotNull
[[deprecated("Use field access instead!")]] bool& System::Data::SqlTypes::SqlInt32::dyn_m_fNotNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::dyn_m_fNotNull");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fNotNull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_value
[[deprecated("Use field access instead!")]] int& System::Data::SqlTypes::SqlInt32::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.get_IsNull
bool System::Data::SqlTypes::SqlInt32::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlInt32), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.get_Value
int System::Data::SqlTypes::SqlInt32::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32..ctor
System::Data::SqlTypes::SqlInt32::SqlInt32(bool fNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fNull)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fNull);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32..ctor
System::Data::SqlTypes::SqlInt32::SqlInt32(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32..cctor
void System::Data::SqlTypes::SqlInt32::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt32", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.op_Explicit
System::Data::SqlTypes::SqlInt32::SqlInt32(::System::Data::SqlTypes::SqlInt64& x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt32", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt32, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.SameSignInt
bool System::Data::SqlTypes::SqlInt32::SameSignInt(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::SameSignInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt32", "SameSignInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlInt32::LessThan(::System::Data::SqlTypes::SqlInt32 x, ::System::Data::SqlTypes::SqlInt32 y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt32", "LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlInt32::GreaterThan(::System::Data::SqlTypes::SqlInt32 x, ::System::Data::SqlTypes::SqlInt32 y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt32", "GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.ToSqlDouble
::System::Data::SqlTypes::SqlDouble System::Data::SqlTypes::SqlInt32::ToSqlDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::ToSqlDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToSqlDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDouble, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.ToSqlInt64
::System::Data::SqlTypes::SqlInt64 System::Data::SqlTypes::SqlInt32::ToSqlInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::ToSqlInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToSqlInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt64, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.CompareTo
int System::Data::SqlTypes::SqlInt32::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlInt32), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.CompareTo
int System::Data::SqlTypes::SqlInt32::CompareTo(::System::Data::SqlTypes::SqlInt32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::CompareTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.System.Xml.Serialization.IXmlSerializable.GetSchema
::System::Xml::Schema::XmlSchema* System::Data::SqlTypes::SqlInt32::System_Xml_Serialization_IXmlSerializable_GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::System.Xml.Serialization.IXmlSerializable.GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlInt32), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.System.Xml.Serialization.IXmlSerializable.ReadXml
void System::Data::SqlTypes::SqlInt32::System_Xml_Serialization_IXmlSerializable_ReadXml(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::System.Xml.Serialization.IXmlSerializable.ReadXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlInt32), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.System.Xml.Serialization.IXmlSerializable.WriteXml
void System::Data::SqlTypes::SqlInt32::System_Xml_Serialization_IXmlSerializable_WriteXml(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::System.Xml.Serialization.IXmlSerializable.WriteXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlInt32), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.GetXsdType
::System::Xml::XmlQualifiedName* System::Data::SqlTypes::SqlInt32::GetXsdType(::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::GetXsdType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt32", "GetXsdType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaSet);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.ToString
::StringW System::Data::SqlTypes::SqlInt32::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.Equals
bool System::Data::SqlTypes::SqlInt32::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.GetHashCode
int System::Data::SqlTypes::SqlInt32::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.op_UnaryNegation
::System::Data::SqlTypes::SqlInt32 System::Data::SqlTypes::operator-(const ::System::Data::SqlTypes::SqlInt32& x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::op_UnaryNegation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt32", "op_UnaryNegation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt32, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.op_Addition
::System::Data::SqlTypes::SqlInt32 System::Data::SqlTypes::operator+(const ::System::Data::SqlTypes::SqlInt32& x, const ::System::Data::SqlTypes::SqlInt32& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt32", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt32, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.op_Subtraction
::System::Data::SqlTypes::SqlInt32 System::Data::SqlTypes::operator-(const ::System::Data::SqlTypes::SqlInt32& x, const ::System::Data::SqlTypes::SqlInt32& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt32", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt32, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.op_Multiply
::System::Data::SqlTypes::SqlInt32 System::Data::SqlTypes::operator*(const ::System::Data::SqlTypes::SqlInt32& x, const ::System::Data::SqlTypes::SqlInt32& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt32", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt32, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.op_Division
::System::Data::SqlTypes::SqlInt32 System::Data::SqlTypes::operator/(const ::System::Data::SqlTypes::SqlInt32& x, const ::System::Data::SqlTypes::SqlInt32& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt32", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt32, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.op_Equality
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator ==(const ::System::Data::SqlTypes::SqlInt32& x, const ::System::Data::SqlTypes::SqlInt32& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt32", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.op_LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator <(const ::System::Data::SqlTypes::SqlInt32& x, const ::System::Data::SqlTypes::SqlInt32& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt32", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt32.op_GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator >(const ::System::Data::SqlTypes::SqlInt32& x, const ::System::Data::SqlTypes::SqlInt32& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt32::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt32", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.SqlTypes.SqlInt64
#include "System/Data/SqlTypes/SqlInt64.hpp"
// Including type: System.Data.SqlTypes.SqlByte
#include "System/Data/SqlTypes/SqlByte.hpp"
// Including type: System.Data.SqlTypes.SqlInt16
#include "System/Data/SqlTypes/SqlInt16.hpp"
// Including type: System.Data.SqlTypes.SqlInt32
#include "System/Data/SqlTypes/SqlInt32.hpp"
// Including type: System.Data.SqlTypes.SqlDecimal
#include "System/Data/SqlTypes/SqlDecimal.hpp"
// Including type: System.Data.SqlTypes.SqlBoolean
#include "System/Data/SqlTypes/SqlBoolean.hpp"
// Including type: System.Data.SqlTypes.SqlDouble
#include "System/Data/SqlTypes/SqlDouble.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 s_lLowIntMask
int64_t System::Data::SqlTypes::SqlInt64::_get_s_lLowIntMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::_get_s_lLowIntMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Data.SqlTypes", "SqlInt64", "s_lLowIntMask"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 s_lLowIntMask
void System::Data::SqlTypes::SqlInt64::_set_s_lLowIntMask(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::_set_s_lLowIntMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlInt64", "s_lLowIntMask", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 s_lHighIntMask
int64_t System::Data::SqlTypes::SqlInt64::_get_s_lHighIntMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::_get_s_lHighIntMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Data.SqlTypes", "SqlInt64", "s_lHighIntMask"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 s_lHighIntMask
void System::Data::SqlTypes::SqlInt64::_set_s_lHighIntMask(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::_set_s_lHighIntMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlInt64", "s_lHighIntMask", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlInt64 Null
::System::Data::SqlTypes::SqlInt64 System::Data::SqlTypes::SqlInt64::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlInt64>("System.Data.SqlTypes", "SqlInt64", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlInt64 Null
void System::Data::SqlTypes::SqlInt64::_set_Null(::System::Data::SqlTypes::SqlInt64 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlInt64", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlInt64 Zero
::System::Data::SqlTypes::SqlInt64 System::Data::SqlTypes::SqlInt64::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlInt64>("System.Data.SqlTypes", "SqlInt64", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlInt64 Zero
void System::Data::SqlTypes::SqlInt64::_set_Zero(::System::Data::SqlTypes::SqlInt64 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlInt64", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlInt64 MinValue
::System::Data::SqlTypes::SqlInt64 System::Data::SqlTypes::SqlInt64::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlInt64>("System.Data.SqlTypes", "SqlInt64", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlInt64 MinValue
void System::Data::SqlTypes::SqlInt64::_set_MinValue(::System::Data::SqlTypes::SqlInt64 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlInt64", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlInt64 MaxValue
::System::Data::SqlTypes::SqlInt64 System::Data::SqlTypes::SqlInt64::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlInt64>("System.Data.SqlTypes", "SqlInt64", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlInt64 MaxValue
void System::Data::SqlTypes::SqlInt64::_set_MaxValue(::System::Data::SqlTypes::SqlInt64 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlInt64", "MaxValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_fNotNull
[[deprecated("Use field access instead!")]] bool& System::Data::SqlTypes::SqlInt64::dyn_m_fNotNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::dyn_m_fNotNull");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fNotNull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_value
[[deprecated("Use field access instead!")]] int64_t& System::Data::SqlTypes::SqlInt64::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.get_IsNull
bool System::Data::SqlTypes::SqlInt64::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlInt64), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.get_Value
int64_t System::Data::SqlTypes::SqlInt64::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64..ctor
System::Data::SqlTypes::SqlInt64::SqlInt64(bool fNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fNull)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fNull);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64..ctor
System::Data::SqlTypes::SqlInt64::SqlInt64(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64..cctor
void System::Data::SqlTypes::SqlInt64::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt64", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.op_Explicit
System::Data::SqlTypes::SqlInt64::SqlInt64(::System::Data::SqlTypes::SqlDecimal& x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt64", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt64, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.SameSignLong
bool System::Data::SqlTypes::SqlInt64::SameSignLong(int64_t x, int64_t y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::SameSignLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt64", "SameSignLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlInt64::LessThan(::System::Data::SqlTypes::SqlInt64 x, ::System::Data::SqlTypes::SqlInt64 y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt64", "LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlInt64::GreaterThan(::System::Data::SqlTypes::SqlInt64 x, ::System::Data::SqlTypes::SqlInt64 y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt64", "GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.ToSqlByte
::System::Data::SqlTypes::SqlByte System::Data::SqlTypes::SqlInt64::ToSqlByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::ToSqlByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToSqlByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlByte, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.ToSqlDouble
::System::Data::SqlTypes::SqlDouble System::Data::SqlTypes::SqlInt64::ToSqlDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::ToSqlDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToSqlDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDouble, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.ToSqlInt16
::System::Data::SqlTypes::SqlInt16 System::Data::SqlTypes::SqlInt64::ToSqlInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::ToSqlInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToSqlInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt16, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.ToSqlInt32
::System::Data::SqlTypes::SqlInt32 System::Data::SqlTypes::SqlInt64::ToSqlInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::ToSqlInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToSqlInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt32, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.ToSqlDecimal
::System::Data::SqlTypes::SqlDecimal System::Data::SqlTypes::SqlInt64::ToSqlDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::ToSqlDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToSqlDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDecimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.CompareTo
int System::Data::SqlTypes::SqlInt64::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlInt64), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.CompareTo
int System::Data::SqlTypes::SqlInt64::CompareTo(::System::Data::SqlTypes::SqlInt64 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::CompareTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.System.Xml.Serialization.IXmlSerializable.GetSchema
::System::Xml::Schema::XmlSchema* System::Data::SqlTypes::SqlInt64::System_Xml_Serialization_IXmlSerializable_GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::System.Xml.Serialization.IXmlSerializable.GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlInt64), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.System.Xml.Serialization.IXmlSerializable.ReadXml
void System::Data::SqlTypes::SqlInt64::System_Xml_Serialization_IXmlSerializable_ReadXml(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::System.Xml.Serialization.IXmlSerializable.ReadXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlInt64), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.System.Xml.Serialization.IXmlSerializable.WriteXml
void System::Data::SqlTypes::SqlInt64::System_Xml_Serialization_IXmlSerializable_WriteXml(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::System.Xml.Serialization.IXmlSerializable.WriteXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlInt64), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.GetXsdType
::System::Xml::XmlQualifiedName* System::Data::SqlTypes::SqlInt64::GetXsdType(::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::GetXsdType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt64", "GetXsdType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaSet);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.ToString
::StringW System::Data::SqlTypes::SqlInt64::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.Equals
bool System::Data::SqlTypes::SqlInt64::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.GetHashCode
int System::Data::SqlTypes::SqlInt64::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.op_UnaryNegation
::System::Data::SqlTypes::SqlInt64 System::Data::SqlTypes::operator-(const ::System::Data::SqlTypes::SqlInt64& x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::op_UnaryNegation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt64", "op_UnaryNegation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt64, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.op_Addition
::System::Data::SqlTypes::SqlInt64 System::Data::SqlTypes::operator+(const ::System::Data::SqlTypes::SqlInt64& x, const ::System::Data::SqlTypes::SqlInt64& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt64", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt64, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.op_Subtraction
::System::Data::SqlTypes::SqlInt64 System::Data::SqlTypes::operator-(const ::System::Data::SqlTypes::SqlInt64& x, const ::System::Data::SqlTypes::SqlInt64& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt64", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt64, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.op_Multiply
::System::Data::SqlTypes::SqlInt64 System::Data::SqlTypes::operator*(const ::System::Data::SqlTypes::SqlInt64& x, const ::System::Data::SqlTypes::SqlInt64& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt64", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt64, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.op_Division
::System::Data::SqlTypes::SqlInt64 System::Data::SqlTypes::operator/(const ::System::Data::SqlTypes::SqlInt64& x, const ::System::Data::SqlTypes::SqlInt64& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt64", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt64, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.op_Modulus
::System::Data::SqlTypes::SqlInt64 System::Data::SqlTypes::operator%(const ::System::Data::SqlTypes::SqlInt64& x, const ::System::Data::SqlTypes::SqlInt64& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::op_Modulus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt64", "op_Modulus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt64, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.op_Equality
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator ==(const ::System::Data::SqlTypes::SqlInt64& x, const ::System::Data::SqlTypes::SqlInt64& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt64", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.op_LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator <(const ::System::Data::SqlTypes::SqlInt64& x, const ::System::Data::SqlTypes::SqlInt64& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt64", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlInt64.op_GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator >(const ::System::Data::SqlTypes::SqlInt64& x, const ::System::Data::SqlTypes::SqlInt64& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlInt64::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlInt64", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.SqlTypes.SqlMoney
#include "System/Data/SqlTypes/SqlMoney.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.Data.SqlTypes.SqlByte
#include "System/Data/SqlTypes/SqlByte.hpp"
// Including type: System.Data.SqlTypes.SqlInt16
#include "System/Data/SqlTypes/SqlInt16.hpp"
// Including type: System.Data.SqlTypes.SqlInt32
#include "System/Data/SqlTypes/SqlInt32.hpp"
// Including type: System.Data.SqlTypes.SqlInt64
#include "System/Data/SqlTypes/SqlInt64.hpp"
// Including type: System.Data.SqlTypes.SqlDecimal
#include "System/Data/SqlTypes/SqlDecimal.hpp"
// Including type: System.Data.SqlTypes.SqlBoolean
#include "System/Data/SqlTypes/SqlBoolean.hpp"
// Including type: System.Data.SqlTypes.SqlDouble
#include "System/Data/SqlTypes/SqlDouble.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32 s_iMoneyScale
int System::Data::SqlTypes::SqlMoney::_get_s_iMoneyScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::_get_s_iMoneyScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlMoney", "s_iMoneyScale"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 s_iMoneyScale
void System::Data::SqlTypes::SqlMoney::_set_s_iMoneyScale(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::_set_s_iMoneyScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlMoney", "s_iMoneyScale", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 s_lTickBase
int64_t System::Data::SqlTypes::SqlMoney::_get_s_lTickBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::_get_s_lTickBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Data.SqlTypes", "SqlMoney", "s_lTickBase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 s_lTickBase
void System::Data::SqlTypes::SqlMoney::_set_s_lTickBase(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::_set_s_lTickBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlMoney", "s_lTickBase", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Double s_dTickBase
double System::Data::SqlTypes::SqlMoney::_get_s_dTickBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::_get_s_dTickBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System.Data.SqlTypes", "SqlMoney", "s_dTickBase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Double s_dTickBase
void System::Data::SqlTypes::SqlMoney::_set_s_dTickBase(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::_set_s_dTickBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlMoney", "s_dTickBase", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 s_minLong
int64_t System::Data::SqlTypes::SqlMoney::_get_s_minLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::_get_s_minLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Data.SqlTypes", "SqlMoney", "s_minLong"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 s_minLong
void System::Data::SqlTypes::SqlMoney::_set_s_minLong(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::_set_s_minLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlMoney", "s_minLong", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 s_maxLong
int64_t System::Data::SqlTypes::SqlMoney::_get_s_maxLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::_get_s_maxLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Data.SqlTypes", "SqlMoney", "s_maxLong"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 s_maxLong
void System::Data::SqlTypes::SqlMoney::_set_s_maxLong(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::_set_s_maxLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlMoney", "s_maxLong", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlMoney Null
::System::Data::SqlTypes::SqlMoney System::Data::SqlTypes::SqlMoney::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlMoney>("System.Data.SqlTypes", "SqlMoney", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlMoney Null
void System::Data::SqlTypes::SqlMoney::_set_Null(::System::Data::SqlTypes::SqlMoney value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlMoney", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlMoney Zero
::System::Data::SqlTypes::SqlMoney System::Data::SqlTypes::SqlMoney::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlMoney>("System.Data.SqlTypes", "SqlMoney", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlMoney Zero
void System::Data::SqlTypes::SqlMoney::_set_Zero(::System::Data::SqlTypes::SqlMoney value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlMoney", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlMoney MinValue
::System::Data::SqlTypes::SqlMoney System::Data::SqlTypes::SqlMoney::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlMoney>("System.Data.SqlTypes", "SqlMoney", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlMoney MinValue
void System::Data::SqlTypes::SqlMoney::_set_MinValue(::System::Data::SqlTypes::SqlMoney value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlMoney", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlMoney MaxValue
::System::Data::SqlTypes::SqlMoney System::Data::SqlTypes::SqlMoney::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlMoney>("System.Data.SqlTypes", "SqlMoney", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlMoney MaxValue
void System::Data::SqlTypes::SqlMoney::_set_MaxValue(::System::Data::SqlTypes::SqlMoney value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlMoney", "MaxValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fNotNull
[[deprecated("Use field access instead!")]] bool& System::Data::SqlTypes::SqlMoney::dyn__fNotNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::dyn__fNotNull");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fNotNull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _value
[[deprecated("Use field access instead!")]] int64_t& System::Data::SqlTypes::SqlMoney::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::dyn__value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.get_IsNull
bool System::Data::SqlTypes::SqlMoney::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlMoney), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.get_Value
::System::Decimal System::Data::SqlTypes::SqlMoney::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney..ctor
System::Data::SqlTypes::SqlMoney::SqlMoney(bool fNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fNull)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fNull);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney..ctor
System::Data::SqlTypes::SqlMoney::SqlMoney(int64_t value, int ignored) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(ignored)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, ignored);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney..ctor
System::Data::SqlTypes::SqlMoney::SqlMoney(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney..ctor
System::Data::SqlTypes::SqlMoney::SqlMoney(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney..ctor
System::Data::SqlTypes::SqlMoney::SqlMoney(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney..cctor
void System::Data::SqlTypes::SqlMoney::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlMoney", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.ToDecimal
::System::Decimal System::Data::SqlTypes::SqlMoney::ToDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.ToDouble
double System::Data::SqlTypes::SqlMoney::ToDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.op_Explicit
System::Data::SqlTypes::SqlMoney::SqlMoney(::System::Data::SqlTypes::SqlDecimal& x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlMoney", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlMoney, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlMoney::LessThan(::System::Data::SqlTypes::SqlMoney x, ::System::Data::SqlTypes::SqlMoney y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlMoney", "LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlMoney::GreaterThan(::System::Data::SqlTypes::SqlMoney x, ::System::Data::SqlTypes::SqlMoney y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlMoney", "GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.ToSqlDouble
::System::Data::SqlTypes::SqlDouble System::Data::SqlTypes::SqlMoney::ToSqlDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::ToSqlDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToSqlDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDouble, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.ToSqlDecimal
::System::Data::SqlTypes::SqlDecimal System::Data::SqlTypes::SqlMoney::ToSqlDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::ToSqlDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToSqlDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDecimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.CompareTo
int System::Data::SqlTypes::SqlMoney::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlMoney), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.CompareTo
int System::Data::SqlTypes::SqlMoney::CompareTo(::System::Data::SqlTypes::SqlMoney value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::CompareTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.System.Xml.Serialization.IXmlSerializable.GetSchema
::System::Xml::Schema::XmlSchema* System::Data::SqlTypes::SqlMoney::System_Xml_Serialization_IXmlSerializable_GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::System.Xml.Serialization.IXmlSerializable.GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlMoney), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.System.Xml.Serialization.IXmlSerializable.ReadXml
void System::Data::SqlTypes::SqlMoney::System_Xml_Serialization_IXmlSerializable_ReadXml(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::System.Xml.Serialization.IXmlSerializable.ReadXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlMoney), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.System.Xml.Serialization.IXmlSerializable.WriteXml
void System::Data::SqlTypes::SqlMoney::System_Xml_Serialization_IXmlSerializable_WriteXml(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::System.Xml.Serialization.IXmlSerializable.WriteXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlMoney), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.GetXsdType
::System::Xml::XmlQualifiedName* System::Data::SqlTypes::SqlMoney::GetXsdType(::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::GetXsdType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlMoney", "GetXsdType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaSet);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.ToString
::StringW System::Data::SqlTypes::SqlMoney::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.Equals
bool System::Data::SqlTypes::SqlMoney::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.GetHashCode
int System::Data::SqlTypes::SqlMoney::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.op_UnaryNegation
::System::Data::SqlTypes::SqlMoney System::Data::SqlTypes::operator-(const ::System::Data::SqlTypes::SqlMoney& x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::op_UnaryNegation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlMoney", "op_UnaryNegation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlMoney, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.op_Addition
::System::Data::SqlTypes::SqlMoney System::Data::SqlTypes::operator+(const ::System::Data::SqlTypes::SqlMoney& x, const ::System::Data::SqlTypes::SqlMoney& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlMoney", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlMoney, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.op_Subtraction
::System::Data::SqlTypes::SqlMoney System::Data::SqlTypes::operator-(const ::System::Data::SqlTypes::SqlMoney& x, const ::System::Data::SqlTypes::SqlMoney& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlMoney", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlMoney, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.op_Multiply
::System::Data::SqlTypes::SqlMoney System::Data::SqlTypes::operator*(const ::System::Data::SqlTypes::SqlMoney& x, const ::System::Data::SqlTypes::SqlMoney& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlMoney", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlMoney, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.op_Division
::System::Data::SqlTypes::SqlMoney System::Data::SqlTypes::operator/(const ::System::Data::SqlTypes::SqlMoney& x, const ::System::Data::SqlTypes::SqlMoney& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlMoney", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlMoney, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.op_Equality
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator ==(const ::System::Data::SqlTypes::SqlMoney& x, const ::System::Data::SqlTypes::SqlMoney& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlMoney", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.op_LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator <(const ::System::Data::SqlTypes::SqlMoney& x, const ::System::Data::SqlTypes::SqlMoney& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlMoney", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlMoney.op_GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator >(const ::System::Data::SqlTypes::SqlMoney& x, const ::System::Data::SqlTypes::SqlMoney& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlMoney::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlMoney", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.SqlTypes.SqlSingle
#include "System/Data/SqlTypes/SqlSingle.hpp"
// Including type: System.Data.SqlTypes.SqlByte
#include "System/Data/SqlTypes/SqlByte.hpp"
// Including type: System.Data.SqlTypes.SqlInt16
#include "System/Data/SqlTypes/SqlInt16.hpp"
// Including type: System.Data.SqlTypes.SqlInt32
#include "System/Data/SqlTypes/SqlInt32.hpp"
// Including type: System.Data.SqlTypes.SqlInt64
#include "System/Data/SqlTypes/SqlInt64.hpp"
// Including type: System.Data.SqlTypes.SqlMoney
#include "System/Data/SqlTypes/SqlMoney.hpp"
// Including type: System.Data.SqlTypes.SqlDecimal
#include "System/Data/SqlTypes/SqlDecimal.hpp"
// Including type: System.Data.SqlTypes.SqlDouble
#include "System/Data/SqlTypes/SqlDouble.hpp"
// Including type: System.Data.SqlTypes.SqlBoolean
#include "System/Data/SqlTypes/SqlBoolean.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlSingle Null
::System::Data::SqlTypes::SqlSingle System::Data::SqlTypes::SqlSingle::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlSingle>("System.Data.SqlTypes", "SqlSingle", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlSingle Null
void System::Data::SqlTypes::SqlSingle::_set_Null(::System::Data::SqlTypes::SqlSingle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlSingle", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlSingle Zero
::System::Data::SqlTypes::SqlSingle System::Data::SqlTypes::SqlSingle::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlSingle>("System.Data.SqlTypes", "SqlSingle", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlSingle Zero
void System::Data::SqlTypes::SqlSingle::_set_Zero(::System::Data::SqlTypes::SqlSingle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlSingle", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlSingle MinValue
::System::Data::SqlTypes::SqlSingle System::Data::SqlTypes::SqlSingle::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlSingle>("System.Data.SqlTypes", "SqlSingle", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlSingle MinValue
void System::Data::SqlTypes::SqlSingle::_set_MinValue(::System::Data::SqlTypes::SqlSingle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlSingle", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlSingle MaxValue
::System::Data::SqlTypes::SqlSingle System::Data::SqlTypes::SqlSingle::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlSingle>("System.Data.SqlTypes", "SqlSingle", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlSingle MaxValue
void System::Data::SqlTypes::SqlSingle::_set_MaxValue(::System::Data::SqlTypes::SqlSingle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlSingle", "MaxValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fNotNull
[[deprecated("Use field access instead!")]] bool& System::Data::SqlTypes::SqlSingle::dyn__fNotNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::dyn__fNotNull");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fNotNull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _value
[[deprecated("Use field access instead!")]] float& System::Data::SqlTypes::SqlSingle::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::dyn__value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.get_IsNull
bool System::Data::SqlTypes::SqlSingle::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlSingle), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.get_Value
float System::Data::SqlTypes::SqlSingle::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle..ctor
System::Data::SqlTypes::SqlSingle::SqlSingle(bool fNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fNull)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fNull);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle..ctor
System::Data::SqlTypes::SqlSingle::SqlSingle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle..ctor
System::Data::SqlTypes::SqlSingle::SqlSingle(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle..cctor
void System::Data::SqlTypes::SqlSingle::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlSingle", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.op_Explicit
System::Data::SqlTypes::SqlSingle::SqlSingle(::System::Data::SqlTypes::SqlDouble& x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlSingle", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlSingle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlSingle::LessThan(::System::Data::SqlTypes::SqlSingle x, ::System::Data::SqlTypes::SqlSingle y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlSingle", "LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlSingle::GreaterThan(::System::Data::SqlTypes::SqlSingle x, ::System::Data::SqlTypes::SqlSingle y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlSingle", "GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.ToSqlDouble
::System::Data::SqlTypes::SqlDouble System::Data::SqlTypes::SqlSingle::ToSqlDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::ToSqlDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToSqlDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDouble, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.CompareTo
int System::Data::SqlTypes::SqlSingle::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlSingle), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.CompareTo
int System::Data::SqlTypes::SqlSingle::CompareTo(::System::Data::SqlTypes::SqlSingle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::CompareTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.System.Xml.Serialization.IXmlSerializable.GetSchema
::System::Xml::Schema::XmlSchema* System::Data::SqlTypes::SqlSingle::System_Xml_Serialization_IXmlSerializable_GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::System.Xml.Serialization.IXmlSerializable.GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlSingle), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.System.Xml.Serialization.IXmlSerializable.ReadXml
void System::Data::SqlTypes::SqlSingle::System_Xml_Serialization_IXmlSerializable_ReadXml(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::System.Xml.Serialization.IXmlSerializable.ReadXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlSingle), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.System.Xml.Serialization.IXmlSerializable.WriteXml
void System::Data::SqlTypes::SqlSingle::System_Xml_Serialization_IXmlSerializable_WriteXml(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::System.Xml.Serialization.IXmlSerializable.WriteXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlSingle), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.GetXsdType
::System::Xml::XmlQualifiedName* System::Data::SqlTypes::SqlSingle::GetXsdType(::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::GetXsdType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlSingle", "GetXsdType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaSet);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.ToString
::StringW System::Data::SqlTypes::SqlSingle::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.Equals
bool System::Data::SqlTypes::SqlSingle::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.GetHashCode
int System::Data::SqlTypes::SqlSingle::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.op_UnaryNegation
::System::Data::SqlTypes::SqlSingle System::Data::SqlTypes::operator-(const ::System::Data::SqlTypes::SqlSingle& x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::op_UnaryNegation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlSingle", "op_UnaryNegation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlSingle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.op_Addition
::System::Data::SqlTypes::SqlSingle System::Data::SqlTypes::operator+(const ::System::Data::SqlTypes::SqlSingle& x, const ::System::Data::SqlTypes::SqlSingle& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlSingle", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlSingle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.op_Subtraction
::System::Data::SqlTypes::SqlSingle System::Data::SqlTypes::operator-(const ::System::Data::SqlTypes::SqlSingle& x, const ::System::Data::SqlTypes::SqlSingle& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlSingle", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlSingle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.op_Multiply
::System::Data::SqlTypes::SqlSingle System::Data::SqlTypes::operator*(const ::System::Data::SqlTypes::SqlSingle& x, const ::System::Data::SqlTypes::SqlSingle& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlSingle", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlSingle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.op_Division
::System::Data::SqlTypes::SqlSingle System::Data::SqlTypes::operator/(const ::System::Data::SqlTypes::SqlSingle& x, const ::System::Data::SqlTypes::SqlSingle& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlSingle", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlSingle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.op_Equality
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator ==(const ::System::Data::SqlTypes::SqlSingle& x, const ::System::Data::SqlTypes::SqlSingle& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlSingle", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.op_LessThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator <(const ::System::Data::SqlTypes::SqlSingle& x, const ::System::Data::SqlTypes::SqlSingle& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlSingle", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlSingle.op_GreaterThan
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator >(const ::System::Data::SqlTypes::SqlSingle& x, const ::System::Data::SqlTypes::SqlSingle& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlSingle::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlSingle", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.SqlTypes.SqlCompareOptions
#include "System/Data/SqlTypes/SqlCompareOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.SqlTypes.SqlCompareOptions None
::System::Data::SqlTypes::SqlCompareOptions System::Data::SqlTypes::SqlCompareOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlCompareOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlCompareOptions>("System.Data.SqlTypes", "SqlCompareOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SqlTypes.SqlCompareOptions None
void System::Data::SqlTypes::SqlCompareOptions::_set_None(::System::Data::SqlTypes::SqlCompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlCompareOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlCompareOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.SqlTypes.SqlCompareOptions IgnoreCase
::System::Data::SqlTypes::SqlCompareOptions System::Data::SqlTypes::SqlCompareOptions::_get_IgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlCompareOptions::_get_IgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlCompareOptions>("System.Data.SqlTypes", "SqlCompareOptions", "IgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SqlTypes.SqlCompareOptions IgnoreCase
void System::Data::SqlTypes::SqlCompareOptions::_set_IgnoreCase(::System::Data::SqlTypes::SqlCompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlCompareOptions::_set_IgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlCompareOptions", "IgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.SqlTypes.SqlCompareOptions IgnoreNonSpace
::System::Data::SqlTypes::SqlCompareOptions System::Data::SqlTypes::SqlCompareOptions::_get_IgnoreNonSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlCompareOptions::_get_IgnoreNonSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlCompareOptions>("System.Data.SqlTypes", "SqlCompareOptions", "IgnoreNonSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SqlTypes.SqlCompareOptions IgnoreNonSpace
void System::Data::SqlTypes::SqlCompareOptions::_set_IgnoreNonSpace(::System::Data::SqlTypes::SqlCompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlCompareOptions::_set_IgnoreNonSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlCompareOptions", "IgnoreNonSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.SqlTypes.SqlCompareOptions IgnoreKanaType
::System::Data::SqlTypes::SqlCompareOptions System::Data::SqlTypes::SqlCompareOptions::_get_IgnoreKanaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlCompareOptions::_get_IgnoreKanaType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlCompareOptions>("System.Data.SqlTypes", "SqlCompareOptions", "IgnoreKanaType"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SqlTypes.SqlCompareOptions IgnoreKanaType
void System::Data::SqlTypes::SqlCompareOptions::_set_IgnoreKanaType(::System::Data::SqlTypes::SqlCompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlCompareOptions::_set_IgnoreKanaType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlCompareOptions", "IgnoreKanaType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.SqlTypes.SqlCompareOptions IgnoreWidth
::System::Data::SqlTypes::SqlCompareOptions System::Data::SqlTypes::SqlCompareOptions::_get_IgnoreWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlCompareOptions::_get_IgnoreWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlCompareOptions>("System.Data.SqlTypes", "SqlCompareOptions", "IgnoreWidth"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SqlTypes.SqlCompareOptions IgnoreWidth
void System::Data::SqlTypes::SqlCompareOptions::_set_IgnoreWidth(::System::Data::SqlTypes::SqlCompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlCompareOptions::_set_IgnoreWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlCompareOptions", "IgnoreWidth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.SqlTypes.SqlCompareOptions BinarySort
::System::Data::SqlTypes::SqlCompareOptions System::Data::SqlTypes::SqlCompareOptions::_get_BinarySort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlCompareOptions::_get_BinarySort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlCompareOptions>("System.Data.SqlTypes", "SqlCompareOptions", "BinarySort"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SqlTypes.SqlCompareOptions BinarySort
void System::Data::SqlTypes::SqlCompareOptions::_set_BinarySort(::System::Data::SqlTypes::SqlCompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlCompareOptions::_set_BinarySort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlCompareOptions", "BinarySort", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.SqlTypes.SqlCompareOptions BinarySort2
::System::Data::SqlTypes::SqlCompareOptions System::Data::SqlTypes::SqlCompareOptions::_get_BinarySort2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlCompareOptions::_get_BinarySort2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlCompareOptions>("System.Data.SqlTypes", "SqlCompareOptions", "BinarySort2"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SqlTypes.SqlCompareOptions BinarySort2
void System::Data::SqlTypes::SqlCompareOptions::_set_BinarySort2(::System::Data::SqlTypes::SqlCompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlCompareOptions::_set_BinarySort2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlCompareOptions", "BinarySort2", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::SqlTypes::SqlCompareOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlCompareOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.SqlTypes.SqlString
#include "System/Data/SqlTypes/SqlString.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Text.UnicodeEncoding
#include "System/Text/UnicodeEncoding.hpp"
// Including type: System.Data.SqlTypes.SqlBoolean
#include "System/Data/SqlTypes/SqlBoolean.hpp"
// Including type: System.Data.SqlTypes.EComparison
#include "System/Data/SqlTypes/EComparison.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Data.SqlTypes.SqlString Null
::System::Data::SqlTypes::SqlString System::Data::SqlTypes::SqlString::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlString>("System.Data.SqlTypes", "SqlString", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Data.SqlTypes.SqlString Null
void System::Data::SqlTypes::SqlString::_set_Null(::System::Data::SqlTypes::SqlString value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlString", "Null", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Text.UnicodeEncoding s_unicodeEncoding
::System::Text::UnicodeEncoding* System::Data::SqlTypes::SqlString::_get_s_unicodeEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_get_s_unicodeEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::UnicodeEncoding*>("System.Data.SqlTypes", "SqlString", "s_unicodeEncoding"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Text.UnicodeEncoding s_unicodeEncoding
void System::Data::SqlTypes::SqlString::_set_s_unicodeEncoding(::System::Text::UnicodeEncoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_set_s_unicodeEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlString", "s_unicodeEncoding", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 IgnoreCase
int System::Data::SqlTypes::SqlString::_get_IgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_get_IgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlString", "IgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 IgnoreCase
void System::Data::SqlTypes::SqlString::_set_IgnoreCase(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_set_IgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlString", "IgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 IgnoreWidth
int System::Data::SqlTypes::SqlString::_get_IgnoreWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_get_IgnoreWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlString", "IgnoreWidth"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 IgnoreWidth
void System::Data::SqlTypes::SqlString::_set_IgnoreWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_set_IgnoreWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlString", "IgnoreWidth", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 IgnoreNonSpace
int System::Data::SqlTypes::SqlString::_get_IgnoreNonSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_get_IgnoreNonSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlString", "IgnoreNonSpace"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 IgnoreNonSpace
void System::Data::SqlTypes::SqlString::_set_IgnoreNonSpace(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_set_IgnoreNonSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlString", "IgnoreNonSpace", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 IgnoreKanaType
int System::Data::SqlTypes::SqlString::_get_IgnoreKanaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_get_IgnoreKanaType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlString", "IgnoreKanaType"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 IgnoreKanaType
void System::Data::SqlTypes::SqlString::_set_IgnoreKanaType(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_set_IgnoreKanaType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlString", "IgnoreKanaType", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 BinarySort
int System::Data::SqlTypes::SqlString::_get_BinarySort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_get_BinarySort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlString", "BinarySort"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 BinarySort
void System::Data::SqlTypes::SqlString::_set_BinarySort(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_set_BinarySort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlString", "BinarySort", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 BinarySort2
int System::Data::SqlTypes::SqlString::_get_BinarySort2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_get_BinarySort2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlString", "BinarySort2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 BinarySort2
void System::Data::SqlTypes::SqlString::_set_BinarySort2(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_set_BinarySort2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlString", "BinarySort2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Data.SqlTypes.SqlCompareOptions s_iDefaultFlag
::System::Data::SqlTypes::SqlCompareOptions System::Data::SqlTypes::SqlString::_get_s_iDefaultFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_get_s_iDefaultFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlCompareOptions>("System.Data.SqlTypes", "SqlString", "s_iDefaultFlag"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Data.SqlTypes.SqlCompareOptions s_iDefaultFlag
void System::Data::SqlTypes::SqlString::_set_s_iDefaultFlag(::System::Data::SqlTypes::SqlCompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_set_s_iDefaultFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlString", "s_iDefaultFlag", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Globalization.CompareOptions s_iValidCompareOptionMask
::System::Globalization::CompareOptions System::Data::SqlTypes::SqlString::_get_s_iValidCompareOptionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_get_s_iValidCompareOptionMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::CompareOptions>("System.Data.SqlTypes", "SqlString", "s_iValidCompareOptionMask"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Globalization.CompareOptions s_iValidCompareOptionMask
void System::Data::SqlTypes::SqlString::_set_s_iValidCompareOptionMask(::System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_set_s_iValidCompareOptionMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlString", "s_iValidCompareOptionMask", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Data.SqlTypes.SqlCompareOptions s_iValidSqlCompareOptionMask
::System::Data::SqlTypes::SqlCompareOptions System::Data::SqlTypes::SqlString::_get_s_iValidSqlCompareOptionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_get_s_iValidSqlCompareOptionMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::SqlCompareOptions>("System.Data.SqlTypes", "SqlString", "s_iValidSqlCompareOptionMask"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Data.SqlTypes.SqlCompareOptions s_iValidSqlCompareOptionMask
void System::Data::SqlTypes::SqlString::_set_s_iValidSqlCompareOptionMask(::System::Data::SqlTypes::SqlCompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_set_s_iValidSqlCompareOptionMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlString", "s_iValidSqlCompareOptionMask", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 s_lcidUSEnglish
int System::Data::SqlTypes::SqlString::_get_s_lcidUSEnglish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_get_s_lcidUSEnglish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlString", "s_lcidUSEnglish"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 s_lcidUSEnglish
void System::Data::SqlTypes::SqlString::_set_s_lcidUSEnglish(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_set_s_lcidUSEnglish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlString", "s_lcidUSEnglish", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 s_lcidBinary
int System::Data::SqlTypes::SqlString::_get_s_lcidBinary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_get_s_lcidBinary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.SqlTypes", "SqlString", "s_lcidBinary"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 s_lcidBinary
void System::Data::SqlTypes::SqlString::_set_s_lcidBinary(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::_set_s_lcidBinary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlString", "s_lcidBinary", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String m_value
[[deprecated("Use field access instead!")]] ::StringW& System::Data::SqlTypes::SqlString::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::dyn_m_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareInfo m_cmpInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareInfo*& System::Data::SqlTypes::SqlString::dyn_m_cmpInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::dyn_m_cmpInfo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cmpInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_lcid
[[deprecated("Use field access instead!")]] int& System::Data::SqlTypes::SqlString::dyn_m_lcid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::dyn_m_lcid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lcid"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Data.SqlTypes.SqlCompareOptions m_flag
[[deprecated("Use field access instead!")]] ::System::Data::SqlTypes::SqlCompareOptions& System::Data::SqlTypes::SqlString::dyn_m_flag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::dyn_m_flag");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_flag"))->offset;
  return *reinterpret_cast<::System::Data::SqlTypes::SqlCompareOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_fNotNull
[[deprecated("Use field access instead!")]] bool& System::Data::SqlTypes::SqlString::dyn_m_fNotNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::dyn_m_fNotNull");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fNotNull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.get_IsNull
bool System::Data::SqlTypes::SqlString::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlString), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.get_Value
::StringW System::Data::SqlTypes::SqlString::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlString..ctor
System::Data::SqlTypes::SqlString::SqlString(bool fNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fNull)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fNull);
}
// Autogenerated method: System.Data.SqlTypes.SqlString..ctor
System::Data::SqlTypes::SqlString::SqlString(::StringW data, int lcid, ::System::Data::SqlTypes::SqlCompareOptions compareOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(lcid), ::il2cpp_utils::ExtractType(compareOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, lcid, compareOptions);
}
// Autogenerated method: System.Data.SqlTypes.SqlString..ctor
System::Data::SqlTypes::SqlString::SqlString(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Data.SqlTypes.SqlString..ctor
System::Data::SqlTypes::SqlString::SqlString(int lcid, ::System::Data::SqlTypes::SqlCompareOptions compareOptions, ::StringW data, ::System::Globalization::CompareInfo* cmpInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lcid), ::il2cpp_utils::ExtractType(compareOptions), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(cmpInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lcid, compareOptions, data, cmpInfo);
}
// Autogenerated method: System.Data.SqlTypes.SqlString..cctor
void System::Data::SqlTypes::SqlString::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlString", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.SetCompareInfo
void System::Data::SqlTypes::SqlString::SetCompareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::SetCompareInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetCompareInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.StringCompare
int System::Data::SqlTypes::SqlString::StringCompare(::System::Data::SqlTypes::SqlString x, ::System::Data::SqlTypes::SqlString y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::StringCompare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlString", "StringCompare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.Compare
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::SqlString::Compare(::System::Data::SqlTypes::SqlString x, ::System::Data::SqlTypes::SqlString y, ::System::Data::SqlTypes::EComparison ecExpectedResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlString", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(ecExpectedResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, ecExpectedResult);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.ValidateSqlCompareOptions
void System::Data::SqlTypes::SqlString::ValidateSqlCompareOptions(::System::Data::SqlTypes::SqlCompareOptions compareOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::ValidateSqlCompareOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlString", "ValidateSqlCompareOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compareOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, compareOptions);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.CompareOptionsFromSqlCompareOptions
::System::Globalization::CompareOptions System::Data::SqlTypes::SqlString::CompareOptionsFromSqlCompareOptions(::System::Data::SqlTypes::SqlCompareOptions compareOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::CompareOptionsFromSqlCompareOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlString", "CompareOptionsFromSqlCompareOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compareOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CompareOptions, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, compareOptions);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.FBinarySort
bool System::Data::SqlTypes::SqlString::FBinarySort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::FBinarySort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FBinarySort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.CompareBinary
int System::Data::SqlTypes::SqlString::CompareBinary(::System::Data::SqlTypes::SqlString x, ::System::Data::SqlTypes::SqlString y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::CompareBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlString", "CompareBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.CompareBinary2
int System::Data::SqlTypes::SqlString::CompareBinary2(::System::Data::SqlTypes::SqlString x, ::System::Data::SqlTypes::SqlString y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::CompareBinary2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlString", "CompareBinary2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.CompareTo
int System::Data::SqlTypes::SqlString::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlString), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.CompareTo
int System::Data::SqlTypes::SqlString::CompareTo(::System::Data::SqlTypes::SqlString value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::CompareTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.GetSchema
::System::Xml::Schema::XmlSchema* System::Data::SqlTypes::SqlString::System_Xml_Serialization_IXmlSerializable_GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::System.Xml.Serialization.IXmlSerializable.GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlString), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.ReadXml
void System::Data::SqlTypes::SqlString::System_Xml_Serialization_IXmlSerializable_ReadXml(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::System.Xml.Serialization.IXmlSerializable.ReadXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlString), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.System.Xml.Serialization.IXmlSerializable.WriteXml
void System::Data::SqlTypes::SqlString::System_Xml_Serialization_IXmlSerializable_WriteXml(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::System.Xml.Serialization.IXmlSerializable.WriteXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Data::SqlTypes::SqlString), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.GetXsdType
::System::Xml::XmlQualifiedName* System::Data::SqlTypes::SqlString::GetXsdType(::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::GetXsdType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlString", "GetXsdType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaSet);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.ToString
::StringW System::Data::SqlTypes::SqlString::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.Equals
bool System::Data::SqlTypes::SqlString::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.GetHashCode
int System::Data::SqlTypes::SqlString::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.op_Addition
::System::Data::SqlTypes::SqlString System::Data::SqlTypes::operator+(const ::System::Data::SqlTypes::SqlString& x, const ::System::Data::SqlTypes::SqlString& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlString", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlString, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: System.Data.SqlTypes.SqlString.op_Equality
::System::Data::SqlTypes::SqlBoolean System::Data::SqlTypes::operator ==(const ::System::Data::SqlTypes::SqlString& x, const ::System::Data::SqlTypes::SqlString& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlString::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlString", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.SqlTypes.EComparison
#include "System/Data/SqlTypes/EComparison.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.SqlTypes.EComparison LT
::System::Data::SqlTypes::EComparison System::Data::SqlTypes::EComparison::_get_LT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::EComparison::_get_LT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::EComparison>("System.Data.SqlTypes", "EComparison", "LT"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SqlTypes.EComparison LT
void System::Data::SqlTypes::EComparison::_set_LT(::System::Data::SqlTypes::EComparison value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::EComparison::_set_LT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "EComparison", "LT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.SqlTypes.EComparison LE
::System::Data::SqlTypes::EComparison System::Data::SqlTypes::EComparison::_get_LE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::EComparison::_get_LE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::EComparison>("System.Data.SqlTypes", "EComparison", "LE"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SqlTypes.EComparison LE
void System::Data::SqlTypes::EComparison::_set_LE(::System::Data::SqlTypes::EComparison value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::EComparison::_set_LE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "EComparison", "LE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.SqlTypes.EComparison EQ
::System::Data::SqlTypes::EComparison System::Data::SqlTypes::EComparison::_get_EQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::EComparison::_get_EQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::EComparison>("System.Data.SqlTypes", "EComparison", "EQ"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SqlTypes.EComparison EQ
void System::Data::SqlTypes::EComparison::_set_EQ(::System::Data::SqlTypes::EComparison value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::EComparison::_set_EQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "EComparison", "EQ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.SqlTypes.EComparison GE
::System::Data::SqlTypes::EComparison System::Data::SqlTypes::EComparison::_get_GE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::EComparison::_get_GE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::EComparison>("System.Data.SqlTypes", "EComparison", "GE"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SqlTypes.EComparison GE
void System::Data::SqlTypes::EComparison::_set_GE(::System::Data::SqlTypes::EComparison value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::EComparison::_set_GE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "EComparison", "GE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.SqlTypes.EComparison GT
::System::Data::SqlTypes::EComparison System::Data::SqlTypes::EComparison::_get_GT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::EComparison::_get_GT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::EComparison>("System.Data.SqlTypes", "EComparison", "GT"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SqlTypes.EComparison GT
void System::Data::SqlTypes::EComparison::_set_GT(::System::Data::SqlTypes::EComparison value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::EComparison::_set_GT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "EComparison", "GT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.SqlTypes.EComparison NE
::System::Data::SqlTypes::EComparison System::Data::SqlTypes::EComparison::_get_NE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::EComparison::_get_NE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::SqlTypes::EComparison>("System.Data.SqlTypes", "EComparison", "NE"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.SqlTypes.EComparison NE
void System::Data::SqlTypes::EComparison::_set_NE(::System::Data::SqlTypes::EComparison value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::EComparison::_set_NE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "EComparison", "NE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::SqlTypes::EComparison::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::EComparison::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.SqlTypes.SqlTypeException
#include "System/Data/SqlTypes/SqlTypeException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.SqlTypes.SqlTypeException.SqlTypeExceptionSerialization
::System::Runtime::Serialization::SerializationInfo* System::Data::SqlTypes::SqlTypeException::SqlTypeExceptionSerialization(::System::Runtime::Serialization::SerializationInfo* si, ::System::Runtime::Serialization::StreamingContext sc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlTypeException::SqlTypeExceptionSerialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlTypeException", "SqlTypeExceptionSerialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(si), ::il2cpp_utils::ExtractType(sc)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::Serialization::SerializationInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, si, sc);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.SqlTypes.SqlNullValueException
#include "System/Data/SqlTypes/SqlNullValueException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.SqlTypes.SqlTruncateException
#include "System/Data/SqlTypes/SqlTruncateException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.SqlTypes.SqlStreamChars
#include "System/Data/SqlTypes/SqlStreamChars.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.SqlTypes.SqlStreamChars.get_Length
int64_t System::Data::SqlTypes::SqlStreamChars::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlStreamChars::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SqlTypes::SqlStreamChars*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlStreamChars.get_Position
int64_t System::Data::SqlTypes::SqlStreamChars::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlStreamChars::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SqlTypes::SqlStreamChars*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlStreamChars.Read
int System::Data::SqlTypes::SqlStreamChars::Read(::ArrayW<::Il2CppChar> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlStreamChars::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SqlTypes::SqlStreamChars*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Data.SqlTypes.SqlStreamChars.Seek
int64_t System::Data::SqlTypes::SqlStreamChars::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlStreamChars::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SqlTypes::SqlStreamChars*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.SqlTypes.SqlXml
#include "System/Data/SqlTypes/SqlXml.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Func`4
#include "System/Func_4.hpp"
// Including type: System.Xml.XmlReaderSettings
#include "System/Xml/XmlReaderSettings.hpp"
// Including type: System.Xml.XmlParserContext
#include "System/Xml/XmlParserContext.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Func`4<System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext,System.Xml.XmlReader> s_sqlReaderDelegate
::System::Func_4<::System::IO::Stream*, ::System::Xml::XmlReaderSettings*, ::System::Xml::XmlParserContext*, ::System::Xml::XmlReader*>* System::Data::SqlTypes::SqlXml::_get_s_sqlReaderDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::_get_s_sqlReaderDelegate");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_4<::System::IO::Stream*, ::System::Xml::XmlReaderSettings*, ::System::Xml::XmlParserContext*, ::System::Xml::XmlReader*>*>("System.Data.SqlTypes", "SqlXml", "s_sqlReaderDelegate")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Func`4<System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext,System.Xml.XmlReader> s_sqlReaderDelegate
void System::Data::SqlTypes::SqlXml::_set_s_sqlReaderDelegate(::System::Func_4<::System::IO::Stream*, ::System::Xml::XmlReaderSettings*, ::System::Xml::XmlParserContext*, ::System::Xml::XmlReader*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::_set_s_sqlReaderDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlXml", "s_sqlReaderDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XmlReaderSettings s_defaultXmlReaderSettings
::System::Xml::XmlReaderSettings* System::Data::SqlTypes::SqlXml::_get_s_defaultXmlReaderSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::_get_s_defaultXmlReaderSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlReaderSettings*>("System.Data.SqlTypes", "SqlXml", "s_defaultXmlReaderSettings"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XmlReaderSettings s_defaultXmlReaderSettings
void System::Data::SqlTypes::SqlXml::_set_s_defaultXmlReaderSettings(::System::Xml::XmlReaderSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::_set_s_defaultXmlReaderSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlXml", "s_defaultXmlReaderSettings", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XmlReaderSettings s_defaultXmlReaderSettingsCloseInput
::System::Xml::XmlReaderSettings* System::Data::SqlTypes::SqlXml::_get_s_defaultXmlReaderSettingsCloseInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::_get_s_defaultXmlReaderSettingsCloseInput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlReaderSettings*>("System.Data.SqlTypes", "SqlXml", "s_defaultXmlReaderSettingsCloseInput"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XmlReaderSettings s_defaultXmlReaderSettingsCloseInput
void System::Data::SqlTypes::SqlXml::_set_s_defaultXmlReaderSettingsCloseInput(::System::Xml::XmlReaderSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::_set_s_defaultXmlReaderSettingsCloseInput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlXml", "s_defaultXmlReaderSettingsCloseInput", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_createSqlReaderMethodInfo
::System::Reflection::MethodInfo* System::Data::SqlTypes::SqlXml::_get_s_createSqlReaderMethodInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::_get_s_createSqlReaderMethodInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("System.Data.SqlTypes", "SqlXml", "s_createSqlReaderMethodInfo"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_createSqlReaderMethodInfo
void System::Data::SqlTypes::SqlXml::_set_s_createSqlReaderMethodInfo(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::_set_s_createSqlReaderMethodInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.SqlTypes", "SqlXml", "s_createSqlReaderMethodInfo", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MethodInfo _createSqlReaderMethodInfo
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& System::Data::SqlTypes::SqlXml::dyn__createSqlReaderMethodInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::dyn__createSqlReaderMethodInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_createSqlReaderMethodInfo"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fNotNull
[[deprecated("Use field access instead!")]] bool& System::Data::SqlTypes::SqlXml::dyn__fNotNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::dyn__fNotNull");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fNotNull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Data::SqlTypes::SqlXml::dyn__stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::dyn__stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _firstCreateReader
[[deprecated("Use field access instead!")]] bool& System::Data::SqlTypes::SqlXml::dyn__firstCreateReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::dyn__firstCreateReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstCreateReader"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.SqlTypes.SqlXml.get_CreateSqlReaderMethodInfo
::System::Reflection::MethodInfo* System::Data::SqlTypes::SqlXml::get_CreateSqlReaderMethodInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::get_CreateSqlReaderMethodInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlXml", "get_CreateSqlReaderMethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlXml.get_IsNull
bool System::Data::SqlTypes::SqlXml::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::get_IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SqlTypes::SqlXml*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlXml..cctor
void System::Data::SqlTypes::SqlXml::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlXml", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlXml.CreateReader
::System::Xml::XmlReader* System::Data::SqlTypes::SqlXml::CreateReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::CreateReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlReader*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlXml.CreateSqlXmlReader
::System::Xml::XmlReader* System::Data::SqlTypes::SqlXml::CreateSqlXmlReader(::System::IO::Stream* stream, bool closeInput, bool throwTargetInvocationExceptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::CreateSqlXmlReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlXml", "CreateSqlXmlReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(closeInput), ::il2cpp_utils::ExtractType(throwTargetInvocationExceptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlReader*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, closeInput, throwTargetInvocationExceptions);
}
// Autogenerated method: System.Data.SqlTypes.SqlXml.CreateSqlReaderDelegate
::System::Func_4<::System::IO::Stream*, ::System::Xml::XmlReaderSettings*, ::System::Xml::XmlParserContext*, ::System::Xml::XmlReader*>* System::Data::SqlTypes::SqlXml::CreateSqlReaderDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::CreateSqlReaderDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlXml", "CreateSqlReaderDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_4<::System::IO::Stream*, ::System::Xml::XmlReaderSettings*, ::System::Xml::XmlParserContext*, ::System::Xml::XmlReader*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlXml.SetNull
void System::Data::SqlTypes::SqlXml::SetNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::SetNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlXml.System.Xml.Serialization.IXmlSerializable.GetSchema
::System::Xml::Schema::XmlSchema* System::Data::SqlTypes::SqlXml::System_Xml_Serialization_IXmlSerializable_GetSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::System.Xml.Serialization.IXmlSerializable.GetSchema");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SqlTypes::SqlXml*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlXml.System.Xml.Serialization.IXmlSerializable.ReadXml
void System::Data::SqlTypes::SqlXml::System_Xml_Serialization_IXmlSerializable_ReadXml(::System::Xml::XmlReader* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::System.Xml.Serialization.IXmlSerializable.ReadXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SqlTypes::SqlXml*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, r);
}
// Autogenerated method: System.Data.SqlTypes.SqlXml.System.Xml.Serialization.IXmlSerializable.WriteXml
void System::Data::SqlTypes::SqlXml::System_Xml_Serialization_IXmlSerializable_WriteXml(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::System.Xml.Serialization.IXmlSerializable.WriteXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::SqlTypes::SqlXml*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Data.SqlTypes.SqlXml.GetXsdType
::System::Xml::XmlQualifiedName* System::Data::SqlTypes::SqlXml::GetXsdType(::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXml::GetXsdType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.SqlTypes", "SqlXml", "GetXsdType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaSet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.SqlTypes.SqlXmlStreamWrapper
#include "System/Data/SqlTypes/SqlXmlStreamWrapper.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Data::SqlTypes::SqlXmlStreamWrapper::dyn__stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::dyn__stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _lPosition
[[deprecated("Use field access instead!")]] int64_t& System::Data::SqlTypes::SqlXmlStreamWrapper::dyn__lPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::dyn__lPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lPosition"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isClosed
[[deprecated("Use field access instead!")]] bool& System::Data::SqlTypes::SqlXmlStreamWrapper::dyn__isClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::dyn__isClosed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isClosed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.SqlTypes.SqlXmlStreamWrapper.ThrowIfStreamCannotSeek
void System::Data::SqlTypes::SqlXmlStreamWrapper::ThrowIfStreamCannotSeek(::StringW method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::ThrowIfStreamCannotSeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfStreamCannotSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, method);
}
// Autogenerated method: System.Data.SqlTypes.SqlXmlStreamWrapper.ThrowIfStreamCannotRead
void System::Data::SqlTypes::SqlXmlStreamWrapper::ThrowIfStreamCannotRead(::StringW method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::ThrowIfStreamCannotRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfStreamCannotRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, method);
}
// Autogenerated method: System.Data.SqlTypes.SqlXmlStreamWrapper.ThrowIfStreamCannotWrite
void System::Data::SqlTypes::SqlXmlStreamWrapper::ThrowIfStreamCannotWrite(::StringW method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::ThrowIfStreamCannotWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfStreamCannotWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, method);
}
// Autogenerated method: System.Data.SqlTypes.SqlXmlStreamWrapper.ThrowIfStreamClosed
void System::Data::SqlTypes::SqlXmlStreamWrapper::ThrowIfStreamClosed(::StringW method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::ThrowIfStreamClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfStreamClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, method);
}
// Autogenerated method: System.Data.SqlTypes.SqlXmlStreamWrapper.IsStreamClosed
bool System::Data::SqlTypes::SqlXmlStreamWrapper::IsStreamClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::IsStreamClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsStreamClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlXmlStreamWrapper.get_CanRead
bool System::Data::SqlTypes::SqlXmlStreamWrapper::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlXmlStreamWrapper.get_CanSeek
bool System::Data::SqlTypes::SqlXmlStreamWrapper::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlXmlStreamWrapper.get_CanWrite
bool System::Data::SqlTypes::SqlXmlStreamWrapper::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlXmlStreamWrapper.get_Length
int64_t System::Data::SqlTypes::SqlXmlStreamWrapper::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlXmlStreamWrapper.get_Position
int64_t System::Data::SqlTypes::SqlXmlStreamWrapper::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlXmlStreamWrapper.set_Position
void System::Data::SqlTypes::SqlXmlStreamWrapper::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlXmlStreamWrapper.Seek
int64_t System::Data::SqlTypes::SqlXmlStreamWrapper::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.Data.SqlTypes.SqlXmlStreamWrapper.Read
int System::Data::SqlTypes::SqlXmlStreamWrapper::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Data.SqlTypes.SqlXmlStreamWrapper.Write
void System::Data::SqlTypes::SqlXmlStreamWrapper::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Data.SqlTypes.SqlXmlStreamWrapper.ReadByte
int System::Data::SqlTypes::SqlXmlStreamWrapper::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::ReadByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 29));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlXmlStreamWrapper.WriteByte
void System::Data::SqlTypes::SqlXmlStreamWrapper::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::WriteByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlXmlStreamWrapper.SetLength
void System::Data::SqlTypes::SqlXmlStreamWrapper::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.SqlTypes.SqlXmlStreamWrapper.Flush
void System::Data::SqlTypes::SqlXmlStreamWrapper::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.SqlTypes.SqlXmlStreamWrapper.Dispose
void System::Data::SqlTypes::SqlXmlStreamWrapper::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::SqlTypes::SqlXmlStreamWrapper::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.Common.ADP
#include "System/Data/Common/ADP.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.ArgumentException
#include "System/ArgumentException.hpp"
// Including type: System.ArgumentOutOfRangeException
#include "System/ArgumentOutOfRangeException.hpp"
// Including type: System.InvalidOperationException
#include "System/InvalidOperationException.hpp"
// Including type: System.NotSupportedException
#include "System/NotSupportedException.hpp"
// Including type: System.Data.AcceptRejectRule
#include "System/Data/AcceptRejectRule.hpp"
// Including type: System.Data.MissingSchemaAction
#include "System/Data/MissingSchemaAction.hpp"
// Including type: System.Data.Rule
#include "System/Data/Rule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type s_stackOverflowType
::System::Type* System::Data::Common::ADP::_get_s_stackOverflowType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_get_s_stackOverflowType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Data.Common", "ADP", "s_stackOverflowType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type s_stackOverflowType
void System::Data::Common::ADP::_set_s_stackOverflowType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_set_s_stackOverflowType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ADP", "s_stackOverflowType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type s_outOfMemoryType
::System::Type* System::Data::Common::ADP::_get_s_outOfMemoryType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_get_s_outOfMemoryType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Data.Common", "ADP", "s_outOfMemoryType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type s_outOfMemoryType
void System::Data::Common::ADP::_set_s_outOfMemoryType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_set_s_outOfMemoryType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ADP", "s_outOfMemoryType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type s_threadAbortType
::System::Type* System::Data::Common::ADP::_get_s_threadAbortType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_get_s_threadAbortType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Data.Common", "ADP", "s_threadAbortType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type s_threadAbortType
void System::Data::Common::ADP::_set_s_threadAbortType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_set_s_threadAbortType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ADP", "s_threadAbortType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type s_nullReferenceType
::System::Type* System::Data::Common::ADP::_get_s_nullReferenceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_get_s_nullReferenceType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Data.Common", "ADP", "s_nullReferenceType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type s_nullReferenceType
void System::Data::Common::ADP::_set_s_nullReferenceType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_set_s_nullReferenceType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ADP", "s_nullReferenceType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type s_accessViolationType
::System::Type* System::Data::Common::ADP::_get_s_accessViolationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_get_s_accessViolationType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Data.Common", "ADP", "s_accessViolationType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type s_accessViolationType
void System::Data::Common::ADP::_set_s_accessViolationType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_set_s_accessViolationType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ADP", "s_accessViolationType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type s_securityType
::System::Type* System::Data::Common::ADP::_get_s_securityType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_get_s_securityType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Data.Common", "ADP", "s_securityType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type s_securityType
void System::Data::Common::ADP::_set_s_securityType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_set_s_securityType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ADP", "s_securityType", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Boolean IsWindowsNT
bool System::Data::Common::ADP::_get_IsWindowsNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_get_IsWindowsNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Data.Common", "ADP", "IsWindowsNT"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean IsWindowsNT
void System::Data::Common::ADP::_set_IsWindowsNT(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_set_IsWindowsNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ADP", "IsWindowsNT", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Boolean IsPlatformNT5
bool System::Data::Common::ADP::_get_IsPlatformNT5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_get_IsPlatformNT5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Data.Common", "ADP", "IsPlatformNT5"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean IsPlatformNT5
void System::Data::Common::ADP::_set_IsPlatformNT5(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_set_IsPlatformNT5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ADP", "IsPlatformNT5", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String StrEmpty
::StringW System::Data::Common::ADP::_get_StrEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_get_StrEmpty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Data.Common", "ADP", "StrEmpty"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String StrEmpty
void System::Data::Common::ADP::_set_StrEmpty(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_set_StrEmpty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ADP", "StrEmpty", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String[] AzureSqlServerEndpoints
::ArrayW<::StringW> System::Data::Common::ADP::_get_AzureSqlServerEndpoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_get_AzureSqlServerEndpoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Data.Common", "ADP", "AzureSqlServerEndpoints"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String[] AzureSqlServerEndpoints
void System::Data::Common::ADP::_set_AzureSqlServerEndpoints(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_set_AzureSqlServerEndpoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ADP", "AzureSqlServerEndpoints", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.IntPtr PtrZero
::System::IntPtr System::Data::Common::ADP::_get_PtrZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_get_PtrZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("System.Data.Common", "ADP", "PtrZero"));
}
// Autogenerated static field setter
// Set static field: static readonly System.IntPtr PtrZero
void System::Data::Common::ADP::_set_PtrZero(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_set_PtrZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ADP", "PtrZero", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 PtrSize
int System::Data::Common::ADP::_get_PtrSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_get_PtrSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Data.Common", "ADP", "PtrSize"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 PtrSize
void System::Data::Common::ADP::_set_PtrSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::_set_PtrSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ADP", "PtrSize", value));
}
// Autogenerated method: System.Data.Common.ADP..cctor
void System::Data::Common::ADP::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ADP", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.Common.ADP.TraceException
void System::Data::Common::ADP::TraceException(::StringW trace, ::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::TraceException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ADP", "TraceException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trace), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trace, e);
}
// Autogenerated method: System.Data.Common.ADP.TraceExceptionAsReturnValue
void System::Data::Common::ADP::TraceExceptionAsReturnValue(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::TraceExceptionAsReturnValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ADP", "TraceExceptionAsReturnValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: System.Data.Common.ADP.TraceExceptionWithoutRethrow
void System::Data::Common::ADP::TraceExceptionWithoutRethrow(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::TraceExceptionWithoutRethrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ADP", "TraceExceptionWithoutRethrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: System.Data.Common.ADP.Argument
::System::ArgumentException* System::Data::Common::ADP::Argument(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::Argument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ADP", "Argument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArgumentException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.Common.ADP.ArgumentOutOfRange
::System::ArgumentOutOfRangeException* System::Data::Common::ADP::ArgumentOutOfRange(::StringW parameterName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::ArgumentOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ADP", "ArgumentOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameterName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArgumentOutOfRangeException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameterName);
}
// Autogenerated method: System.Data.Common.ADP.ArgumentOutOfRange
::System::ArgumentOutOfRangeException* System::Data::Common::ADP::ArgumentOutOfRange(::StringW message, ::StringW parameterName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::ArgumentOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ADP", "ArgumentOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(parameterName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArgumentOutOfRangeException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message, parameterName);
}
// Autogenerated method: System.Data.Common.ADP.InvalidOperation
::System::InvalidOperationException* System::Data::Common::ADP::InvalidOperation(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::InvalidOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ADP", "InvalidOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::InvalidOperationException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.Common.ADP.NotSupported
::System::NotSupportedException* System::Data::Common::ADP::NotSupported(::StringW error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::NotSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ADP", "NotSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::NotSupportedException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.Data.Common.ADP.IsCatchableExceptionType
bool System::Data::Common::ADP::IsCatchableExceptionType(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::IsCatchableExceptionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ADP", "IsCatchableExceptionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: System.Data.Common.ADP.IsCatchableOrSecurityExceptionType
bool System::Data::Common::ADP::IsCatchableOrSecurityExceptionType(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::IsCatchableOrSecurityExceptionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ADP", "IsCatchableOrSecurityExceptionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: System.Data.Common.ADP.InvalidEnumerationValue
::System::ArgumentOutOfRangeException* System::Data::Common::ADP::InvalidEnumerationValue(::System::Type* type, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::InvalidEnumerationValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ADP", "InvalidEnumerationValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArgumentOutOfRangeException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, value);
}
// Autogenerated method: System.Data.Common.ADP.InvalidSeekOrigin
::System::Exception* System::Data::Common::ADP::InvalidSeekOrigin(::StringW parameterName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::InvalidSeekOrigin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ADP", "InvalidSeekOrigin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameterName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameterName);
}
// Autogenerated method: System.Data.Common.ADP.InvalidAcceptRejectRule
::System::ArgumentOutOfRangeException* System::Data::Common::ADP::InvalidAcceptRejectRule(::System::Data::AcceptRejectRule value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::InvalidAcceptRejectRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ADP", "InvalidAcceptRejectRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArgumentOutOfRangeException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.ADP.InvalidMissingSchemaAction
::System::ArgumentOutOfRangeException* System::Data::Common::ADP::InvalidMissingSchemaAction(::System::Data::MissingSchemaAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::InvalidMissingSchemaAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ADP", "InvalidMissingSchemaAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArgumentOutOfRangeException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.ADP.InvalidRule
::System::ArgumentOutOfRangeException* System::Data::Common::ADP::InvalidRule(::System::Data::Rule value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::InvalidRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ADP", "InvalidRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArgumentOutOfRangeException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.ADP.WrongType
::System::Exception* System::Data::Common::ADP::WrongType(::System::Type* got, ::System::Type* expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ADP::WrongType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ADP", "WrongType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(got), ::il2cpp_utils::ExtractType(expected)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, got, expected);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.BigIntegerStorage
#include "System/Data/Common/BigIntegerStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Numerics.BigInteger[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Numerics::BigInteger>& System::Data::Common::BigIntegerStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BigIntegerStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Numerics::BigInteger>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.BigIntegerStorage.ConvertToBigInteger
::System::Numerics::BigInteger System::Data::Common::BigIntegerStorage::ConvertToBigInteger(::Il2CppObject* value, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BigIntegerStorage::ConvertToBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "BigIntegerStorage", "ConvertToBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, formatProvider);
}
// Autogenerated method: System.Data.Common.BigIntegerStorage.ConvertFromBigInteger
::Il2CppObject* System::Data::Common::BigIntegerStorage::ConvertFromBigInteger(::System::Numerics::BigInteger value, ::System::Type* type, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BigIntegerStorage::ConvertFromBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "BigIntegerStorage", "ConvertFromBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, type, formatProvider);
}
// Autogenerated method: System.Data.Common.BigIntegerStorage.Aggregate
::Il2CppObject* System::Data::Common::BigIntegerStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BigIntegerStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.BigIntegerStorage.Compare
int System::Data::Common::BigIntegerStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BigIntegerStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.BigIntegerStorage.CompareValueTo
int System::Data::Common::BigIntegerStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BigIntegerStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.BigIntegerStorage.ConvertValue
::Il2CppObject* System::Data::Common::BigIntegerStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BigIntegerStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.BigIntegerStorage.Copy
void System::Data::Common::BigIntegerStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BigIntegerStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.BigIntegerStorage.Get
::Il2CppObject* System::Data::Common::BigIntegerStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BigIntegerStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.BigIntegerStorage.Set
void System::Data::Common::BigIntegerStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BigIntegerStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.BigIntegerStorage.SetCapacity
void System::Data::Common::BigIntegerStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BigIntegerStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.BigIntegerStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::BigIntegerStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BigIntegerStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.BigIntegerStorage.ConvertObjectToXml
::StringW System::Data::Common::BigIntegerStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BigIntegerStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.BigIntegerStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::BigIntegerStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BigIntegerStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.BigIntegerStorage.CopyValue
void System::Data::Common::BigIntegerStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BigIntegerStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.BigIntegerStorage.SetStorage
void System::Data::Common::BigIntegerStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BigIntegerStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.BooleanStorage
#include "System/Data/Common/BooleanStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& System::Data::Common::BooleanStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BooleanStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.BooleanStorage.Aggregate
::Il2CppObject* System::Data::Common::BooleanStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BooleanStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.BooleanStorage.Compare
int System::Data::Common::BooleanStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BooleanStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.BooleanStorage.CompareValueTo
int System::Data::Common::BooleanStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BooleanStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.BooleanStorage.ConvertValue
::Il2CppObject* System::Data::Common::BooleanStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BooleanStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.BooleanStorage.Copy
void System::Data::Common::BooleanStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BooleanStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.BooleanStorage.Get
::Il2CppObject* System::Data::Common::BooleanStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BooleanStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.BooleanStorage.Set
void System::Data::Common::BooleanStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BooleanStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.BooleanStorage.SetCapacity
void System::Data::Common::BooleanStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BooleanStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.BooleanStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::BooleanStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BooleanStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.BooleanStorage.ConvertObjectToXml
::StringW System::Data::Common::BooleanStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BooleanStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.BooleanStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::BooleanStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BooleanStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.BooleanStorage.CopyValue
void System::Data::Common::BooleanStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BooleanStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.BooleanStorage.SetStorage
void System::Data::Common::BooleanStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::BooleanStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.ByteStorage
#include "System/Data/Common/ByteStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Data::Common::ByteStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ByteStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.ByteStorage.Aggregate
::Il2CppObject* System::Data::Common::ByteStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ByteStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.ByteStorage.Compare
int System::Data::Common::ByteStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ByteStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.ByteStorage.CompareValueTo
int System::Data::Common::ByteStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ByteStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.ByteStorage.ConvertValue
::Il2CppObject* System::Data::Common::ByteStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ByteStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.ByteStorage.Copy
void System::Data::Common::ByteStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ByteStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.ByteStorage.Get
::Il2CppObject* System::Data::Common::ByteStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ByteStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.ByteStorage.Set
void System::Data::Common::ByteStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ByteStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.ByteStorage.SetCapacity
void System::Data::Common::ByteStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ByteStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.ByteStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::ByteStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ByteStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.ByteStorage.ConvertObjectToXml
::StringW System::Data::Common::ByteStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ByteStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.ByteStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::ByteStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ByteStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.ByteStorage.CopyValue
void System::Data::Common::ByteStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ByteStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.ByteStorage.SetStorage
void System::Data::Common::ByteStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ByteStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.CharStorage
#include "System/Data/Common/CharStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Char[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Data::Common::CharStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::CharStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.CharStorage.Aggregate
::Il2CppObject* System::Data::Common::CharStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::CharStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.CharStorage.Compare
int System::Data::Common::CharStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::CharStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.CharStorage.CompareValueTo
int System::Data::Common::CharStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::CharStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.CharStorage.ConvertValue
::Il2CppObject* System::Data::Common::CharStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::CharStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.CharStorage.Copy
void System::Data::Common::CharStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::CharStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.CharStorage.Get
::Il2CppObject* System::Data::Common::CharStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::CharStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.CharStorage.Set
void System::Data::Common::CharStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::CharStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.CharStorage.SetCapacity
void System::Data::Common::CharStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::CharStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.CharStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::CharStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::CharStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.CharStorage.ConvertObjectToXml
::StringW System::Data::Common::CharStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::CharStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.CharStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::CharStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::CharStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.CharStorage.CopyValue
void System::Data::Common::CharStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::CharStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.CharStorage.SetStorage
void System::Data::Common::CharStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::CharStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.Common.StorageType
#include "System/Data/Common/StorageType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType Empty
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType Empty
void System::Data::Common::StorageType::_set_Empty(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType Object
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType Object
void System::Data::Common::StorageType::_set_Object(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType DBNull
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_DBNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_DBNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "DBNull"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType DBNull
void System::Data::Common::StorageType::_set_DBNull(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_DBNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "DBNull", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType Boolean
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType Boolean
void System::Data::Common::StorageType::_set_Boolean(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType Char
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_Char() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_Char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "Char"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType Char
void System::Data::Common::StorageType::_set_Char(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_Char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "Char", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType SByte
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_SByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_SByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "SByte"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType SByte
void System::Data::Common::StorageType::_set_SByte(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_SByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "SByte", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType Byte
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_Byte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_Byte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "Byte"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType Byte
void System::Data::Common::StorageType::_set_Byte(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_Byte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "Byte", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType Int16
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_Int16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_Int16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "Int16"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType Int16
void System::Data::Common::StorageType::_set_Int16(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_Int16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "Int16", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType UInt16
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_UInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_UInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "UInt16"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType UInt16
void System::Data::Common::StorageType::_set_UInt16(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_UInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "UInt16", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType Int32
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType Int32
void System::Data::Common::StorageType::_set_Int32(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType UInt32
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_UInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_UInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "UInt32"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType UInt32
void System::Data::Common::StorageType::_set_UInt32(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_UInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "UInt32", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType Int64
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_Int64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_Int64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "Int64"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType Int64
void System::Data::Common::StorageType::_set_Int64(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_Int64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "Int64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType UInt64
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_UInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_UInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "UInt64"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType UInt64
void System::Data::Common::StorageType::_set_UInt64(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_UInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "UInt64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType Single
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_Single() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_Single");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "Single"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType Single
void System::Data::Common::StorageType::_set_Single(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_Single");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "Single", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType Double
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "Double"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType Double
void System::Data::Common::StorageType::_set_Double(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType Decimal
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_Decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "Decimal"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType Decimal
void System::Data::Common::StorageType::_set_Decimal(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_Decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "Decimal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType DateTime
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_DateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "DateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType DateTime
void System::Data::Common::StorageType::_set_DateTime(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_DateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "DateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType TimeSpan
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_TimeSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_TimeSpan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "TimeSpan"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType TimeSpan
void System::Data::Common::StorageType::_set_TimeSpan(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_TimeSpan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "TimeSpan", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType String
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "String"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType String
void System::Data::Common::StorageType::_set_String(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType Guid
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_Guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_Guid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "Guid"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType Guid
void System::Data::Common::StorageType::_set_Guid(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_Guid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "Guid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType ByteArray
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_ByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_ByteArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "ByteArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType ByteArray
void System::Data::Common::StorageType::_set_ByteArray(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_ByteArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "ByteArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType CharArray
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_CharArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_CharArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "CharArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType CharArray
void System::Data::Common::StorageType::_set_CharArray(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_CharArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "CharArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType Type
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "Type"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType Type
void System::Data::Common::StorageType::_set_Type(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "Type", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType DateTimeOffset
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_DateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_DateTimeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "DateTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType DateTimeOffset
void System::Data::Common::StorageType::_set_DateTimeOffset(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_DateTimeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "DateTimeOffset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType BigInteger
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_BigInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_BigInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "BigInteger"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType BigInteger
void System::Data::Common::StorageType::_set_BigInteger(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_BigInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "BigInteger", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType Uri
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_Uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_Uri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "Uri"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType Uri
void System::Data::Common::StorageType::_set_Uri(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_Uri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "Uri", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType SqlBinary
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_SqlBinary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_SqlBinary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "SqlBinary"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType SqlBinary
void System::Data::Common::StorageType::_set_SqlBinary(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_SqlBinary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "SqlBinary", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType SqlBoolean
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_SqlBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_SqlBoolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "SqlBoolean"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType SqlBoolean
void System::Data::Common::StorageType::_set_SqlBoolean(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_SqlBoolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "SqlBoolean", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType SqlByte
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_SqlByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_SqlByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "SqlByte"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType SqlByte
void System::Data::Common::StorageType::_set_SqlByte(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_SqlByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "SqlByte", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType SqlBytes
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_SqlBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_SqlBytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "SqlBytes"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType SqlBytes
void System::Data::Common::StorageType::_set_SqlBytes(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_SqlBytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "SqlBytes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType SqlChars
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_SqlChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_SqlChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "SqlChars"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType SqlChars
void System::Data::Common::StorageType::_set_SqlChars(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_SqlChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "SqlChars", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType SqlDateTime
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_SqlDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_SqlDateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "SqlDateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType SqlDateTime
void System::Data::Common::StorageType::_set_SqlDateTime(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_SqlDateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "SqlDateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType SqlDecimal
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_SqlDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_SqlDecimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "SqlDecimal"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType SqlDecimal
void System::Data::Common::StorageType::_set_SqlDecimal(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_SqlDecimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "SqlDecimal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType SqlDouble
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_SqlDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_SqlDouble");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "SqlDouble"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType SqlDouble
void System::Data::Common::StorageType::_set_SqlDouble(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_SqlDouble");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "SqlDouble", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType SqlGuid
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_SqlGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_SqlGuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "SqlGuid"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType SqlGuid
void System::Data::Common::StorageType::_set_SqlGuid(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_SqlGuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "SqlGuid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType SqlInt16
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_SqlInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_SqlInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "SqlInt16"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType SqlInt16
void System::Data::Common::StorageType::_set_SqlInt16(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_SqlInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "SqlInt16", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType SqlInt32
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_SqlInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_SqlInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "SqlInt32"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType SqlInt32
void System::Data::Common::StorageType::_set_SqlInt32(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_SqlInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "SqlInt32", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType SqlInt64
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_SqlInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_SqlInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "SqlInt64"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType SqlInt64
void System::Data::Common::StorageType::_set_SqlInt64(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_SqlInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "SqlInt64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType SqlMoney
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_SqlMoney() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_SqlMoney");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "SqlMoney"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType SqlMoney
void System::Data::Common::StorageType::_set_SqlMoney(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_SqlMoney");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "SqlMoney", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType SqlSingle
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_SqlSingle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_SqlSingle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "SqlSingle"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType SqlSingle
void System::Data::Common::StorageType::_set_SqlSingle(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_SqlSingle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "SqlSingle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.StorageType SqlString
::System::Data::Common::StorageType System::Data::Common::StorageType::_get_SqlString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_get_SqlString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::StorageType>("System.Data.Common", "StorageType", "SqlString"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.StorageType SqlString
void System::Data::Common::StorageType::_set_SqlString(::System::Data::Common::StorageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::_set_SqlString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "StorageType", "SqlString", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::Common::StorageType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StorageType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.DataStorage
#include "System/Data/Common/DataStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.DataTable
#include "System/Data/DataTable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Tuple`4
#include "System/Tuple_4.hpp"
// Including type: System.Collections.Concurrent.ConcurrentDictionary`2
#include "System/Collections/Concurrent/ConcurrentDictionary_2.hpp"
// Including type: System.Data.DataSetDateTime
#include "System/Data/DataSetDateTime.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.Serialization.XmlRootAttribute
#include "System/Xml/Serialization/XmlRootAttribute.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type[] s_storageClassType
::ArrayW<::System::Type*> System::Data::Common::DataStorage::_get_s_storageClassType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::_get_s_storageClassType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("System.Data.Common", "DataStorage", "s_storageClassType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type[] s_storageClassType
void System::Data::Common::DataStorage::_set_s_storageClassType(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::_set_s_storageClassType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "DataStorage", "s_storageClassType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Func`2<System.Type,System.Tuple`4<System.Boolean,System.Boolean,System.Boolean,System.Boolean>> s_inspectTypeForInterfaces
::System::Func_2<::System::Type*, ::System::Tuple_4<bool, bool, bool, bool>*>* System::Data::Common::DataStorage::_get_s_inspectTypeForInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::_get_s_inspectTypeForInterfaces");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, ::System::Tuple_4<bool, bool, bool, bool>*>*>("System.Data.Common", "DataStorage", "s_inspectTypeForInterfaces")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Func`2<System.Type,System.Tuple`4<System.Boolean,System.Boolean,System.Boolean,System.Boolean>> s_inspectTypeForInterfaces
void System::Data::Common::DataStorage::_set_s_inspectTypeForInterfaces(::System::Func_2<::System::Type*, ::System::Tuple_4<bool, bool, bool, bool>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::_set_s_inspectTypeForInterfaces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "DataStorage", "s_inspectTypeForInterfaces", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Concurrent.ConcurrentDictionary`2<System.Type,System.Tuple`4<System.Boolean,System.Boolean,System.Boolean,System.Boolean>> s_typeImplementsInterface
::System::Collections::Concurrent::ConcurrentDictionary_2<::System::Type*, ::System::Tuple_4<bool, bool, bool, bool>*>* System::Data::Common::DataStorage::_get_s_typeImplementsInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::_get_s_typeImplementsInterface");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Concurrent::ConcurrentDictionary_2<::System::Type*, ::System::Tuple_4<bool, bool, bool, bool>*>*>("System.Data.Common", "DataStorage", "s_typeImplementsInterface")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Concurrent.ConcurrentDictionary`2<System.Type,System.Tuple`4<System.Boolean,System.Boolean,System.Boolean,System.Boolean>> s_typeImplementsInterface
void System::Data::Common::DataStorage::_set_s_typeImplementsInterface(::System::Collections::Concurrent::ConcurrentDictionary_2<::System::Type*, ::System::Tuple_4<bool, bool, bool, bool>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::_set_s_typeImplementsInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "DataStorage", "s_typeImplementsInterface", value));
}
// Autogenerated instance field getter
// Get instance field: readonly System.Data.DataColumn _column
[[deprecated("Use field access instead!")]] ::System::Data::DataColumn*& System::Data::Common::DataStorage::dyn__column() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::dyn__column");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_column"))->offset;
  return *reinterpret_cast<::System::Data::DataColumn**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Data.DataTable _table
[[deprecated("Use field access instead!")]] ::System::Data::DataTable*& System::Data::Common::DataStorage::dyn__table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::dyn__table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_table"))->offset;
  return *reinterpret_cast<::System::Data::DataTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Type _dataType
[[deprecated("Use field access instead!")]] ::System::Type*& System::Data::Common::DataStorage::dyn__dataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::dyn__dataType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Data.Common.StorageType _storageTypeCode
[[deprecated("Use field access instead!")]] ::System::Data::Common::StorageType& System::Data::Common::DataStorage::dyn__storageTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::dyn__storageTypeCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storageTypeCode"))->offset;
  return *reinterpret_cast<::System::Data::Common::StorageType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.BitArray _dbNullBits
[[deprecated("Use field access instead!")]] ::System::Collections::BitArray*& System::Data::Common::DataStorage::dyn__dbNullBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::dyn__dbNullBits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dbNullBits"))->offset;
  return *reinterpret_cast<::System::Collections::BitArray**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _defaultValue
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Data::Common::DataStorage::dyn__defaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::dyn__defaultValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Object _nullValue
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Data::Common::DataStorage::dyn__nullValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::dyn__nullValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nullValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Boolean _isCloneable
[[deprecated("Use field access instead!")]] bool& System::Data::Common::DataStorage::dyn__isCloneable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::dyn__isCloneable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isCloneable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Boolean _isCustomDefinedType
[[deprecated("Use field access instead!")]] bool& System::Data::Common::DataStorage::dyn__isCustomDefinedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::dyn__isCustomDefinedType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isCustomDefinedType"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Boolean _isStringType
[[deprecated("Use field access instead!")]] bool& System::Data::Common::DataStorage::dyn__isStringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::dyn__isStringType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isStringType"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Boolean _isValueType
[[deprecated("Use field access instead!")]] bool& System::Data::Common::DataStorage::dyn__isValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::dyn__isValueType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isValueType"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.DataStorage.get_DateTimeMode
::System::Data::DataSetDateTime System::Data::Common::DataStorage::get_DateTimeMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::get_DateTimeMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateTimeMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::DataSetDateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Common.DataStorage.get_FormatProvider
::System::IFormatProvider* System::Data::Common::DataStorage::get_FormatProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::get_FormatProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FormatProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IFormatProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.Data.Common.DataStorage..cctor
void System::Data::Common::DataStorage::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "DataStorage", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.Common.DataStorage.Aggregate
::Il2CppObject* System::Data::Common::DataStorage::Aggregate(::ArrayW<int> recordNos, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordNos, kind);
}
// Autogenerated method: System.Data.Common.DataStorage.AggregateCount
::Il2CppObject* System::Data::Common::DataStorage::AggregateCount(::ArrayW<int> recordNos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::AggregateCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AggregateCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordNos)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordNos);
}
// Autogenerated method: System.Data.Common.DataStorage.CompareBits
int System::Data::Common::DataStorage::CompareBits(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::CompareBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordNo1), ::il2cpp_utils::ExtractType(recordNo2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.DataStorage.Compare
int System::Data::Common::DataStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.DataStorage.CompareValueTo
int System::Data::Common::DataStorage::CompareValueTo(int recordNo1, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, value);
}
// Autogenerated method: System.Data.Common.DataStorage.ConvertValue
::Il2CppObject* System::Data::Common::DataStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.DataStorage.CopyBits
void System::Data::Common::DataStorage::CopyBits(int srcRecordNo, int dstRecordNo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::CopyBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(srcRecordNo), ::il2cpp_utils::ExtractType(dstRecordNo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, srcRecordNo, dstRecordNo);
}
// Autogenerated method: System.Data.Common.DataStorage.Copy
void System::Data::Common::DataStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.DataStorage.Get
::Il2CppObject* System::Data::Common::DataStorage::Get(int recordNo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordNo);
}
// Autogenerated method: System.Data.Common.DataStorage.GetBits
::Il2CppObject* System::Data::Common::DataStorage::GetBits(int recordNo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::GetBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordNo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordNo);
}
// Autogenerated method: System.Data.Common.DataStorage.GetStringLength
int System::Data::Common::DataStorage::GetStringLength(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::GetStringLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.DataStorage.HasValue
bool System::Data::Common::DataStorage::HasValue(int recordNo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::HasValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordNo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, recordNo);
}
// Autogenerated method: System.Data.Common.DataStorage.IsNull
bool System::Data::Common::DataStorage::IsNull(int recordNo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, recordNo);
}
// Autogenerated method: System.Data.Common.DataStorage.Set
void System::Data::Common::DataStorage::Set(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.DataStorage.SetNullBit
void System::Data::Common::DataStorage::SetNullBit(int recordNo, bool flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::SetNullBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNullBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordNo), ::il2cpp_utils::ExtractType(flag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo, flag);
}
// Autogenerated method: System.Data.Common.DataStorage.SetCapacity
void System::Data::Common::DataStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.DataStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::DataStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.DataStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::DataStorage::ConvertXmlToObject(::System::Xml::XmlReader* xmlReader, ::System::Xml::Serialization::XmlRootAttribute* xmlAttrib) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, xmlReader, xmlAttrib);
}
// Autogenerated method: System.Data.Common.DataStorage.ConvertObjectToXml
::StringW System::Data::Common::DataStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.DataStorage.ConvertObjectToXml
void System::Data::Common::DataStorage::ConvertObjectToXml(::Il2CppObject* value, ::System::Xml::XmlWriter* xmlWriter, ::System::Xml::Serialization::XmlRootAttribute* xmlAttrib) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, xmlWriter, xmlAttrib);
}
// Autogenerated method: System.Data.Common.DataStorage.CreateStorage
::System::Data::Common::DataStorage* System::Data::Common::DataStorage::CreateStorage(::System::Data::DataColumn* column, ::System::Type* dataType, ::System::Data::Common::StorageType typeCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::CreateStorage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "DataStorage", "CreateStorage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column), ::il2cpp_utils::ExtractType(dataType), ::il2cpp_utils::ExtractType(typeCode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Common::DataStorage*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, column, dataType, typeCode);
}
// Autogenerated method: System.Data.Common.DataStorage.GetStorageType
::System::Data::Common::StorageType System::Data::Common::DataStorage::GetStorageType(::System::Type* dataType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::GetStorageType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "DataStorage", "GetStorageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Common::StorageType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dataType);
}
// Autogenerated method: System.Data.Common.DataStorage.GetTypeStorage
::System::Type* System::Data::Common::DataStorage::GetTypeStorage(::System::Data::Common::StorageType storageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::GetTypeStorage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "DataStorage", "GetTypeStorage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(storageType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, storageType);
}
// Autogenerated method: System.Data.Common.DataStorage.IsTypeCustomType
bool System::Data::Common::DataStorage::IsTypeCustomType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::IsTypeCustomType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "DataStorage", "IsTypeCustomType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Data.Common.DataStorage.IsTypeCustomType
bool System::Data::Common::DataStorage::IsTypeCustomType(::System::Data::Common::StorageType typeCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::IsTypeCustomType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "DataStorage", "IsTypeCustomType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeCode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeCode);
}
// Autogenerated method: System.Data.Common.DataStorage.IsSqlType
bool System::Data::Common::DataStorage::IsSqlType(::System::Data::Common::StorageType storageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::IsSqlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "DataStorage", "IsSqlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(storageType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, storageType);
}
// Autogenerated method: System.Data.Common.DataStorage.IsSqlType
bool System::Data::Common::DataStorage::IsSqlType(::System::Type* dataType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::IsSqlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "DataStorage", "IsSqlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dataType);
}
// Autogenerated method: System.Data.Common.DataStorage.DetermineIfValueType
bool System::Data::Common::DataStorage::DetermineIfValueType(::System::Data::Common::StorageType typeCode, ::System::Type* dataType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::DetermineIfValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "DataStorage", "DetermineIfValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeCode), ::il2cpp_utils::ExtractType(dataType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeCode, dataType);
}
// Autogenerated method: System.Data.Common.DataStorage.ImplementsInterfaces
void System::Data::Common::DataStorage::ImplementsInterfaces(::System::Data::Common::StorageType typeCode, ::System::Type* dataType, ByRef<bool> sqlType, ByRef<bool> nullable, ByRef<bool> xmlSerializable, ByRef<bool> changeTracking, ByRef<bool> revertibleChangeTracking) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::ImplementsInterfaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "DataStorage", "ImplementsInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeCode), ::il2cpp_utils::ExtractType(dataType), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeCode, dataType, byref(sqlType), byref(nullable), byref(xmlSerializable), byref(changeTracking), byref(revertibleChangeTracking));
}
// Autogenerated method: System.Data.Common.DataStorage.InspectTypeForInterfaces
::System::Tuple_4<bool, bool, bool, bool>* System::Data::Common::DataStorage::InspectTypeForInterfaces(::System::Type* dataType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::InspectTypeForInterfaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "DataStorage", "InspectTypeForInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Tuple_4<bool, bool, bool, bool>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dataType);
}
// Autogenerated method: System.Data.Common.DataStorage.ImplementsINullableValue
bool System::Data::Common::DataStorage::ImplementsINullableValue(::System::Data::Common::StorageType typeCode, ::System::Type* dataType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::ImplementsINullableValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "DataStorage", "ImplementsINullableValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeCode), ::il2cpp_utils::ExtractType(dataType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeCode, dataType);
}
// Autogenerated method: System.Data.Common.DataStorage.IsObjectNull
bool System::Data::Common::DataStorage::IsObjectNull(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::IsObjectNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "DataStorage", "IsObjectNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.DataStorage.IsObjectSqlNull
bool System::Data::Common::DataStorage::IsObjectSqlNull(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::IsObjectSqlNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "DataStorage", "IsObjectSqlNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.DataStorage.GetEmptyStorageInternal
::Il2CppObject* System::Data::Common::DataStorage::GetEmptyStorageInternal(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::GetEmptyStorageInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEmptyStorageInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.DataStorage.CopyValueInternal
void System::Data::Common::DataStorage::CopyValueInternal(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::CopyValueInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyValueInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record), ::il2cpp_utils::ExtractType(store), ::il2cpp_utils::ExtractType(nullbits), ::il2cpp_utils::ExtractType(storeIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.DataStorage.SetStorageInternal
void System::Data::Common::DataStorage::SetStorageInternal(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::SetStorageInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStorageInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(store), ::il2cpp_utils::ExtractType(nullbits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated method: System.Data.Common.DataStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::DataStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.DataStorage.CopyValue
void System::Data::Common::DataStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.DataStorage.SetStorage
void System::Data::Common::DataStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated method: System.Data.Common.DataStorage.SetNullStorage
void System::Data::Common::DataStorage::SetNullStorage(::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::SetNullStorage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNullStorage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nullbits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nullbits);
}
// Autogenerated method: System.Data.Common.DataStorage.GetType
::System::Type* System::Data::Common::DataStorage::GetType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "DataStorage", "GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.DataStorage.GetQualifiedName
::StringW System::Data::Common::DataStorage::GetQualifiedName(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DataStorage::GetQualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "DataStorage", "GetQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.DateTimeOffsetStorage
#include "System/Data/Common/DateTimeOffsetStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.DateTimeOffset s_defaultValue
::System::DateTimeOffset System::Data::Common::DateTimeOffsetStorage::_get_s_defaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeOffsetStorage::_get_s_defaultValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTimeOffset>("System.Data.Common", "DateTimeOffsetStorage", "s_defaultValue"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.DateTimeOffset s_defaultValue
void System::Data::Common::DateTimeOffsetStorage::_set_s_defaultValue(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeOffsetStorage::_set_s_defaultValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "DateTimeOffsetStorage", "s_defaultValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.DateTimeOffset[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::DateTimeOffset>& System::Data::Common::DateTimeOffsetStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeOffsetStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::DateTimeOffset>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.DateTimeOffsetStorage..cctor
void System::Data::Common::DateTimeOffsetStorage::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeOffsetStorage::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "DateTimeOffsetStorage", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.Common.DateTimeOffsetStorage.Aggregate
::Il2CppObject* System::Data::Common::DateTimeOffsetStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeOffsetStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.DateTimeOffsetStorage.Compare
int System::Data::Common::DateTimeOffsetStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeOffsetStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.DateTimeOffsetStorage.CompareValueTo
int System::Data::Common::DateTimeOffsetStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeOffsetStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.DateTimeOffsetStorage.ConvertValue
::Il2CppObject* System::Data::Common::DateTimeOffsetStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeOffsetStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.DateTimeOffsetStorage.Copy
void System::Data::Common::DateTimeOffsetStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeOffsetStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.DateTimeOffsetStorage.Get
::Il2CppObject* System::Data::Common::DateTimeOffsetStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeOffsetStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.DateTimeOffsetStorage.Set
void System::Data::Common::DateTimeOffsetStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeOffsetStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.DateTimeOffsetStorage.SetCapacity
void System::Data::Common::DateTimeOffsetStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeOffsetStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.DateTimeOffsetStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::DateTimeOffsetStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeOffsetStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.DateTimeOffsetStorage.ConvertObjectToXml
::StringW System::Data::Common::DateTimeOffsetStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeOffsetStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.DateTimeOffsetStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::DateTimeOffsetStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeOffsetStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.DateTimeOffsetStorage.CopyValue
void System::Data::Common::DateTimeOffsetStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeOffsetStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.DateTimeOffsetStorage.SetStorage
void System::Data::Common::DateTimeOffsetStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeOffsetStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.DateTimeStorage
#include "System/Data/Common/DateTimeStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.DateTime s_defaultValue
::System::DateTime System::Data::Common::DateTimeStorage::_get_s_defaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeStorage::_get_s_defaultValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System.Data.Common", "DateTimeStorage", "s_defaultValue"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.DateTime s_defaultValue
void System::Data::Common::DateTimeStorage::_set_s_defaultValue(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeStorage::_set_s_defaultValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "DateTimeStorage", "s_defaultValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::DateTime>& System::Data::Common::DateTimeStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::DateTime>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.DateTimeStorage..cctor
void System::Data::Common::DateTimeStorage::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeStorage::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "DateTimeStorage", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.Common.DateTimeStorage.Aggregate
::Il2CppObject* System::Data::Common::DateTimeStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.DateTimeStorage.Compare
int System::Data::Common::DateTimeStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.DateTimeStorage.CompareValueTo
int System::Data::Common::DateTimeStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.DateTimeStorage.ConvertValue
::Il2CppObject* System::Data::Common::DateTimeStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.DateTimeStorage.Copy
void System::Data::Common::DateTimeStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.DateTimeStorage.Get
::Il2CppObject* System::Data::Common::DateTimeStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.DateTimeStorage.Set
void System::Data::Common::DateTimeStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.DateTimeStorage.SetCapacity
void System::Data::Common::DateTimeStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.DateTimeStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::DateTimeStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.DateTimeStorage.ConvertObjectToXml
::StringW System::Data::Common::DateTimeStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.DateTimeStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::DateTimeStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.DateTimeStorage.CopyValue
void System::Data::Common::DateTimeStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.DateTimeStorage.SetStorage
void System::Data::Common::DateTimeStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DateTimeStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.DecimalStorage
#include "System/Data/Common/DecimalStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Decimal s_defaultValue
::System::Decimal System::Data::Common::DecimalStorage::_get_s_defaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DecimalStorage::_get_s_defaultValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Decimal>("System.Data.Common", "DecimalStorage", "s_defaultValue"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Decimal s_defaultValue
void System::Data::Common::DecimalStorage::_set_s_defaultValue(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DecimalStorage::_set_s_defaultValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "DecimalStorage", "s_defaultValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Decimal[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Decimal>& System::Data::Common::DecimalStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DecimalStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Decimal>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.DecimalStorage.Aggregate
::Il2CppObject* System::Data::Common::DecimalStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DecimalStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.DecimalStorage.Compare
int System::Data::Common::DecimalStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DecimalStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.DecimalStorage.CompareValueTo
int System::Data::Common::DecimalStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DecimalStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.DecimalStorage.ConvertValue
::Il2CppObject* System::Data::Common::DecimalStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DecimalStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.DecimalStorage.Copy
void System::Data::Common::DecimalStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DecimalStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.DecimalStorage.Get
::Il2CppObject* System::Data::Common::DecimalStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DecimalStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.DecimalStorage.Set
void System::Data::Common::DecimalStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DecimalStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.DecimalStorage.SetCapacity
void System::Data::Common::DecimalStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DecimalStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.DecimalStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::DecimalStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DecimalStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.DecimalStorage.ConvertObjectToXml
::StringW System::Data::Common::DecimalStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DecimalStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.DecimalStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::DecimalStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DecimalStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.DecimalStorage.CopyValue
void System::Data::Common::DecimalStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DecimalStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.DecimalStorage.SetStorage
void System::Data::Common::DecimalStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DecimalStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.DoubleStorage
#include "System/Data/Common/DoubleStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Double[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<double>& System::Data::Common::DoubleStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DoubleStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<double>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.DoubleStorage.Aggregate
::Il2CppObject* System::Data::Common::DoubleStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DoubleStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.DoubleStorage.Compare
int System::Data::Common::DoubleStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DoubleStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.DoubleStorage.CompareValueTo
int System::Data::Common::DoubleStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DoubleStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.DoubleStorage.ConvertValue
::Il2CppObject* System::Data::Common::DoubleStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DoubleStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.DoubleStorage.Copy
void System::Data::Common::DoubleStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DoubleStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.DoubleStorage.Get
::Il2CppObject* System::Data::Common::DoubleStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DoubleStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.DoubleStorage.Set
void System::Data::Common::DoubleStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DoubleStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.DoubleStorage.SetCapacity
void System::Data::Common::DoubleStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DoubleStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.DoubleStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::DoubleStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DoubleStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.DoubleStorage.ConvertObjectToXml
::StringW System::Data::Common::DoubleStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DoubleStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.DoubleStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::DoubleStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DoubleStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.DoubleStorage.CopyValue
void System::Data::Common::DoubleStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DoubleStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.DoubleStorage.SetStorage
void System::Data::Common::DoubleStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::DoubleStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.Int16Storage
#include "System/Data/Common/Int16Storage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int16[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& System::Data::Common::Int16Storage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int16Storage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.Int16Storage.Aggregate
::Il2CppObject* System::Data::Common::Int16Storage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int16Storage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.Int16Storage.Compare
int System::Data::Common::Int16Storage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int16Storage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.Int16Storage.CompareValueTo
int System::Data::Common::Int16Storage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int16Storage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.Int16Storage.ConvertValue
::Il2CppObject* System::Data::Common::Int16Storage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int16Storage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.Int16Storage.Copy
void System::Data::Common::Int16Storage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int16Storage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.Int16Storage.Get
::Il2CppObject* System::Data::Common::Int16Storage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int16Storage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.Int16Storage.Set
void System::Data::Common::Int16Storage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int16Storage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.Int16Storage.SetCapacity
void System::Data::Common::Int16Storage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int16Storage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.Int16Storage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::Int16Storage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int16Storage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.Int16Storage.ConvertObjectToXml
::StringW System::Data::Common::Int16Storage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int16Storage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.Int16Storage.GetEmptyStorage
::Il2CppObject* System::Data::Common::Int16Storage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int16Storage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.Int16Storage.CopyValue
void System::Data::Common::Int16Storage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int16Storage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.Int16Storage.SetStorage
void System::Data::Common::Int16Storage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int16Storage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.Int32Storage
#include "System/Data/Common/Int32Storage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Data::Common::Int32Storage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int32Storage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.Int32Storage.Aggregate
::Il2CppObject* System::Data::Common::Int32Storage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int32Storage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.Int32Storage.Compare
int System::Data::Common::Int32Storage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int32Storage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.Int32Storage.CompareValueTo
int System::Data::Common::Int32Storage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int32Storage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.Int32Storage.ConvertValue
::Il2CppObject* System::Data::Common::Int32Storage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int32Storage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.Int32Storage.Copy
void System::Data::Common::Int32Storage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int32Storage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.Int32Storage.Get
::Il2CppObject* System::Data::Common::Int32Storage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int32Storage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.Int32Storage.Set
void System::Data::Common::Int32Storage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int32Storage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.Int32Storage.SetCapacity
void System::Data::Common::Int32Storage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int32Storage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.Int32Storage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::Int32Storage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int32Storage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.Int32Storage.ConvertObjectToXml
::StringW System::Data::Common::Int32Storage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int32Storage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.Int32Storage.GetEmptyStorage
::Il2CppObject* System::Data::Common::Int32Storage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int32Storage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.Int32Storage.CopyValue
void System::Data::Common::Int32Storage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int32Storage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.Int32Storage.SetStorage
void System::Data::Common::Int32Storage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int32Storage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.Int64Storage
#include "System/Data/Common/Int64Storage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int64[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<int64_t>& System::Data::Common::Int64Storage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int64Storage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.Int64Storage.Aggregate
::Il2CppObject* System::Data::Common::Int64Storage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int64Storage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.Int64Storage.Compare
int System::Data::Common::Int64Storage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int64Storage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.Int64Storage.CompareValueTo
int System::Data::Common::Int64Storage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int64Storage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.Int64Storage.ConvertValue
::Il2CppObject* System::Data::Common::Int64Storage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int64Storage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.Int64Storage.Copy
void System::Data::Common::Int64Storage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int64Storage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.Int64Storage.Get
::Il2CppObject* System::Data::Common::Int64Storage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int64Storage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.Int64Storage.Set
void System::Data::Common::Int64Storage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int64Storage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.Int64Storage.SetCapacity
void System::Data::Common::Int64Storage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int64Storage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.Int64Storage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::Int64Storage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int64Storage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.Int64Storage.ConvertObjectToXml
::StringW System::Data::Common::Int64Storage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int64Storage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.Int64Storage.GetEmptyStorage
::Il2CppObject* System::Data::Common::Int64Storage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int64Storage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.Int64Storage.CopyValue
void System::Data::Common::Int64Storage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int64Storage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.Int64Storage.SetStorage
void System::Data::Common::Int64Storage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::Int64Storage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.ObjectStorage
#include "System/Data/Common/ObjectStorage.hpp"
// Including type: System.Data.Common.ObjectStorage/System.Data.Common.Families
#include "System/Data/Common/ObjectStorage_Families.hpp"
// Including type: System.Data.Common.ObjectStorage/System.Data.Common.TempAssemblyComparer
#include "System/Data/Common/ObjectStorage_TempAssemblyComparer.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Serialization.XmlRootAttribute
#include "System/Xml/Serialization/XmlRootAttribute.hpp"
// Including type: System.Xml.Serialization.XmlSerializer
#include "System/Xml/Serialization/XmlSerializer.hpp"
// Including type: System.Xml.Serialization.XmlSerializerFactory
#include "System/Xml/Serialization/XmlSerializerFactory.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Object s_defaultValue
::Il2CppObject* System::Data::Common::ObjectStorage::_get_s_defaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::_get_s_defaultValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Data.Common", "ObjectStorage", "s_defaultValue"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object s_defaultValue
void System::Data::Common::ObjectStorage::_set_s_defaultValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::_set_s_defaultValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ObjectStorage", "s_defaultValue", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object s_tempAssemblyCacheLock
::Il2CppObject* System::Data::Common::ObjectStorage::_get_s_tempAssemblyCacheLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::_get_s_tempAssemblyCacheLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Data.Common", "ObjectStorage", "s_tempAssemblyCacheLock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object s_tempAssemblyCacheLock
void System::Data::Common::ObjectStorage::_set_s_tempAssemblyCacheLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::_set_s_tempAssemblyCacheLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ObjectStorage", "s_tempAssemblyCacheLock", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Collections.Generic.KeyValuePair`2<System.Type,System.Xml.Serialization.XmlRootAttribute>,System.Xml.Serialization.XmlSerializer> s_tempAssemblyCache
::System::Collections::Generic::Dictionary_2<::System::Collections::Generic::KeyValuePair_2<::System::Type*, ::System::Xml::Serialization::XmlRootAttribute*>, ::System::Xml::Serialization::XmlSerializer*>* System::Data::Common::ObjectStorage::_get_s_tempAssemblyCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::_get_s_tempAssemblyCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Collections::Generic::KeyValuePair_2<::System::Type*, ::System::Xml::Serialization::XmlRootAttribute*>, ::System::Xml::Serialization::XmlSerializer*>*>("System.Data.Common", "ObjectStorage", "s_tempAssemblyCache")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Collections.Generic.KeyValuePair`2<System.Type,System.Xml.Serialization.XmlRootAttribute>,System.Xml.Serialization.XmlSerializer> s_tempAssemblyCache
void System::Data::Common::ObjectStorage::_set_s_tempAssemblyCache(::System::Collections::Generic::Dictionary_2<::System::Collections::Generic::KeyValuePair_2<::System::Type*, ::System::Xml::Serialization::XmlRootAttribute*>, ::System::Xml::Serialization::XmlSerializer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::_set_s_tempAssemblyCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ObjectStorage", "s_tempAssemblyCache", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Serialization.XmlSerializerFactory s_serializerFactory
::System::Xml::Serialization::XmlSerializerFactory* System::Data::Common::ObjectStorage::_get_s_serializerFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::_get_s_serializerFactory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Serialization::XmlSerializerFactory*>("System.Data.Common", "ObjectStorage", "s_serializerFactory"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Serialization.XmlSerializerFactory s_serializerFactory
void System::Data::Common::ObjectStorage::_set_s_serializerFactory(::System::Xml::Serialization::XmlSerializerFactory* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::_set_s_serializerFactory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ObjectStorage", "s_serializerFactory", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& System::Data::Common::ObjectStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _implementsIXmlSerializable
[[deprecated("Use field access instead!")]] bool& System::Data::Common::ObjectStorage::dyn__implementsIXmlSerializable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::dyn__implementsIXmlSerializable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_implementsIXmlSerializable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.ObjectStorage.CompareTo
int System::Data::Common::ObjectStorage::CompareTo(::Il2CppObject* valueNo1, ::Il2CppObject* valueNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::CompareTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueNo1), ::il2cpp_utils::ExtractType(valueNo2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, valueNo1, valueNo2);
}
// Autogenerated method: System.Data.Common.ObjectStorage.CompareWithFamilies
int System::Data::Common::ObjectStorage::CompareWithFamilies(::Il2CppObject* valueNo1, ::Il2CppObject* valueNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::CompareWithFamilies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareWithFamilies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueNo1), ::il2cpp_utils::ExtractType(valueNo2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, valueNo1, valueNo2);
}
// Autogenerated method: System.Data.Common.ObjectStorage.GetFamily
::System::Data::Common::ObjectStorage::Families System::Data::Common::ObjectStorage::GetFamily(::System::Type* dataType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::GetFamily");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFamily", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::Common::ObjectStorage::Families, false>(this, ___internal__method, dataType);
}
// Autogenerated method: System.Data.Common.ObjectStorage.VerifyIDynamicMetaObjectProvider
void System::Data::Common::ObjectStorage::VerifyIDynamicMetaObjectProvider(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::VerifyIDynamicMetaObjectProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ObjectStorage", "VerifyIDynamicMetaObjectProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Data.Common.ObjectStorage.GetXmlSerializer
::System::Xml::Serialization::XmlSerializer* System::Data::Common::ObjectStorage::GetXmlSerializer(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::GetXmlSerializer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ObjectStorage", "GetXmlSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlSerializer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Data.Common.ObjectStorage.GetXmlSerializer
::System::Xml::Serialization::XmlSerializer* System::Data::Common::ObjectStorage::GetXmlSerializer(::System::Type* type, ::System::Xml::Serialization::XmlRootAttribute* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::GetXmlSerializer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ObjectStorage", "GetXmlSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(attribute)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlSerializer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, attribute);
}
// Autogenerated method: System.Data.Common.ObjectStorage..cctor
void System::Data::Common::ObjectStorage::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ObjectStorage", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.Common.ObjectStorage.Aggregate
::Il2CppObject* System::Data::Common::ObjectStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.ObjectStorage.Compare
int System::Data::Common::ObjectStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.ObjectStorage.CompareValueTo
int System::Data::Common::ObjectStorage::CompareValueTo(int recordNo1, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, value);
}
// Autogenerated method: System.Data.Common.ObjectStorage.Copy
void System::Data::Common::ObjectStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.ObjectStorage.Get
::Il2CppObject* System::Data::Common::ObjectStorage::Get(int recordNo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordNo);
}
// Autogenerated method: System.Data.Common.ObjectStorage.IsNull
bool System::Data::Common::ObjectStorage::IsNull(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.ObjectStorage.Set
void System::Data::Common::ObjectStorage::Set(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.ObjectStorage.SetCapacity
void System::Data::Common::ObjectStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.ObjectStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::ObjectStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.ObjectStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::ObjectStorage::ConvertXmlToObject(::System::Xml::XmlReader* xmlReader, ::System::Xml::Serialization::XmlRootAttribute* xmlAttrib) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, xmlReader, xmlAttrib);
}
// Autogenerated method: System.Data.Common.ObjectStorage.ConvertObjectToXml
::StringW System::Data::Common::ObjectStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.ObjectStorage.ConvertObjectToXml
void System::Data::Common::ObjectStorage::ConvertObjectToXml(::Il2CppObject* value, ::System::Xml::XmlWriter* xmlWriter, ::System::Xml::Serialization::XmlRootAttribute* xmlAttrib) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, xmlWriter, xmlAttrib);
}
// Autogenerated method: System.Data.Common.ObjectStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::ObjectStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.ObjectStorage.CopyValue
void System::Data::Common::ObjectStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.ObjectStorage.SetStorage
void System::Data::Common::ObjectStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.Common.ObjectStorage/System.Data.Common.Families
#include "System/Data/Common/ObjectStorage_Families.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Data.Common.ObjectStorage/System.Data.Common.Families DATETIME
::System::Data::Common::ObjectStorage::Families System::Data::Common::ObjectStorage::Families::_get_DATETIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::Families::_get_DATETIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::ObjectStorage::Families>("System.Data.Common", "ObjectStorage/Families", "DATETIME"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.ObjectStorage/System.Data.Common.Families DATETIME
void System::Data::Common::ObjectStorage::Families::_set_DATETIME(::System::Data::Common::ObjectStorage::Families value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::Families::_set_DATETIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ObjectStorage/Families", "DATETIME", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.ObjectStorage/System.Data.Common.Families NUMBER
::System::Data::Common::ObjectStorage::Families System::Data::Common::ObjectStorage::Families::_get_NUMBER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::Families::_get_NUMBER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::ObjectStorage::Families>("System.Data.Common", "ObjectStorage/Families", "NUMBER"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.ObjectStorage/System.Data.Common.Families NUMBER
void System::Data::Common::ObjectStorage::Families::_set_NUMBER(::System::Data::Common::ObjectStorage::Families value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::Families::_set_NUMBER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ObjectStorage/Families", "NUMBER", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.ObjectStorage/System.Data.Common.Families STRING
::System::Data::Common::ObjectStorage::Families System::Data::Common::ObjectStorage::Families::_get_STRING() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::Families::_get_STRING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::ObjectStorage::Families>("System.Data.Common", "ObjectStorage/Families", "STRING"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.ObjectStorage/System.Data.Common.Families STRING
void System::Data::Common::ObjectStorage::Families::_set_STRING(::System::Data::Common::ObjectStorage::Families value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::Families::_set_STRING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ObjectStorage/Families", "STRING", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.ObjectStorage/System.Data.Common.Families BOOLEAN
::System::Data::Common::ObjectStorage::Families System::Data::Common::ObjectStorage::Families::_get_BOOLEAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::Families::_get_BOOLEAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::ObjectStorage::Families>("System.Data.Common", "ObjectStorage/Families", "BOOLEAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.ObjectStorage/System.Data.Common.Families BOOLEAN
void System::Data::Common::ObjectStorage::Families::_set_BOOLEAN(::System::Data::Common::ObjectStorage::Families value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::Families::_set_BOOLEAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ObjectStorage/Families", "BOOLEAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Data.Common.ObjectStorage/System.Data.Common.Families ARRAY
::System::Data::Common::ObjectStorage::Families System::Data::Common::ObjectStorage::Families::_get_ARRAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::Families::_get_ARRAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Data::Common::ObjectStorage::Families>("System.Data.Common", "ObjectStorage/Families", "ARRAY"));
}
// Autogenerated static field setter
// Set static field: static public System.Data.Common.ObjectStorage/System.Data.Common.Families ARRAY
void System::Data::Common::ObjectStorage::Families::_set_ARRAY(::System::Data::Common::ObjectStorage::Families value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::Families::_set_ARRAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ObjectStorage/Families", "ARRAY", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Data::Common::ObjectStorage::Families::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::Families::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Data.Common.ObjectStorage/System.Data.Common.TempAssemblyComparer
#include "System/Data/Common/ObjectStorage_TempAssemblyComparer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Serialization.XmlRootAttribute
#include "System/Xml/Serialization/XmlRootAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.IEqualityComparer`1<System.Collections.Generic.KeyValuePair`2<System.Type,System.Xml.Serialization.XmlRootAttribute>> s_default
::System::Collections::Generic::IEqualityComparer_1<::System::Collections::Generic::KeyValuePair_2<::System::Type*, ::System::Xml::Serialization::XmlRootAttribute*>>* System::Data::Common::ObjectStorage::TempAssemblyComparer::_get_s_default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::TempAssemblyComparer::_get_s_default");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::IEqualityComparer_1<::System::Collections::Generic::KeyValuePair_2<::System::Type*, ::System::Xml::Serialization::XmlRootAttribute*>>*>("System.Data.Common", "ObjectStorage/TempAssemblyComparer", "s_default")));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.IEqualityComparer`1<System.Collections.Generic.KeyValuePair`2<System.Type,System.Xml.Serialization.XmlRootAttribute>> s_default
void System::Data::Common::ObjectStorage::TempAssemblyComparer::_set_s_default(::System::Collections::Generic::IEqualityComparer_1<::System::Collections::Generic::KeyValuePair_2<::System::Type*, ::System::Xml::Serialization::XmlRootAttribute*>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::TempAssemblyComparer::_set_s_default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "ObjectStorage/TempAssemblyComparer", "s_default", value));
}
// Autogenerated method: System.Data.Common.ObjectStorage/System.Data.Common.TempAssemblyComparer..cctor
void System::Data::Common::ObjectStorage::TempAssemblyComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::TempAssemblyComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "ObjectStorage/TempAssemblyComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.Common.ObjectStorage/System.Data.Common.TempAssemblyComparer.Equals
bool System::Data::Common::ObjectStorage::TempAssemblyComparer::Equals(::System::Collections::Generic::KeyValuePair_2<::System::Type*, ::System::Xml::Serialization::XmlRootAttribute*> x, ::System::Collections::Generic::KeyValuePair_2<::System::Type*, ::System::Xml::Serialization::XmlRootAttribute*> y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::TempAssemblyComparer::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::ObjectStorage::TempAssemblyComparer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Data.Common.ObjectStorage/System.Data.Common.TempAssemblyComparer.GetHashCode
int System::Data::Common::ObjectStorage::TempAssemblyComparer::GetHashCode(::System::Collections::Generic::KeyValuePair_2<::System::Type*, ::System::Xml::Serialization::XmlRootAttribute*> obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::ObjectStorage::TempAssemblyComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::ObjectStorage::TempAssemblyComparer*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.SByteStorage
#include "System/Data/Common/SByteStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.SByte[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<int8_t>& System::Data::Common::SByteStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SByteStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<int8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.SByteStorage.Aggregate
::Il2CppObject* System::Data::Common::SByteStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SByteStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.SByteStorage.Compare
int System::Data::Common::SByteStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SByteStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SByteStorage.CompareValueTo
int System::Data::Common::SByteStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SByteStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.SByteStorage.ConvertValue
::Il2CppObject* System::Data::Common::SByteStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SByteStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SByteStorage.Copy
void System::Data::Common::SByteStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SByteStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SByteStorage.Get
::Il2CppObject* System::Data::Common::SByteStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SByteStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SByteStorage.Set
void System::Data::Common::SByteStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SByteStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.SByteStorage.SetCapacity
void System::Data::Common::SByteStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SByteStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.SByteStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::SByteStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SByteStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.SByteStorage.ConvertObjectToXml
::StringW System::Data::Common::SByteStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SByteStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SByteStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::SByteStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SByteStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.SByteStorage.CopyValue
void System::Data::Common::SByteStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SByteStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.SByteStorage.SetStorage
void System::Data::Common::SByteStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SByteStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.SqlConvert
#include "System/Data/Common/SqlConvert.hpp"
// Including type: System.Data.SqlTypes.SqlByte
#include "System/Data/SqlTypes/SqlByte.hpp"
// Including type: System.Data.SqlTypes.SqlInt16
#include "System/Data/SqlTypes/SqlInt16.hpp"
// Including type: System.Data.SqlTypes.SqlInt32
#include "System/Data/SqlTypes/SqlInt32.hpp"
// Including type: System.Data.SqlTypes.SqlInt64
#include "System/Data/SqlTypes/SqlInt64.hpp"
// Including type: System.Data.SqlTypes.SqlDouble
#include "System/Data/SqlTypes/SqlDouble.hpp"
// Including type: System.Data.SqlTypes.SqlDecimal
#include "System/Data/SqlTypes/SqlDecimal.hpp"
// Including type: System.Data.SqlTypes.SqlSingle
#include "System/Data/SqlTypes/SqlSingle.hpp"
// Including type: System.Data.SqlTypes.SqlMoney
#include "System/Data/SqlTypes/SqlMoney.hpp"
// Including type: System.Data.SqlTypes.SqlDateTime
#include "System/Data/SqlTypes/SqlDateTime.hpp"
// Including type: System.Data.SqlTypes.SqlBoolean
#include "System/Data/SqlTypes/SqlBoolean.hpp"
// Including type: System.Data.SqlTypes.SqlGuid
#include "System/Data/SqlTypes/SqlGuid.hpp"
// Including type: System.Data.SqlTypes.SqlBinary
#include "System/Data/SqlTypes/SqlBinary.hpp"
// Including type: System.Data.SqlTypes.SqlString
#include "System/Data/SqlTypes/SqlString.hpp"
// Including type: System.Data.SqlTypes.SqlChars
#include "System/Data/SqlTypes/SqlChars.hpp"
// Including type: System.Data.SqlTypes.SqlBytes
#include "System/Data/SqlTypes/SqlBytes.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Data.Common.StorageType
#include "System/Data/Common/StorageType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Data.Common.SqlConvert.ConvertToSqlByte
::System::Data::SqlTypes::SqlByte System::Data::Common::SqlConvert::ConvertToSqlByte(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlConvert::ConvertToSqlByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlConvert", "ConvertToSqlByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlByte, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlConvert.ConvertToSqlInt16
::System::Data::SqlTypes::SqlInt16 System::Data::Common::SqlConvert::ConvertToSqlInt16(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlConvert::ConvertToSqlInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlConvert", "ConvertToSqlInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt16, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlConvert.ConvertToSqlInt32
::System::Data::SqlTypes::SqlInt32 System::Data::Common::SqlConvert::ConvertToSqlInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlConvert::ConvertToSqlInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlConvert", "ConvertToSqlInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt32, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlConvert.ConvertToSqlInt64
::System::Data::SqlTypes::SqlInt64 System::Data::Common::SqlConvert::ConvertToSqlInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlConvert::ConvertToSqlInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlConvert", "ConvertToSqlInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlInt64, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlConvert.ConvertToSqlDouble
::System::Data::SqlTypes::SqlDouble System::Data::Common::SqlConvert::ConvertToSqlDouble(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlConvert::ConvertToSqlDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlConvert", "ConvertToSqlDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDouble, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlConvert.ConvertToSqlDecimal
::System::Data::SqlTypes::SqlDecimal System::Data::Common::SqlConvert::ConvertToSqlDecimal(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlConvert::ConvertToSqlDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlConvert", "ConvertToSqlDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDecimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlConvert.ConvertToSqlSingle
::System::Data::SqlTypes::SqlSingle System::Data::Common::SqlConvert::ConvertToSqlSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlConvert::ConvertToSqlSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlConvert", "ConvertToSqlSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlSingle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlConvert.ConvertToSqlMoney
::System::Data::SqlTypes::SqlMoney System::Data::Common::SqlConvert::ConvertToSqlMoney(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlConvert::ConvertToSqlMoney");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlConvert", "ConvertToSqlMoney", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlMoney, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlConvert.ConvertToSqlDateTime
::System::Data::SqlTypes::SqlDateTime System::Data::Common::SqlConvert::ConvertToSqlDateTime(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlConvert::ConvertToSqlDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlConvert", "ConvertToSqlDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlDateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlConvert.ConvertToSqlBoolean
::System::Data::SqlTypes::SqlBoolean System::Data::Common::SqlConvert::ConvertToSqlBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlConvert::ConvertToSqlBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlConvert", "ConvertToSqlBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBoolean, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlConvert.ConvertToSqlGuid
::System::Data::SqlTypes::SqlGuid System::Data::Common::SqlConvert::ConvertToSqlGuid(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlConvert::ConvertToSqlGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlConvert", "ConvertToSqlGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlGuid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlConvert.ConvertToSqlBinary
::System::Data::SqlTypes::SqlBinary System::Data::Common::SqlConvert::ConvertToSqlBinary(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlConvert::ConvertToSqlBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlConvert", "ConvertToSqlBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBinary, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlConvert.ConvertToSqlString
::System::Data::SqlTypes::SqlString System::Data::Common::SqlConvert::ConvertToSqlString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlConvert::ConvertToSqlString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlConvert", "ConvertToSqlString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlString, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlConvert.ConvertToSqlChars
::System::Data::SqlTypes::SqlChars* System::Data::Common::SqlConvert::ConvertToSqlChars(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlConvert::ConvertToSqlChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlConvert", "ConvertToSqlChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlChars*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlConvert.ConvertToSqlBytes
::System::Data::SqlTypes::SqlBytes* System::Data::Common::SqlConvert::ConvertToSqlBytes(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlConvert::ConvertToSqlBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlConvert", "ConvertToSqlBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Data::SqlTypes::SqlBytes*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlConvert.ConvertStringToDateTimeOffset
::System::DateTimeOffset System::Data::Common::SqlConvert::ConvertStringToDateTimeOffset(::StringW value, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlConvert::ConvertStringToDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlConvert", "ConvertStringToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, formatProvider);
}
// Autogenerated method: System.Data.Common.SqlConvert.ChangeTypeForDefaultValue
::Il2CppObject* System::Data::Common::SqlConvert::ChangeTypeForDefaultValue(::Il2CppObject* value, ::System::Type* type, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlConvert::ChangeTypeForDefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlConvert", "ChangeTypeForDefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, type, formatProvider);
}
// Autogenerated method: System.Data.Common.SqlConvert.ChangeType2
::Il2CppObject* System::Data::Common::SqlConvert::ChangeType2(::Il2CppObject* value, ::System::Data::Common::StorageType stype, ::System::Type* type, ::System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlConvert::ChangeType2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlConvert", "ChangeType2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(stype), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(formatProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, stype, type, formatProvider);
}
// Autogenerated method: System.Data.Common.SqlConvert.ChangeTypeForXML
::Il2CppObject* System::Data::Common::SqlConvert::ChangeTypeForXML(::Il2CppObject* value, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlConvert::ChangeTypeForXML");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlConvert", "ChangeTypeForXML", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.SqlBinaryStorage
#include "System/Data/Common/SqlBinaryStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.SqlTypes.SqlBinary[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::SqlTypes::SqlBinary>& System::Data::Common::SqlBinaryStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBinaryStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::SqlTypes::SqlBinary>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.SqlBinaryStorage.Aggregate
::Il2CppObject* System::Data::Common::SqlBinaryStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBinaryStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.SqlBinaryStorage.Compare
int System::Data::Common::SqlBinaryStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBinaryStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlBinaryStorage.CompareValueTo
int System::Data::Common::SqlBinaryStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBinaryStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.SqlBinaryStorage.ConvertValue
::Il2CppObject* System::Data::Common::SqlBinaryStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBinaryStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlBinaryStorage.Copy
void System::Data::Common::SqlBinaryStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBinaryStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlBinaryStorage.Get
::Il2CppObject* System::Data::Common::SqlBinaryStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBinaryStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlBinaryStorage.IsNull
bool System::Data::Common::SqlBinaryStorage::IsNull(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBinaryStorage::IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlBinaryStorage.Set
void System::Data::Common::SqlBinaryStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBinaryStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.SqlBinaryStorage.SetCapacity
void System::Data::Common::SqlBinaryStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBinaryStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.SqlBinaryStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::SqlBinaryStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBinaryStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.SqlBinaryStorage.ConvertObjectToXml
::StringW System::Data::Common::SqlBinaryStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBinaryStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlBinaryStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::SqlBinaryStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBinaryStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.SqlBinaryStorage.CopyValue
void System::Data::Common::SqlBinaryStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBinaryStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.SqlBinaryStorage.SetStorage
void System::Data::Common::SqlBinaryStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBinaryStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.SqlByteStorage
#include "System/Data/Common/SqlByteStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.SqlTypes.SqlByte[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::SqlTypes::SqlByte>& System::Data::Common::SqlByteStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlByteStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::SqlTypes::SqlByte>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.SqlByteStorage.Aggregate
::Il2CppObject* System::Data::Common::SqlByteStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlByteStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.SqlByteStorage.Compare
int System::Data::Common::SqlByteStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlByteStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlByteStorage.CompareValueTo
int System::Data::Common::SqlByteStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlByteStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.SqlByteStorage.ConvertValue
::Il2CppObject* System::Data::Common::SqlByteStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlByteStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlByteStorage.Copy
void System::Data::Common::SqlByteStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlByteStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlByteStorage.Get
::Il2CppObject* System::Data::Common::SqlByteStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlByteStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlByteStorage.IsNull
bool System::Data::Common::SqlByteStorage::IsNull(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlByteStorage::IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlByteStorage.Set
void System::Data::Common::SqlByteStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlByteStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.SqlByteStorage.SetCapacity
void System::Data::Common::SqlByteStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlByteStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.SqlByteStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::SqlByteStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlByteStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.SqlByteStorage.ConvertObjectToXml
::StringW System::Data::Common::SqlByteStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlByteStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlByteStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::SqlByteStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlByteStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.SqlByteStorage.CopyValue
void System::Data::Common::SqlByteStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlByteStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.SqlByteStorage.SetStorage
void System::Data::Common::SqlByteStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlByteStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.SqlBytesStorage
#include "System/Data/Common/SqlBytesStorage.hpp"
// Including type: System.Data.SqlTypes.SqlBytes
#include "System/Data/SqlTypes/SqlBytes.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.SqlTypes.SqlBytes[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::SqlTypes::SqlBytes*>& System::Data::Common::SqlBytesStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBytesStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::SqlTypes::SqlBytes*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.SqlBytesStorage.Aggregate
::Il2CppObject* System::Data::Common::SqlBytesStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBytesStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.SqlBytesStorage.Compare
int System::Data::Common::SqlBytesStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBytesStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlBytesStorage.CompareValueTo
int System::Data::Common::SqlBytesStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBytesStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.SqlBytesStorage.Copy
void System::Data::Common::SqlBytesStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBytesStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlBytesStorage.Get
::Il2CppObject* System::Data::Common::SqlBytesStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBytesStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlBytesStorage.IsNull
bool System::Data::Common::SqlBytesStorage::IsNull(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBytesStorage::IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlBytesStorage.Set
void System::Data::Common::SqlBytesStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBytesStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.SqlBytesStorage.SetCapacity
void System::Data::Common::SqlBytesStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBytesStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.SqlBytesStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::SqlBytesStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBytesStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.SqlBytesStorage.ConvertObjectToXml
::StringW System::Data::Common::SqlBytesStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBytesStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlBytesStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::SqlBytesStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBytesStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.SqlBytesStorage.CopyValue
void System::Data::Common::SqlBytesStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBytesStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.SqlBytesStorage.SetStorage
void System::Data::Common::SqlBytesStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBytesStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.SqlCharsStorage
#include "System/Data/Common/SqlCharsStorage.hpp"
// Including type: System.Data.SqlTypes.SqlChars
#include "System/Data/SqlTypes/SqlChars.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.SqlTypes.SqlChars[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::SqlTypes::SqlChars*>& System::Data::Common::SqlCharsStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlCharsStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::SqlTypes::SqlChars*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.SqlCharsStorage.Aggregate
::Il2CppObject* System::Data::Common::SqlCharsStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlCharsStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.SqlCharsStorage.Compare
int System::Data::Common::SqlCharsStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlCharsStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlCharsStorage.CompareValueTo
int System::Data::Common::SqlCharsStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlCharsStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.SqlCharsStorage.Copy
void System::Data::Common::SqlCharsStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlCharsStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlCharsStorage.Get
::Il2CppObject* System::Data::Common::SqlCharsStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlCharsStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlCharsStorage.IsNull
bool System::Data::Common::SqlCharsStorage::IsNull(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlCharsStorage::IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlCharsStorage.Set
void System::Data::Common::SqlCharsStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlCharsStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.SqlCharsStorage.SetCapacity
void System::Data::Common::SqlCharsStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlCharsStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.SqlCharsStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::SqlCharsStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlCharsStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.SqlCharsStorage.ConvertObjectToXml
::StringW System::Data::Common::SqlCharsStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlCharsStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlCharsStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::SqlCharsStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlCharsStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.SqlCharsStorage.CopyValue
void System::Data::Common::SqlCharsStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlCharsStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.SqlCharsStorage.SetStorage
void System::Data::Common::SqlCharsStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlCharsStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.SqlDateTimeStorage
#include "System/Data/Common/SqlDateTimeStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.SqlTypes.SqlDateTime[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::SqlTypes::SqlDateTime>& System::Data::Common::SqlDateTimeStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDateTimeStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::SqlTypes::SqlDateTime>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.SqlDateTimeStorage.Aggregate
::Il2CppObject* System::Data::Common::SqlDateTimeStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDateTimeStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.SqlDateTimeStorage.Compare
int System::Data::Common::SqlDateTimeStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDateTimeStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlDateTimeStorage.CompareValueTo
int System::Data::Common::SqlDateTimeStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDateTimeStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.SqlDateTimeStorage.ConvertValue
::Il2CppObject* System::Data::Common::SqlDateTimeStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDateTimeStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlDateTimeStorage.Copy
void System::Data::Common::SqlDateTimeStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDateTimeStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlDateTimeStorage.Get
::Il2CppObject* System::Data::Common::SqlDateTimeStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDateTimeStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlDateTimeStorage.IsNull
bool System::Data::Common::SqlDateTimeStorage::IsNull(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDateTimeStorage::IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlDateTimeStorage.Set
void System::Data::Common::SqlDateTimeStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDateTimeStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.SqlDateTimeStorage.SetCapacity
void System::Data::Common::SqlDateTimeStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDateTimeStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.SqlDateTimeStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::SqlDateTimeStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDateTimeStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.SqlDateTimeStorage.ConvertObjectToXml
::StringW System::Data::Common::SqlDateTimeStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDateTimeStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlDateTimeStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::SqlDateTimeStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDateTimeStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.SqlDateTimeStorage.CopyValue
void System::Data::Common::SqlDateTimeStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDateTimeStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.SqlDateTimeStorage.SetStorage
void System::Data::Common::SqlDateTimeStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDateTimeStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.SqlDecimalStorage
#include "System/Data/Common/SqlDecimalStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.SqlTypes.SqlDecimal[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::SqlTypes::SqlDecimal>& System::Data::Common::SqlDecimalStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDecimalStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::SqlTypes::SqlDecimal>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.SqlDecimalStorage.Aggregate
::Il2CppObject* System::Data::Common::SqlDecimalStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDecimalStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.SqlDecimalStorage.Compare
int System::Data::Common::SqlDecimalStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDecimalStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlDecimalStorage.CompareValueTo
int System::Data::Common::SqlDecimalStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDecimalStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.SqlDecimalStorage.ConvertValue
::Il2CppObject* System::Data::Common::SqlDecimalStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDecimalStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlDecimalStorage.Copy
void System::Data::Common::SqlDecimalStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDecimalStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlDecimalStorage.Get
::Il2CppObject* System::Data::Common::SqlDecimalStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDecimalStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlDecimalStorage.IsNull
bool System::Data::Common::SqlDecimalStorage::IsNull(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDecimalStorage::IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlDecimalStorage.Set
void System::Data::Common::SqlDecimalStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDecimalStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.SqlDecimalStorage.SetCapacity
void System::Data::Common::SqlDecimalStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDecimalStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.SqlDecimalStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::SqlDecimalStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDecimalStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.SqlDecimalStorage.ConvertObjectToXml
::StringW System::Data::Common::SqlDecimalStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDecimalStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlDecimalStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::SqlDecimalStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDecimalStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.SqlDecimalStorage.CopyValue
void System::Data::Common::SqlDecimalStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDecimalStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.SqlDecimalStorage.SetStorage
void System::Data::Common::SqlDecimalStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDecimalStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.SqlDoubleStorage
#include "System/Data/Common/SqlDoubleStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.SqlTypes.SqlDouble[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::SqlTypes::SqlDouble>& System::Data::Common::SqlDoubleStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDoubleStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::SqlTypes::SqlDouble>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.SqlDoubleStorage.Aggregate
::Il2CppObject* System::Data::Common::SqlDoubleStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDoubleStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.SqlDoubleStorage.Compare
int System::Data::Common::SqlDoubleStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDoubleStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlDoubleStorage.CompareValueTo
int System::Data::Common::SqlDoubleStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDoubleStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.SqlDoubleStorage.ConvertValue
::Il2CppObject* System::Data::Common::SqlDoubleStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDoubleStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlDoubleStorage.Copy
void System::Data::Common::SqlDoubleStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDoubleStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlDoubleStorage.Get
::Il2CppObject* System::Data::Common::SqlDoubleStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDoubleStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlDoubleStorage.IsNull
bool System::Data::Common::SqlDoubleStorage::IsNull(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDoubleStorage::IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlDoubleStorage.Set
void System::Data::Common::SqlDoubleStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDoubleStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.SqlDoubleStorage.SetCapacity
void System::Data::Common::SqlDoubleStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDoubleStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.SqlDoubleStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::SqlDoubleStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDoubleStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.SqlDoubleStorage.ConvertObjectToXml
::StringW System::Data::Common::SqlDoubleStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDoubleStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlDoubleStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::SqlDoubleStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDoubleStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.SqlDoubleStorage.CopyValue
void System::Data::Common::SqlDoubleStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDoubleStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.SqlDoubleStorage.SetStorage
void System::Data::Common::SqlDoubleStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlDoubleStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.SqlGuidStorage
#include "System/Data/Common/SqlGuidStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.SqlTypes.SqlGuid[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::SqlTypes::SqlGuid>& System::Data::Common::SqlGuidStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlGuidStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::SqlTypes::SqlGuid>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.SqlGuidStorage.Aggregate
::Il2CppObject* System::Data::Common::SqlGuidStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlGuidStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.SqlGuidStorage.Compare
int System::Data::Common::SqlGuidStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlGuidStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlGuidStorage.CompareValueTo
int System::Data::Common::SqlGuidStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlGuidStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.SqlGuidStorage.ConvertValue
::Il2CppObject* System::Data::Common::SqlGuidStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlGuidStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlGuidStorage.Copy
void System::Data::Common::SqlGuidStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlGuidStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlGuidStorage.Get
::Il2CppObject* System::Data::Common::SqlGuidStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlGuidStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlGuidStorage.IsNull
bool System::Data::Common::SqlGuidStorage::IsNull(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlGuidStorage::IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlGuidStorage.Set
void System::Data::Common::SqlGuidStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlGuidStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.SqlGuidStorage.SetCapacity
void System::Data::Common::SqlGuidStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlGuidStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.SqlGuidStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::SqlGuidStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlGuidStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.SqlGuidStorage.ConvertObjectToXml
::StringW System::Data::Common::SqlGuidStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlGuidStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlGuidStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::SqlGuidStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlGuidStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.SqlGuidStorage.CopyValue
void System::Data::Common::SqlGuidStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlGuidStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.SqlGuidStorage.SetStorage
void System::Data::Common::SqlGuidStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlGuidStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.SqlInt16Storage
#include "System/Data/Common/SqlInt16Storage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.SqlTypes.SqlInt16[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::SqlTypes::SqlInt16>& System::Data::Common::SqlInt16Storage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt16Storage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::SqlTypes::SqlInt16>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.SqlInt16Storage.Aggregate
::Il2CppObject* System::Data::Common::SqlInt16Storage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt16Storage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.SqlInt16Storage.Compare
int System::Data::Common::SqlInt16Storage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt16Storage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlInt16Storage.CompareValueTo
int System::Data::Common::SqlInt16Storage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt16Storage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.SqlInt16Storage.ConvertValue
::Il2CppObject* System::Data::Common::SqlInt16Storage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt16Storage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlInt16Storage.Copy
void System::Data::Common::SqlInt16Storage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt16Storage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlInt16Storage.Get
::Il2CppObject* System::Data::Common::SqlInt16Storage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt16Storage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlInt16Storage.IsNull
bool System::Data::Common::SqlInt16Storage::IsNull(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt16Storage::IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlInt16Storage.Set
void System::Data::Common::SqlInt16Storage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt16Storage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.SqlInt16Storage.SetCapacity
void System::Data::Common::SqlInt16Storage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt16Storage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.SqlInt16Storage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::SqlInt16Storage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt16Storage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.SqlInt16Storage.ConvertObjectToXml
::StringW System::Data::Common::SqlInt16Storage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt16Storage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlInt16Storage.GetEmptyStorage
::Il2CppObject* System::Data::Common::SqlInt16Storage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt16Storage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.SqlInt16Storage.CopyValue
void System::Data::Common::SqlInt16Storage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt16Storage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.SqlInt16Storage.SetStorage
void System::Data::Common::SqlInt16Storage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt16Storage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.SqlInt32Storage
#include "System/Data/Common/SqlInt32Storage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.SqlTypes.SqlInt32[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::SqlTypes::SqlInt32>& System::Data::Common::SqlInt32Storage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt32Storage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::SqlTypes::SqlInt32>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.SqlInt32Storage.Aggregate
::Il2CppObject* System::Data::Common::SqlInt32Storage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt32Storage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.SqlInt32Storage.Compare
int System::Data::Common::SqlInt32Storage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt32Storage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlInt32Storage.CompareValueTo
int System::Data::Common::SqlInt32Storage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt32Storage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.SqlInt32Storage.ConvertValue
::Il2CppObject* System::Data::Common::SqlInt32Storage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt32Storage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlInt32Storage.Copy
void System::Data::Common::SqlInt32Storage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt32Storage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlInt32Storage.Get
::Il2CppObject* System::Data::Common::SqlInt32Storage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt32Storage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlInt32Storage.IsNull
bool System::Data::Common::SqlInt32Storage::IsNull(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt32Storage::IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlInt32Storage.Set
void System::Data::Common::SqlInt32Storage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt32Storage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.SqlInt32Storage.SetCapacity
void System::Data::Common::SqlInt32Storage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt32Storage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.SqlInt32Storage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::SqlInt32Storage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt32Storage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.SqlInt32Storage.ConvertObjectToXml
::StringW System::Data::Common::SqlInt32Storage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt32Storage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlInt32Storage.GetEmptyStorage
::Il2CppObject* System::Data::Common::SqlInt32Storage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt32Storage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.SqlInt32Storage.CopyValue
void System::Data::Common::SqlInt32Storage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt32Storage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.SqlInt32Storage.SetStorage
void System::Data::Common::SqlInt32Storage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt32Storage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.SqlInt64Storage
#include "System/Data/Common/SqlInt64Storage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.SqlTypes.SqlInt64[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::SqlTypes::SqlInt64>& System::Data::Common::SqlInt64Storage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt64Storage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::SqlTypes::SqlInt64>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.SqlInt64Storage.Aggregate
::Il2CppObject* System::Data::Common::SqlInt64Storage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt64Storage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.SqlInt64Storage.Compare
int System::Data::Common::SqlInt64Storage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt64Storage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlInt64Storage.CompareValueTo
int System::Data::Common::SqlInt64Storage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt64Storage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.SqlInt64Storage.ConvertValue
::Il2CppObject* System::Data::Common::SqlInt64Storage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt64Storage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlInt64Storage.Copy
void System::Data::Common::SqlInt64Storage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt64Storage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlInt64Storage.Get
::Il2CppObject* System::Data::Common::SqlInt64Storage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt64Storage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlInt64Storage.IsNull
bool System::Data::Common::SqlInt64Storage::IsNull(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt64Storage::IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlInt64Storage.Set
void System::Data::Common::SqlInt64Storage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt64Storage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.SqlInt64Storage.SetCapacity
void System::Data::Common::SqlInt64Storage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt64Storage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.SqlInt64Storage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::SqlInt64Storage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt64Storage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.SqlInt64Storage.ConvertObjectToXml
::StringW System::Data::Common::SqlInt64Storage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt64Storage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlInt64Storage.GetEmptyStorage
::Il2CppObject* System::Data::Common::SqlInt64Storage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt64Storage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.SqlInt64Storage.CopyValue
void System::Data::Common::SqlInt64Storage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt64Storage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.SqlInt64Storage.SetStorage
void System::Data::Common::SqlInt64Storage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlInt64Storage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.SqlMoneyStorage
#include "System/Data/Common/SqlMoneyStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.SqlTypes.SqlMoney[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::SqlTypes::SqlMoney>& System::Data::Common::SqlMoneyStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlMoneyStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::SqlTypes::SqlMoney>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.SqlMoneyStorage.Aggregate
::Il2CppObject* System::Data::Common::SqlMoneyStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlMoneyStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.SqlMoneyStorage.Compare
int System::Data::Common::SqlMoneyStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlMoneyStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlMoneyStorage.CompareValueTo
int System::Data::Common::SqlMoneyStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlMoneyStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.SqlMoneyStorage.ConvertValue
::Il2CppObject* System::Data::Common::SqlMoneyStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlMoneyStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlMoneyStorage.Copy
void System::Data::Common::SqlMoneyStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlMoneyStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlMoneyStorage.Get
::Il2CppObject* System::Data::Common::SqlMoneyStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlMoneyStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlMoneyStorage.IsNull
bool System::Data::Common::SqlMoneyStorage::IsNull(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlMoneyStorage::IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlMoneyStorage.Set
void System::Data::Common::SqlMoneyStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlMoneyStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.SqlMoneyStorage.SetCapacity
void System::Data::Common::SqlMoneyStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlMoneyStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.SqlMoneyStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::SqlMoneyStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlMoneyStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.SqlMoneyStorage.ConvertObjectToXml
::StringW System::Data::Common::SqlMoneyStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlMoneyStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlMoneyStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::SqlMoneyStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlMoneyStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.SqlMoneyStorage.CopyValue
void System::Data::Common::SqlMoneyStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlMoneyStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.SqlMoneyStorage.SetStorage
void System::Data::Common::SqlMoneyStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlMoneyStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.SqlSingleStorage
#include "System/Data/Common/SqlSingleStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.SqlTypes.SqlSingle[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::SqlTypes::SqlSingle>& System::Data::Common::SqlSingleStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlSingleStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::SqlTypes::SqlSingle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.SqlSingleStorage.Aggregate
::Il2CppObject* System::Data::Common::SqlSingleStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlSingleStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.SqlSingleStorage.Compare
int System::Data::Common::SqlSingleStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlSingleStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlSingleStorage.CompareValueTo
int System::Data::Common::SqlSingleStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlSingleStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.SqlSingleStorage.ConvertValue
::Il2CppObject* System::Data::Common::SqlSingleStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlSingleStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlSingleStorage.Copy
void System::Data::Common::SqlSingleStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlSingleStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlSingleStorage.Get
::Il2CppObject* System::Data::Common::SqlSingleStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlSingleStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlSingleStorage.IsNull
bool System::Data::Common::SqlSingleStorage::IsNull(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlSingleStorage::IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlSingleStorage.Set
void System::Data::Common::SqlSingleStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlSingleStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.SqlSingleStorage.SetCapacity
void System::Data::Common::SqlSingleStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlSingleStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.SqlSingleStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::SqlSingleStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlSingleStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.SqlSingleStorage.ConvertObjectToXml
::StringW System::Data::Common::SqlSingleStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlSingleStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlSingleStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::SqlSingleStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlSingleStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.SqlSingleStorage.CopyValue
void System::Data::Common::SqlSingleStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlSingleStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.SqlSingleStorage.SetStorage
void System::Data::Common::SqlSingleStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlSingleStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.SqlStringStorage
#include "System/Data/Common/SqlStringStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.SqlTypes.SqlString[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::SqlTypes::SqlString>& System::Data::Common::SqlStringStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlStringStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::SqlTypes::SqlString>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.SqlStringStorage.Compare
int System::Data::Common::SqlStringStorage::Compare(::System::Data::SqlTypes::SqlString valueNo1, ::System::Data::SqlTypes::SqlString valueNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlStringStorage::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueNo1), ::il2cpp_utils::ExtractType(valueNo2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, valueNo1, valueNo2);
}
// Autogenerated method: System.Data.Common.SqlStringStorage.Aggregate
::Il2CppObject* System::Data::Common::SqlStringStorage::Aggregate(::ArrayW<int> recordNos, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlStringStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordNos, kind);
}
// Autogenerated method: System.Data.Common.SqlStringStorage.Compare
int System::Data::Common::SqlStringStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlStringStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlStringStorage.CompareValueTo
int System::Data::Common::SqlStringStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlStringStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.SqlStringStorage.ConvertValue
::Il2CppObject* System::Data::Common::SqlStringStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlStringStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlStringStorage.Copy
void System::Data::Common::SqlStringStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlStringStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlStringStorage.Get
::Il2CppObject* System::Data::Common::SqlStringStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlStringStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlStringStorage.GetStringLength
int System::Data::Common::SqlStringStorage::GetStringLength(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlStringStorage::GetStringLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlStringStorage.IsNull
bool System::Data::Common::SqlStringStorage::IsNull(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlStringStorage::IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlStringStorage.Set
void System::Data::Common::SqlStringStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlStringStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.SqlStringStorage.SetCapacity
void System::Data::Common::SqlStringStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlStringStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.SqlStringStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::SqlStringStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlStringStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.SqlStringStorage.ConvertObjectToXml
::StringW System::Data::Common::SqlStringStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlStringStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlStringStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::SqlStringStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlStringStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.SqlStringStorage.CopyValue
void System::Data::Common::SqlStringStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlStringStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.SqlStringStorage.SetStorage
void System::Data::Common::SqlStringStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlStringStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.SqlBooleanStorage
#include "System/Data/Common/SqlBooleanStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Data.SqlTypes.SqlBoolean[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Data::SqlTypes::SqlBoolean>& System::Data::Common::SqlBooleanStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBooleanStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Data::SqlTypes::SqlBoolean>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.SqlBooleanStorage.Aggregate
::Il2CppObject* System::Data::Common::SqlBooleanStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBooleanStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.SqlBooleanStorage.Compare
int System::Data::Common::SqlBooleanStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBooleanStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlBooleanStorage.CompareValueTo
int System::Data::Common::SqlBooleanStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBooleanStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.SqlBooleanStorage.ConvertValue
::Il2CppObject* System::Data::Common::SqlBooleanStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBooleanStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlBooleanStorage.Copy
void System::Data::Common::SqlBooleanStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBooleanStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlBooleanStorage.Get
::Il2CppObject* System::Data::Common::SqlBooleanStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBooleanStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlBooleanStorage.IsNull
bool System::Data::Common::SqlBooleanStorage::IsNull(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBooleanStorage::IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlBooleanStorage.Set
void System::Data::Common::SqlBooleanStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBooleanStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.SqlBooleanStorage.SetCapacity
void System::Data::Common::SqlBooleanStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBooleanStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.SqlBooleanStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::SqlBooleanStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBooleanStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.SqlBooleanStorage.ConvertObjectToXml
::StringW System::Data::Common::SqlBooleanStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBooleanStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlBooleanStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::SqlBooleanStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBooleanStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.SqlBooleanStorage.CopyValue
void System::Data::Common::SqlBooleanStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBooleanStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.SqlBooleanStorage.SetStorage
void System::Data::Common::SqlBooleanStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlBooleanStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.SingleStorage
#include "System/Data/Common/SingleStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<float>& System::Data::Common::SingleStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SingleStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.SingleStorage.Aggregate
::Il2CppObject* System::Data::Common::SingleStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SingleStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.SingleStorage.Compare
int System::Data::Common::SingleStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SingleStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SingleStorage.CompareValueTo
int System::Data::Common::SingleStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SingleStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.SingleStorage.ConvertValue
::Il2CppObject* System::Data::Common::SingleStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SingleStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SingleStorage.Copy
void System::Data::Common::SingleStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SingleStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SingleStorage.Get
::Il2CppObject* System::Data::Common::SingleStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SingleStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SingleStorage.Set
void System::Data::Common::SingleStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SingleStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.SingleStorage.SetCapacity
void System::Data::Common::SingleStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SingleStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.SingleStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::SingleStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SingleStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.SingleStorage.ConvertObjectToXml
::StringW System::Data::Common::SingleStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SingleStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SingleStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::SingleStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SingleStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.SingleStorage.CopyValue
void System::Data::Common::SingleStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SingleStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.SingleStorage.SetStorage
void System::Data::Common::SingleStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SingleStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.SqlUdtStorage
#include "System/Data/Common/SqlUdtStorage.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.Serialization.XmlRootAttribute
#include "System/Xml/Serialization/XmlRootAttribute.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Object> s_typeToNull
::System::Collections::Generic::Dictionary_2<::System::Type*, ::Il2CppObject*>* System::Data::Common::SqlUdtStorage::_get_s_typeToNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::_get_s_typeToNull");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::Il2CppObject*>*>("System.Data.Common", "SqlUdtStorage", "s_typeToNull")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Object> s_typeToNull
void System::Data::Common::SqlUdtStorage::_set_s_typeToNull(::System::Collections::Generic::Dictionary_2<::System::Type*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::_set_s_typeToNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "SqlUdtStorage", "s_typeToNull", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& System::Data::Common::SqlUdtStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _implementsIXmlSerializable
[[deprecated("Use field access instead!")]] bool& System::Data::Common::SqlUdtStorage::dyn__implementsIXmlSerializable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::dyn__implementsIXmlSerializable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_implementsIXmlSerializable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _implementsIComparable
[[deprecated("Use field access instead!")]] bool& System::Data::Common::SqlUdtStorage::dyn__implementsIComparable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::dyn__implementsIComparable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_implementsIComparable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.SqlUdtStorage.GetStaticNullForUdtType
::Il2CppObject* System::Data::Common::SqlUdtStorage::GetStaticNullForUdtType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::GetStaticNullForUdtType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlUdtStorage", "GetStaticNullForUdtType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Data.Common.SqlUdtStorage..cctor
void System::Data::Common::SqlUdtStorage::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "SqlUdtStorage", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.Common.SqlUdtStorage.IsNull
bool System::Data::Common::SqlUdtStorage::IsNull(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.SqlUdtStorage.Aggregate
::Il2CppObject* System::Data::Common::SqlUdtStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.SqlUdtStorage.Compare
int System::Data::Common::SqlUdtStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlUdtStorage.CompareValueTo
int System::Data::Common::SqlUdtStorage::CompareValueTo(int recordNo1, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, value);
}
// Autogenerated method: System.Data.Common.SqlUdtStorage.Copy
void System::Data::Common::SqlUdtStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.SqlUdtStorage.Get
::Il2CppObject* System::Data::Common::SqlUdtStorage::Get(int recordNo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordNo);
}
// Autogenerated method: System.Data.Common.SqlUdtStorage.Set
void System::Data::Common::SqlUdtStorage::Set(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.SqlUdtStorage.SetCapacity
void System::Data::Common::SqlUdtStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.SqlUdtStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::SqlUdtStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.SqlUdtStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::SqlUdtStorage::ConvertXmlToObject(::System::Xml::XmlReader* xmlReader, ::System::Xml::Serialization::XmlRootAttribute* xmlAttrib) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, xmlReader, xmlAttrib);
}
// Autogenerated method: System.Data.Common.SqlUdtStorage.ConvertObjectToXml
::StringW System::Data::Common::SqlUdtStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.SqlUdtStorage.ConvertObjectToXml
void System::Data::Common::SqlUdtStorage::ConvertObjectToXml(::Il2CppObject* value, ::System::Xml::XmlWriter* xmlWriter, ::System::Xml::Serialization::XmlRootAttribute* xmlAttrib) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, xmlWriter, xmlAttrib);
}
// Autogenerated method: System.Data.Common.SqlUdtStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::SqlUdtStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.SqlUdtStorage.CopyValue
void System::Data::Common::SqlUdtStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.SqlUdtStorage.SetStorage
void System::Data::Common::SqlUdtStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::SqlUdtStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.StringStorage
#include "System/Data/Common/StringStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Data::Common::StringStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StringStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.StringStorage.Aggregate
::Il2CppObject* System::Data::Common::StringStorage::Aggregate(::ArrayW<int> recordNos, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StringStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordNos, kind);
}
// Autogenerated method: System.Data.Common.StringStorage.Compare
int System::Data::Common::StringStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StringStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.StringStorage.CompareValueTo
int System::Data::Common::StringStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StringStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.StringStorage.ConvertValue
::Il2CppObject* System::Data::Common::StringStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StringStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.StringStorage.Copy
void System::Data::Common::StringStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StringStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.StringStorage.Get
::Il2CppObject* System::Data::Common::StringStorage::Get(int recordNo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StringStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordNo);
}
// Autogenerated method: System.Data.Common.StringStorage.GetStringLength
int System::Data::Common::StringStorage::GetStringLength(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StringStorage::GetStringLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.StringStorage.IsNull
bool System::Data::Common::StringStorage::IsNull(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StringStorage::IsNull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.StringStorage.Set
void System::Data::Common::StringStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StringStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.StringStorage.SetCapacity
void System::Data::Common::StringStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StringStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.StringStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::StringStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StringStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.StringStorage.ConvertObjectToXml
::StringW System::Data::Common::StringStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StringStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.StringStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::StringStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StringStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.StringStorage.CopyValue
void System::Data::Common::StringStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StringStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.StringStorage.SetStorage
void System::Data::Common::StringStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::StringStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.TimeSpanStorage
#include "System/Data/Common/TimeSpanStorage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.TimeSpan s_defaultValue
::System::TimeSpan System::Data::Common::TimeSpanStorage::_get_s_defaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::TimeSpanStorage::_get_s_defaultValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System.Data.Common", "TimeSpanStorage", "s_defaultValue"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.TimeSpan s_defaultValue
void System::Data::Common::TimeSpanStorage::_set_s_defaultValue(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::TimeSpanStorage::_set_s_defaultValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "TimeSpanStorage", "s_defaultValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.TimeSpan[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<::System::TimeSpan>& System::Data::Common::TimeSpanStorage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::TimeSpanStorage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<::System::TimeSpan>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.TimeSpanStorage.ConvertToTimeSpan
::System::TimeSpan System::Data::Common::TimeSpanStorage::ConvertToTimeSpan(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::TimeSpanStorage::ConvertToTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "TimeSpanStorage", "ConvertToTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Data.Common.TimeSpanStorage..cctor
void System::Data::Common::TimeSpanStorage::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::TimeSpanStorage::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Data.Common", "TimeSpanStorage", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Data.Common.TimeSpanStorage.Aggregate
::Il2CppObject* System::Data::Common::TimeSpanStorage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::TimeSpanStorage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.TimeSpanStorage.Compare
int System::Data::Common::TimeSpanStorage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::TimeSpanStorage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.TimeSpanStorage.CompareValueTo
int System::Data::Common::TimeSpanStorage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::TimeSpanStorage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.TimeSpanStorage.ConvertValue
::Il2CppObject* System::Data::Common::TimeSpanStorage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::TimeSpanStorage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.TimeSpanStorage.Copy
void System::Data::Common::TimeSpanStorage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::TimeSpanStorage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.TimeSpanStorage.Get
::Il2CppObject* System::Data::Common::TimeSpanStorage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::TimeSpanStorage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.TimeSpanStorage.Set
void System::Data::Common::TimeSpanStorage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::TimeSpanStorage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.TimeSpanStorage.SetCapacity
void System::Data::Common::TimeSpanStorage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::TimeSpanStorage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.TimeSpanStorage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::TimeSpanStorage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::TimeSpanStorage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.TimeSpanStorage.ConvertObjectToXml
::StringW System::Data::Common::TimeSpanStorage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::TimeSpanStorage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.TimeSpanStorage.GetEmptyStorage
::Il2CppObject* System::Data::Common::TimeSpanStorage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::TimeSpanStorage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.TimeSpanStorage.CopyValue
void System::Data::Common::TimeSpanStorage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::TimeSpanStorage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.TimeSpanStorage.SetStorage
void System::Data::Common::TimeSpanStorage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::TimeSpanStorage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.UInt16Storage
#include "System/Data/Common/UInt16Storage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt16 s_defaultValue
uint16_t System::Data::Common::UInt16Storage::_get_s_defaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt16Storage::_get_s_defaultValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint16_t>("System.Data.Common", "UInt16Storage", "s_defaultValue"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt16 s_defaultValue
void System::Data::Common::UInt16Storage::_set_s_defaultValue(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt16Storage::_set_s_defaultValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "UInt16Storage", "s_defaultValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<uint16_t>& System::Data::Common::UInt16Storage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt16Storage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<uint16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.UInt16Storage.Aggregate
::Il2CppObject* System::Data::Common::UInt16Storage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt16Storage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.UInt16Storage.Compare
int System::Data::Common::UInt16Storage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt16Storage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.UInt16Storage.CompareValueTo
int System::Data::Common::UInt16Storage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt16Storage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.UInt16Storage.ConvertValue
::Il2CppObject* System::Data::Common::UInt16Storage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt16Storage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.UInt16Storage.Copy
void System::Data::Common::UInt16Storage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt16Storage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.UInt16Storage.Get
::Il2CppObject* System::Data::Common::UInt16Storage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt16Storage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.UInt16Storage.Set
void System::Data::Common::UInt16Storage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt16Storage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.UInt16Storage.SetCapacity
void System::Data::Common::UInt16Storage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt16Storage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.UInt16Storage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::UInt16Storage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt16Storage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.UInt16Storage.ConvertObjectToXml
::StringW System::Data::Common::UInt16Storage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt16Storage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.UInt16Storage.GetEmptyStorage
::Il2CppObject* System::Data::Common::UInt16Storage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt16Storage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.UInt16Storage.CopyValue
void System::Data::Common::UInt16Storage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt16Storage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.UInt16Storage.SetStorage
void System::Data::Common::UInt16Storage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt16Storage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.UInt32Storage
#include "System/Data/Common/UInt32Storage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 s_defaultValue
uint System::Data::Common::UInt32Storage::_get_s_defaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt32Storage::_get_s_defaultValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Data.Common", "UInt32Storage", "s_defaultValue"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 s_defaultValue
void System::Data::Common::UInt32Storage::_set_s_defaultValue(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt32Storage::_set_s_defaultValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "UInt32Storage", "s_defaultValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Data::Common::UInt32Storage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt32Storage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.UInt32Storage.Aggregate
::Il2CppObject* System::Data::Common::UInt32Storage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt32Storage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.UInt32Storage.Compare
int System::Data::Common::UInt32Storage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt32Storage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.UInt32Storage.CompareValueTo
int System::Data::Common::UInt32Storage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt32Storage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.UInt32Storage.ConvertValue
::Il2CppObject* System::Data::Common::UInt32Storage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt32Storage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.UInt32Storage.Copy
void System::Data::Common::UInt32Storage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt32Storage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.UInt32Storage.Get
::Il2CppObject* System::Data::Common::UInt32Storage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt32Storage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.UInt32Storage.Set
void System::Data::Common::UInt32Storage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt32Storage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.UInt32Storage.SetCapacity
void System::Data::Common::UInt32Storage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt32Storage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.UInt32Storage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::UInt32Storage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt32Storage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.UInt32Storage.ConvertObjectToXml
::StringW System::Data::Common::UInt32Storage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt32Storage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.UInt32Storage.GetEmptyStorage
::Il2CppObject* System::Data::Common::UInt32Storage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt32Storage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.UInt32Storage.CopyValue
void System::Data::Common::UInt32Storage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt32Storage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.UInt32Storage.SetStorage
void System::Data::Common::UInt32Storage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt32Storage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Data.Common.UInt64Storage
#include "System/Data/Common/UInt64Storage.hpp"
// Including type: System.Data.DataColumn
#include "System/Data/DataColumn.hpp"
// Including type: System.Data.AggregateType
#include "System/Data/AggregateType.hpp"
// Including type: System.Collections.BitArray
#include "System/Collections/BitArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64 s_defaultValue
uint64_t System::Data::Common::UInt64Storage::_get_s_defaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt64Storage::_get_s_defaultValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Data.Common", "UInt64Storage", "s_defaultValue"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64 s_defaultValue
void System::Data::Common::UInt64Storage::_set_s_defaultValue(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt64Storage::_set_s_defaultValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Data.Common", "UInt64Storage", "s_defaultValue", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt64[] _values
[[deprecated("Use field access instead!")]] ::ArrayW<uint64_t>& System::Data::Common::UInt64Storage::dyn__values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt64Storage::dyn__values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_values"))->offset;
  return *reinterpret_cast<::ArrayW<uint64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Data.Common.UInt64Storage.Aggregate
::Il2CppObject* System::Data::Common::UInt64Storage::Aggregate(::ArrayW<int> records, ::System::Data::AggregateType kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt64Storage::Aggregate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, records, kind);
}
// Autogenerated method: System.Data.Common.UInt64Storage.Compare
int System::Data::Common::UInt64Storage::Compare(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt64Storage::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.UInt64Storage.CompareValueTo
int System::Data::Common::UInt64Storage::CompareValueTo(int recordNo, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt64Storage::CompareValueTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, recordNo, value);
}
// Autogenerated method: System.Data.Common.UInt64Storage.ConvertValue
::Il2CppObject* System::Data::Common::UInt64Storage::ConvertValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt64Storage::ConvertValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.UInt64Storage.Copy
void System::Data::Common::UInt64Storage::Copy(int recordNo1, int recordNo2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt64Storage::Copy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordNo1, recordNo2);
}
// Autogenerated method: System.Data.Common.UInt64Storage.Get
::Il2CppObject* System::Data::Common::UInt64Storage::Get(int record) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt64Storage::Get");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, record);
}
// Autogenerated method: System.Data.Common.UInt64Storage.Set
void System::Data::Common::UInt64Storage::Set(int record, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt64Storage::Set");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, value);
}
// Autogenerated method: System.Data.Common.UInt64Storage.SetCapacity
void System::Data::Common::UInt64Storage::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt64Storage::SetCapacity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Data.Common.UInt64Storage.ConvertXmlToObject
::Il2CppObject* System::Data::Common::UInt64Storage::ConvertXmlToObject(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt64Storage::ConvertXmlToObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Data.Common.UInt64Storage.ConvertObjectToXml
::StringW System::Data::Common::UInt64Storage::ConvertObjectToXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt64Storage::ConvertObjectToXml");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Data.Common.UInt64Storage.GetEmptyStorage
::Il2CppObject* System::Data::Common::UInt64Storage::GetEmptyStorage(int recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt64Storage::GetEmptyStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, recordCount);
}
// Autogenerated method: System.Data.Common.UInt64Storage.CopyValue
void System::Data::Common::UInt64Storage::CopyValue(int record, ::Il2CppObject* store, ::System::Collections::BitArray* nullbits, int storeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt64Storage::CopyValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, record, store, nullbits, storeIndex);
}
// Autogenerated method: System.Data.Common.UInt64Storage.SetStorage
void System::Data::Common::UInt64Storage::SetStorage(::Il2CppObject* store, ::System::Collections::BitArray* nullbits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Data::Common::UInt64Storage::SetStorage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Data::Common::DataStorage*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, store, nullbits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SR
#include "GlobalNamespace/SR___.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SR.GetString
::StringW GlobalNamespace::SR___::GetString(::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR___::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, args);
}
// Autogenerated method: SR.GetString
::StringW GlobalNamespace::SR___::GetString(::System::Globalization::CultureInfo* culture, ::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR___::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, culture, name, args);
}
// Autogenerated method: SR.GetString
::StringW GlobalNamespace::SR___::GetString(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR___::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: SR.Format
::StringW GlobalNamespace::SR___::Format(::StringW resourceFormat, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR___::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceFormat), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resourceFormat, p1);
}
// Autogenerated method: SR.Format
::StringW GlobalNamespace::SR___::Format(::StringW resourceFormat, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR___::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceFormat), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resourceFormat, p1, p2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Util.MonoPInvokeCallbackAttribute
#include "Mono/Util/MonoPInvokeCallbackAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.CertHelper
#include "Mono/Unity/CertHelper.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.CertHelper.AddCertificatesToNativeChain
void Mono::Unity::CertHelper::AddCertificatesToNativeChain(::Mono::Unity::UnityTls::unitytls_x509list* nativeCertificateChain, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* certificates, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::CertHelper::AddCertificatesToNativeChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "CertHelper", "AddCertificatesToNativeChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeCertificateChain), ::il2cpp_utils::ExtractType(certificates), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nativeCertificateChain, certificates, errorState);
}
// Autogenerated method: Mono.Unity.CertHelper.AddCertificateToNativeChain
void Mono::Unity::CertHelper::AddCertificateToNativeChain(::Mono::Unity::UnityTls::unitytls_x509list* nativeCertificateChain, ::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::CertHelper::AddCertificateToNativeChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "CertHelper", "AddCertificateToNativeChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nativeCertificateChain), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nativeCertificateChain, certificate, errorState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.Debug
#include "Mono/Unity/Debug.hpp"
// Including type: Mono.Security.Interface.AlertDescription
#include "Mono/Security/Interface/AlertDescription.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.Debug.CheckAndThrow
void Mono::Unity::Debug::CheckAndThrow(::Mono::Unity::UnityTls::unitytls_errorstate errorState, ::StringW context, ::Mono::Security::Interface::AlertDescription defaultAlert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::Debug::CheckAndThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "Debug", "CheckAndThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(defaultAlert)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorState, context, defaultAlert);
}
// Autogenerated method: Mono.Unity.Debug.CheckAndThrow
void Mono::Unity::Debug::CheckAndThrow(::Mono::Unity::UnityTls::unitytls_errorstate errorState, ::Mono::Unity::UnityTls::unitytls_x509verify_result verifyResult, ::StringW context, ::Mono::Security::Interface::AlertDescription defaultAlert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::Debug::CheckAndThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "Debug", "CheckAndThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractType(verifyResult), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(defaultAlert)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorState, verifyResult, context, defaultAlert);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTls
#include "Mono/Unity/UnityTls.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code
#include "Mono/Unity/UnityTls_unitytls_error_code.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key
#include "Mono/Unity/UnityTls_unitytls_key.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key_ref
#include "Mono/Unity/UnityTls_unitytls_key_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509_ref
#include "Mono/Unity/UnityTls_unitytls_x509_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509name
#include "Mono/Unity/UnityTls_unitytls_x509name.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_ciphersuite
#include "Mono/Unity/UnityTls_unitytls_ciphersuite.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol
#include "Mono/Unity/UnityTls_unitytls_protocol.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_protocolrange
#include "Mono/Unity/UnityTls_unitytls_tlsctx_protocolrange.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_write_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_write_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_read_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_read_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_trace_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_trace_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_certificate_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_certificate_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_callbacks
#include "Mono/Unity/UnityTls_unitytls_tlsctx_callbacks.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct
#include "Mono/Unity/UnityTls_unitytls_interface_struct.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct marshalledInterface
::Mono::Unity::UnityTls::unitytls_interface_struct* Mono::Unity::UnityTls::_get_marshalledInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::_get_marshalledInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_interface_struct*>("Mono.Unity", "UnityTls", "marshalledInterface"));
}
// Autogenerated static field setter
// Set static field: static private Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct marshalledInterface
void Mono::Unity::UnityTls::_set_marshalledInterface(::Mono::Unity::UnityTls::unitytls_interface_struct* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::_set_marshalledInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls", "marshalledInterface", value));
}
// Autogenerated method: Mono.Unity.UnityTls.get_IsSupported
bool Mono::Unity::UnityTls::get_IsSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::get_IsSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTls", "get_IsSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTls.get_NativeInterface
::Mono::Unity::UnityTls::unitytls_interface_struct* Mono::Unity::UnityTls::get_NativeInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::get_NativeInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTls", "get_NativeInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_interface_struct*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTls.GetUnityTlsInterface
::System::IntPtr Mono::Unity::UnityTls::GetUnityTlsInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::GetUnityTlsInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTls", "GetUnityTlsInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code
#include "Mono/Unity/UnityTls_unitytls_error_code.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_SUCCESS
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_SUCCESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_SUCCESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_SUCCESS"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_SUCCESS
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_SUCCESS(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_SUCCESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_SUCCESS", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INVALID_ARGUMENT
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_ARGUMENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_ARGUMENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_ARGUMENT"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INVALID_ARGUMENT
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_ARGUMENT(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_ARGUMENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_ARGUMENT", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INVALID_FORMAT
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_FORMAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_FORMAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_FORMAT"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INVALID_FORMAT
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_FORMAT(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_FORMAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_FORMAT", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INVALID_PASSWORD
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_PASSWORD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_PASSWORD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_PASSWORD"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INVALID_PASSWORD
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_PASSWORD(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_PASSWORD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_PASSWORD", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INVALID_STATE
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_STATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INVALID_STATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_STATE"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INVALID_STATE
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_STATE(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INVALID_STATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INVALID_STATE", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_BUFFER_OVERFLOW
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_BUFFER_OVERFLOW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_BUFFER_OVERFLOW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_BUFFER_OVERFLOW"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_BUFFER_OVERFLOW
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_BUFFER_OVERFLOW(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_BUFFER_OVERFLOW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_BUFFER_OVERFLOW", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_OUT_OF_MEMORY
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_OUT_OF_MEMORY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_OUT_OF_MEMORY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_OUT_OF_MEMORY"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_OUT_OF_MEMORY
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_OUT_OF_MEMORY(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_OUT_OF_MEMORY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_OUT_OF_MEMORY", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INTERNAL_ERROR
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INTERNAL_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_INTERNAL_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INTERNAL_ERROR"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_INTERNAL_ERROR
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INTERNAL_ERROR(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_INTERNAL_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_INTERNAL_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_NOT_SUPPORTED
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_NOT_SUPPORTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_NOT_SUPPORTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_NOT_SUPPORTED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_NOT_SUPPORTED
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_NOT_SUPPORTED(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_NOT_SUPPORTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_NOT_SUPPORTED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_ENTROPY_SOURCE_FAILED
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_ENTROPY_SOURCE_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_ENTROPY_SOURCE_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_ENTROPY_SOURCE_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_ENTROPY_SOURCE_FAILED
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_ENTROPY_SOURCE_FAILED(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_ENTROPY_SOURCE_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_ENTROPY_SOURCE_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_STREAM_CLOSED
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_STREAM_CLOSED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_STREAM_CLOSED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_STREAM_CLOSED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_STREAM_CLOSED
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_STREAM_CLOSED(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_STREAM_CLOSED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_STREAM_CLOSED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_CUSTOM_ERROR_START
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_CUSTOM_ERROR_START() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_CUSTOM_ERROR_START");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_CUSTOM_ERROR_START"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_CUSTOM_ERROR_START
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_CUSTOM_ERROR_START(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_CUSTOM_ERROR_START");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_CUSTOM_ERROR_START", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_WOULD_BLOCK
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_WOULD_BLOCK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_WOULD_BLOCK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_WOULD_BLOCK"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_WOULD_BLOCK
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_WOULD_BLOCK(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_WOULD_BLOCK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_WOULD_BLOCK", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_READ_FAILED
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_READ_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_READ_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_READ_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_READ_FAILED
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_READ_FAILED(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_READ_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_READ_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_WRITE_FAILED
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_WRITE_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_WRITE_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_WRITE_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_WRITE_FAILED
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_WRITE_FAILED(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_WRITE_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_WRITE_FAILED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_UNKNOWN_ERROR
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_UNKNOWN_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_UNKNOWN_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_UNKNOWN_ERROR"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_UNKNOWN_ERROR
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_UNKNOWN_ERROR(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_UNKNOWN_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_UNKNOWN_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_CUSTOM_ERROR_END
::Mono::Unity::UnityTls::unitytls_error_code Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_CUSTOM_ERROR_END() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_get_UNITYTLS_USER_CUSTOM_ERROR_END");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_error_code>("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_CUSTOM_ERROR_END"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code UNITYTLS_USER_CUSTOM_ERROR_END
void Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_CUSTOM_ERROR_END(::Mono::Unity::UnityTls::unitytls_error_code value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::_set_UNITYTLS_USER_CUSTOM_ERROR_END");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_error_code", "UNITYTLS_USER_CUSTOM_ERROR_END", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Mono::Unity::UnityTls::unitytls_error_code::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_error_code::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_SUCCESS
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_SUCCESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_SUCCESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_SUCCESS"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_SUCCESS
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_SUCCESS(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_SUCCESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_SUCCESS", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_NOT_DONE
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_NOT_DONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_NOT_DONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_NOT_DONE"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_NOT_DONE
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_NOT_DONE(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_NOT_DONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_NOT_DONE", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FATAL_ERROR
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FATAL_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FATAL_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FATAL_ERROR"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FATAL_ERROR
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FATAL_ERROR(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FATAL_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FATAL_ERROR", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_EXPIRED
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_EXPIRED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_EXPIRED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_EXPIRED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_EXPIRED
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_EXPIRED(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_EXPIRED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_EXPIRED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_REVOKED
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_REVOKED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_REVOKED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_REVOKED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_REVOKED
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_REVOKED(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_REVOKED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_REVOKED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_CN_MISMATCH", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_NOT_TRUSTED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR1
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR1
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR1(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR2
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR2"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR2
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR2(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR2", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR3
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR3"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR3
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR3(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR3", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR4
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR4"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR4
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR4(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR4", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR5
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR5"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR5
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR5(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR5", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR6
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR6"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR6
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR6(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR6", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR7
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR7"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR7
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR7(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR7", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR8
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_USER_ERROR8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR8"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_USER_ERROR8
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR8(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_USER_ERROR8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_USER_ERROR8", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_get_UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_x509verify_result>("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR
void Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR(::Mono::Unity::UnityTls::unitytls_x509verify_result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::_set_UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_x509verify_result", "UNITYTLS_X509VERIFY_FLAG_UNKNOWN_ERROR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Mono::Unity::UnityTls::unitytls_x509verify_result::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_result::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_x509verify_callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509_ref
#include "Mono/Unity/UnityTls_unitytls_x509_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_callback.Invoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_callback::Invoke(void* userData, ::Mono::Unity::UnityTls::unitytls_x509_ref cert, ::Mono::Unity::UnityTls::unitytls_x509verify_result result, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_callback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_x509verify_callback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, userData, cert, result, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_callback.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_x509verify_callback::BeginInvoke(void* userData, ::Mono::Unity::UnityTls::unitytls_x509_ref cert, ::Mono::Unity::UnityTls::unitytls_x509verify_result result, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_x509verify_callback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userData, cert, result, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_callback.EndInvoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_x509verify_callback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_x509verify_callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_x509verify_callback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_ciphersuite
#include "Mono/Unity/UnityTls_unitytls_ciphersuite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_ciphersuite UNITYTLS_CIPHERSUITE_INVALID
::Mono::Unity::UnityTls::unitytls_ciphersuite Mono::Unity::UnityTls::unitytls_ciphersuite::_get_UNITYTLS_CIPHERSUITE_INVALID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_ciphersuite::_get_UNITYTLS_CIPHERSUITE_INVALID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_ciphersuite>("Mono.Unity", "UnityTls/unitytls_ciphersuite", "UNITYTLS_CIPHERSUITE_INVALID"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_ciphersuite UNITYTLS_CIPHERSUITE_INVALID
void Mono::Unity::UnityTls::unitytls_ciphersuite::_set_UNITYTLS_CIPHERSUITE_INVALID(::Mono::Unity::UnityTls::unitytls_ciphersuite value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_ciphersuite::_set_UNITYTLS_CIPHERSUITE_INVALID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_ciphersuite", "UNITYTLS_CIPHERSUITE_INVALID", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Mono::Unity::UnityTls::unitytls_ciphersuite::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_ciphersuite::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol
#include "Mono/Unity/UnityTls_unitytls_protocol.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_0
::Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_TLS_1_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_TLS_1_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_protocol>("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_TLS_1_0"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_0
void Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_TLS_1_0(::Mono::Unity::UnityTls::unitytls_protocol value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_TLS_1_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_TLS_1_0", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_1
::Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_TLS_1_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_TLS_1_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_protocol>("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_TLS_1_1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_1
void Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_TLS_1_1(::Mono::Unity::UnityTls::unitytls_protocol value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_TLS_1_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_TLS_1_1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_2
::Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_TLS_1_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_TLS_1_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_protocol>("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_TLS_1_2"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol UNITYTLS_PROTOCOL_TLS_1_2
void Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_TLS_1_2(::Mono::Unity::UnityTls::unitytls_protocol value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_TLS_1_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_TLS_1_2", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol UNITYTLS_PROTOCOL_INVALID
::Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_INVALID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_protocol::_get_UNITYTLS_PROTOCOL_INVALID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Unity::UnityTls::unitytls_protocol>("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_INVALID"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol UNITYTLS_PROTOCOL_INVALID
void Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_INVALID(::Mono::Unity::UnityTls::unitytls_protocol value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_protocol::_set_UNITYTLS_PROTOCOL_INVALID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Unity", "UnityTls/unitytls_protocol", "UNITYTLS_PROTOCOL_INVALID", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
[[deprecated("Use field access instead!")]] uint& Mono::Unity::UnityTls::unitytls_protocol::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_protocol::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_write_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_write_callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_write_callback.Invoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_tlsctx_write_callback::Invoke(void* userData, uint8_t* data, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_write_callback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_write_callback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, userData, data, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_write_callback.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_tlsctx_write_callback::BeginInvoke(void* userData, uint8_t* data, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_write_callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_write_callback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userData, data, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_write_callback.EndInvoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_tlsctx_write_callback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_write_callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_write_callback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_read_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_read_callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_read_callback.Invoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_tlsctx_read_callback::Invoke(void* userData, uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_read_callback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_read_callback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, userData, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_read_callback.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_tlsctx_read_callback::BeginInvoke(void* userData, uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_read_callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_read_callback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userData, buffer, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_read_callback.EndInvoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_tlsctx_read_callback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_read_callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_read_callback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_trace_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_trace_callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_trace_callback.Invoke
void Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback::Invoke(void* userData, ::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* traceMessage, ::System::IntPtr traceMessageLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userData, ctx, traceMessage, traceMessageLen);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_trace_callback.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback::BeginInvoke(void* userData, ::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* traceMessage, ::System::IntPtr traceMessageLen, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userData, ctx, traceMessage, traceMessageLen, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_trace_callback.EndInvoke
void Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_certificate_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_certificate_callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509name
#include "Mono/Unity/UnityTls_unitytls_x509name.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key_ref
#include "Mono/Unity/UnityTls_unitytls_key_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_certificate_callback.Invoke
void Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback::Invoke(void* userData, ::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_x509name* caList, ::System::IntPtr caListLen, ::Mono::Unity::UnityTls::unitytls_x509list_ref* chain, ::Mono::Unity::UnityTls::unitytls_key_ref* key, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userData, ctx, cn, cnLen, caList, caListLen, chain, key, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_certificate_callback.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback::BeginInvoke(void* userData, ::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_x509name* caList, ::System::IntPtr caListLen, ::Mono::Unity::UnityTls::unitytls_x509list_ref* chain, ::Mono::Unity::UnityTls::unitytls_key_ref* key, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userData, ctx, cn, cnLen, caList, caListLen, chain, key, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_certificate_callback.EndInvoke
void Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_x509verify_callback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_x509verify_callback.Invoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback::Invoke(void* userData, ::Mono::Unity::UnityTls::unitytls_x509list_ref chain, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, userData, chain, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_x509verify_callback.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback::BeginInvoke(void* userData, ::Mono::Unity::UnityTls::unitytls_x509list_ref chain, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userData, chain, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_x509verify_callback.EndInvoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct
#include "Mono/Unity/UnityTls_unitytls_interface_struct.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_create_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_errorstate_create_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_raise_error_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_errorstate_raise_error_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_get_ref_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_get_ref_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_der_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_parse_der_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_pem_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_parse_pem_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_free_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509_export_der_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509_export_der_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_ref_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_get_ref_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_x509_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_get_x509_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_create_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_create_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_append_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_der_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_append_der_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_free_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_default_ca_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509verify_default_ca_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_explicit_ca_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509verify_explicit_ca_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_server_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_server_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_client_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_client_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_server_require_client_authentication_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_server_require_client_authentication_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_certificate_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_certificate_callback_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_trace_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_trace_callback_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_x509verify_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_x509verify_callback_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_supported_ciphersuites_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_supported_ciphersuites_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_ciphersuite_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_ciphersuite_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_protocol_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_protocol_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_process_handshake_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_process_handshake_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_read_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_read_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_write_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_write_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_notify_close_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_notify_close_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_free_t.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_random_generate_bytes_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_random_generate_bytes_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.UInt64 UNITYTLS_INVALID_HANDLE
[[deprecated("Use field access instead!")]] uint64_t& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_UNITYTLS_INVALID_HANDLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_UNITYTLS_INVALID_HANDLE");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UNITYTLS_INVALID_HANDLE"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_protocolrange UNITYTLS_TLSCTX_PROTOCOLRANGE_DEFAULT
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_UNITYTLS_TLSCTX_PROTOCOLRANGE_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_UNITYTLS_TLSCTX_PROTOCOLRANGE_DEFAULT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UNITYTLS_TLSCTX_PROTOCOLRANGE_DEFAULT"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_create_t unitytls_errorstate_create
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_errorstate_create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_errorstate_create");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_errorstate_create"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_raise_error_t unitytls_errorstate_raise_error
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_errorstate_raise_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_errorstate_raise_error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_errorstate_raise_error"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_get_ref_t unitytls_key_get_ref
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_get_ref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_get_ref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_key_get_ref"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_der_t unitytls_key_parse_der
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_parse_der() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_parse_der");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_key_parse_der"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_pem_t unitytls_key_parse_pem
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_parse_pem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_parse_pem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_key_parse_pem"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_free_t unitytls_key_free
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_free() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_key_free");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_key_free"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509_export_der_t unitytls_x509_export_der
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509_export_der() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509_export_der");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509_export_der"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_ref_t unitytls_x509list_get_ref
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_get_ref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_get_ref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_get_ref"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_x509_t unitytls_x509list_get_x509
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_get_x509() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_get_x509");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_get_x509"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_create_t unitytls_x509list_create
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_create");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_create"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_t unitytls_x509list_append
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_append() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_append");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_append"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_der_t unitytls_x509list_append_der
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_append_der() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_append_der");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_append_der"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_der_t unitytls_x509list_append_pem
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_append_pem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_append_pem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_append_pem"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_free_t unitytls_x509list_free
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_free() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509list_free");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509list_free"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_default_ca_t unitytls_x509verify_default_ca
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509verify_default_ca() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509verify_default_ca");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509verify_default_ca"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_explicit_ca_t unitytls_x509verify_explicit_ca
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509verify_explicit_ca() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_x509verify_explicit_ca");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_x509verify_explicit_ca"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_server_t unitytls_tlsctx_create_server
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_create_server() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_create_server");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_create_server"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_client_t unitytls_tlsctx_create_client
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_create_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_create_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_create_client"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_server_require_client_authentication_t unitytls_tlsctx_server_require_client_authentication
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_server_require_client_authentication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_server_require_client_authentication");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_server_require_client_authentication"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_certificate_callback_t unitytls_tlsctx_set_certificate_callback
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_certificate_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_certificate_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_set_certificate_callback"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_trace_callback_t unitytls_tlsctx_set_trace_callback
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_trace_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_trace_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_set_trace_callback"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_x509verify_callback_t unitytls_tlsctx_set_x509verify_callback
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_x509verify_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_x509verify_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_set_x509verify_callback"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_supported_ciphersuites_t unitytls_tlsctx_set_supported_ciphersuites
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_supported_ciphersuites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_set_supported_ciphersuites");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_set_supported_ciphersuites"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_ciphersuite_t unitytls_tlsctx_get_ciphersuite
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_get_ciphersuite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_get_ciphersuite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_get_ciphersuite"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_protocol_t unitytls_tlsctx_get_protocol
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_get_protocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_get_protocol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_get_protocol"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_process_handshake_t unitytls_tlsctx_process_handshake
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_process_handshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_process_handshake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_process_handshake"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_read_t unitytls_tlsctx_read
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_read");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_read"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_write_t unitytls_tlsctx_write
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_write");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_write"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_notify_close_t unitytls_tlsctx_notify_close
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_notify_close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_notify_close");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_notify_close"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_free_t unitytls_tlsctx_free
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_free() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_tlsctx_free");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_tlsctx_free"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_random_generate_bytes_t unitytls_random_generate_bytes
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t*& Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_random_generate_bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::dyn_unitytls_random_generate_bytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unitytls_random_generate_bytes"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_create_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_errorstate_create_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_create_t.Invoke
::Mono::Unity::UnityTls::unitytls_errorstate Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_errorstate, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_create_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_create_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_errorstate Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_errorstate, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_raise_error_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_errorstate_raise_error_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_error_code
#include "Mono/Unity/UnityTls_unitytls_error_code.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_raise_error_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t::Invoke(::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::Mono::Unity::UnityTls::unitytls_error_code errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorState, errorCode);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_raise_error_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::Mono::Unity::UnityTls::unitytls_error_code errorCode, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, errorState, errorCode, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_errorstate_raise_error_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_get_ref_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_get_ref_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key_ref
#include "Mono/Unity/UnityTls_unitytls_key_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key
#include "Mono/Unity/UnityTls_unitytls_key.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_get_ref_t.Invoke
::Mono::Unity::UnityTls::unitytls_key_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t::Invoke(::Mono::Unity::UnityTls::unitytls_key* key, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_key_ref, false>(this, ___internal__method, key, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_get_ref_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_key* key, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, key, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_get_ref_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_key_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_key_ref, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_der_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_parse_der_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key
#include "Mono/Unity/UnityTls_unitytls_key.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_der_t.Invoke
::Mono::Unity::UnityTls::unitytls_key* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t::Invoke(uint8_t* buffer, ::System::IntPtr bufferLen, uint8_t* password, ::System::IntPtr passwordLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_key*, false>(this, ___internal__method, buffer, bufferLen, password, passwordLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_der_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t::BeginInvoke(uint8_t* buffer, ::System::IntPtr bufferLen, uint8_t* password, ::System::IntPtr passwordLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, bufferLen, password, passwordLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_der_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_key* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_key*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_pem_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_parse_pem_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key
#include "Mono/Unity/UnityTls_unitytls_key.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_pem_t.Invoke
::Mono::Unity::UnityTls::unitytls_key* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t::Invoke(uint8_t* buffer, ::System::IntPtr bufferLen, uint8_t* password, ::System::IntPtr passwordLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_key*, false>(this, ___internal__method, buffer, bufferLen, password, passwordLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_pem_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t::BeginInvoke(uint8_t* buffer, ::System::IntPtr bufferLen, uint8_t* password, ::System::IntPtr passwordLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, bufferLen, password, passwordLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_parse_pem_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_key* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_key*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_key_free_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key
#include "Mono/Unity/UnityTls_unitytls_key.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_free_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t::Invoke(::Mono::Unity::UnityTls::unitytls_key* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_free_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_key* key, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, key, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_key_free_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509_export_der_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509_export_der_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509_ref
#include "Mono/Unity/UnityTls_unitytls_x509_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509_export_der_t.Invoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t::Invoke(::Mono::Unity::UnityTls::unitytls_x509_ref cert, uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, cert, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509_export_der_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_x509_ref cert, uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, cert, buffer, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509_export_der_t.EndInvoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_ref_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_get_ref_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_ref_t.Invoke
::Mono::Unity::UnityTls::unitytls_x509list_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::Invoke(::Mono::Unity::UnityTls::unitytls_x509list* list, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509list_ref, false>(this, ___internal__method, list, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_ref_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_x509list* list, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, list, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_ref_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_x509list_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509list_ref, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_x509_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_get_x509_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509_ref
#include "Mono/Unity/UnityTls_unitytls_x509_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_x509_t.Invoke
::Mono::Unity::UnityTls::unitytls_x509_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::Invoke(::Mono::Unity::UnityTls::unitytls_x509list_ref list, ::System::IntPtr index, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509_ref, false>(this, ___internal__method, list, index, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_x509_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_x509list_ref list, ::System::IntPtr index, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, list, index, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_get_x509_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_x509_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509_ref, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_create_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_create_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_create_t.Invoke
::Mono::Unity::UnityTls::unitytls_x509list* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::Invoke(::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509list*, false>(this, ___internal__method, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_create_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_create_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_x509list* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509list*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_append_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509_ref
#include "Mono/Unity/UnityTls_unitytls_x509_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::Invoke(::Mono::Unity::UnityTls::unitytls_x509list* list, ::Mono::Unity::UnityTls::unitytls_x509_ref cert, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, list, cert, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_x509list* list, ::Mono::Unity::UnityTls::unitytls_x509_ref cert, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, list, cert, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_der_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_append_der_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_der_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::Invoke(::Mono::Unity::UnityTls::unitytls_x509list* list, uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, list, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_der_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_x509list* list, uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, list, buffer, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_append_der_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_free_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_free_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::Invoke(::Mono::Unity::UnityTls::unitytls_x509list* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, list);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_free_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_x509list* list, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, list, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509list_free_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_default_ca_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509verify_default_ca_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_default_ca_t.Invoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::Invoke(::Mono::Unity::UnityTls::unitytls_x509list_ref chain, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_x509verify_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, chain, cn, cnLen, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_default_ca_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_x509list_ref chain, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_x509verify_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, chain, cn, cnLen, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_default_ca_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_explicit_ca_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509verify_explicit_ca_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_explicit_ca_t.Invoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::Invoke(::Mono::Unity::UnityTls::unitytls_x509list_ref chain, ::Mono::Unity::UnityTls::unitytls_x509list_ref trustCA, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_x509verify_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, chain, trustCA, cn, cnLen, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_explicit_ca_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_x509list_ref chain, ::Mono::Unity::UnityTls::unitytls_x509list_ref trustCA, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_x509verify_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, chain, trustCA, cn, cnLen, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_x509verify_explicit_ca_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_server_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_server_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_protocolrange
#include "Mono/Unity/UnityTls_unitytls_tlsctx_protocolrange.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_callbacks
#include "Mono/Unity/UnityTls_unitytls_tlsctx_callbacks.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_server_t.Invoke
::Mono::Unity::UnityTls::unitytls_tlsctx* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange supportedProtocols, ::Mono::Unity::UnityTls::unitytls_tlsctx_callbacks callbacks, uint64_t certChain, uint64_t leafCertificateKey, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_tlsctx*, false>(this, ___internal__method, supportedProtocols, callbacks, certChain, leafCertificateKey, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_server_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange supportedProtocols, ::Mono::Unity::UnityTls::unitytls_tlsctx_callbacks callbacks, uint64_t certChain, uint64_t leafCertificateKey, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, supportedProtocols, callbacks, certChain, leafCertificateKey, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_server_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_tlsctx* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_tlsctx*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_client_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_client_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_protocolrange
#include "Mono/Unity/UnityTls_unitytls_tlsctx_protocolrange.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_callbacks
#include "Mono/Unity/UnityTls_unitytls_tlsctx_callbacks.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_client_t.Invoke
::Mono::Unity::UnityTls::unitytls_tlsctx* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange supportedProtocols, ::Mono::Unity::UnityTls::unitytls_tlsctx_callbacks callbacks, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_tlsctx*, false>(this, ___internal__method, supportedProtocols, callbacks, cn, cnLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_client_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange supportedProtocols, ::Mono::Unity::UnityTls::unitytls_tlsctx_callbacks callbacks, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, supportedProtocols, callbacks, cn, cnLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_create_client_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_tlsctx* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_tlsctx*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_server_require_client_authentication_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_server_require_client_authentication_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_server_require_client_authentication_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_x509list_ref clientAuthCAList, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, clientAuthCAList, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_server_require_client_authentication_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_x509list_ref clientAuthCAList, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, clientAuthCAList, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_server_require_client_authentication_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_certificate_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_certificate_callback_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_certificate_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_certificate_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_certificate_callback_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_certificate_callback_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_certificate_callback_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_trace_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_trace_callback_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_trace_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_trace_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_trace_callback_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_trace_callback_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_trace_callback_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_x509verify_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_x509verify_callback_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_x509verify_callback_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_x509verify_callback_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback* cb, void* userData, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_x509verify_callback_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_supported_ciphersuites_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_supported_ciphersuites_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_ciphersuite
#include "Mono/Unity/UnityTls_unitytls_ciphersuite.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_supported_ciphersuites_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_ciphersuite* supportedCiphersuites, ::System::IntPtr supportedCiphersuitesLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, supportedCiphersuites, supportedCiphersuitesLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_supported_ciphersuites_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_ciphersuite* supportedCiphersuites, ::System::IntPtr supportedCiphersuitesLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, supportedCiphersuites, supportedCiphersuitesLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_set_supported_ciphersuites_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_ciphersuite_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_ciphersuite_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_ciphersuite
#include "Mono/Unity/UnityTls_unitytls_ciphersuite.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_ciphersuite_t.Invoke
::Mono::Unity::UnityTls::unitytls_ciphersuite Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_ciphersuite, false>(this, ___internal__method, ctx, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_ciphersuite_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_ciphersuite_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_ciphersuite Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_ciphersuite, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_protocol_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_protocol_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol
#include "Mono/Unity/UnityTls_unitytls_protocol.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_protocol_t.Invoke
::Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_protocol, false>(this, ___internal__method, ctx, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_protocol_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_get_protocol_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_protocol, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_process_handshake_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_process_handshake_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_process_handshake_t.Invoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, ctx, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_process_handshake_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_process_handshake_t.EndInvoke
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_read_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_read_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_read_t.Invoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, ctx, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_read_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, buffer, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_read_t.EndInvoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_write_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_write_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_write_t.Invoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* data, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, ctx, data, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_write_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* data, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, data, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_write_t.EndInvoke
::System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_notify_close_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_notify_close_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_notify_close_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_notify_close_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_notify_close_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_free_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_free_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::Invoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_free_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::BeginInvoke(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_tlsctx_free_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_random_generate_bytes_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_random_generate_bytes_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_random_generate_bytes_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::Invoke(uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_random_generate_bytes_t.BeginInvoke
::System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::BeginInvoke(uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/Mono.Unity.unitytls_interface_struct/Mono.Unity.unitytls_random_generate_bytes_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTlsContext
#include "Mono/Unity/UnityTlsContext.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: Mono.Security.Interface.MonoTlsConnectionInfo
#include "Mono/Security/Interface/MonoTlsConnectionInfo.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key
#include "Mono/Unity/UnityTls_unitytls_key.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_read_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_read_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_write_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_write_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_certificate_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_certificate_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509name
#include "Mono/Unity/UnityTls_unitytls_x509name.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_key_ref
#include "Mono/Unity/UnityTls_unitytls_key_ref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx* tlsContext
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_tlsctx*& Mono::Unity::UnityTlsContext::dyn_tlsContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_tlsContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tlsContext"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_tlsctx**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list* requestedClientCertChain
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_x509list*& Mono::Unity::UnityTlsContext::dyn_requestedClientCertChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_requestedClientCertChain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestedClientCertChain"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_x509list**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Unity.UnityTls/Mono.Unity.unitytls_key* requestedClientKey
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_key*& Mono::Unity::UnityTlsContext::dyn_requestedClientKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_requestedClientKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestedClientKey"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_key**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_read_callback readCallback
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_tlsctx_read_callback*& Mono::Unity::UnityTlsContext::dyn_readCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_readCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readCallback"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_tlsctx_read_callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_write_callback writeCallback
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_tlsctx_write_callback*& Mono::Unity::UnityTlsContext::dyn_writeCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_writeCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeCallback"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_tlsctx_write_callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_certificate_callback certificateCallback
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback*& Mono::Unity::UnityTlsContext::dyn_certificateCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_certificateCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificateCallback"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Unity.UnityTls/Mono.Unity.unitytls_tlsctx_x509verify_callback verifyCallback
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback*& Mono::Unity::UnityTlsContext::dyn_verifyCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_verifyCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verifyCallback"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate localClientCertificate
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate*& Mono::Unity::UnityTlsContext::dyn_localClientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_localClientCertificate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localClientCertificate"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate remoteCertificate
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate*& Mono::Unity::UnityTlsContext::dyn_remoteCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_remoteCertificate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteCertificate"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.MonoTlsConnectionInfo connectioninfo
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsConnectionInfo*& Mono::Unity::UnityTlsContext::dyn_connectioninfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_connectioninfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectioninfo"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsConnectionInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isAuthenticated
[[deprecated("Use field access instead!")]] bool& Mono::Unity::UnityTlsContext::dyn_isAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_isAuthenticated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isAuthenticated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasContext
[[deprecated("Use field access instead!")]] bool& Mono::Unity::UnityTlsContext::dyn_hasContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_hasContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasContext"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean closedGraceful
[[deprecated("Use field access instead!")]] bool& Mono::Unity::UnityTlsContext::dyn_closedGraceful() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_closedGraceful");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closedGraceful"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] writeBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Unity::UnityTlsContext::dyn_writeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_writeBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] readBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Unity::UnityTlsContext::dyn_readBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_readBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.GCHandle handle
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::GCHandle& Mono::Unity::UnityTlsContext::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Exception lastException
[[deprecated("Use field access instead!")]] ::System::Exception*& Mono::Unity::UnityTlsContext::dyn_lastException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::dyn_lastException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastException"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.ExtractNativeKeyAndChainFromManagedCertificate
void Mono::Unity::UnityTlsContext::ExtractNativeKeyAndChainFromManagedCertificate(::System::Security::Cryptography::X509Certificates::X509Certificate* cert, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState, ByRef<::Mono::Unity::UnityTls::unitytls_x509list*> nativeCertChain, ByRef<::Mono::Unity::UnityTls::unitytls_key*> nativeKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::ExtractNativeKeyAndChainFromManagedCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "ExtractNativeKeyAndChainFromManagedCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert), ::il2cpp_utils::ExtractType(errorState), ::il2cpp_utils::ExtractIndependentType<::Mono::Unity::UnityTls::unitytls_x509list*&>(), ::il2cpp_utils::ExtractIndependentType<::Mono::Unity::UnityTls::unitytls_key*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cert, errorState, byref(nativeCertChain), byref(nativeKey));
}
// Autogenerated method: Mono.Unity.UnityTlsContext.WriteCallback
::System::IntPtr Mono::Unity::UnityTlsContext::WriteCallback(void* userData, uint8_t* data, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::WriteCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "WriteCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userData, data, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.WriteCallback
::System::IntPtr Mono::Unity::UnityTlsContext::WriteCallback(uint8_t* data, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::WriteCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, data, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.ReadCallback
::System::IntPtr Mono::Unity::UnityTlsContext::ReadCallback(void* userData, uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::ReadCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "ReadCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userData, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.ReadCallback
::System::IntPtr Mono::Unity::UnityTlsContext::ReadCallback(uint8_t* buffer, ::System::IntPtr bufferLen, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::ReadCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferLen), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.VerifyCallback
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTlsContext::VerifyCallback(void* userData, ::Mono::Unity::UnityTls::unitytls_x509list_ref chain, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::VerifyCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "VerifyCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userData, chain, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.VerifyCallback
::Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTlsContext::VerifyCallback(::Mono::Unity::UnityTls::unitytls_x509list_ref chain, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::VerifyCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(errorState)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, chain, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.CertificateCallback
void Mono::Unity::UnityTlsContext::CertificateCallback(void* userData, ::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_x509name* caList, ::System::IntPtr caListLen, ::Mono::Unity::UnityTls::unitytls_x509list_ref* chain, ::Mono::Unity::UnityTls::unitytls_key_ref* key, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::CertificateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "CertificateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(cn), ::il2cpp_utils::ExtractType(cnLen), ::il2cpp_utils::ExtractType(caList), ::il2cpp_utils::ExtractType(caListLen), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userData, ctx, cn, cnLen, caList, caListLen, chain, key, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.CertificateCallback
void Mono::Unity::UnityTlsContext::CertificateCallback(::Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* cn, ::System::IntPtr cnLen, ::Mono::Unity::UnityTls::unitytls_x509name* caList, ::System::IntPtr caListLen, ::Mono::Unity::UnityTls::unitytls_x509list_ref* chain, ::Mono::Unity::UnityTls::unitytls_key_ref* key, ::Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::CertificateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CertificateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(cn), ::il2cpp_utils::ExtractType(cnLen), ::il2cpp_utils::ExtractType(caList), ::il2cpp_utils::ExtractType(caListLen), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(errorState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctx, cn, cnLen, caList, caListLen, chain, key, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.get_IsAuthenticated
bool Mono::Unity::UnityTlsContext::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::get_IsAuthenticated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.get_LocalClientCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Unity::UnityTlsContext::get_LocalClientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::get_LocalClientCertificate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.Read
::System::ValueTuple_2<int, bool> Mono::Unity::UnityTlsContext::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, bool>, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.Write
::System::ValueTuple_2<int, bool> Mono::Unity::UnityTlsContext::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, bool>, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.Shutdown
void Mono::Unity::UnityTlsContext::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::Shutdown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.Dispose
void Mono::Unity::UnityTlsContext::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.StartHandshake
void Mono::Unity::UnityTlsContext::StartHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::StartHandshake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.ProcessHandshake
bool Mono::Unity::UnityTlsContext::ProcessHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::ProcessHandshake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.FinishHandshake
void Mono::Unity::UnityTlsContext::FinishHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsContext::FinishHandshake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTlsConversions
#include "Mono/Unity/UnityTlsConversions.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: Mono.Security.Interface.TlsProtocols
#include "Mono/Security/Interface/TlsProtocols.hpp"
// Including type: Mono.Security.Interface.AlertDescription
#include "Mono/Security/Interface/AlertDescription.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainStatusFlags
#include "System/Security/Cryptography/X509Certificates/X509ChainStatusFlags.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_protocol
#include "Mono/Unity/UnityTls_unitytls_protocol.hpp"
// Including type: Mono.Unity.UnityTls/Mono.Unity.unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTlsConversions.GetMinProtocol
::Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTlsConversions::GetMinProtocol(::System::Security::Authentication::SslProtocols protocols) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsConversions::GetMinProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "GetMinProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocols)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_protocol, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, protocols);
}
// Autogenerated method: Mono.Unity.UnityTlsConversions.GetMaxProtocol
::Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTlsConversions::GetMaxProtocol(::System::Security::Authentication::SslProtocols protocols) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsConversions::GetMaxProtocol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "GetMaxProtocol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocols)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_protocol, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, protocols);
}
// Autogenerated method: Mono.Unity.UnityTlsConversions.ConvertProtocolVersion
::Mono::Security::Interface::TlsProtocols Mono::Unity::UnityTlsConversions::ConvertProtocolVersion(::Mono::Unity::UnityTls::unitytls_protocol protocol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsConversions::ConvertProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "ConvertProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(protocol)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::TlsProtocols, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, protocol);
}
// Autogenerated method: Mono.Unity.UnityTlsConversions.VerifyResultToAlertDescription
::Mono::Security::Interface::AlertDescription Mono::Unity::UnityTlsConversions::VerifyResultToAlertDescription(::Mono::Unity::UnityTls::unitytls_x509verify_result verifyResult, ::Mono::Security::Interface::AlertDescription defaultAlert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsConversions::VerifyResultToAlertDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "VerifyResultToAlertDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verifyResult), ::il2cpp_utils::ExtractType(defaultAlert)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::AlertDescription, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verifyResult, defaultAlert);
}
// Autogenerated method: Mono.Unity.UnityTlsConversions.VerifyResultToPolicyErrror
::Mono::Security::Interface::MonoSslPolicyErrors Mono::Unity::UnityTlsConversions::VerifyResultToPolicyErrror(::Mono::Unity::UnityTls::unitytls_x509verify_result verifyResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsConversions::VerifyResultToPolicyErrror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "VerifyResultToPolicyErrror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verifyResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoSslPolicyErrors, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verifyResult);
}
// Autogenerated method: Mono.Unity.UnityTlsConversions.VerifyResultToChainStatus
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags Mono::Unity::UnityTlsConversions::VerifyResultToChainStatus(::Mono::Unity::UnityTls::unitytls_x509verify_result verifyResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsConversions::VerifyResultToChainStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "VerifyResultToChainStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verifyResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, verifyResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTlsProvider
#include "Mono/Unity/UnityTlsProvider.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: Mono.Security.Interface.IMonoSslStream
#include "Mono/Security/Interface/IMonoSslStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: Mono.Security.Interface.ICertificateValidator2
#include "Mono/Security/Interface/ICertificateValidator2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_Name
::StringW Mono::Unity::UnityTlsProvider::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_ID
::System::Guid Mono::Unity::UnityTlsProvider::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::get_ID");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportsSslStream
bool Mono::Unity::UnityTlsProvider::get_SupportsSslStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::get_SupportsSslStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportsMonoExtensions
bool Mono::Unity::UnityTlsProvider::get_SupportsMonoExtensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::get_SupportsMonoExtensions");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportsConnectionInfo
bool Mono::Unity::UnityTlsProvider::get_SupportsConnectionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::get_SupportsConnectionInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportsCleanShutdown
bool Mono::Unity::UnityTlsProvider::get_SupportsCleanShutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::get_SupportsCleanShutdown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportedProtocols
::System::Security::Authentication::SslProtocols Mono::Unity::UnityTlsProvider::get_SupportedProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::get_SupportedProtocols");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Authentication::SslProtocols, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.CreateSslStream
::Mono::Security::Interface::IMonoSslStream* Mono::Unity::UnityTlsProvider::CreateSslStream(::System::IO::Stream* innerStream, bool leaveInnerStreamOpen, ::Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::CreateSslStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::IMonoSslStream*, false>(this, ___internal__method, innerStream, leaveInnerStreamOpen, settings);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.CreateSslStreamInternal
::Mono::Security::Interface::IMonoSslStream* Mono::Unity::UnityTlsProvider::CreateSslStreamInternal(::System::Net::Security::SslStream* sslStream, ::System::IO::Stream* innerStream, bool leaveInnerStreamOpen, ::Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::CreateSslStreamInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::IMonoSslStream*, false>(this, ___internal__method, sslStream, innerStream, leaveInnerStreamOpen, settings);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.ValidateCertificate
bool Mono::Unity::UnityTlsProvider::ValidateCertificate(::Mono::Security::Interface::ICertificateValidator2* validator, ::StringW targetHost, bool serverMode, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* certificates, bool wantsChain, ByRef<::System::Security::Cryptography::X509Certificates::X509Chain*> chain, ByRef<::Mono::Security::Interface::MonoSslPolicyErrors> errors, ByRef<int> status11) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsProvider::ValidateCertificate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Security::Interface::MonoTlsProvider*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, validator, targetHost, serverMode, certificates, wantsChain, byref(chain), byref(errors), byref(status11));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTlsStream
#include "Mono/Unity/UnityTlsStream.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: Mono.Net.Security.MobileTlsContext
#include "Mono/Net/Security/MobileTlsContext.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTlsStream.CreateContext
::Mono::Net::Security::MobileTlsContext* Mono::Unity::UnityTlsStream::CreateContext(bool serverMode, ::StringW targetHost, ::System::Security::Authentication::SslProtocols enabledProtocols, ::System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, bool askForClientCert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::UnityTlsStream::CreateContext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileAuthenticatedStream*), 54));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::MobileTlsContext*, false>(this, ___internal__method, serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, askForClientCert);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.X509ChainImplUnityTls
#include "Mono/Unity/X509ChainImplUnityTls.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElementCollection
#include "System/Security/Cryptography/X509Certificates/X509ChainElementCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainPolicy
#include "System/Security/Cryptography/X509Certificates/X509ChainPolicy.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ChainElementCollection elements
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509ChainElementCollection*& Mono::Unity::X509ChainImplUnityTls::dyn_elements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::X509ChainImplUnityTls::dyn_elements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elements"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509ChainElementCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Unity.UnityTls/Mono.Unity.unitytls_x509list_ref nativeCertificateChain
[[deprecated("Use field access instead!")]] ::Mono::Unity::UnityTls::unitytls_x509list_ref& Mono::Unity::X509ChainImplUnityTls::dyn_nativeCertificateChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::X509ChainImplUnityTls::dyn_nativeCertificateChain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nativeCertificateChain"))->offset;
  return *reinterpret_cast<::Mono::Unity::UnityTls::unitytls_x509list_ref*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ChainPolicy policy
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509ChainPolicy*& Mono::Unity::X509ChainImplUnityTls::dyn_policy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::X509ChainImplUnityTls::dyn_policy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "policy"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509ChainPolicy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Security.Cryptography.X509Certificates.X509ChainStatus> chainStatusList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*& Mono::Unity::X509ChainImplUnityTls::dyn_chainStatusList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::X509ChainImplUnityTls::dyn_chainStatusList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chainStatusList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509ChainStatus>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Unity.X509ChainImplUnityTls.get_NativeCertificateChain
::Mono::Unity::UnityTls::unitytls_x509list_ref Mono::Unity::X509ChainImplUnityTls::get_NativeCertificateChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::X509ChainImplUnityTls::get_NativeCertificateChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NativeCertificateChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Unity::UnityTls::unitytls_x509list_ref, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.X509ChainImplUnityTls.AddStatus
void Mono::Unity::X509ChainImplUnityTls::AddStatus(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::X509ChainImplUnityTls::AddStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorCode);
}
// Autogenerated method: Mono.Unity.X509ChainImplUnityTls.get_IsValid
bool Mono::Unity::X509ChainImplUnityTls::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::X509ChainImplUnityTls::get_IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainImpl*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.X509ChainImplUnityTls.get_ChainElements
::System::Security::Cryptography::X509Certificates::X509ChainElementCollection* Mono::Unity::X509ChainImplUnityTls::get_ChainElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::X509ChainImplUnityTls::get_ChainElements");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainImpl*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainElementCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.X509ChainImplUnityTls.set_ChainPolicy
void Mono::Unity::X509ChainImplUnityTls::set_ChainPolicy(::System::Security::Cryptography::X509Certificates::X509ChainPolicy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::X509ChainImplUnityTls::set_ChainPolicy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainImpl*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Unity.X509ChainImplUnityTls.Reset
void Mono::Unity::X509ChainImplUnityTls::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::X509ChainImplUnityTls::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainImpl*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.X509ChainImplUnityTls.Dispose
void Mono::Unity::X509ChainImplUnityTls::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Unity::X509ChainImplUnityTls::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Security::Cryptography::X509Certificates::X509ChainImpl*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFObject
#include "Mono/Net/CFObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr <Handle>k__BackingField
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::Net::CFObject::dyn_$Handle$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::dyn_$Handle$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handle>k__BackingField"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFObject.get_Handle
::System::IntPtr Mono::Net::CFObject::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::get_Handle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFObject*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFObject.set_Handle
void Mono::Net::CFObject::set_Handle(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::set_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.CFObject.dlopen
::System::IntPtr Mono::Net::CFObject::dlopen(::StringW path, int mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::dlopen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "dlopen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, mode);
}
// Autogenerated method: Mono.Net.CFObject.dlsym
::System::IntPtr Mono::Net::CFObject::dlsym(::System::IntPtr handle, ::StringW symbol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::dlsym");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "dlsym", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(symbol)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, symbol);
}
// Autogenerated method: Mono.Net.CFObject.dlclose
void Mono::Net::CFObject::dlclose(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::dlclose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "dlclose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFObject.GetIndirect
::System::IntPtr Mono::Net::CFObject::GetIndirect(::System::IntPtr handle, ::StringW symbol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::GetIndirect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "GetIndirect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(symbol)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, symbol);
}
// Autogenerated method: Mono.Net.CFObject.GetCFObjectHandle
::System::IntPtr Mono::Net::CFObject::GetCFObjectHandle(::System::IntPtr handle, ::StringW symbol) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::GetCFObjectHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "GetCFObjectHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(symbol)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, symbol);
}
// Autogenerated method: Mono.Net.CFObject.CFRetain
::System::IntPtr Mono::Net::CFObject::CFRetain(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::CFRetain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "CFRetain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFObject.Retain
void Mono::Net::CFObject::Retain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::Retain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Retain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFObject.CFRelease
void Mono::Net::CFObject::CFRelease(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::CFRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "CFRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFObject.Release
void Mono::Net::CFObject::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFObject.Dispose
void Mono::Net::CFObject::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFObject*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Net.CFObject.Dispose
void Mono::Net::CFObject::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFObject*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFObject.Finalize
void Mono::Net::CFObject::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFObject::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFArray
#include "Mono/Net/CFArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr kCFTypeArrayCallbacks
::System::IntPtr Mono::Net::CFArray::_get_kCFTypeArrayCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFArray::_get_kCFTypeArrayCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFArray", "kCFTypeArrayCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr kCFTypeArrayCallbacks
void Mono::Net::CFArray::_set_kCFTypeArrayCallbacks(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFArray::_set_kCFTypeArrayCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFArray", "kCFTypeArrayCallbacks", value));
}
// Autogenerated method: Mono.Net.CFArray.get_Count
int Mono::Net::CFArray::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFArray::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFArray.get_Item
::System::IntPtr Mono::Net::CFArray::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFArray::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, index);
}
// Autogenerated method: Mono.Net.CFArray..cctor
void Mono::Net::CFArray::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFArray::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFArray", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFArray.CFArrayGetCount
::System::IntPtr Mono::Net::CFArray::CFArrayGetCount(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFArray::CFArrayGetCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFArray", "CFArrayGetCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFArray.CFArrayGetValueAtIndex
::System::IntPtr Mono::Net::CFArray::CFArrayGetValueAtIndex(::System::IntPtr handle, ::System::IntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFArray::CFArrayGetValueAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFArray", "CFArrayGetValueAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFNumber
#include "Mono/Net/CFNumber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFNumber.CFNumberGetValue
bool Mono::Net::CFNumber::CFNumberGetValue(::System::IntPtr handle, ::System::IntPtr type, ByRef<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNumber::CFNumberGetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNumber", "CFNumberGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, type, byref(value));
}
// Autogenerated method: Mono.Net.CFNumber.AsInt32
int Mono::Net::CFNumber::AsInt32(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNumber::AsInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNumber", "AsInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFRange
#include "Mono/Net/CFRange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr Location
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::Net::CFRange::dyn_Location() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRange::dyn_Location");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Location"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr Length
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::Net::CFRange::dyn_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRange::dyn_Length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Length"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFRange..ctor
Mono::Net::CFRange::CFRange(int loc, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRange::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loc), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loc, len);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFString
#include "Mono/Net/CFString.hpp"
// Including type: Mono.Net.CFRange
#include "Mono/Net/CFRange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String str
[[deprecated("Use field access instead!")]] ::StringW& Mono::Net::CFString::dyn_str() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFString::dyn_str");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "str"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFString.CFStringCreateWithCharacters
::System::IntPtr Mono::Net::CFString::CFStringCreateWithCharacters(::System::IntPtr alloc, ::System::IntPtr chars, ::System::IntPtr length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFString::CFStringCreateWithCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFString", "CFStringCreateWithCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alloc), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, alloc, chars, length);
}
// Autogenerated method: Mono.Net.CFString.Create
::Mono::Net::CFString* Mono::Net::CFString::Create(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFString::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFString", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::CFString*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.Net.CFString.CFStringGetLength
::System::IntPtr Mono::Net::CFString::CFStringGetLength(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFString::CFStringGetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFString", "CFStringGetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFString.CFStringGetCharactersPtr
::System::IntPtr Mono::Net::CFString::CFStringGetCharactersPtr(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFString::CFStringGetCharactersPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFString", "CFStringGetCharactersPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFString.CFStringGetCharacters
::System::IntPtr Mono::Net::CFString::CFStringGetCharacters(::System::IntPtr handle, ::Mono::Net::CFRange range, ::System::IntPtr buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFString::CFStringGetCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFString", "CFStringGetCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(range), ::il2cpp_utils::ExtractType(buffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, range, buffer);
}
// Autogenerated method: Mono.Net.CFString.AsString
::StringW Mono::Net::CFString::AsString(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFString::AsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFString", "AsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFString.ToString
::StringW Mono::Net::CFString::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFString::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFDictionary
#include "Mono/Net/CFDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr KeyCallbacks
::System::IntPtr Mono::Net::CFDictionary::_get_KeyCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFDictionary::_get_KeyCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFDictionary", "KeyCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr KeyCallbacks
void Mono::Net::CFDictionary::_set_KeyCallbacks(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFDictionary::_set_KeyCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFDictionary", "KeyCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr ValueCallbacks
::System::IntPtr Mono::Net::CFDictionary::_get_ValueCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFDictionary::_get_ValueCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFDictionary", "ValueCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr ValueCallbacks
void Mono::Net::CFDictionary::_set_ValueCallbacks(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFDictionary::_set_ValueCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFDictionary", "ValueCallbacks", value));
}
// Autogenerated method: Mono.Net.CFDictionary.get_Item
::System::IntPtr Mono::Net::CFDictionary::get_Item(::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFDictionary::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, key);
}
// Autogenerated method: Mono.Net.CFDictionary..cctor
void Mono::Net::CFDictionary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFDictionary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFDictionary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFDictionary.CFDictionaryGetValue
::System::IntPtr Mono::Net::CFDictionary::CFDictionaryGetValue(::System::IntPtr handle, ::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFDictionary::CFDictionaryGetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFDictionary", "CFDictionaryGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, key);
}
// Autogenerated method: Mono.Net.CFDictionary.GetValue
::System::IntPtr Mono::Net::CFDictionary::GetValue(::System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFDictionary::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFUrl
#include "Mono/Net/CFUrl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFUrl.CFURLCreateWithString
::System::IntPtr Mono::Net::CFUrl::CFURLCreateWithString(::System::IntPtr allocator, ::System::IntPtr str, ::System::IntPtr baseURL) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFUrl::CFURLCreateWithString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFUrl", "CFURLCreateWithString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allocator), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(baseURL)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, allocator, str, baseURL);
}
// Autogenerated method: Mono.Net.CFUrl.Create
::Mono::Net::CFUrl* Mono::Net::CFUrl::Create(::StringW absolute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFUrl::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFUrl", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(absolute)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::CFUrl*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, absolute);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFRunLoop
#include "Mono/Net/CFRunLoop.hpp"
// Including type: Mono.Net.CFString
#include "Mono/Net/CFString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFRunLoop.get_CurrentRunLoop
::Mono::Net::CFRunLoop* Mono::Net::CFRunLoop::get_CurrentRunLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::get_CurrentRunLoop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "get_CurrentRunLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::CFRunLoop*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopAddSource
void Mono::Net::CFRunLoop::CFRunLoopAddSource(::System::IntPtr rl, ::System::IntPtr source, ::System::IntPtr mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::CFRunLoopAddSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopAddSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rl), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rl, source, mode);
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopRemoveSource
void Mono::Net::CFRunLoop::CFRunLoopRemoveSource(::System::IntPtr rl, ::System::IntPtr source, ::System::IntPtr mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::CFRunLoopRemoveSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopRemoveSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rl), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rl, source, mode);
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopRunInMode
int Mono::Net::CFRunLoop::CFRunLoopRunInMode(::System::IntPtr mode, double seconds, bool returnAfterSourceHandled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::CFRunLoopRunInMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopRunInMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(seconds), ::il2cpp_utils::ExtractType(returnAfterSourceHandled)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mode, seconds, returnAfterSourceHandled);
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopGetCurrent
::System::IntPtr Mono::Net::CFRunLoop::CFRunLoopGetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::CFRunLoopGetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopGetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopStop
void Mono::Net::CFRunLoop::CFRunLoopStop(::System::IntPtr rl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::CFRunLoopStop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rl);
}
// Autogenerated method: Mono.Net.CFRunLoop.AddSource
void Mono::Net::CFRunLoop::AddSource(::System::IntPtr source, ::Mono::Net::CFString* mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::AddSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, mode);
}
// Autogenerated method: Mono.Net.CFRunLoop.RemoveSource
void Mono::Net::CFRunLoop::RemoveSource(::System::IntPtr source, ::Mono::Net::CFString* mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::RemoveSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, mode);
}
// Autogenerated method: Mono.Net.CFRunLoop.RunInMode
int Mono::Net::CFRunLoop::RunInMode(::Mono::Net::CFString* mode, double seconds, bool returnAfterSourceHandled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::RunInMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunInMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(seconds), ::il2cpp_utils::ExtractType(returnAfterSourceHandled)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, mode, seconds, returnAfterSourceHandled);
}
// Autogenerated method: Mono.Net.CFRunLoop.Stop
void Mono::Net::CFRunLoop::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFRunLoop::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFProxyType
#include "Mono/Net/CFProxyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType None
::Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType None
void Mono::Net::CFProxyType::_set_None(::Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType AutoConfigurationUrl
::Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_AutoConfigurationUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_get_AutoConfigurationUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "AutoConfigurationUrl"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType AutoConfigurationUrl
void Mono::Net::CFProxyType::_set_AutoConfigurationUrl(::Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_set_AutoConfigurationUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "AutoConfigurationUrl", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType AutoConfigurationJavaScript
::Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_AutoConfigurationJavaScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_get_AutoConfigurationJavaScript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "AutoConfigurationJavaScript"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType AutoConfigurationJavaScript
void Mono::Net::CFProxyType::_set_AutoConfigurationJavaScript(::Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_set_AutoConfigurationJavaScript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "AutoConfigurationJavaScript", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType FTP
::Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_FTP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_get_FTP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "FTP"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType FTP
void Mono::Net::CFProxyType::_set_FTP(::Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_set_FTP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "FTP", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType HTTP
::Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_HTTP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_get_HTTP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "HTTP"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType HTTP
void Mono::Net::CFProxyType::_set_HTTP(::Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_set_HTTP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "HTTP", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType HTTPS
::Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_HTTPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_get_HTTPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "HTTPS"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType HTTPS
void Mono::Net::CFProxyType::_set_HTTPS(::Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_set_HTTPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "HTTPS", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType SOCKS
::Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_SOCKS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_get_SOCKS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "SOCKS"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType SOCKS
void Mono::Net::CFProxyType::_set_SOCKS(::Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::_set_SOCKS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "SOCKS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Net::CFProxyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFProxy
#include "Mono/Net/CFProxy.hpp"
// Including type: Mono.Net.CFDictionary
#include "Mono/Net/CFDictionary.hpp"
// Including type: Mono.Net.CFProxyType
#include "Mono/Net/CFProxyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyAutoConfigurationJavaScriptKey
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyAutoConfigurationJavaScriptKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyAutoConfigurationJavaScriptKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyAutoConfigurationJavaScriptKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyAutoConfigurationJavaScriptKey
void Mono::Net::CFProxy::_set_kCFProxyAutoConfigurationJavaScriptKey(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyAutoConfigurationJavaScriptKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyAutoConfigurationJavaScriptKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyAutoConfigurationURLKey
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyAutoConfigurationURLKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyAutoConfigurationURLKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyAutoConfigurationURLKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyAutoConfigurationURLKey
void Mono::Net::CFProxy::_set_kCFProxyAutoConfigurationURLKey(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyAutoConfigurationURLKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyAutoConfigurationURLKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyHostNameKey
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyHostNameKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyHostNameKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyHostNameKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyHostNameKey
void Mono::Net::CFProxy::_set_kCFProxyHostNameKey(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyHostNameKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyHostNameKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyPasswordKey
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyPasswordKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyPasswordKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyPasswordKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyPasswordKey
void Mono::Net::CFProxy::_set_kCFProxyPasswordKey(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyPasswordKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyPasswordKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyPortNumberKey
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyPortNumberKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyPortNumberKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyPortNumberKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyPortNumberKey
void Mono::Net::CFProxy::_set_kCFProxyPortNumberKey(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyPortNumberKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyPortNumberKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeKey
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyTypeKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeKey
void Mono::Net::CFProxy::_set_kCFProxyTypeKey(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyTypeKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyUsernameKey
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyUsernameKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyUsernameKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyUsernameKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyUsernameKey
void Mono::Net::CFProxy::_set_kCFProxyUsernameKey(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyUsernameKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyUsernameKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeAutoConfigurationURL
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeAutoConfigurationURL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyTypeAutoConfigurationURL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeAutoConfigurationURL"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeAutoConfigurationURL
void Mono::Net::CFProxy::_set_kCFProxyTypeAutoConfigurationURL(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyTypeAutoConfigurationURL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeAutoConfigurationURL", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeAutoConfigurationJavaScript
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeAutoConfigurationJavaScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyTypeAutoConfigurationJavaScript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeAutoConfigurationJavaScript"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeAutoConfigurationJavaScript
void Mono::Net::CFProxy::_set_kCFProxyTypeAutoConfigurationJavaScript(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyTypeAutoConfigurationJavaScript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeAutoConfigurationJavaScript", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeFTP
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeFTP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyTypeFTP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeFTP"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeFTP
void Mono::Net::CFProxy::_set_kCFProxyTypeFTP(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyTypeFTP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeFTP", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeHTTP
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeHTTP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyTypeHTTP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeHTTP"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeHTTP
void Mono::Net::CFProxy::_set_kCFProxyTypeHTTP(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyTypeHTTP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeHTTP", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeHTTPS
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeHTTPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyTypeHTTPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeHTTPS"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeHTTPS
void Mono::Net::CFProxy::_set_kCFProxyTypeHTTPS(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyTypeHTTPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeHTTPS", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeSOCKS
::System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeSOCKS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_get_kCFProxyTypeSOCKS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeSOCKS"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeSOCKS
void Mono::Net::CFProxy::_set_kCFProxyTypeSOCKS(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::_set_kCFProxyTypeSOCKS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeSOCKS", value));
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.CFDictionary settings
[[deprecated("Use field access instead!")]] ::Mono::Net::CFDictionary*& Mono::Net::CFProxy::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::Mono::Net::CFDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFProxy.get_AutoConfigurationJavaScript
::System::IntPtr Mono::Net::CFProxy::get_AutoConfigurationJavaScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::get_AutoConfigurationJavaScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutoConfigurationJavaScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_AutoConfigurationUrl
::System::IntPtr Mono::Net::CFProxy::get_AutoConfigurationUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::get_AutoConfigurationUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutoConfigurationUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_HostName
::StringW Mono::Net::CFProxy::get_HostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::get_HostName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HostName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_Password
::StringW Mono::Net::CFProxy::get_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::get_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_Port
int Mono::Net::CFProxy::get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::get_Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_ProxyType
::Mono::Net::CFProxyType Mono::Net::CFProxy::get_ProxyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::get_ProxyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProxyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::CFProxyType, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_Username
::StringW Mono::Net::CFProxy::get_Username() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::get_Username");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Username", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy..cctor
void Mono::Net::CFProxy::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFProxy", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.CFProxyTypeToEnum
::Mono::Net::CFProxyType Mono::Net::CFProxy::CFProxyTypeToEnum(::System::IntPtr type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxy::CFProxyTypeToEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFProxy", "CFProxyTypeToEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::CFProxyType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFProxySettings
#include "Mono/Net/CFProxySettings.hpp"
// Including type: Mono.Net.CFDictionary
#include "Mono/Net/CFDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesHTTPEnable
::System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPEnable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPEnable"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesHTTPEnable
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPEnable(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPEnable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPEnable", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesHTTPPort
::System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPPort"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesHTTPPort
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPPort(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPPort", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesHTTPProxy
::System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPProxy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPProxy"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesHTTPProxy
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPProxy(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPProxy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPProxy", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigEnable
::System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigEnable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigEnable"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigEnable
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigEnable(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigEnable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigEnable", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigJavaScript
::System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigJavaScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigJavaScript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigJavaScript"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigJavaScript
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigJavaScript(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigJavaScript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigJavaScript", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigURLString
::System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigURLString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigURLString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigURLString"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigURLString
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigURLString(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigURLString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigURLString", value));
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.CFDictionary settings
[[deprecated("Use field access instead!")]] ::Mono::Net::CFDictionary*& Mono::Net::CFProxySettings::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::Mono::Net::CFDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFProxySettings.get_Dictionary
::Mono::Net::CFDictionary* Mono::Net::CFProxySettings::get_Dictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::get_Dictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Dictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::CFDictionary*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxySettings..cctor
void Mono::Net::CFProxySettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFProxySettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFProxySettings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFNetwork
#include "Mono/Net/CFNetwork.hpp"
// Including type: Mono.Net.CFNetwork/Mono.Net.GetProxyData
#include "Mono/Net/CFNetwork_GetProxyData.hpp"
// Including type: Mono.Net.CFNetwork/Mono.Net.CFProxyAutoConfigurationResultCallback
#include "Mono/Net/CFNetwork_CFProxyAutoConfigurationResultCallback.hpp"
// Including type: Mono.Net.CFNetwork/Mono.Net.CFWebProxy
#include "Mono/Net/CFNetwork_CFWebProxy.hpp"
// Including type: Mono.Net.CFNetwork/Mono.Net.<>c__DisplayClass13_0
#include "Mono/Net/CFNetwork_--c__DisplayClass13_0.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Threading.AutoResetEvent
#include "System/Threading/AutoResetEvent.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Mono.Net.CFStreamClientContext
#include "Mono/Net/CFStreamClientContext.hpp"
// Including type: Mono.Net.CFArray
#include "Mono/Net/CFArray.hpp"
// Including type: Mono.Net.CFUrl
#include "Mono/Net/CFUrl.hpp"
// Including type: Mono.Net.CFProxy
#include "Mono/Net/CFProxy.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: Mono.Net.CFDictionary
#include "Mono/Net/CFDictionary.hpp"
// Including type: Mono.Net.CFProxySettings
#include "Mono/Net/CFProxySettings.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object lock_obj
::Il2CppObject* Mono::Net::CFNetwork::_get_lock_obj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::_get_lock_obj");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Mono.Net", "CFNetwork", "lock_obj"));
}
// Autogenerated static field setter
// Set static field: static private System.Object lock_obj
void Mono::Net::CFNetwork::_set_lock_obj(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::_set_lock_obj");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFNetwork", "lock_obj", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Queue`1<Mono.Net.CFNetwork/Mono.Net.GetProxyData> get_proxy_queue
::System::Collections::Generic::Queue_1<::Mono::Net::CFNetwork::GetProxyData*>* Mono::Net::CFNetwork::_get_get_proxy_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::_get_get_proxy_queue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::Queue_1<::Mono::Net::CFNetwork::GetProxyData*>*>("Mono.Net", "CFNetwork", "get_proxy_queue"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Queue`1<Mono.Net.CFNetwork/Mono.Net.GetProxyData> get_proxy_queue
void Mono::Net::CFNetwork::_set_get_proxy_queue(::System::Collections::Generic::Queue_1<::Mono::Net::CFNetwork::GetProxyData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::_set_get_proxy_queue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFNetwork", "get_proxy_queue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.AutoResetEvent proxy_event
::System::Threading::AutoResetEvent* Mono::Net::CFNetwork::_get_proxy_event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::_get_proxy_event");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::AutoResetEvent*>("Mono.Net", "CFNetwork", "proxy_event"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.AutoResetEvent proxy_event
void Mono::Net::CFNetwork::_set_proxy_event(::System::Threading::AutoResetEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::_set_proxy_event");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFNetwork", "proxy_event", value));
}
// Autogenerated method: Mono.Net.CFNetwork..cctor
void Mono::Net::CFNetwork::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopyProxiesForAutoConfigurationScriptSequential
::System::IntPtr Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScriptSequential(::System::IntPtr proxyAutoConfigurationScript, ::System::IntPtr targetURL, ByRef<::System::IntPtr> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScriptSequential");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopyProxiesForAutoConfigurationScriptSequential", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigurationScript), ::il2cpp_utils::ExtractType(targetURL), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetURL, byref(error));
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkExecuteProxyAutoConfigurationURL
::System::IntPtr Mono::Net::CFNetwork::CFNetworkExecuteProxyAutoConfigurationURL(::System::IntPtr proxyAutoConfigURL, ::System::IntPtr targetURL, ::Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback* cb, ByRef<::Mono::Net::CFStreamClientContext> clientContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFNetworkExecuteProxyAutoConfigurationURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkExecuteProxyAutoConfigurationURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigURL), ::il2cpp_utils::ExtractType(targetURL), ::il2cpp_utils::ExtractType(cb), ::il2cpp_utils::ExtractType(clientContext)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigURL, targetURL, cb, byref(clientContext));
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopyProxiesForAutoConfigurationScriptThread
void Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScriptThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScriptThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopyProxiesForAutoConfigurationScriptThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopyProxiesForAutoConfigurationScript
::System::IntPtr Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScript(::System::IntPtr proxyAutoConfigurationScript, ::System::IntPtr targetURL, ByRef<::System::IntPtr> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopyProxiesForAutoConfigurationScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigurationScript), ::il2cpp_utils::ExtractType(targetURL), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetURL, byref(error));
}
// Autogenerated method: Mono.Net.CFNetwork.CopyProxiesForAutoConfigurationScript
::Mono::Net::CFArray* Mono::Net::CFNetwork::CopyProxiesForAutoConfigurationScript(::System::IntPtr proxyAutoConfigurationScript, ::Mono::Net::CFUrl* targetURL) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CopyProxiesForAutoConfigurationScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CopyProxiesForAutoConfigurationScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigurationScript), ::il2cpp_utils::ExtractType(targetURL)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::CFArray*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetURL);
}
// Autogenerated method: Mono.Net.CFNetwork.GetProxiesForAutoConfigurationScript
::ArrayW<::Mono::Net::CFProxy*> Mono::Net::CFNetwork::GetProxiesForAutoConfigurationScript(::System::IntPtr proxyAutoConfigurationScript, ::Mono::Net::CFUrl* targetURL) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxiesForAutoConfigurationScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetProxiesForAutoConfigurationScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigurationScript), ::il2cpp_utils::ExtractType(targetURL)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Net::CFProxy*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetURL);
}
// Autogenerated method: Mono.Net.CFNetwork.GetProxiesForAutoConfigurationScript
::ArrayW<::Mono::Net::CFProxy*> Mono::Net::CFNetwork::GetProxiesForAutoConfigurationScript(::System::IntPtr proxyAutoConfigurationScript, ::System::Uri* targetUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxiesForAutoConfigurationScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetProxiesForAutoConfigurationScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigurationScript), ::il2cpp_utils::ExtractType(targetUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Net::CFProxy*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetUri);
}
// Autogenerated method: Mono.Net.CFNetwork.ExecuteProxyAutoConfigurationURL
::ArrayW<::Mono::Net::CFProxy*> Mono::Net::CFNetwork::ExecuteProxyAutoConfigurationURL(::System::IntPtr proxyAutoConfigURL, ::System::Uri* targetURL) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::ExecuteProxyAutoConfigurationURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "ExecuteProxyAutoConfigurationURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigURL), ::il2cpp_utils::ExtractType(targetURL)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Net::CFProxy*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigURL, targetURL);
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopyProxiesForURL
::System::IntPtr Mono::Net::CFNetwork::CFNetworkCopyProxiesForURL(::System::IntPtr url, ::System::IntPtr proxySettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFNetworkCopyProxiesForURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopyProxiesForURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(proxySettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, proxySettings);
}
// Autogenerated method: Mono.Net.CFNetwork.CopyProxiesForURL
::Mono::Net::CFArray* Mono::Net::CFNetwork::CopyProxiesForURL(::Mono::Net::CFUrl* url, ::Mono::Net::CFDictionary* proxySettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CopyProxiesForURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CopyProxiesForURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(proxySettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::CFArray*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, proxySettings);
}
// Autogenerated method: Mono.Net.CFNetwork.GetProxiesForURL
::ArrayW<::Mono::Net::CFProxy*> Mono::Net::CFNetwork::GetProxiesForURL(::Mono::Net::CFUrl* url, ::Mono::Net::CFProxySettings* proxySettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxiesForURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetProxiesForURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(proxySettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Net::CFProxy*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, url, proxySettings);
}
// Autogenerated method: Mono.Net.CFNetwork.GetProxiesForUri
::ArrayW<::Mono::Net::CFProxy*> Mono::Net::CFNetwork::GetProxiesForUri(::System::Uri* uri, ::Mono::Net::CFProxySettings* proxySettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxiesForUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetProxiesForUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(proxySettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Net::CFProxy*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri, proxySettings);
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopySystemProxySettings
::System::IntPtr Mono::Net::CFNetwork::CFNetworkCopySystemProxySettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFNetworkCopySystemProxySettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopySystemProxySettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork.GetSystemProxySettings
::Mono::Net::CFProxySettings* Mono::Net::CFNetwork::GetSystemProxySettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetSystemProxySettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetSystemProxySettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::CFProxySettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork.GetDefaultProxy
::System::Net::IWebProxy* Mono::Net::CFNetwork::GetDefaultProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetDefaultProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetDefaultProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IWebProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFNetwork/Mono.Net.GetProxyData
#include "Mono/Net/CFNetwork_GetProxyData.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr script
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::Net::CFNetwork::GetProxyData::dyn_script() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxyData::dyn_script");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "script"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr targetUri
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::Net::CFNetwork::GetProxyData::dyn_targetUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxyData::dyn_targetUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetUri"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr error
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::Net::CFNetwork::GetProxyData::dyn_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxyData::dyn_error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "error"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr result
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::Net::CFNetwork::GetProxyData::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxyData::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.ManualResetEvent evt
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& Mono::Net::CFNetwork::GetProxyData::dyn_evt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxyData::dyn_evt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "evt"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.GetProxyData.Dispose
void Mono::Net::CFNetwork::GetProxyData::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::GetProxyData::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFNetwork::GetProxyData*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFNetwork/Mono.Net.CFProxyAutoConfigurationResultCallback
#include "Mono/Net/CFNetwork_CFProxyAutoConfigurationResultCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFProxyAutoConfigurationResultCallback.Invoke
void Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::Invoke(::System::IntPtr client, ::System::IntPtr proxyList, ::System::IntPtr error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client, proxyList, error);
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFProxyAutoConfigurationResultCallback.BeginInvoke
::System::IAsyncResult* Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::BeginInvoke(::System::IntPtr client, ::System::IntPtr proxyList, ::System::IntPtr error, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, client, proxyList, error, callback, object);
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFProxyAutoConfigurationResultCallback.EndInvoke
void Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFNetwork/Mono.Net.CFWebProxy
#include "Mono/Net/CFNetwork_CFWebProxy.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: Mono.Net.CFProxy
#include "Mono/Net/CFProxy.hpp"
// Including type: System.Net.NetworkCredential
#include "System/Net/NetworkCredential.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.ICredentials credentials
[[deprecated("Use field access instead!")]] ::System::Net::ICredentials*& Mono::Net::CFNetwork::CFWebProxy::dyn_credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFWebProxy::dyn_credentials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "credentials"))->offset;
  return *reinterpret_cast<::System::Net::ICredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean userSpecified
[[deprecated("Use field access instead!")]] bool& Mono::Net::CFNetwork::CFWebProxy::dyn_userSpecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFWebProxy::dyn_userSpecified");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userSpecified"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFWebProxy.get_Credentials
::System::Net::ICredentials* Mono::Net::CFNetwork::CFWebProxy::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFWebProxy::get_Credentials");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFNetwork::CFWebProxy*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFWebProxy.GetProxyUri
::System::Uri* Mono::Net::CFNetwork::CFWebProxy::GetProxyUri(::Mono::Net::CFProxy* proxy, ByRef<::System::Net::NetworkCredential*> credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFWebProxy::GetProxyUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork/CFWebProxy", "GetProxyUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxy), ::il2cpp_utils::ExtractIndependentType<::System::Net::NetworkCredential*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxy, byref(credentials));
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFWebProxy.GetProxyUriFromScript
::System::Uri* Mono::Net::CFNetwork::CFWebProxy::GetProxyUriFromScript(::System::IntPtr script, ::System::Uri* targetUri, ByRef<::System::Net::NetworkCredential*> credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFWebProxy::GetProxyUriFromScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork/CFWebProxy", "GetProxyUriFromScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(script), ::il2cpp_utils::ExtractType(targetUri), ::il2cpp_utils::ExtractIndependentType<::System::Net::NetworkCredential*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, script, targetUri, byref(credentials));
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFWebProxy.ExecuteProxyAutoConfigurationURL
::System::Uri* Mono::Net::CFNetwork::CFWebProxy::ExecuteProxyAutoConfigurationURL(::System::IntPtr proxyAutoConfigURL, ::System::Uri* targetUri, ByRef<::System::Net::NetworkCredential*> credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFWebProxy::ExecuteProxyAutoConfigurationURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork/CFWebProxy", "ExecuteProxyAutoConfigurationURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxyAutoConfigURL), ::il2cpp_utils::ExtractType(targetUri), ::il2cpp_utils::ExtractIndependentType<::System::Net::NetworkCredential*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxyAutoConfigURL, targetUri, byref(credentials));
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFWebProxy.SelectProxy
::System::Uri* Mono::Net::CFNetwork::CFWebProxy::SelectProxy(::ArrayW<::Mono::Net::CFProxy*> proxies, ::System::Uri* targetUri, ByRef<::System::Net::NetworkCredential*> credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFWebProxy::SelectProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork/CFWebProxy", "SelectProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxies), ::il2cpp_utils::ExtractType(targetUri), ::il2cpp_utils::ExtractIndependentType<::System::Net::NetworkCredential*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxies, targetUri, byref(credentials));
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFWebProxy.GetProxy
::System::Uri* Mono::Net::CFNetwork::CFWebProxy::GetProxy(::System::Uri* targetUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFWebProxy::GetProxy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFNetwork::CFWebProxy*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, targetUri);
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.CFWebProxy.IsBypassed
bool Mono::Net::CFNetwork::CFWebProxy::IsBypassed(::System::Uri* targetUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::CFWebProxy::IsBypassed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::CFNetwork::CFWebProxy*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, targetUri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFNetwork/Mono.Net.<>c__DisplayClass13_0
#include "Mono/Net/CFNetwork_--c__DisplayClass13_0.hpp"
// Including type: Mono.Net.CFProxy
#include "Mono/Net/CFProxy.hpp"
// Including type: Mono.Net.CFRunLoop
#include "Mono/Net/CFRunLoop.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Mono.Net.CFProxy[] proxies
[[deprecated("Use field access instead!")]] ::ArrayW<::Mono::Net::CFProxy*>& Mono::Net::CFNetwork::$$c__DisplayClass13_0::dyn_proxies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::$$c__DisplayClass13_0::dyn_proxies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "proxies"))->offset;
  return *reinterpret_cast<::ArrayW<::Mono::Net::CFProxy*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.CFRunLoop runLoop
[[deprecated("Use field access instead!")]] ::Mono::Net::CFRunLoop*& Mono::Net::CFNetwork::$$c__DisplayClass13_0::dyn_runLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::$$c__DisplayClass13_0::dyn_runLoop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runLoop"))->offset;
  return *reinterpret_cast<::Mono::Net::CFRunLoop**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.CFNetwork/Mono.Net.<>c__DisplayClass13_0.<ExecuteProxyAutoConfigurationURL>b__0
void Mono::Net::CFNetwork::$$c__DisplayClass13_0::$ExecuteProxyAutoConfigurationURL$b__0(::System::IntPtr client, ::System::IntPtr proxyList, ::System::IntPtr error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::CFNetwork::$$c__DisplayClass13_0::<ExecuteProxyAutoConfigurationURL>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ExecuteProxyAutoConfigurationURL>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(client), ::il2cpp_utils::ExtractType(proxyList), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, client, proxyList, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.BufferOffsetSize
#include "Mono/Net/Security/BufferOffsetSize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte[] Buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Net::Security::BufferOffsetSize::dyn_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize::dyn_Buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Offset
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::BufferOffsetSize::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize::dyn_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Size
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::BufferOffsetSize::dyn_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize::dyn_Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 TotalBytes
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::BufferOffsetSize::dyn_TotalBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize::dyn_TotalBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalBytes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Complete
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::BufferOffsetSize::dyn_Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize::dyn_Complete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Complete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize.get_EndOffset
int Mono::Net::Security::BufferOffsetSize::get_EndOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize::get_EndOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize.get_Remaining
int Mono::Net::Security::BufferOffsetSize::get_Remaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize::get_Remaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Remaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize.ToString
::StringW Mono::Net::Security::BufferOffsetSize::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.BufferOffsetSize2
#include "Mono/Net/Security/BufferOffsetSize2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 InitialSize
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::BufferOffsetSize2::dyn_InitialSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize2::dyn_InitialSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InitialSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize2.Reset
void Mono::Net::Security::BufferOffsetSize2::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize2::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize2.MakeRoom
void Mono::Net::Security::BufferOffsetSize2::MakeRoom(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize2::MakeRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize2.AppendData
void Mono::Net::Security::BufferOffsetSize2::AppendData(::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::BufferOffsetSize2::AppendData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.AsyncOperationStatus Initialize
::Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncOperationStatus::_get_Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncOperationStatus::_get_Initialize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::Security::AsyncOperationStatus>("Mono.Net.Security", "AsyncOperationStatus", "Initialize"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.AsyncOperationStatus Initialize
void Mono::Net::Security::AsyncOperationStatus::_set_Initialize(::Mono::Net::Security::AsyncOperationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncOperationStatus::_set_Initialize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "AsyncOperationStatus", "Initialize", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.AsyncOperationStatus Continue
::Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncOperationStatus::_get_Continue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncOperationStatus::_get_Continue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::Security::AsyncOperationStatus>("Mono.Net.Security", "AsyncOperationStatus", "Continue"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.AsyncOperationStatus Continue
void Mono::Net::Security::AsyncOperationStatus::_set_Continue(::Mono::Net::Security::AsyncOperationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncOperationStatus::_set_Continue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "AsyncOperationStatus", "Continue", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.AsyncOperationStatus ReadDone
::Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncOperationStatus::_get_ReadDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncOperationStatus::_get_ReadDone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::Security::AsyncOperationStatus>("Mono.Net.Security", "AsyncOperationStatus", "ReadDone"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.AsyncOperationStatus ReadDone
void Mono::Net::Security::AsyncOperationStatus::_set_ReadDone(::Mono::Net::Security::AsyncOperationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncOperationStatus::_set_ReadDone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "AsyncOperationStatus", "ReadDone", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.AsyncOperationStatus Complete
::Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncOperationStatus::_get_Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncOperationStatus::_get_Complete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::Security::AsyncOperationStatus>("Mono.Net.Security", "AsyncOperationStatus", "Complete"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.AsyncOperationStatus Complete
void Mono::Net::Security::AsyncOperationStatus::_set_Complete(::Mono::Net::Security::AsyncOperationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncOperationStatus::_set_Complete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "AsyncOperationStatus", "Complete", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncOperationStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncOperationStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <UserResult>k__BackingField
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncProtocolResult::dyn_$UserResult$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolResult::dyn_$UserResult$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UserResult>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Runtime.ExceptionServices.ExceptionDispatchInfo <Error>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Runtime::ExceptionServices::ExceptionDispatchInfo*& Mono::Net::Security::AsyncProtocolResult::dyn_$Error$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolResult::dyn_$Error$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Error>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Runtime::ExceptionServices::ExceptionDispatchInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolResult.get_UserResult
int Mono::Net::Security::AsyncProtocolResult::get_UserResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolResult::get_UserResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolResult.get_Error
::System::Runtime::ExceptionServices::ExceptionDispatchInfo* Mono::Net::Security::AsyncProtocolResult::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolResult::get_Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::ExceptionServices::ExceptionDispatchInfo*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.AsyncProtocolRequest
#include "Mono/Net/Security/AsyncProtocolRequest.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<StartOperation>d__23
#include "Mono/Net/Security/AsyncProtocolRequest_-StartOperation-d__23.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<ProcessOperation>d__24
#include "Mono/Net/Security/AsyncProtocolRequest_-ProcessOperation-d__24.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<InnerRead>d__25
#include "Mono/Net/Security/AsyncProtocolRequest_-InnerRead-d__25.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Net.Security.MobileAuthenticatedStream <Parent>k__BackingField
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::AsyncProtocolRequest::dyn_$Parent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::dyn_$Parent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Parent>k__BackingField"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <RunSynchronously>k__BackingField
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::AsyncProtocolRequest::dyn_$RunSynchronously$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::dyn_$RunSynchronously$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RunSynchronously>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <UserResult>k__BackingField
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncProtocolRequest::dyn_$UserResult$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::dyn_$UserResult$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UserResult>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 Started
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncProtocolRequest::dyn_Started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::dyn_Started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Started"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 RequestedSize
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncProtocolRequest::dyn_RequestedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::dyn_RequestedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RequestedSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 WriteRequested
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncProtocolRequest::dyn_WriteRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::dyn_WriteRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "WriteRequested"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object locker
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Mono::Net::Security::AsyncProtocolRequest::dyn_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::dyn_locker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locker"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.get_Parent
::Mono::Net::Security::MobileAuthenticatedStream* Mono::Net::Security::AsyncProtocolRequest::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::get_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::MobileAuthenticatedStream*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.get_RunSynchronously
bool Mono::Net::Security::AsyncProtocolRequest::get_RunSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::get_RunSynchronously");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RunSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.get_Name
::StringW Mono::Net::Security::AsyncProtocolRequest::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.get_UserResult
int Mono::Net::Security::AsyncProtocolRequest::get_UserResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::get_UserResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.set_UserResult
void Mono::Net::Security::AsyncProtocolRequest::set_UserResult(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::set_UserResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UserResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.RequestRead
void Mono::Net::Security::AsyncProtocolRequest::RequestRead(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::RequestRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.RequestWrite
void Mono::Net::Security::AsyncProtocolRequest::RequestWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::RequestWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.StartOperation
::System::Threading::Tasks::Task_1<::Mono::Net::Security::AsyncProtocolResult*>* Mono::Net::Security::AsyncProtocolRequest::StartOperation(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::StartOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Mono::Net::Security::AsyncProtocolResult*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.ProcessOperation
::System::Threading::Tasks::Task* Mono::Net::Security::AsyncProtocolRequest::ProcessOperation(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::ProcessOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.InnerRead
::System::Threading::Tasks::Task_1<::System::Nullable_1<int>>* Mono::Net::Security::AsyncProtocolRequest::InnerRead(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::InnerRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InnerRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Nullable_1<int>>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.Run
::Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncProtocolRequest::Run(::Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::Run");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::AsyncProtocolRequest*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.ToString
::StringW Mono::Net::Security::AsyncProtocolRequest::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<StartOperation>d__23
#include "Mono/Net/Security/AsyncProtocolRequest_-StartOperation-d__23.hpp"
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<Mono.Net.Security.AsyncProtocolResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::Mono::Net::Security::AsyncProtocolResult*>& Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::Mono::Net::Security::AsyncProtocolResult*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.AsyncProtocolRequest <>4__this
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<StartOperation>d__23.MoveNext
void Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<StartOperation>d__23.SetStateMachine
void Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<ProcessOperation>d__24
#include "Mono/Net/Security/AsyncProtocolRequest_-ProcessOperation-d__24.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.AsyncProtocolRequest <>4__this
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.AsyncOperationStatus <status>5__1
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::AsyncOperationStatus& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$status$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$status$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<status>5__1"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::AsyncOperationStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.AsyncOperationStatus <newStatus>5__2
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::AsyncOperationStatus& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$newStatus$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$newStatus$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<newStatus>5__2"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::AsyncOperationStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Nullable`1<System.Int32>> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Nullable_1<int>>::ConfiguredTaskAwaiter& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Nullable_1<int>>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<ProcessOperation>d__24.MoveNext
void Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<ProcessOperation>d__24.SetStateMachine
void Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<InnerRead>d__25
#include "Mono/Net/Security/AsyncProtocolRequest_-InnerRead-d__25.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Nullable`1<System.Int32>> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Nullable_1<int>>& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::Nullable_1<int>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.AsyncProtocolRequest <>4__this
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <requestedSize>5__1
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$requestedSize$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$requestedSize$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<requestedSize>5__1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int32> <totalRead>5__2
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$totalRead$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$totalRead$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<totalRead>5__2"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Int32> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter& Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<InnerRead>d__25.MoveNext
void Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/Mono.Net.Security.<InnerRead>d__25.SetStateMachine
void Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncHandshakeRequest
#include "Mono/Net/Security/AsyncHandshakeRequest.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.AsyncHandshakeRequest.Run
::Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncHandshakeRequest::Run(::Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncHandshakeRequest::Run");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::AsyncProtocolRequest*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncReadOrWriteRequest
#include "Mono/Net/Security/AsyncReadOrWriteRequest.hpp"
// Including type: Mono.Net.Security.BufferOffsetSize
#include "Mono/Net/Security/BufferOffsetSize.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Net.Security.BufferOffsetSize <UserBuffer>k__BackingField
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::BufferOffsetSize*& Mono::Net::Security::AsyncReadOrWriteRequest::dyn_$UserBuffer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncReadOrWriteRequest::dyn_$UserBuffer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UserBuffer>k__BackingField"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::BufferOffsetSize**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <CurrentSize>k__BackingField
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::AsyncReadOrWriteRequest::dyn_$CurrentSize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncReadOrWriteRequest::dyn_$CurrentSize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentSize>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.AsyncReadOrWriteRequest.get_UserBuffer
::Mono::Net::Security::BufferOffsetSize* Mono::Net::Security::AsyncReadOrWriteRequest::get_UserBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncReadOrWriteRequest::get_UserBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::BufferOffsetSize*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncReadOrWriteRequest.get_CurrentSize
int Mono::Net::Security::AsyncReadOrWriteRequest::get_CurrentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncReadOrWriteRequest::get_CurrentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncReadOrWriteRequest.set_CurrentSize
void Mono::Net::Security::AsyncReadOrWriteRequest::set_CurrentSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncReadOrWriteRequest::set_CurrentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.AsyncReadOrWriteRequest.ToString
::StringW Mono::Net::Security::AsyncReadOrWriteRequest::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncReadOrWriteRequest::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::AsyncProtocolRequest*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncReadRequest
#include "Mono/Net/Security/AsyncReadRequest.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.AsyncReadRequest.Run
::Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncReadRequest::Run(::Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncReadRequest::Run");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::AsyncProtocolRequest*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncWriteRequest
#include "Mono/Net/Security/AsyncWriteRequest.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.AsyncWriteRequest.Run
::Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncWriteRequest::Run(::Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::AsyncWriteRequest::Run");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::AsyncProtocolRequest*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.ServerCertValidationCallbackWrapper
#include "Mono/Net/Security/ServerCertValidationCallbackWrapper.hpp"
// Including type: System.Net.ServerCertValidationCallback
#include "System/Net/ServerCertValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.ServerCertValidationCallbackWrapper.Invoke
bool Mono::Net::Security::ServerCertValidationCallbackWrapper::Invoke(::System::Net::ServerCertValidationCallback* callback, ::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::System::Security::Cryptography::X509Certificates::X509Chain* chain, ::Mono::Security::Interface::MonoSslPolicyErrors sslPolicyErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ServerCertValidationCallbackWrapper::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::ServerCertValidationCallbackWrapper*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, callback, certificate, chain, sslPolicyErrors);
}
// Autogenerated method: Mono.Net.Security.ServerCertValidationCallbackWrapper.BeginInvoke
::System::IAsyncResult* Mono::Net::Security::ServerCertValidationCallbackWrapper::BeginInvoke(::System::Net::ServerCertValidationCallback* callback, ::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::System::Security::Cryptography::X509Certificates::X509Chain* chain, ::Mono::Security::Interface::MonoSslPolicyErrors sslPolicyErrors, ::System::AsyncCallback* __callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ServerCertValidationCallbackWrapper::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::ServerCertValidationCallbackWrapper*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, certificate, chain, sslPolicyErrors, __callback, object);
}
// Autogenerated method: Mono.Net.Security.ServerCertValidationCallbackWrapper.EndInvoke
bool Mono::Net::Security::ServerCertValidationCallbackWrapper::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ServerCertValidationCallbackWrapper::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::ServerCertValidationCallbackWrapper*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.ChainValidationHelper
#include "Mono/Net/Security/ChainValidationHelper.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.Net.ServerCertValidationCallback
#include "System/Net/ServerCertValidationCallback.hpp"
// Including type: System.Net.Security.LocalCertSelectionCallback
#include "System/Net/Security/LocalCertSelectionCallback.hpp"
// Including type: Mono.Net.Security.ServerCertValidationCallbackWrapper
#include "Mono/Net/Security/ServerCertValidationCallbackWrapper.hpp"
// Including type: Mono.Net.Security.MonoTlsStream
#include "Mono/Net/Security/MonoTlsStream.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Security.Interface.ValidationResult
#include "Mono/Security/Interface/ValidationResult.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object sender
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Mono::Net::Security::ChainValidationHelper::dyn_sender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::dyn_sender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sender"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Security.Interface.MonoTlsSettings settings
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsSettings*& Mono::Net::Security::ChainValidationHelper::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Security.Interface.MonoTlsProvider provider
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsProvider*& Mono::Net::Security::ChainValidationHelper::dyn_provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::dyn_provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "provider"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.ServerCertValidationCallback certValidationCallback
[[deprecated("Use field access instead!")]] ::System::Net::ServerCertValidationCallback*& Mono::Net::Security::ChainValidationHelper::dyn_certValidationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::dyn_certValidationCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certValidationCallback"))->offset;
  return *reinterpret_cast<::System::Net::ServerCertValidationCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Security.LocalCertSelectionCallback certSelectionCallback
[[deprecated("Use field access instead!")]] ::System::Net::Security::LocalCertSelectionCallback*& Mono::Net::Security::ChainValidationHelper::dyn_certSelectionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::dyn_certSelectionCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certSelectionCallback"))->offset;
  return *reinterpret_cast<::System::Net::Security::LocalCertSelectionCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Net.Security.ServerCertValidationCallbackWrapper callbackWrapper
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::ServerCertValidationCallbackWrapper*& Mono::Net::Security::ChainValidationHelper::dyn_callbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::dyn_callbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callbackWrapper"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::ServerCertValidationCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Net.Security.MonoTlsStream tlsStream
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MonoTlsStream*& Mono::Net::Security::ChainValidationHelper::dyn_tlsStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::dyn_tlsStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tlsStream"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MonoTlsStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.HttpWebRequest request
[[deprecated("Use field access instead!")]] ::System::Net::HttpWebRequest*& Mono::Net::Security::ChainValidationHelper::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::System::Net::HttpWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.get_Settings
::Mono::Security::Interface::MonoTlsSettings* Mono::Net::Security::ChainValidationHelper::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::get_Settings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::ChainValidationHelper*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.GetInternalValidator
::Mono::Security::Interface::ICertificateValidator* Mono::Net::Security::ChainValidationHelper::GetInternalValidator(::Mono::Security::Interface::MonoTlsProvider* provider, ::Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::GetInternalValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "ChainValidationHelper", "GetInternalValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::ICertificateValidator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, settings);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.Create
::Mono::Net::Security::ChainValidationHelper* Mono::Net::Security::ChainValidationHelper::Create(::Mono::Security::Interface::MonoTlsProvider* provider, ByRef<::Mono::Security::Interface::MonoTlsSettings*> settings, ::Mono::Net::Security::MonoTlsStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "ChainValidationHelper", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(settings), ::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::ChainValidationHelper*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, byref(settings), stream);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.DefaultSelectionCallback
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::ChainValidationHelper::DefaultSelectionCallback(::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::ArrayW<::StringW> acceptableIssuers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::DefaultSelectionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "ChainValidationHelper", "DefaultSelectionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(localCertificates), ::il2cpp_utils::ExtractType(remoteCertificate), ::il2cpp_utils::ExtractType(acceptableIssuers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.SelectClientCertificate
bool Mono::Net::Security::ChainValidationHelper::SelectClientCertificate(::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::ArrayW<::StringW> acceptableIssuers, ByRef<::System::Security::Cryptography::X509Certificates::X509Certificate*> clientCertificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::SelectClientCertificate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::ChainValidationHelper*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers, byref(clientCertificate));
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.ValidateCertificate
::Mono::Security::Interface::ValidationResult* Mono::Net::Security::ChainValidationHelper::ValidateCertificate(::StringW host, bool serverMode, ::System::Security::Cryptography::X509Certificates::X509Certificate* leaf, ::System::Security::Cryptography::X509Certificates::X509Chain* chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::ValidateCertificate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::ChainValidationHelper*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, host, serverMode, leaf, chain);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.ValidateChain
::Mono::Security::Interface::ValidationResult* Mono::Net::Security::ChainValidationHelper::ValidateChain(::StringW host, bool server, ::System::Security::Cryptography::X509Certificates::X509Certificate* leaf, ::System::Security::Cryptography::X509Certificates::X509Chain* chain, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* certs, ::System::Net::Security::SslPolicyErrors errors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::ValidateChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(server), ::il2cpp_utils::ExtractType(leaf), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(certs), ::il2cpp_utils::ExtractType(errors)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, host, server, leaf, chain, certs, errors);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.ValidateChain
::Mono::Security::Interface::ValidationResult* Mono::Net::Security::ChainValidationHelper::ValidateChain_(::StringW host, bool server, ::System::Security::Cryptography::X509Certificates::X509Certificate* leaf, ByRef<::System::Security::Cryptography::X509Certificates::X509Chain*> chain, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* certs, ::System::Net::Security::SslPolicyErrors errors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::ChainValidationHelper::ValidateChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(server), ::il2cpp_utils::ExtractType(leaf), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(certs), ::il2cpp_utils::ExtractType(errors)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, host, server, leaf, byref(chain), certs, errors);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.OperationType
#include "Mono/Net/Security/MobileAuthenticatedStream_OperationType.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<ProcessAuthentication>d__47
#include "Mono/Net/Security/MobileAuthenticatedStream_-ProcessAuthentication-d__47.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<StartOperation>d__58
#include "Mono/Net/Security/MobileAuthenticatedStream_-StartOperation-d__58.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<>c__DisplayClass66_0
#include "Mono/Net/Security/MobileAuthenticatedStream_--c__DisplayClass66_0.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<InnerRead>d__66
#include "Mono/Net/Security/MobileAuthenticatedStream_-InnerRead-d__66.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<InnerWrite>d__67
#include "Mono/Net/Security/MobileAuthenticatedStream_-InnerWrite-d__67.hpp"
// Including type: Mono.Net.Security.MobileTlsContext
#include "Mono/Net/Security/MobileTlsContext.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest
#include "Mono/Net/Security/AsyncProtocolRequest.hpp"
// Including type: Mono.Net.Security.BufferOffsetSize2
#include "Mono/Net/Security/BufferOffsetSize2.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: Mono.Net.Security.BufferOffsetSize
#include "Mono/Net/Security/BufferOffsetSize.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 uniqueNameInteger
int Mono::Net::Security::MobileAuthenticatedStream::_get_uniqueNameInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::_get_uniqueNameInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Net.Security", "MobileAuthenticatedStream", "uniqueNameInteger"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 uniqueNameInteger
void Mono::Net::Security::MobileAuthenticatedStream::_set_uniqueNameInteger(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::_set_uniqueNameInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream", "uniqueNameInteger", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 nextId
int Mono::Net::Security::MobileAuthenticatedStream::_get_nextId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::_get_nextId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Net.Security", "MobileAuthenticatedStream", "nextId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 nextId
void Mono::Net::Security::MobileAuthenticatedStream::_set_nextId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::_set_nextId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream", "nextId", value));
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.MobileTlsContext xobileTlsContext
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileTlsContext*& Mono::Net::Security::MobileAuthenticatedStream::dyn_xobileTlsContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_xobileTlsContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xobileTlsContext"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileTlsContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.ExceptionServices.ExceptionDispatchInfo lastException
[[deprecated("Use field access instead!")]] ::System::Runtime::ExceptionServices::ExceptionDispatchInfo*& Mono::Net::Security::MobileAuthenticatedStream::dyn_lastException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_lastException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastException"))->offset;
  return *reinterpret_cast<::System::Runtime::ExceptionServices::ExceptionDispatchInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.AsyncProtocolRequest asyncHandshakeRequest
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::MobileAuthenticatedStream::dyn_asyncHandshakeRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_asyncHandshakeRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncHandshakeRequest"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.AsyncProtocolRequest asyncReadRequest
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::MobileAuthenticatedStream::dyn_asyncReadRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_asyncReadRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncReadRequest"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.AsyncProtocolRequest asyncWriteRequest
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::MobileAuthenticatedStream::dyn_asyncWriteRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_asyncWriteRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncWriteRequest"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.BufferOffsetSize2 readBuffer
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::BufferOffsetSize2*& Mono::Net::Security::MobileAuthenticatedStream::dyn_readBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_readBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readBuffer"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::BufferOffsetSize2**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.BufferOffsetSize2 writeBuffer
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::BufferOffsetSize2*& Mono::Net::Security::MobileAuthenticatedStream::dyn_writeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_writeBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeBuffer"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::BufferOffsetSize2**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object ioLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Mono::Net::Security::MobileAuthenticatedStream::dyn_ioLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_ioLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ioLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 closeRequested
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::MobileAuthenticatedStream::dyn_closeRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_closeRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closeRequested"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean shutdown
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::MobileAuthenticatedStream::dyn_shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_shutdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shutdown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Security.SslStream <SslStream>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Net::Security::SslStream*& Mono::Net::Security::MobileAuthenticatedStream::dyn_$SslStream$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_$SslStream$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SslStream>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Net::Security::SslStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Security.Interface.MonoTlsSettings <Settings>k__BackingField
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsSettings*& Mono::Net::Security::MobileAuthenticatedStream::dyn_$Settings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_$Settings$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Settings>k__BackingField"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Security.Interface.MonoTlsProvider <Provider>k__BackingField
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsProvider*& Mono::Net::Security::MobileAuthenticatedStream::dyn_$Provider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_$Provider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Provider>k__BackingField"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 ID
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::MobileAuthenticatedStream::dyn_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::dyn_ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Settings
::Mono::Security::Interface::MonoTlsSettings* Mono::Net::Security::MobileAuthenticatedStream::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_Settings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Provider
::Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MobileAuthenticatedStream::get_Provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_Provider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileAuthenticatedStream*), 53));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_AuthenticatedStream
::System::Net::Security::AuthenticatedStream* Mono::Net::Security::MobileAuthenticatedStream::get_AuthenticatedStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_AuthenticatedStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileAuthenticatedStream*), 48));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::AuthenticatedStream*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_InternalLocalCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileAuthenticatedStream::get_InternalLocalCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_InternalLocalCertificate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileAuthenticatedStream*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream..cctor
void Mono::Net::Security::MobileAuthenticatedStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MobileAuthenticatedStream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.CheckThrow
void Mono::Net::Security::MobileAuthenticatedStream::CheckThrow(bool authSuccessCheck, bool shutdownCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::CheckThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(authSuccessCheck), ::il2cpp_utils::ExtractType(shutdownCheck)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, authSuccessCheck, shutdownCheck);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.GetSSPIException
::System::Exception* Mono::Net::Security::MobileAuthenticatedStream::GetSSPIException(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::GetSSPIException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MobileAuthenticatedStream", "GetSSPIException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.GetIOException
::System::Exception* Mono::Net::Security::MobileAuthenticatedStream::GetIOException(::System::Exception* e, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::GetIOException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MobileAuthenticatedStream", "GetIOException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e, message);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.SetException
::System::Runtime::ExceptionServices::ExceptionDispatchInfo* Mono::Net::Security::MobileAuthenticatedStream::SetException(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::SetException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::ExceptionServices::ExceptionDispatchInfo*, false>(this, ___internal__method, e);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.AuthenticateAsClient
void Mono::Net::Security::MobileAuthenticatedStream::AuthenticateAsClient(::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, ::System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::AuthenticateAsClient");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileAuthenticatedStream*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.AuthenticateAsClientAsync
::System::Threading::Tasks::Task* Mono::Net::Security::MobileAuthenticatedStream::AuthenticateAsClientAsync(::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, ::System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::AuthenticateAsClientAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileAuthenticatedStream*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessAuthentication
::System::Threading::Tasks::Task* Mono::Net::Security::MobileAuthenticatedStream::ProcessAuthentication(bool runSynchronously, bool serverMode, ::StringW targetHost, ::System::Security::Authentication::SslProtocols enabledProtocols, ::System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, bool clientCertRequired) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::ProcessAuthentication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAuthentication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runSynchronously), ::il2cpp_utils::ExtractType(serverMode), ::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(enabledProtocols), ::il2cpp_utils::ExtractType(serverCertificate), ::il2cpp_utils::ExtractType(clientCertificates), ::il2cpp_utils::ExtractType(clientCertRequired)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, runSynchronously, serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, clientCertRequired);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.CreateContext
::Mono::Net::Security::MobileTlsContext* Mono::Net::Security::MobileAuthenticatedStream::CreateContext(bool serverMode, ::StringW targetHost, ::System::Security::Authentication::SslProtocols enabledProtocols, ::System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, bool askForClientCert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::CreateContext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileAuthenticatedStream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::MobileTlsContext*, false>(this, ___internal__method, serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, askForClientCert);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.StartOperation
::System::Threading::Tasks::Task_1<int>* Mono::Net::Security::MobileAuthenticatedStream::StartOperation(::Mono::Net::Security::MobileAuthenticatedStream::OperationType type, ::Mono::Net::Security::AsyncProtocolRequest* asyncRequest, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::StartOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(asyncRequest), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, type, asyncRequest, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalRead
int Mono::Net::Security::MobileAuthenticatedStream::InternalRead(::ArrayW<uint8_t> buffer, int offset, int size, ByRef<bool> outWantMore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::InternalRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, size, byref(outWantMore));
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalRead
::System::ValueTuple_2<int, bool> Mono::Net::Security::MobileAuthenticatedStream::InternalRead(::Mono::Net::Security::AsyncProtocolRequest* asyncRequest, ::Mono::Net::Security::BufferOffsetSize* internalBuffer, ::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::InternalRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncRequest), ::il2cpp_utils::ExtractType(internalBuffer), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, bool>, false>(this, ___internal__method, asyncRequest, internalBuffer, buffer, offset, size);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalWrite
bool Mono::Net::Security::MobileAuthenticatedStream::InternalWrite(::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::InternalWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalWrite
bool Mono::Net::Security::MobileAuthenticatedStream::InternalWrite(::Mono::Net::Security::AsyncProtocolRequest* asyncRequest, ::Mono::Net::Security::BufferOffsetSize2* internalBuffer, ::ArrayW<uint8_t> buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::InternalWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncRequest), ::il2cpp_utils::ExtractType(internalBuffer), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, asyncRequest, internalBuffer, buffer, offset, size);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InnerRead
::System::Threading::Tasks::Task_1<int>* Mono::Net::Security::MobileAuthenticatedStream::InnerRead(bool sync, int requestedSize, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::InnerRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InnerRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sync), ::il2cpp_utils::ExtractType(requestedSize), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, sync, requestedSize, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InnerWrite
::System::Threading::Tasks::Task* Mono::Net::Security::MobileAuthenticatedStream::InnerWrite(bool sync, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::InnerWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InnerWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sync), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, sync, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessHandshake
::Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::MobileAuthenticatedStream::ProcessHandshake(::Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::ProcessHandshake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessHandshake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessRead
::System::ValueTuple_2<int, bool> Mono::Net::Security::MobileAuthenticatedStream::ProcessRead(::Mono::Net::Security::BufferOffsetSize* userBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::ProcessRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, bool>, false>(this, ___internal__method, userBuffer);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessWrite
::System::ValueTuple_2<int, bool> Mono::Net::Security::MobileAuthenticatedStream::ProcessWrite(::Mono::Net::Security::BufferOffsetSize* userBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::ProcessWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, bool>, false>(this, ___internal__method, userBuffer);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.<InnerWrite>b__67_0
void Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$b__67_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::<InnerWrite>b__67_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InnerWrite>b__67_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_IsAuthenticated
bool Mono::Net::Security::MobileAuthenticatedStream::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_IsAuthenticated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::AuthenticatedStream*), 32));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_CanRead
bool Mono::Net::Security::MobileAuthenticatedStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_CanWrite
bool Mono::Net::Security::MobileAuthenticatedStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_CanSeek
bool Mono::Net::Security::MobileAuthenticatedStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Length
int64_t Mono::Net::Security::MobileAuthenticatedStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Position
int64_t Mono::Net::Security::MobileAuthenticatedStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.set_Position
void Mono::Net::Security::MobileAuthenticatedStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_ReadTimeout
int Mono::Net::Security::MobileAuthenticatedStream::get_ReadTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.set_ReadTimeout
void Mono::Net::Security::MobileAuthenticatedStream::set_ReadTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::set_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_WriteTimeout
int Mono::Net::Security::MobileAuthenticatedStream::get_WriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::get_WriteTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.BeginRead
::System::IAsyncResult* Mono::Net::Security::MobileAuthenticatedStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.EndRead
int Mono::Net::Security::MobileAuthenticatedStream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::EndRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.BeginWrite
::System::IAsyncResult* Mono::Net::Security::MobileAuthenticatedStream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.EndWrite
void Mono::Net::Security::MobileAuthenticatedStream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Read
int Mono::Net::Security::MobileAuthenticatedStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Write
void Mono::Net::Security::MobileAuthenticatedStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ReadAsync
::System::Threading::Tasks::Task_1<int>* Mono::Net::Security::MobileAuthenticatedStream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.WriteAsync
::System::Threading::Tasks::Task* Mono::Net::Security::MobileAuthenticatedStream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Dispose
void Mono::Net::Security::MobileAuthenticatedStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::AuthenticatedStream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Flush
void Mono::Net::Security::MobileAuthenticatedStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Seek
int64_t Mono::Net::Security::MobileAuthenticatedStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.SetLength
void Mono::Net::Security::MobileAuthenticatedStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.OperationType
#include "Mono/Net/Security/MobileAuthenticatedStream_OperationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.OperationType Read
::Mono::Net::Security::MobileAuthenticatedStream::OperationType Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::Security::MobileAuthenticatedStream::OperationType>("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Read"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.OperationType Read
void Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Read(::Mono::Net::Security::MobileAuthenticatedStream::OperationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.OperationType Write
::Mono::Net::Security::MobileAuthenticatedStream::OperationType Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::Security::MobileAuthenticatedStream::OperationType>("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Write"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.OperationType Write
void Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Write(::Mono::Net::Security::MobileAuthenticatedStream::OperationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.OperationType Shutdown
::Mono::Net::Security::MobileAuthenticatedStream::OperationType Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Shutdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Net::Security::MobileAuthenticatedStream::OperationType>("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Shutdown"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.OperationType Shutdown
void Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Shutdown(::Mono::Net::Security::MobileAuthenticatedStream::OperationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Shutdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Shutdown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::MobileAuthenticatedStream::OperationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::OperationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<ProcessAuthentication>d__47
#include "Mono/Net/Security/MobileAuthenticatedStream_-ProcessAuthentication-d__47.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean serverMode
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_serverMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_serverMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate*& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_serverCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_serverCertificate");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverCertificate"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String targetHost
[[deprecated("Use field access instead!")]] ::StringW& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_targetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_targetHost");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetHost"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.MobileAuthenticatedStream <>4__this
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean runSynchronously
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_runSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_runSynchronously");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runSynchronously"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Security.Authentication.SslProtocols enabledProtocols
[[deprecated("Use field access instead!")]] ::System::Security::Authentication::SslProtocols& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_enabledProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_enabledProtocols");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabledProtocols"))->offset;
  return *reinterpret_cast<::System::Security::Authentication::SslProtocols*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509CertificateCollection*& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_clientCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_clientCertificates");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientCertificates"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509CertificateCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean clientCertRequired
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_clientCertRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_clientCertRequired");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientCertRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<Mono.Net.Security.AsyncProtocolResult> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::Mono::Net::Security::AsyncProtocolResult*>::ConfiguredTaskAwaiter& Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::Mono::Net::Security::AsyncProtocolResult*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<ProcessAuthentication>d__47.MoveNext
void Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<ProcessAuthentication>d__47.SetStateMachine
void Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<StartOperation>d__58
#include "Mono/Net/Security/MobileAuthenticatedStream_-StartOperation-d__58.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest
#include "Mono/Net/Security/AsyncProtocolRequest.hpp"
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Int32> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.MobileAuthenticatedStream <>4__this
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.OperationType type
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileAuthenticatedStream::OperationType& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileAuthenticatedStream::OperationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.AsyncProtocolRequest asyncRequest
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::AsyncProtocolRequest*& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_asyncRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_asyncRequest");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncRequest"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::AsyncProtocolRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<Mono.Net.Security.AsyncProtocolResult> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::Mono::Net::Security::AsyncProtocolResult*>::ConfiguredTaskAwaiter& Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::Mono::Net::Security::AsyncProtocolResult*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<StartOperation>d__58.MoveNext
void Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<StartOperation>d__58.SetStateMachine
void Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<>c__DisplayClass66_0
#include "Mono/Net/Security/MobileAuthenticatedStream_--c__DisplayClass66_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.MobileAuthenticatedStream <>4__this
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::MobileAuthenticatedStream::$$c__DisplayClass66_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$$c__DisplayClass66_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 len
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::MobileAuthenticatedStream::$$c__DisplayClass66_0::dyn_len() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$$c__DisplayClass66_0::dyn_len");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "len"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<>c__DisplayClass66_0.<InnerRead>b__0
int Mono::Net::Security::MobileAuthenticatedStream::$$c__DisplayClass66_0::$InnerRead$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$$c__DisplayClass66_0::<InnerRead>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InnerRead>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<InnerRead>d__66
#include "Mono/Net/Security/MobileAuthenticatedStream_-InnerRead-d__66.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Int32> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.MobileAuthenticatedStream <>4__this
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 requestedSize
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_requestedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_requestedSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestedSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean sync
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_sync");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sync"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Int32> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter& Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<InnerRead>d__66.MoveNext
void Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<InnerRead>d__66.SetStateMachine
void Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<InnerWrite>d__67
#include "Mono/Net/Security/MobileAuthenticatedStream_-InnerWrite-d__67.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.MobileAuthenticatedStream <>4__this
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean sync
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_sync");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sync"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<InnerWrite>d__67.MoveNext
void Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/Mono.Net.Security.<InnerWrite>d__67.SetStateMachine
void Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.MobileTlsContext
#include "Mono/Net/Security/MobileTlsContext.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Security.Interface.ICertificateValidator2
#include "Mono/Security/Interface/ICertificateValidator2.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Net.Security.MobileAuthenticatedStream parent
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MobileAuthenticatedStream*& Mono::Net::Security::MobileTlsContext::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MobileAuthenticatedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean serverMode
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::MobileTlsContext::dyn_serverMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::dyn_serverMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String targetHost
[[deprecated("Use field access instead!")]] ::StringW& Mono::Net::Security::MobileTlsContext::dyn_targetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::dyn_targetHost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetHost"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String serverName
[[deprecated("Use field access instead!")]] ::StringW& Mono::Net::Security::MobileTlsContext::dyn_serverName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::dyn_serverName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Authentication.SslProtocols enabledProtocols
[[deprecated("Use field access instead!")]] ::System::Security::Authentication::SslProtocols& Mono::Net::Security::MobileTlsContext::dyn_enabledProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::dyn_enabledProtocols");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabledProtocols"))->offset;
  return *reinterpret_cast<::System::Security::Authentication::SslProtocols*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate*& Mono::Net::Security::MobileTlsContext::dyn_serverCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::dyn_serverCertificate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverCertificate"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509CertificateCollection*& Mono::Net::Security::MobileTlsContext::dyn_clientCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::dyn_clientCertificates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientCertificates"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509CertificateCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean askForClientCert
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::MobileTlsContext::dyn_askForClientCert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::dyn_askForClientCert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "askForClientCert"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.ICertificateValidator2 certificateValidator
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::ICertificateValidator2*& Mono::Net::Security::MobileTlsContext::dyn_certificateValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::dyn_certificateValidator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificateValidator"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::ICertificateValidator2**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_Parent
::Mono::Net::Security::MobileAuthenticatedStream* Mono::Net::Security::MobileTlsContext::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::get_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Net::Security::MobileAuthenticatedStream*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_Settings
::Mono::Security::Interface::MonoTlsSettings* Mono::Net::Security::MobileTlsContext::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::get_Settings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_IsAuthenticated
bool Mono::Net::Security::MobileTlsContext::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::get_IsAuthenticated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_IsServer
bool Mono::Net::Security::MobileTlsContext::get_IsServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::get_IsServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_TargetHost
::StringW Mono::Net::Security::MobileTlsContext::get_TargetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::get_TargetHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_ServerName
::StringW Mono::Net::Security::MobileTlsContext::get_ServerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::get_ServerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ServerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_ClientCertificates
::System::Security::Cryptography::X509Certificates::X509CertificateCollection* Mono::Net::Security::MobileTlsContext::get_ClientCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::get_ClientCertificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_LocalServerCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileTlsContext::get_LocalServerCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::get_LocalServerCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalServerCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_LocalClientCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileTlsContext::get_LocalClientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::get_LocalClientCertificate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.StartHandshake
void Mono::Net::Security::MobileTlsContext::StartHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::StartHandshake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.ProcessHandshake
bool Mono::Net::Security::MobileTlsContext::ProcessHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::ProcessHandshake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.FinishHandshake
void Mono::Net::Security::MobileTlsContext::FinishHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::FinishHandshake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Read
::System::ValueTuple_2<int, bool> Mono::Net::Security::MobileTlsContext::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, bool>, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Write
::System::ValueTuple_2<int, bool> Mono::Net::Security::MobileTlsContext::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<int, bool>, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Shutdown
void Mono::Net::Security::MobileTlsContext::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::Shutdown");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.ValidateCertificate
bool Mono::Net::Security::MobileTlsContext::ValidateCertificate(::System::Security::Cryptography::X509Certificates::X509Certificate* leaf, ::System::Security::Cryptography::X509Certificates::X509Chain* chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::ValidateCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaf), ::il2cpp_utils::ExtractType(chain)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, leaf, chain);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.SelectClientCertificate
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileTlsContext::SelectClientCertificate(::System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, ::ArrayW<::StringW> acceptableIssuers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::SelectClientCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectClientCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverCertificate), ::il2cpp_utils::ExtractType(acceptableIssuers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, serverCertificate, acceptableIssuers);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Dispose
void Mono::Net::Security::MobileTlsContext::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Dispose
void Mono::Net::Security::MobileTlsContext::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Mono::Net::Security::MobileTlsContext*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Finalize
void Mono::Net::Security::MobileTlsContext::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MobileTlsContext::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.MonoTlsProviderFactory
#include "Mono/Net/Security/MonoTlsProviderFactory.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object locker
::Il2CppObject* Mono::Net::Security::MonoTlsProviderFactory::_get_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_get_locker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Mono.Net.Security", "MonoTlsProviderFactory", "locker"));
}
// Autogenerated static field setter
// Set static field: static private System.Object locker
void Mono::Net::Security::MonoTlsProviderFactory::_set_locker(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_set_locker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "locker", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean initialized
bool Mono::Net::Security::MonoTlsProviderFactory::_get_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_get_initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Net.Security", "MonoTlsProviderFactory", "initialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean initialized
void Mono::Net::Security::MonoTlsProviderFactory::_set_initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_set_initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "initialized", value));
}
// Autogenerated static field getter
// Get static field: static private Mono.Security.Interface.MonoTlsProvider defaultProvider
::Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::_get_defaultProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_get_defaultProvider");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Interface::MonoTlsProvider*>("Mono.Net.Security", "MonoTlsProviderFactory", "defaultProvider"));
}
// Autogenerated static field setter
// Set static field: static private Mono.Security.Interface.MonoTlsProvider defaultProvider
void Mono::Net::Security::MonoTlsProviderFactory::_set_defaultProvider(::Mono::Security::Interface::MonoTlsProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_set_defaultProvider");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "defaultProvider", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Tuple`2<System.Guid,System.String>> providerRegistration
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Tuple_2<::System::Guid, ::StringW>*>* Mono::Net::Security::MonoTlsProviderFactory::_get_providerRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_get_providerRegistration");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Tuple_2<::System::Guid, ::StringW>*>*>("Mono.Net.Security", "MonoTlsProviderFactory", "providerRegistration")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Tuple`2<System.Guid,System.String>> providerRegistration
void Mono::Net::Security::MonoTlsProviderFactory::_set_providerRegistration(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Tuple_2<::System::Guid, ::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_set_providerRegistration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "providerRegistration", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Guid,Mono.Security.Interface.MonoTlsProvider> providerCache
::System::Collections::Generic::Dictionary_2<::System::Guid, ::Mono::Security::Interface::MonoTlsProvider*>* Mono::Net::Security::MonoTlsProviderFactory::_get_providerCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_get_providerCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Guid, ::Mono::Security::Interface::MonoTlsProvider*>*>("Mono.Net.Security", "MonoTlsProviderFactory", "providerCache")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Guid,Mono.Security.Interface.MonoTlsProvider> providerCache
void Mono::Net::Security::MonoTlsProviderFactory::_set_providerCache(::System::Collections::Generic::Dictionary_2<::System::Guid, ::Mono::Security::Interface::MonoTlsProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_set_providerCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "providerCache", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Guid UnityTlsId
::System::Guid Mono::Net::Security::MonoTlsProviderFactory::_get_UnityTlsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_get_UnityTlsId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("Mono.Net.Security", "MonoTlsProviderFactory", "UnityTlsId"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Guid UnityTlsId
void Mono::Net::Security::MonoTlsProviderFactory::_set_UnityTlsId(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_set_UnityTlsId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "UnityTlsId", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Guid AppleTlsId
::System::Guid Mono::Net::Security::MonoTlsProviderFactory::_get_AppleTlsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_get_AppleTlsId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("Mono.Net.Security", "MonoTlsProviderFactory", "AppleTlsId"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Guid AppleTlsId
void Mono::Net::Security::MonoTlsProviderFactory::_set_AppleTlsId(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_set_AppleTlsId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "AppleTlsId", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Guid BtlsId
::System::Guid Mono::Net::Security::MonoTlsProviderFactory::_get_BtlsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_get_BtlsId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("Mono.Net.Security", "MonoTlsProviderFactory", "BtlsId"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Guid BtlsId
void Mono::Net::Security::MonoTlsProviderFactory::_set_BtlsId(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_set_BtlsId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "BtlsId", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Guid LegacyId
::System::Guid Mono::Net::Security::MonoTlsProviderFactory::_get_LegacyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_get_LegacyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("Mono.Net.Security", "MonoTlsProviderFactory", "LegacyId"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Guid LegacyId
void Mono::Net::Security::MonoTlsProviderFactory::_set_LegacyId(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::_set_LegacyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "LegacyId", value));
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory..cctor
void Mono::Net::Security::MonoTlsProviderFactory::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.GetProviderInternal
::Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::GetProviderInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::GetProviderInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "GetProviderInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.InitializeInternal
void Mono::Net::Security::MonoTlsProviderFactory::InitializeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::InitializeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "InitializeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.LookupProvider
::Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::LookupProvider(::StringW name, bool throwOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::LookupProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "LookupProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(throwOnError)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, throwOnError);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.InitializeProviderRegistration
void Mono::Net::Security::MonoTlsProviderFactory::InitializeProviderRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::InitializeProviderRegistration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "InitializeProviderRegistration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.CreateDefaultProviderImpl
::Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::CreateDefaultProviderImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::CreateDefaultProviderImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "CreateDefaultProviderImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.GetProvider
::Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::GetProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsProviderFactory::GetProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "GetProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MonoTlsStream
#include "Mono/Net/Security/MonoTlsStream.hpp"
// Including type: Mono.Net.Security.MonoTlsStream/Mono.Net.Security.<CreateStream>d__17
#include "Mono/Net/Security/MonoTlsStream_-CreateStream-d__17.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.Net.Sockets.NetworkStream
#include "System/Net/Sockets/NetworkStream.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.IMonoSslStream
#include "Mono/Security/Interface/IMonoSslStream.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.WebConnectionTunnel
#include "System/Net/WebConnectionTunnel.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Security.Interface.MonoTlsProvider provider
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsProvider*& Mono::Net::Security::MonoTlsStream::dyn_provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::dyn_provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "provider"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Sockets.NetworkStream networkStream
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::NetworkStream*& Mono::Net::Security::MonoTlsStream::dyn_networkStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::dyn_networkStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "networkStream"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::NetworkStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.HttpWebRequest request
[[deprecated("Use field access instead!")]] ::System::Net::HttpWebRequest*& Mono::Net::Security::MonoTlsStream::dyn_request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::dyn_request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "request"))->offset;
  return *reinterpret_cast<::System::Net::HttpWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Security.Interface.MonoTlsSettings settings
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsSettings*& Mono::Net::Security::MonoTlsStream::dyn_settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::dyn_settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "settings"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.IMonoSslStream sslStream
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::IMonoSslStream*& Mono::Net::Security::MonoTlsStream::dyn_sslStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::dyn_sslStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sslStream"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::IMonoSslStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebExceptionStatus status
[[deprecated("Use field access instead!")]] ::System::Net::WebExceptionStatus& Mono::Net::Security::MonoTlsStream::dyn_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::dyn_status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status"))->offset;
  return *reinterpret_cast<::System::Net::WebExceptionStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <CertificateValidationFailed>k__BackingField
[[deprecated("Use field access instead!")]] bool& Mono::Net::Security::MonoTlsStream::dyn_$CertificateValidationFailed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::dyn_$CertificateValidationFailed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CertificateValidationFailed>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream.get_Request
::System::Net::HttpWebRequest* Mono::Net::Security::MonoTlsStream::get_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::get_Request");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Request", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::HttpWebRequest*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream.get_ExceptionStatus
::System::Net::WebExceptionStatus Mono::Net::Security::MonoTlsStream::get_ExceptionStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::get_ExceptionStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExceptionStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::WebExceptionStatus, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream.get_CertificateValidationFailed
bool Mono::Net::Security::MonoTlsStream::get_CertificateValidationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::get_CertificateValidationFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateValidationFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream.set_CertificateValidationFailed
void Mono::Net::Security::MonoTlsStream::set_CertificateValidationFailed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::set_CertificateValidationFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CertificateValidationFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream.CreateStream
::System::Threading::Tasks::Task_1<::System::IO::Stream*>* Mono::Net::Security::MonoTlsStream::CreateStream(::System::Net::WebConnectionTunnel* tunnel, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::CreateStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tunnel), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::IO::Stream*>*, false>(this, ___internal__method, tunnel, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MonoTlsStream/Mono.Net.Security.<CreateStream>d__17
#include "Mono/Net/Security/MonoTlsStream_-CreateStream-d__17.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Net.WebConnectionTunnel
#include "System/Net/WebConnectionTunnel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Mono::Net::Security::MonoTlsStream::$CreateStream$d__17::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::$CreateStream$d__17::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.IO.Stream> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::IO::Stream*>& Mono::Net::Security::MonoTlsStream::$CreateStream$d__17::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::$CreateStream$d__17::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::IO::Stream*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Mono.Net.Security.MonoTlsStream <>4__this
[[deprecated("Use field access instead!")]] ::Mono::Net::Security::MonoTlsStream*& Mono::Net::Security::MonoTlsStream::$CreateStream$d__17::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::$CreateStream$d__17::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Mono::Net::Security::MonoTlsStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.Socket <socket>5__1
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::Socket*& Mono::Net::Security::MonoTlsStream::$CreateStream$d__17::dyn_$socket$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::$CreateStream$d__17::dyn_$socket$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<socket>5__1"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::Socket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.WebConnectionTunnel tunnel
[[deprecated("Use field access instead!")]] ::System::Net::WebConnectionTunnel*& Mono::Net::Security::MonoTlsStream::$CreateStream$d__17::dyn_tunnel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::$CreateStream$d__17::dyn_tunnel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tunnel"))->offset;
  return *reinterpret_cast<::System::Net::WebConnectionTunnel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& Mono::Net::Security::MonoTlsStream::$CreateStream$d__17::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::$CreateStream$d__17::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& Mono::Net::Security::MonoTlsStream::$CreateStream$d__17::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::$CreateStream$d__17::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream/Mono.Net.Security.<CreateStream>d__17.MoveNext
void Mono::Net::Security::MonoTlsStream::$CreateStream$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::$CreateStream$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::MonoTlsStream::$CreateStream$d__17), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream/Mono.Net.Security.<CreateStream>d__17.SetStateMachine
void Mono::Net::Security::MonoTlsStream::$CreateStream$d__17::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::MonoTlsStream::$CreateStream$d__17::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Mono::Net::Security::MonoTlsStream::$CreateStream$d__17), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.NoReflectionHelper
#include "Mono/Net/Security/NoReflectionHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.NoReflectionHelper.GetInternalValidator
::Il2CppObject* Mono::Net::Security::NoReflectionHelper::GetInternalValidator(::Il2CppObject* provider, ::Il2CppObject* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::NoReflectionHelper::GetInternalValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "NoReflectionHelper", "GetInternalValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, settings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.SystemCertificateValidator
#include "Mono/Net/Security/SystemCertificateValidator.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean is_macosx
bool Mono::Net::Security::SystemCertificateValidator::_get_is_macosx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::SystemCertificateValidator::_get_is_macosx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Net.Security", "SystemCertificateValidator", "is_macosx"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean is_macosx
void Mono::Net::Security::SystemCertificateValidator::_set_is_macosx(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::SystemCertificateValidator::_set_is_macosx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "SystemCertificateValidator", "is_macosx", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.X509Certificates.X509KeyUsageFlags s_flags
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags Mono::Net::Security::SystemCertificateValidator::_get_s_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::SystemCertificateValidator::_get_s_flags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("Mono.Net.Security", "SystemCertificateValidator", "s_flags"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.X509Certificates.X509KeyUsageFlags s_flags
void Mono::Net::Security::SystemCertificateValidator::_set_s_flags(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::SystemCertificateValidator::_set_s_flags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "SystemCertificateValidator", "s_flags", value));
}
// Autogenerated method: Mono.Net.Security.SystemCertificateValidator..cctor
void Mono::Net::Security::SystemCertificateValidator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::SystemCertificateValidator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "SystemCertificateValidator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.SystemCertificateValidator.CreateX509Chain
::System::Security::Cryptography::X509Certificates::X509Chain* Mono::Net::Security::SystemCertificateValidator::CreateX509Chain(::System::Security::Cryptography::X509Certificates::X509CertificateCollection* certs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::SystemCertificateValidator::CreateX509Chain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "SystemCertificateValidator", "CreateX509Chain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certs)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Chain*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, certs);
}
// Autogenerated method: Mono.Net.Security.SystemCertificateValidator.NeedsChain
bool Mono::Net::Security::SystemCertificateValidator::NeedsChain(::Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::SystemCertificateValidator::NeedsChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security", "SystemCertificateValidator", "NeedsChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, settings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.Private.CallbackHelpers
#include "Mono/Net/Security/Private/CallbackHelpers.hpp"
// Including type: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass5_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass5_0.hpp"
// Including type: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass8_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass8_0.hpp"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: Mono.Security.Interface.MonoRemoteCertificateValidationCallback
#include "Mono/Security/Interface/MonoRemoteCertificateValidationCallback.hpp"
// Including type: System.Net.Security.LocalCertSelectionCallback
#include "System/Net/Security/LocalCertSelectionCallback.hpp"
// Including type: Mono.Security.Interface.MonoLocalCertificateSelectionCallback
#include "Mono/Security/Interface/MonoLocalCertificateSelectionCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers.MonoToPublic
::System::Net::Security::RemoteCertificateValidationCallback* Mono::Net::Security::Private::CallbackHelpers::MonoToPublic(::Mono::Security::Interface::MonoRemoteCertificateValidationCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::MonoToPublic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security.Private", "CallbackHelpers", "MonoToPublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::RemoteCertificateValidationCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers.MonoToInternal
::System::Net::Security::LocalCertSelectionCallback* Mono::Net::Security::Private::CallbackHelpers::MonoToInternal(::Mono::Security::Interface::MonoLocalCertificateSelectionCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::MonoToInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security.Private", "CallbackHelpers", "MonoToInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::LocalCertSelectionCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass5_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass5_0.hpp"
// Including type: Mono.Security.Interface.MonoRemoteCertificateValidationCallback
#include "Mono/Security/Interface/MonoRemoteCertificateValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Mono.Security.Interface.MonoRemoteCertificateValidationCallback callback
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoRemoteCertificateValidationCallback*& Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass5_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass5_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoRemoteCertificateValidationCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass5_0.<MonoToPublic>b__0
bool Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass5_0::$MonoToPublic$b__0(::Il2CppObject* t, ::System::Security::Cryptography::X509Certificates::X509Certificate* c, ::System::Security::Cryptography::X509Certificates::X509Chain* ch, ::System::Net::Security::SslPolicyErrors e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass5_0::<MonoToPublic>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<MonoToPublic>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t, c, ch, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass8_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass8_0.hpp"
// Including type: Mono.Security.Interface.MonoLocalCertificateSelectionCallback
#include "Mono/Security/Interface/MonoLocalCertificateSelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Mono.Security.Interface.MonoLocalCertificateSelectionCallback callback
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoLocalCertificateSelectionCallback*& Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass8_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass8_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoLocalCertificateSelectionCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass8_0.<MonoToInternal>b__0
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass8_0::$MonoToInternal$b__0(::StringW t, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* lc, ::System::Security::Cryptography::X509Certificates::X509Certificate* rc, ::ArrayW<::StringW> ai) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass8_0::<MonoToInternal>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<MonoToInternal>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(lc), ::il2cpp_utils::ExtractType(rc), ::il2cpp_utils::ExtractType(ai)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, t, lc, rc, ai);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Http.NtlmSession
#include "Mono/Http/NtlmSession.hpp"
// Including type: Mono.Security.Protocol.Ntlm.MessageBase
#include "Mono/Security/Protocol/Ntlm/MessageBase.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Ntlm.MessageBase message
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Ntlm::MessageBase*& Mono::Http::NtlmSession::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmSession::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Ntlm::MessageBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Http.NtlmSession.Authenticate
::System::Net::Authorization* Mono::Http::NtlmSession::Authenticate(::StringW challenge, ::System::Net::WebRequest* webRequest, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmSession::Authenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Authenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(this, ___internal__method, challenge, webRequest, credentials);
}
