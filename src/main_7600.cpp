// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaFractionDigitsFacet
#include "System/Xml/Schema/XmlSchemaFractionDigitsFacet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaWhiteSpaceFacet
#include "System/Xml/Schema/XmlSchemaWhiteSpaceFacet.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaForm
#include "System/Xml/Schema/XmlSchemaForm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaForm None
::System::Xml::Schema::XmlSchemaForm System::Xml::Schema::XmlSchemaForm::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaForm::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaForm>("System.Xml.Schema", "XmlSchemaForm", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaForm None
void System::Xml::Schema::XmlSchemaForm::_set_None(::System::Xml::Schema::XmlSchemaForm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaForm::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaForm", "None", value));
}
// [XmlEnumAttribute] Offset: 0x6A4C74
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaForm Qualified
::System::Xml::Schema::XmlSchemaForm System::Xml::Schema::XmlSchemaForm::_get_Qualified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaForm::_get_Qualified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaForm>("System.Xml.Schema", "XmlSchemaForm", "Qualified"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaForm Qualified
void System::Xml::Schema::XmlSchemaForm::_set_Qualified(::System::Xml::Schema::XmlSchemaForm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaForm::_set_Qualified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaForm", "Qualified", value));
}
// [XmlEnumAttribute] Offset: 0x6A4CAC
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaForm Unqualified
::System::Xml::Schema::XmlSchemaForm System::Xml::Schema::XmlSchemaForm::_get_Unqualified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaForm::_get_Unqualified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaForm>("System.Xml.Schema", "XmlSchemaForm", "Unqualified"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaForm Unqualified
void System::Xml::Schema::XmlSchemaForm::_set_Unqualified(::System::Xml::Schema::XmlSchemaForm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaForm::_set_Unqualified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaForm", "Unqualified", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaForm::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaForm::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaGroup
#include "System/Xml/Schema/XmlSchemaGroup.hpp"
// Including type: System.Xml.Schema.XmlSchemaGroupBase
#include "System/Xml/Schema/XmlSchemaGroupBase.hpp"
// Including type: System.Xml.Schema.XmlSchemaParticle
#include "System/Xml/Schema/XmlSchemaParticle.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaGroup::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaGroupBase particle
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaGroupBase*& System::Xml::Schema::XmlSchemaGroup::dyn_particle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::dyn_particle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particle"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaGroupBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaParticle canonicalParticle
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaParticle*& System::Xml::Schema::XmlSchemaGroup::dyn_canonicalParticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::dyn_canonicalParticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canonicalParticle"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaParticle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName qname
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaGroup::dyn_qname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::dyn_qname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qname"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaGroup redefined
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaGroup*& System::Xml::Schema::XmlSchemaGroup::dyn_redefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::dyn_redefined");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "redefined"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 selfReferenceCount
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaGroup::dyn_selfReferenceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::dyn_selfReferenceCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selfReferenceCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroup.get_Name
::StringW System::Xml::Schema::XmlSchemaGroup::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroup.set_Name
void System::Xml::Schema::XmlSchemaGroup::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroup.get_Particle
::System::Xml::Schema::XmlSchemaGroupBase* System::Xml::Schema::XmlSchemaGroup::get_Particle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::get_Particle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Particle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaGroupBase*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroup.set_Particle
void System::Xml::Schema::XmlSchemaGroup::set_Particle(::System::Xml::Schema::XmlSchemaGroupBase* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::set_Particle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Particle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroup.get_QualifiedName
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaGroup::get_QualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::get_QualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroup.get_CanonicalParticle
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::XmlSchemaGroup::get_CanonicalParticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::get_CanonicalParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanonicalParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaParticle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroup.set_CanonicalParticle
void System::Xml::Schema::XmlSchemaGroup::set_CanonicalParticle(::System::Xml::Schema::XmlSchemaParticle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::set_CanonicalParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CanonicalParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroup.get_Redefined
::System::Xml::Schema::XmlSchemaGroup* System::Xml::Schema::XmlSchemaGroup::get_Redefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::get_Redefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Redefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaGroup*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroup.set_Redefined
void System::Xml::Schema::XmlSchemaGroup::set_Redefined(::System::Xml::Schema::XmlSchemaGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::set_Redefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Redefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroup.get_SelfReferenceCount
int System::Xml::Schema::XmlSchemaGroup::get_SelfReferenceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::get_SelfReferenceCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SelfReferenceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroup.set_SelfReferenceCount
void System::Xml::Schema::XmlSchemaGroup::set_SelfReferenceCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::set_SelfReferenceCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SelfReferenceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroup.SetQualifiedName
void System::Xml::Schema::XmlSchemaGroup::SetQualifiedName(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::SetQualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroup.Clone
::System::Xml::Schema::XmlSchemaObject* System::Xml::Schema::XmlSchemaGroup::Clone(::System::Xml::Schema::XmlSchema* parentSchema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentSchema)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObject*, false>(this, ___internal__method, parentSchema);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroup.get_NameAttribute
::StringW System::Xml::Schema::XmlSchemaGroup::get_NameAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::get_NameAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroup.set_NameAttribute
void System::Xml::Schema::XmlSchemaGroup::set_NameAttribute(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::set_NameAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroup.Clone
::System::Xml::Schema::XmlSchemaObject* System::Xml::Schema::XmlSchemaGroup::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroup::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaGroupBase
#include "System/Xml/Schema/XmlSchemaGroupBase.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlSchemaGroupBase.get_Items
::System::Xml::Schema::XmlSchemaObjectCollection* System::Xml::Schema::XmlSchemaGroupBase::get_Items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroupBase::get_Items");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaGroupBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroupBase.SetItems
void System::Xml::Schema::XmlSchemaGroupBase::SetItems(::System::Xml::Schema::XmlSchemaObjectCollection* newItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroupBase::SetItems");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaGroupBase*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newItems);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaGroupRef
#include "System/Xml/Schema/XmlSchemaGroupRef.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaGroupBase
#include "System/Xml/Schema/XmlSchemaGroupBase.hpp"
// Including type: System.Xml.Schema.XmlSchemaGroup
#include "System/Xml/Schema/XmlSchemaGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName refName
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaGroupRef::dyn_refName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroupRef::dyn_refName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "refName"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaGroupBase particle
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaGroupBase*& System::Xml::Schema::XmlSchemaGroupRef::dyn_particle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroupRef::dyn_particle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particle"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaGroupBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaGroup refined
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaGroup*& System::Xml::Schema::XmlSchemaGroupRef::dyn_refined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroupRef::dyn_refined");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "refined"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroupRef.get_RefName
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaGroupRef::get_RefName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroupRef::get_RefName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RefName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroupRef.set_RefName
void System::Xml::Schema::XmlSchemaGroupRef::set_RefName(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroupRef::set_RefName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RefName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroupRef.get_Particle
::System::Xml::Schema::XmlSchemaGroupBase* System::Xml::Schema::XmlSchemaGroupRef::get_Particle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroupRef::get_Particle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Particle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaGroupBase*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroupRef.get_Redefined
::System::Xml::Schema::XmlSchemaGroup* System::Xml::Schema::XmlSchemaGroupRef::get_Redefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroupRef::get_Redefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Redefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaGroup*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroupRef.set_Redefined
void System::Xml::Schema::XmlSchemaGroupRef::set_Redefined(::System::Xml::Schema::XmlSchemaGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroupRef::set_Redefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Redefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaGroupRef.SetParticle
void System::Xml::Schema::XmlSchemaGroupRef::SetParticle(::System::Xml::Schema::XmlSchemaGroupBase* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaGroupRef::SetParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaIdentityConstraint
#include "System/Xml/Schema/XmlSchemaIdentityConstraint.hpp"
// Including type: System.Xml.Schema.XmlSchemaXPath
#include "System/Xml/Schema/XmlSchemaXPath.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.CompiledIdentityConstraint
#include "System/Xml/Schema/CompiledIdentityConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaIdentityConstraint::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaIdentityConstraint::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaXPath selector
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaXPath*& System::Xml::Schema::XmlSchemaIdentityConstraint::dyn_selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaIdentityConstraint::dyn_selector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selector"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaXPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectCollection fields
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectCollection*& System::Xml::Schema::XmlSchemaIdentityConstraint::dyn_fields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaIdentityConstraint::dyn_fields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fields"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName qualifiedName
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaIdentityConstraint::dyn_qualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaIdentityConstraint::dyn_qualifiedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qualifiedName"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.CompiledIdentityConstraint compiledConstraint
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::CompiledIdentityConstraint*& System::Xml::Schema::XmlSchemaIdentityConstraint::dyn_compiledConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaIdentityConstraint::dyn_compiledConstraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compiledConstraint"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::CompiledIdentityConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaIdentityConstraint.get_Name
::StringW System::Xml::Schema::XmlSchemaIdentityConstraint::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaIdentityConstraint::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaIdentityConstraint.set_Name
void System::Xml::Schema::XmlSchemaIdentityConstraint::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaIdentityConstraint::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaIdentityConstraint.get_Selector
::System::Xml::Schema::XmlSchemaXPath* System::Xml::Schema::XmlSchemaIdentityConstraint::get_Selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaIdentityConstraint::get_Selector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Selector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaXPath*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaIdentityConstraint.set_Selector
void System::Xml::Schema::XmlSchemaIdentityConstraint::set_Selector(::System::Xml::Schema::XmlSchemaXPath* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaIdentityConstraint::set_Selector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Selector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaIdentityConstraint.get_Fields
::System::Xml::Schema::XmlSchemaObjectCollection* System::Xml::Schema::XmlSchemaIdentityConstraint::get_Fields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaIdentityConstraint::get_Fields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Fields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaIdentityConstraint.get_QualifiedName
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaIdentityConstraint::get_QualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaIdentityConstraint::get_QualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaIdentityConstraint.get_CompiledConstraint
::System::Xml::Schema::CompiledIdentityConstraint* System::Xml::Schema::XmlSchemaIdentityConstraint::get_CompiledConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaIdentityConstraint::get_CompiledConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompiledConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::CompiledIdentityConstraint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaIdentityConstraint.set_CompiledConstraint
void System::Xml::Schema::XmlSchemaIdentityConstraint::set_CompiledConstraint(::System::Xml::Schema::CompiledIdentityConstraint* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaIdentityConstraint::set_CompiledConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CompiledConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaIdentityConstraint.SetQualifiedName
void System::Xml::Schema::XmlSchemaIdentityConstraint::SetQualifiedName(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaIdentityConstraint::SetQualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaIdentityConstraint.get_NameAttribute
::StringW System::Xml::Schema::XmlSchemaIdentityConstraint::get_NameAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaIdentityConstraint::get_NameAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaIdentityConstraint.set_NameAttribute
void System::Xml::Schema::XmlSchemaIdentityConstraint::set_NameAttribute(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaIdentityConstraint::set_NameAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaXPath
#include "System/Xml/Schema/XmlSchemaXPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String xpath
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaXPath::dyn_xpath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaXPath::dyn_xpath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xpath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaXPath.get_XPath
::StringW System::Xml::Schema::XmlSchemaXPath::get_XPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaXPath::get_XPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaXPath.set_XPath
void System::Xml::Schema::XmlSchemaXPath::set_XPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaXPath::set_XPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaUnique
#include "System/Xml/Schema/XmlSchemaUnique.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaKey
#include "System/Xml/Schema/XmlSchemaKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaKeyref
#include "System/Xml/Schema/XmlSchemaKeyref.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName refer
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaKeyref::dyn_refer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaKeyref::dyn_refer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "refer"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaKeyref.get_Refer
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaKeyref::get_Refer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaKeyref::get_Refer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Refer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaKeyref.set_Refer
void System::Xml::Schema::XmlSchemaKeyref::set_Refer(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaKeyref::set_Refer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Refer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaImport
#include "System/Xml/Schema/XmlSchemaImport.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnnotation
#include "System/Xml/Schema/XmlSchemaAnnotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String ns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaImport::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaImport::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaAnnotation annotation
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaAnnotation*& System::Xml::Schema::XmlSchemaImport::dyn_annotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaImport::dyn_annotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "annotation"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaAnnotation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaImport.get_Namespace
::StringW System::Xml::Schema::XmlSchemaImport::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaImport::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaImport.set_Namespace
void System::Xml::Schema::XmlSchemaImport::set_Namespace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaImport::set_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaImport.AddAnnotation
void System::Xml::Schema::XmlSchemaImport::AddAnnotation(::System::Xml::Schema::XmlSchemaAnnotation* annotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaImport::AddAnnotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, annotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaInclude
#include "System/Xml/Schema/XmlSchemaInclude.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnnotation
#include "System/Xml/Schema/XmlSchemaAnnotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaAnnotation annotation
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaAnnotation*& System::Xml::Schema::XmlSchemaInclude::dyn_annotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInclude::dyn_annotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "annotation"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaAnnotation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInclude.AddAnnotation
void System::Xml::Schema::XmlSchemaInclude::AddAnnotation(::System::Xml::Schema::XmlSchemaAnnotation* annotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInclude::AddAnnotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, annotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaInfo
#include "System/Xml/Schema/XmlSchemaInfo.hpp"
// Including type: System.Xml.Schema.XmlSchemaElement
#include "System/Xml/Schema/XmlSchemaElement.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttribute
#include "System/Xml/Schema/XmlSchemaAttribute.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean isDefault
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XmlSchemaInfo::dyn_isDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::dyn_isDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDefault"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isNil
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XmlSchemaInfo::dyn_isNil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::dyn_isNil");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isNil"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaElement schemaElement
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaElement*& System::Xml::Schema::XmlSchemaInfo::dyn_schemaElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::dyn_schemaElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaElement"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaAttribute schemaAttribute
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaAttribute*& System::Xml::Schema::XmlSchemaInfo::dyn_schemaAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::dyn_schemaAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaAttribute"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaType schemaType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaType*& System::Xml::Schema::XmlSchemaInfo::dyn_schemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::dyn_schemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType memberType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleType*& System::Xml::Schema::XmlSchemaInfo::dyn_memberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::dyn_memberType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "memberType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaValidity validity
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaValidity& System::Xml::Schema::XmlSchemaInfo::dyn_validity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::dyn_validity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validity"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaValidity*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaContentType contentType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaContentType& System::Xml::Schema::XmlSchemaInfo::dyn_contentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::dyn_contentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaContentType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInfo.get_Validity
::System::Xml::Schema::XmlSchemaValidity System::Xml::Schema::XmlSchemaInfo::get_Validity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::get_Validity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaInfo*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaValidity, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInfo.set_Validity
void System::Xml::Schema::XmlSchemaInfo::set_Validity(::System::Xml::Schema::XmlSchemaValidity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::set_Validity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Validity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInfo.get_IsDefault
bool System::Xml::Schema::XmlSchemaInfo::get_IsDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::get_IsDefault");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaInfo*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInfo.set_IsDefault
void System::Xml::Schema::XmlSchemaInfo::set_IsDefault(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::set_IsDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInfo.get_IsNil
bool System::Xml::Schema::XmlSchemaInfo::get_IsNil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::get_IsNil");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaInfo*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInfo.set_IsNil
void System::Xml::Schema::XmlSchemaInfo::set_IsNil(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::set_IsNil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsNil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInfo.get_MemberType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::XmlSchemaInfo::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::get_MemberType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaInfo*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInfo.set_MemberType
void System::Xml::Schema::XmlSchemaInfo::set_MemberType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::set_MemberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInfo.get_SchemaType
::System::Xml::Schema::XmlSchemaType* System::Xml::Schema::XmlSchemaInfo::get_SchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::get_SchemaType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaInfo*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInfo.set_SchemaType
void System::Xml::Schema::XmlSchemaInfo::set_SchemaType(::System::Xml::Schema::XmlSchemaType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::set_SchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInfo.get_SchemaElement
::System::Xml::Schema::XmlSchemaElement* System::Xml::Schema::XmlSchemaInfo::get_SchemaElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::get_SchemaElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaInfo*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInfo.set_SchemaElement
void System::Xml::Schema::XmlSchemaInfo::set_SchemaElement(::System::Xml::Schema::XmlSchemaElement* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::set_SchemaElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SchemaElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInfo.get_SchemaAttribute
::System::Xml::Schema::XmlSchemaAttribute* System::Xml::Schema::XmlSchemaInfo::get_SchemaAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::get_SchemaAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaInfo*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInfo.set_SchemaAttribute
void System::Xml::Schema::XmlSchemaInfo::set_SchemaAttribute(::System::Xml::Schema::XmlSchemaAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::set_SchemaAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SchemaAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInfo.get_ContentType
::System::Xml::Schema::XmlSchemaContentType System::Xml::Schema::XmlSchemaInfo::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::get_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaContentType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInfo.get_XmlType
::System::Xml::Schema::XmlSchemaType* System::Xml::Schema::XmlSchemaInfo::get_XmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::get_XmlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInfo.get_HasDefaultValue
bool System::Xml::Schema::XmlSchemaInfo::get_HasDefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::get_HasDefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasDefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInfo.get_IsUnionType
bool System::Xml::Schema::XmlSchemaInfo::get_IsUnionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::get_IsUnionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUnionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInfo.Clear
void System::Xml::Schema::XmlSchemaInfo::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInfo::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaNotation
#include "System/Xml/Schema/XmlSchemaNotation.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaNotation::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaNotation::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String publicId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaNotation::dyn_publicId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaNotation::dyn_publicId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String systemId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaNotation::dyn_systemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaNotation::dyn_systemId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "systemId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName qname
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaNotation::dyn_qname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaNotation::dyn_qname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qname"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaNotation.get_Name
::StringW System::Xml::Schema::XmlSchemaNotation::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaNotation::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaNotation.set_Name
void System::Xml::Schema::XmlSchemaNotation::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaNotation::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaNotation.get_Public
::StringW System::Xml::Schema::XmlSchemaNotation::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaNotation::get_Public");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Public", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaNotation.set_Public
void System::Xml::Schema::XmlSchemaNotation::set_Public(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaNotation::set_Public");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Public", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaNotation.get_System
::StringW System::Xml::Schema::XmlSchemaNotation::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaNotation::get_System");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_System", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaNotation.set_System
void System::Xml::Schema::XmlSchemaNotation::set_System(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaNotation::set_System");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_System", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaNotation.get_QualifiedName
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaNotation::get_QualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaNotation::get_QualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaNotation.set_QualifiedName
void System::Xml::Schema::XmlSchemaNotation::set_QualifiedName(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaNotation::set_QualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_QualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaNotation.get_NameAttribute
::StringW System::Xml::Schema::XmlSchemaNotation::get_NameAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaNotation::get_NameAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaNotation.set_NameAttribute
void System::Xml::Schema::XmlSchemaNotation::set_NameAttribute(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaNotation::set_NameAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
// Including type: System.Xml.Serialization.XmlSerializerNamespaces
#include "System/Xml/Serialization/XmlSerializerNamespaces.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
// Including type: System.Xml.XmlAttribute
#include "System/Xml/XmlAttribute.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnnotation
#include "System/Xml/Schema/XmlSchemaAnnotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 lineNum
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaObject::dyn_lineNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::dyn_lineNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 linePos
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaObject::dyn_linePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::dyn_linePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sourceUri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaObject::dyn_sourceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::dyn_sourceUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Serialization.XmlSerializerNamespaces namespaces
[[deprecated("Use field access instead!")]] ::System::Xml::Serialization::XmlSerializerNamespaces*& System::Xml::Schema::XmlSchemaObject::dyn_namespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::dyn_namespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaces"))->offset;
  return *reinterpret_cast<::System::Xml::Serialization::XmlSerializerNamespaces**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObject parent
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObject*& System::Xml::Schema::XmlSchemaObject::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isProcessing
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XmlSchemaObject::dyn_isProcessing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::dyn_isProcessing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isProcessing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.get_LineNumber
int System::Xml::Schema::XmlSchemaObject::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::get_LineNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.set_LineNumber
void System::Xml::Schema::XmlSchemaObject::set_LineNumber(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::set_LineNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.get_LinePosition
int System::Xml::Schema::XmlSchemaObject::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::get_LinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.set_LinePosition
void System::Xml::Schema::XmlSchemaObject::set_LinePosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::set_LinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.get_SourceUri
::StringW System::Xml::Schema::XmlSchemaObject::get_SourceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::get_SourceUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SourceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.set_SourceUri
void System::Xml::Schema::XmlSchemaObject::set_SourceUri(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::set_SourceUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SourceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.get_Parent
::System::Xml::Schema::XmlSchemaObject* System::Xml::Schema::XmlSchemaObject::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::get_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.set_Parent
void System::Xml::Schema::XmlSchemaObject::set_Parent(::System::Xml::Schema::XmlSchemaObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::set_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.get_Namespaces
::System::Xml::Serialization::XmlSerializerNamespaces* System::Xml::Schema::XmlSchemaObject::get_Namespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::get_Namespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Serialization::XmlSerializerNamespaces*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.set_Namespaces
void System::Xml::Schema::XmlSchemaObject::set_Namespaces(::System::Xml::Serialization::XmlSerializerNamespaces* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::set_Namespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Namespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.get_IdAttribute
::StringW System::Xml::Schema::XmlSchemaObject::get_IdAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::get_IdAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.set_IdAttribute
void System::Xml::Schema::XmlSchemaObject::set_IdAttribute(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::set_IdAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.get_NameAttribute
::StringW System::Xml::Schema::XmlSchemaObject::get_NameAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::get_NameAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.set_NameAttribute
void System::Xml::Schema::XmlSchemaObject::set_NameAttribute(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::set_NameAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.get_IsProcessing
bool System::Xml::Schema::XmlSchemaObject::get_IsProcessing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::get_IsProcessing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsProcessing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.set_IsProcessing
void System::Xml::Schema::XmlSchemaObject::set_IsProcessing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::set_IsProcessing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsProcessing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.OnAdd
void System::Xml::Schema::XmlSchemaObject::OnAdd(::System::Xml::Schema::XmlSchemaObjectCollection* container, ::Il2CppObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::OnAdd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, item);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.OnRemove
void System::Xml::Schema::XmlSchemaObject::OnRemove(::System::Xml::Schema::XmlSchemaObjectCollection* container, ::Il2CppObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::OnRemove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, item);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.OnClear
void System::Xml::Schema::XmlSchemaObject::OnClear(::System::Xml::Schema::XmlSchemaObjectCollection* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::OnClear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.SetUnhandledAttributes
void System::Xml::Schema::XmlSchemaObject::SetUnhandledAttributes(::ArrayW<::System::Xml::XmlAttribute*> moreAttributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::SetUnhandledAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, moreAttributes);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.AddAnnotation
void System::Xml::Schema::XmlSchemaObject::AddAnnotation(::System::Xml::Schema::XmlSchemaAnnotation* annotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::AddAnnotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, annotation);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObject.Clone
::System::Xml::Schema::XmlSchemaObject* System::Xml::Schema::XmlSchemaObject::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObject::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectEnumerator
#include "System/Xml/Schema/XmlSchemaObjectEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObject parent
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObject*& System::Xml::Schema::XmlSchemaObjectCollection::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.get_Item
::System::Xml::Schema::XmlSchemaObject* System::Xml::Schema::XmlSchemaObjectCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObjectCollection*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.set_Item
void System::Xml::Schema::XmlSchemaObjectCollection::set_Item(int index, ::System::Xml::Schema::XmlSchemaObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObjectCollection*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.GetEnumerator
::System::Xml::Schema::XmlSchemaObjectEnumerator* System::Xml::Schema::XmlSchemaObjectCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.Add
int System::Xml::Schema::XmlSchemaObjectCollection::Add(::System::Xml::Schema::XmlSchemaObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, item);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.Insert
void System::Xml::Schema::XmlSchemaObjectCollection::Insert(int index, ::System::Xml::Schema::XmlSchemaObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.Remove
void System::Xml::Schema::XmlSchemaObjectCollection::Remove(::System::Xml::Schema::XmlSchemaObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.Clone
::System::Xml::Schema::XmlSchemaObjectCollection* System::Xml::Schema::XmlSchemaObjectCollection::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.Add
void System::Xml::Schema::XmlSchemaObjectCollection::Add(::System::Xml::Schema::XmlSchemaObjectCollection* collToAdd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collToAdd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collToAdd);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.OnInsert
void System::Xml::Schema::XmlSchemaObjectCollection::OnInsert(int index, ::Il2CppObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::OnInsert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.OnSet
void System::Xml::Schema::XmlSchemaObjectCollection::OnSet(int index, ::Il2CppObject* oldValue, ::Il2CppObject* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::OnSet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, oldValue, newValue);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.OnClear
void System::Xml::Schema::XmlSchemaObjectCollection::OnClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::OnClear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectCollection.OnRemove
void System::Xml::Schema::XmlSchemaObjectCollection::OnRemove(int index, ::Il2CppObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectCollection::OnRemove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Collections::CollectionBase*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlSchemaObjectEnumerator
#include "System/Xml/Schema/XmlSchemaObjectEnumerator.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator enumerator
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Xml::Schema::XmlSchemaObjectEnumerator::dyn_enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectEnumerator::dyn_enumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enumerator"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectEnumerator.get_Current
::System::Xml::Schema::XmlSchemaObject* System::Xml::Schema::XmlSchemaObjectEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Xml::Schema::XmlSchemaObjectEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObjectEnumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectEnumerator.MoveNext
bool System::Xml::Schema::XmlSchemaObjectEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectEnumerator.System.Collections.IEnumerator.Reset
void System::Xml::Schema::XmlSchemaObjectEnumerator::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectEnumerator::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObjectEnumerator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectEnumerator.System.Collections.IEnumerator.MoveNext
bool System::Xml::Schema::XmlSchemaObjectEnumerator::System_Collections_IEnumerator_MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectEnumerator::System.Collections.IEnumerator.MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObjectEnumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaObjectTable
#include "System/Xml/Schema/XmlSchemaObjectTable.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.EnumeratorType
#include "System/Xml/Schema/XmlSchemaObjectTable_EnumeratorType.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.ValuesCollection
#include "System/Xml/Schema/XmlSchemaObjectTable_ValuesCollection.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XSOEnumerator
#include "System/Xml/Schema/XmlSchemaObjectTable_XSOEnumerator.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XSODictionaryEnumerator
#include "System/Xml/Schema/XmlSchemaObjectTable_XSODictionaryEnumerator.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaObject> table
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::XmlSchemaObject*>*& System::Xml::Schema::XmlSchemaObjectTable::dyn_table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::dyn_table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "table"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::XmlSchemaObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XmlSchemaObjectEntry> entries
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Xml::Schema::XmlSchemaObjectTable::XmlSchemaObjectEntry>*& System::Xml::Schema::XmlSchemaObjectTable::dyn_entries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::dyn_entries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entries"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Xml::Schema::XmlSchemaObjectTable::XmlSchemaObjectEntry>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable.get_Count
int System::Xml::Schema::XmlSchemaObjectTable::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable.get_Item
::System::Xml::Schema::XmlSchemaObject* System::Xml::Schema::XmlSchemaObjectTable::get_Item(::System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObject*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable.get_Values
::System::Collections::ICollection* System::Xml::Schema::XmlSchemaObjectTable::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::get_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable.Add
void System::Xml::Schema::XmlSchemaObjectTable::Add(::System::Xml::XmlQualifiedName* name, ::System::Xml::Schema::XmlSchemaObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable.Insert
void System::Xml::Schema::XmlSchemaObjectTable::Insert(::System::Xml::XmlQualifiedName* name, ::System::Xml::Schema::XmlSchemaObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable.Replace
void System::Xml::Schema::XmlSchemaObjectTable::Replace(::System::Xml::XmlQualifiedName* name, ::System::Xml::Schema::XmlSchemaObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable.Clear
void System::Xml::Schema::XmlSchemaObjectTable::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable.Remove
void System::Xml::Schema::XmlSchemaObjectTable::Remove(::System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable.FindIndexByValue
int System::Xml::Schema::XmlSchemaObjectTable::FindIndexByValue(::System::Xml::Schema::XmlSchemaObject* xso) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::FindIndexByValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindIndexByValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xso)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, xso);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable.Contains
bool System::Xml::Schema::XmlSchemaObjectTable::Contains(::System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::Xml::Schema::XmlSchemaObjectTable::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.EnumeratorType
#include "System/Xml/Schema/XmlSchemaObjectTable_EnumeratorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.EnumeratorType Keys
::System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType::_get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType::_get_Keys");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType>("System.Xml.Schema", "XmlSchemaObjectTable/EnumeratorType", "Keys"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.EnumeratorType Keys
void System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType::_set_Keys(::System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType::_set_Keys");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaObjectTable/EnumeratorType", "Keys", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.EnumeratorType Values
::System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType::_get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType::_get_Values");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType>("System.Xml.Schema", "XmlSchemaObjectTable/EnumeratorType", "Values"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.EnumeratorType Values
void System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType::_set_Values(::System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType::_set_Values");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaObjectTable/EnumeratorType", "Values", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.EnumeratorType DictionaryEntry
::System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType::_get_DictionaryEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType::_get_DictionaryEntry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType>("System.Xml.Schema", "XmlSchemaObjectTable/EnumeratorType", "DictionaryEntry"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.EnumeratorType DictionaryEntry
void System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType::_set_DictionaryEntry(::System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType::_set_DictionaryEntry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaObjectTable/EnumeratorType", "DictionaryEntry", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XmlSchemaObjectEntry
#include "System/Xml/Schema/XmlSchemaObjectTable.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlQualifiedName qname
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaObjectTable::XmlSchemaObjectEntry::dyn_qname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::XmlSchemaObjectEntry::dyn_qname");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qname"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.XmlSchemaObject xso
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObject*& System::Xml::Schema::XmlSchemaObjectTable::XmlSchemaObjectEntry::dyn_xso() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::XmlSchemaObjectEntry::dyn_xso");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xso"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XmlSchemaObjectEntry..ctor
// ABORTED elsewhere.  System::Xml::Schema::XmlSchemaObjectTable::XmlSchemaObjectEntry::XmlSchemaObjectEntry(::System::Xml::XmlQualifiedName* name, ::System::Xml::Schema::XmlSchemaObject* value)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.ValuesCollection
#include "System/Xml/Schema/XmlSchemaObjectTable_ValuesCollection.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XmlSchemaObjectEntry> entries
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Xml::Schema::XmlSchemaObjectTable::XmlSchemaObjectEntry>*& System::Xml::Schema::XmlSchemaObjectTable::ValuesCollection::dyn_entries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::ValuesCollection::dyn_entries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entries"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Xml::Schema::XmlSchemaObjectTable::XmlSchemaObjectEntry>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 size
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaObjectTable::ValuesCollection::dyn_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::ValuesCollection::dyn_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.ValuesCollection.get_Count
int System::Xml::Schema::XmlSchemaObjectTable::ValuesCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::ValuesCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObjectTable::ValuesCollection*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.ValuesCollection.get_SyncRoot
::Il2CppObject* System::Xml::Schema::XmlSchemaObjectTable::ValuesCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::ValuesCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObjectTable::ValuesCollection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.ValuesCollection.CopyTo
void System::Xml::Schema::XmlSchemaObjectTable::ValuesCollection::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::ValuesCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObjectTable::ValuesCollection*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.ValuesCollection.GetEnumerator
::System::Collections::IEnumerator* System::Xml::Schema::XmlSchemaObjectTable::ValuesCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::ValuesCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObjectTable::ValuesCollection*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XSOEnumerator
#include "System/Xml/Schema/XmlSchemaObjectTable_XSOEnumerator.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XmlSchemaObjectEntry> entries
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Xml::Schema::XmlSchemaObjectTable::XmlSchemaObjectEntry>*& System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator::dyn_entries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator::dyn_entries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entries"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Xml::Schema::XmlSchemaObjectTable::XmlSchemaObjectEntry>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.EnumeratorType enumType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType& System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator::dyn_enumType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator::dyn_enumType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enumType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectTable::EnumeratorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 currentIndex
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator::dyn_currentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator::dyn_currentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 size
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator::dyn_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator::dyn_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.XmlQualifiedName currentKey
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator::dyn_currentKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator::dyn_currentKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentKey"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.Schema.XmlSchemaObject currentValue
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObject*& System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator::dyn_currentValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator::dyn_currentValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentValue"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XSOEnumerator.get_Current
::Il2CppObject* System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XSOEnumerator.MoveNext
bool System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XSOEnumerator.Reset
void System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObjectTable::XSOEnumerator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XSODictionaryEnumerator
#include "System/Xml/Schema/XmlSchemaObjectTable_XSODictionaryEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XSODictionaryEnumerator.get_Entry
::System::Collections::DictionaryEntry System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XSODictionaryEnumerator.get_Key
::Il2CppObject* System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaObjectTable/System.Xml.Schema.XSODictionaryEnumerator.get_Value
::Il2CppObject* System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObjectTable::XSODictionaryEnumerator*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaParticle
#include "System/Xml/Schema/XmlSchemaParticle.hpp"
// Including type: System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.EmptyParticle
#include "System/Xml/Schema/XmlSchemaParticle_EmptyParticle.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Xml.Schema.XmlSchemaParticle Empty
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::XmlSchemaParticle::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaParticle*>("System.Xml.Schema", "XmlSchemaParticle", "Empty"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Xml.Schema.XmlSchemaParticle Empty
void System::Xml::Schema::XmlSchemaParticle::_set_Empty(::System::Xml::Schema::XmlSchemaParticle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaParticle", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Decimal minOccurs
[[deprecated("Use field access instead!")]] ::System::Decimal& System::Xml::Schema::XmlSchemaParticle::dyn_minOccurs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::dyn_minOccurs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minOccurs"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Decimal maxOccurs
[[deprecated("Use field access instead!")]] ::System::Decimal& System::Xml::Schema::XmlSchemaParticle::dyn_maxOccurs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::dyn_maxOccurs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxOccurs"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.Occurs flags
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaParticle::Occurs& System::Xml::Schema::XmlSchemaParticle::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::dyn_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaParticle::Occurs*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaParticle.get_MinOccursString
::StringW System::Xml::Schema::XmlSchemaParticle::get_MinOccursString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::get_MinOccursString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinOccursString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaParticle.set_MinOccursString
void System::Xml::Schema::XmlSchemaParticle::set_MinOccursString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::set_MinOccursString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MinOccursString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaParticle.get_MaxOccursString
::StringW System::Xml::Schema::XmlSchemaParticle::get_MaxOccursString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::get_MaxOccursString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxOccursString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaParticle.set_MaxOccursString
void System::Xml::Schema::XmlSchemaParticle::set_MaxOccursString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::set_MaxOccursString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxOccursString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaParticle.get_MinOccurs
::System::Decimal System::Xml::Schema::XmlSchemaParticle::get_MinOccurs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::get_MinOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaParticle.set_MinOccurs
void System::Xml::Schema::XmlSchemaParticle::set_MinOccurs(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::set_MinOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MinOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaParticle.get_MaxOccurs
::System::Decimal System::Xml::Schema::XmlSchemaParticle::get_MaxOccurs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::get_MaxOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaParticle.set_MaxOccurs
void System::Xml::Schema::XmlSchemaParticle::set_MaxOccurs(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::set_MaxOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaParticle.get_IsEmpty
bool System::Xml::Schema::XmlSchemaParticle::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::get_IsEmpty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaParticle*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaParticle.get_NameString
::StringW System::Xml::Schema::XmlSchemaParticle::get_NameString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::get_NameString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaParticle*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaParticle..cctor
void System::Xml::Schema::XmlSchemaParticle::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaParticle", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaParticle.GetQualifiedName
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaParticle::GetQualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::GetQualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.Occurs
#include "System/Xml/Schema/XmlSchemaParticle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.Occurs None
::System::Xml::Schema::XmlSchemaParticle::Occurs System::Xml::Schema::XmlSchemaParticle::Occurs::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaParticle::Occurs>("System.Xml.Schema", "XmlSchemaParticle/Occurs", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.Occurs None
void System::Xml::Schema::XmlSchemaParticle::Occurs::_set_None(::System::Xml::Schema::XmlSchemaParticle::Occurs value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaParticle/Occurs", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.Occurs Min
::System::Xml::Schema::XmlSchemaParticle::Occurs System::Xml::Schema::XmlSchemaParticle::Occurs::_get_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::_get_Min");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaParticle::Occurs>("System.Xml.Schema", "XmlSchemaParticle/Occurs", "Min"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.Occurs Min
void System::Xml::Schema::XmlSchemaParticle::Occurs::_set_Min(::System::Xml::Schema::XmlSchemaParticle::Occurs value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::_set_Min");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaParticle/Occurs", "Min", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.Occurs Max
::System::Xml::Schema::XmlSchemaParticle::Occurs System::Xml::Schema::XmlSchemaParticle::Occurs::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaParticle::Occurs>("System.Xml.Schema", "XmlSchemaParticle/Occurs", "Max"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.Occurs Max
void System::Xml::Schema::XmlSchemaParticle::Occurs::_set_Max(::System::Xml::Schema::XmlSchemaParticle::Occurs value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaParticle/Occurs", "Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaParticle::Occurs::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::Occurs::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.EmptyParticle
#include "System/Xml/Schema/XmlSchemaParticle_EmptyParticle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlSchemaParticle/System.Xml.Schema.EmptyParticle.get_IsEmpty
bool System::Xml::Schema::XmlSchemaParticle::EmptyParticle::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaParticle::EmptyParticle::get_IsEmpty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaParticle*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaRedefine
#include "System/Xml/Schema/XmlSchemaRedefine.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectTable
#include "System/Xml/Schema/XmlSchemaObjectTable.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnnotation
#include "System/Xml/Schema/XmlSchemaAnnotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectCollection items
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectCollection*& System::Xml::Schema::XmlSchemaRedefine::dyn_items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaRedefine::dyn_items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "items"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectTable attributeGroups
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectTable*& System::Xml::Schema::XmlSchemaRedefine::dyn_attributeGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaRedefine::dyn_attributeGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeGroups"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectTable types
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectTable*& System::Xml::Schema::XmlSchemaRedefine::dyn_types() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaRedefine::dyn_types");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "types"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectTable groups
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectTable*& System::Xml::Schema::XmlSchemaRedefine::dyn_groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaRedefine::dyn_groups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groups"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaRedefine.get_Items
::System::Xml::Schema::XmlSchemaObjectCollection* System::Xml::Schema::XmlSchemaRedefine::get_Items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaRedefine::get_Items");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Items", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaRedefine.get_AttributeGroups
::System::Xml::Schema::XmlSchemaObjectTable* System::Xml::Schema::XmlSchemaRedefine::get_AttributeGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaRedefine::get_AttributeGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AttributeGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaRedefine.get_SchemaTypes
::System::Xml::Schema::XmlSchemaObjectTable* System::Xml::Schema::XmlSchemaRedefine::get_SchemaTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaRedefine::get_SchemaTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaRedefine.get_Groups
::System::Xml::Schema::XmlSchemaObjectTable* System::Xml::Schema::XmlSchemaRedefine::get_Groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaRedefine::get_Groups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Groups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaRedefine.AddAnnotation
void System::Xml::Schema::XmlSchemaRedefine::AddAnnotation(::System::Xml::Schema::XmlSchemaAnnotation* annotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaRedefine::AddAnnotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, annotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSequence
#include "System/Xml/Schema/XmlSchemaSequence.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectCollection items
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectCollection*& System::Xml::Schema::XmlSchemaSequence::dyn_items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSequence::dyn_items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "items"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSequence.get_Items
::System::Xml::Schema::XmlSchemaObjectCollection* System::Xml::Schema::XmlSchemaSequence::get_Items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSequence::get_Items");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaGroupBase*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSequence.get_IsEmpty
bool System::Xml::Schema::XmlSchemaSequence::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSequence::get_IsEmpty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaParticle*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSequence.SetItems
void System::Xml::Schema::XmlSchemaSequence::SetItems(::System::Xml::Schema::XmlSchemaObjectCollection* newItems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSequence::SetItems");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaGroupBase*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newItems);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.Schema.SchemaNames
#include "System/Xml/Schema/SchemaNames.hpp"
// Including type: System.Collections.SortedList
#include "System/Collections/SortedList.hpp"
// Including type: System.Xml.Schema.ValidationEventHandler
#include "System/Xml/Schema/ValidationEventHandler.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.Schema.SchemaInfo
#include "System/Xml/Schema/SchemaInfo.hpp"
// Including type: System.Xml.XmlReaderSettings
#include "System/Xml/XmlReaderSettings.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.Schema.XmlSchemaCompilationSettings
#include "System/Xml/Schema/XmlSchemaCompilationSettings.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectTable
#include "System/Xml/Schema/XmlSchemaObjectTable.hpp"
// Including type: System.Xml.XmlResolver
#include "System/Xml/XmlResolver.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Xml.Schema.XmlSchemaSubstitutionGroup
#include "System/Xml/Schema/XmlSchemaSubstitutionGroup.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
// Including type: System.Xml.Schema.ValidationEventArgs
#include "System/Xml/Schema/ValidationEventArgs.hpp"
// Including type: System.Xml.Schema.XmlSchemaException
#include "System/Xml/Schema/XmlSchemaException.hpp"
// Including type: System.Xml.Schema.XmlSeverityType
#include "System/Xml/Schema/XmlSeverityType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& System::Xml::Schema::XmlSchemaSet::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaNames schemaNames
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaNames*& System::Xml::Schema::XmlSchemaSet::dyn_schemaNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_schemaNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaNames"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaNames**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList schemas
[[deprecated("Use field access instead!")]] ::System::Collections::SortedList*& System::Xml::Schema::XmlSchemaSet::dyn_schemas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_schemas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemas"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ValidationEventHandler internalEventHandler
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::ValidationEventHandler*& System::Xml::Schema::XmlSchemaSet::dyn_internalEventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_internalEventHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalEventHandler"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::ValidationEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ValidationEventHandler eventHandler
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::ValidationEventHandler*& System::Xml::Schema::XmlSchemaSet::dyn_eventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_eventHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventHandler"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::ValidationEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isCompiled
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XmlSchemaSet::dyn_isCompiled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_isCompiled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isCompiled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable schemaLocations
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::XmlSchemaSet::dyn_schemaLocations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_schemaLocations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaLocations"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable chameleonSchemas
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::XmlSchemaSet::dyn_chameleonSchemas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_chameleonSchemas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chameleonSchemas"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable targetNamespaces
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::XmlSchemaSet::dyn_targetNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_targetNamespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetNamespaces"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean compileAll
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XmlSchemaSet::dyn_compileAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_compileAll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compileAll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaInfo cachedCompiledInfo
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaInfo*& System::Xml::Schema::XmlSchemaSet::dyn_cachedCompiledInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_cachedCompiledInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedCompiledInfo"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlReaderSettings readerSettings
[[deprecated("Use field access instead!")]] ::System::Xml::XmlReaderSettings*& System::Xml::Schema::XmlSchemaSet::dyn_readerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_readerSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readerSettings"))->offset;
  return *reinterpret_cast<::System::Xml::XmlReaderSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchema schemaForSchema
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchema*& System::Xml::Schema::XmlSchemaSet::dyn_schemaForSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_schemaForSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaForSchema"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchema**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaCompilationSettings compilationSettings
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaCompilationSettings*& System::Xml::Schema::XmlSchemaSet::dyn_compilationSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_compilationSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compilationSettings"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaCompilationSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.XmlSchemaObjectTable elements
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectTable*& System::Xml::Schema::XmlSchemaSet::dyn_elements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_elements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elements"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.XmlSchemaObjectTable attributes
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectTable*& System::Xml::Schema::XmlSchemaSet::dyn_attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributes"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.XmlSchemaObjectTable schemaTypes
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectTable*& System::Xml::Schema::XmlSchemaSet::dyn_schemaTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_schemaTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaTypes"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.XmlSchemaObjectTable substitutionGroups
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectTable*& System::Xml::Schema::XmlSchemaSet::dyn_substitutionGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_substitutionGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "substitutionGroups"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectTable typeExtensions
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectTable*& System::Xml::Schema::XmlSchemaSet::dyn_typeExtensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_typeExtensions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeExtensions"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object internalSyncObject
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Schema::XmlSchemaSet::dyn_internalSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::dyn_internalSyncObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalSyncObject"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.get_InternalSyncObject
::Il2CppObject* System::Xml::Schema::XmlSchemaSet::get_InternalSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::get_InternalSyncObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalSyncObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.get_IsCompiled
bool System::Xml::Schema::XmlSchemaSet::get_IsCompiled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::get_IsCompiled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCompiled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.set_XmlResolver
void System::Xml::Schema::XmlSchemaSet::set_XmlResolver(::System::Xml::XmlResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::set_XmlResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XmlResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.get_CompilationSettings
::System::Xml::Schema::XmlSchemaCompilationSettings* System::Xml::Schema::XmlSchemaSet::get_CompilationSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::get_CompilationSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompilationSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaCompilationSettings*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.set_CompilationSettings
void System::Xml::Schema::XmlSchemaSet::set_CompilationSettings(::System::Xml::Schema::XmlSchemaCompilationSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::set_CompilationSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CompilationSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.get_Count
int System::Xml::Schema::XmlSchemaSet::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.get_GlobalElements
::System::Xml::Schema::XmlSchemaObjectTable* System::Xml::Schema::XmlSchemaSet::get_GlobalElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::get_GlobalElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlobalElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.get_GlobalAttributes
::System::Xml::Schema::XmlSchemaObjectTable* System::Xml::Schema::XmlSchemaSet::get_GlobalAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::get_GlobalAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlobalAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.get_GlobalTypes
::System::Xml::Schema::XmlSchemaObjectTable* System::Xml::Schema::XmlSchemaSet::get_GlobalTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::get_GlobalTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlobalTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.get_SubstitutionGroups
::System::Xml::Schema::XmlSchemaObjectTable* System::Xml::Schema::XmlSchemaSet::get_SubstitutionGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::get_SubstitutionGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SubstitutionGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.get_SchemaLocations
::System::Collections::Hashtable* System::Xml::Schema::XmlSchemaSet::get_SchemaLocations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::get_SchemaLocations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaLocations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.get_TypeExtensions
::System::Xml::Schema::XmlSchemaObjectTable* System::Xml::Schema::XmlSchemaSet::get_TypeExtensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::get_TypeExtensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeExtensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.get_CompiledInfo
::System::Xml::Schema::SchemaInfo* System::Xml::Schema::XmlSchemaSet::get_CompiledInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::get_CompiledInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompiledInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.get_ReaderSettings
::System::Xml::XmlReaderSettings* System::Xml::Schema::XmlSchemaSet::get_ReaderSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::get_ReaderSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReaderSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlReaderSettings*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.get_SortedSchemas
::System::Collections::SortedList* System::Xml::Schema::XmlSchemaSet::get_SortedSchemas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::get_SortedSchemas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SortedSchemas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::SortedList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.add_ValidationEventHandler
void System::Xml::Schema::XmlSchemaSet::add_ValidationEventHandler(::System::Xml::Schema::ValidationEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::add_ValidationEventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ValidationEventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.remove_ValidationEventHandler
void System::Xml::Schema::XmlSchemaSet::remove_ValidationEventHandler(::System::Xml::Schema::ValidationEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::remove_ValidationEventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ValidationEventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.Add
void System::Xml::Schema::XmlSchemaSet::Add(::System::Xml::Schema::XmlSchemaSet* schemas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemas)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schemas);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.Add
::System::Xml::Schema::XmlSchema* System::Xml::Schema::XmlSchemaSet::Add(::System::Xml::Schema::XmlSchema* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method, schema);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.RemoveRecursive
bool System::Xml::Schema::XmlSchemaSet::RemoveRecursive(::System::Xml::Schema::XmlSchema* schemaToRemove) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::RemoveRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaToRemove)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, schemaToRemove);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.Contains
bool System::Xml::Schema::XmlSchemaSet::Contains(::StringW targetNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, targetNamespace);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.Compile
void System::Xml::Schema::XmlSchemaSet::Compile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::Compile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.Reprocess
::System::Xml::Schema::XmlSchema* System::Xml::Schema::XmlSchemaSet::Reprocess(::System::Xml::Schema::XmlSchema* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::Reprocess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reprocess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method, schema);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.CopyTo
void System::Xml::Schema::XmlSchemaSet::CopyTo(::ArrayW<::System::Xml::Schema::XmlSchema*> schemas, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemas), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schemas, index);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.Schemas
::System::Collections::ICollection* System::Xml::Schema::XmlSchemaSet::Schemas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::Schemas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Schemas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.Schemas
::System::Collections::ICollection* System::Xml::Schema::XmlSchemaSet::Schemas(::StringW targetNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::Schemas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Schemas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method, targetNamespace);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.Add
::System::Xml::Schema::XmlSchema* System::Xml::Schema::XmlSchemaSet::Add(::StringW targetNamespace, ::System::Xml::Schema::XmlSchema* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetNamespace), ::il2cpp_utils::ExtractType(schema)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method, targetNamespace, schema);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.Add
void System::Xml::Schema::XmlSchemaSet::Add(::StringW targetNamespace, ::System::Xml::XmlReader* reader, ::System::Collections::Hashtable* validatedNamespaces) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetNamespace), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(validatedNamespaces)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetNamespace, reader, validatedNamespaces);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.FindSchemaByNSAndUrl
::System::Xml::Schema::XmlSchema* System::Xml::Schema::XmlSchemaSet::FindSchemaByNSAndUrl(::System::Uri* schemaUri, ::StringW ns, ::ArrayW<::System::Collections::DictionaryEntry> locationsTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::FindSchemaByNSAndUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSchemaByNSAndUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaUri), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(locationsTable)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method, schemaUri, ns, locationsTable);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.AddSchemaToSet
void System::Xml::Schema::XmlSchemaSet::AddSchemaToSet(::System::Xml::Schema::XmlSchema* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::AddSchemaToSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSchemaToSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schema);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.ProcessNewSubstitutionGroups
void System::Xml::Schema::XmlSchemaSet::ProcessNewSubstitutionGroups(::System::Xml::Schema::XmlSchemaObjectTable* substitutionGroupsTable, bool resolve) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::ProcessNewSubstitutionGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessNewSubstitutionGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(substitutionGroupsTable), ::il2cpp_utils::ExtractType(resolve)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, substitutionGroupsTable, resolve);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.ResolveSubstitutionGroup
void System::Xml::Schema::XmlSchemaSet::ResolveSubstitutionGroup(::System::Xml::Schema::XmlSchemaSubstitutionGroup* substitutionGroup, ::System::Xml::Schema::XmlSchemaObjectTable* substTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::ResolveSubstitutionGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveSubstitutionGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(substitutionGroup), ::il2cpp_utils::ExtractType(substTable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, substitutionGroup, substTable);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.Remove
::System::Xml::Schema::XmlSchema* System::Xml::Schema::XmlSchemaSet::Remove(::System::Xml::Schema::XmlSchema* schema, bool forceCompile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema), ::il2cpp_utils::ExtractType(forceCompile)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method, schema, forceCompile);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.ClearTables
void System::Xml::Schema::XmlSchemaSet::ClearTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::ClearTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.PreprocessSchema
bool System::Xml::Schema::XmlSchemaSet::PreprocessSchema(ByRef<::System::Xml::Schema::XmlSchema*> schema, ::StringW targetNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::PreprocessSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema), ::il2cpp_utils::ExtractType(targetNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(schema), targetNamespace);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.ParseSchema
::System::Xml::Schema::XmlSchema* System::Xml::Schema::XmlSchemaSet::ParseSchema(::StringW targetNamespace, ::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::ParseSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetNamespace), ::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method, targetNamespace, reader);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.CopyFromCompiledSet
void System::Xml::Schema::XmlSchemaSet::CopyFromCompiledSet(::System::Xml::Schema::XmlSchemaSet* otherSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::CopyFromCompiledSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFromCompiledSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherSet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherSet);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.GetResolver
::System::Xml::XmlResolver* System::Xml::Schema::XmlSchemaSet::GetResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::GetResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlResolver*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.GetEventHandler
::System::Xml::Schema::ValidationEventHandler* System::Xml::Schema::XmlSchemaSet::GetEventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::GetEventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::ValidationEventHandler*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.GetSchemaNames
::System::Xml::Schema::SchemaNames* System::Xml::Schema::XmlSchemaSet::GetSchemaNames(::System::Xml::XmlNameTable* nt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::GetSchemaNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSchemaNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nt)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaNames*, false>(this, ___internal__method, nt);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.IsSchemaLoaded
bool System::Xml::Schema::XmlSchemaSet::IsSchemaLoaded(::System::Uri* schemaUri, ::StringW targetNamespace, ByRef<::System::Xml::Schema::XmlSchema*> schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::IsSchemaLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSchemaLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaUri), ::il2cpp_utils::ExtractType(targetNamespace), ::il2cpp_utils::ExtractIndependentType<::System::Xml::Schema::XmlSchema*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, schemaUri, targetNamespace, byref(schema));
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.GetSchemaByUri
bool System::Xml::Schema::XmlSchemaSet::GetSchemaByUri(::System::Uri* schemaUri, ByRef<::System::Xml::Schema::XmlSchema*> schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::GetSchemaByUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSchemaByUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaUri), ::il2cpp_utils::ExtractIndependentType<::System::Xml::Schema::XmlSchema*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, schemaUri, byref(schema));
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.GetTargetNamespace
::StringW System::Xml::Schema::XmlSchemaSet::GetTargetNamespace(::System::Xml::Schema::XmlSchema* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::GetTargetNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTargetNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, schema);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.RemoveSchemaFromCaches
void System::Xml::Schema::XmlSchemaSet::RemoveSchemaFromCaches(::System::Xml::Schema::XmlSchema* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::RemoveSchemaFromCaches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSchemaFromCaches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schema);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.RemoveSchemaFromGlobalTables
void System::Xml::Schema::XmlSchemaSet::RemoveSchemaFromGlobalTables(::System::Xml::Schema::XmlSchema* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::RemoveSchemaFromGlobalTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSchemaFromGlobalTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schema);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.AddToTable
bool System::Xml::Schema::XmlSchemaSet::AddToTable(::System::Xml::Schema::XmlSchemaObjectTable* table, ::System::Xml::XmlQualifiedName* qname, ::System::Xml::Schema::XmlSchemaObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::AddToTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(qname), ::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, table, qname, item);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.VerifyTables
void System::Xml::Schema::XmlSchemaSet::VerifyTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::VerifyTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.InternalValidationCallback
void System::Xml::Schema::XmlSchemaSet::InternalValidationCallback(::Il2CppObject* sender, ::System::Xml::Schema::ValidationEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::InternalValidationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalValidationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSet.SendValidationEvent
void System::Xml::Schema::XmlSchemaSet::SendValidationEvent(::System::Xml::Schema::XmlSchemaException* e, ::System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSet::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, severity);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSimpleContent
#include "System/Xml/Schema/XmlSchemaSimpleContent.hpp"
// Including type: System.Xml.Schema.XmlSchemaContent
#include "System/Xml/Schema/XmlSchemaContent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaContent content
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaContent*& System::Xml::Schema::XmlSchemaSimpleContent::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContent::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleContent.get_Content
::System::Xml::Schema::XmlSchemaContent* System::Xml::Schema::XmlSchemaSimpleContent::get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContent::get_Content");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaContentModel*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaContent*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleContent.set_Content
void System::Xml::Schema::XmlSchemaSimpleContent::set_Content(::System::Xml::Schema::XmlSchemaContent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContent::set_Content");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaContentModel*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSimpleContentExtension
#include "System/Xml/Schema/XmlSchemaSimpleContentExtension.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnyAttribute
#include "System/Xml/Schema/XmlSchemaAnyAttribute.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectCollection attributes
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectCollection*& System::Xml::Schema::XmlSchemaSimpleContentExtension::dyn_attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentExtension::dyn_attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributes"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaAnyAttribute anyAttribute
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaAnyAttribute*& System::Xml::Schema::XmlSchemaSimpleContentExtension::dyn_anyAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentExtension::dyn_anyAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anyAttribute"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaAnyAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName baseTypeName
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaSimpleContentExtension::dyn_baseTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentExtension::dyn_baseTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseTypeName"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleContentExtension.get_BaseTypeName
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaSimpleContentExtension::get_BaseTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentExtension::get_BaseTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleContentExtension.set_BaseTypeName
void System::Xml::Schema::XmlSchemaSimpleContentExtension::set_BaseTypeName(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentExtension::set_BaseTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BaseTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleContentExtension.get_Attributes
::System::Xml::Schema::XmlSchemaObjectCollection* System::Xml::Schema::XmlSchemaSimpleContentExtension::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentExtension::get_Attributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleContentExtension.get_AnyAttribute
::System::Xml::Schema::XmlSchemaAnyAttribute* System::Xml::Schema::XmlSchemaSimpleContentExtension::get_AnyAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentExtension::get_AnyAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AnyAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaAnyAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleContentExtension.set_AnyAttribute
void System::Xml::Schema::XmlSchemaSimpleContentExtension::set_AnyAttribute(::System::Xml::Schema::XmlSchemaAnyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentExtension::set_AnyAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AnyAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleContentExtension.SetAttributes
void System::Xml::Schema::XmlSchemaSimpleContentExtension::SetAttributes(::System::Xml::Schema::XmlSchemaObjectCollection* newAttributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentExtension::SetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newAttributes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newAttributes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSimpleContentRestriction
#include "System/Xml/Schema/XmlSchemaSimpleContentRestriction.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnyAttribute
#include "System/Xml/Schema/XmlSchemaAnyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName baseTypeName
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaSimpleContentRestriction::dyn_baseTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentRestriction::dyn_baseTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseTypeName"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType baseType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleType*& System::Xml::Schema::XmlSchemaSimpleContentRestriction::dyn_baseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentRestriction::dyn_baseType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectCollection facets
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectCollection*& System::Xml::Schema::XmlSchemaSimpleContentRestriction::dyn_facets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentRestriction::dyn_facets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "facets"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectCollection attributes
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectCollection*& System::Xml::Schema::XmlSchemaSimpleContentRestriction::dyn_attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentRestriction::dyn_attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributes"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaAnyAttribute anyAttribute
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaAnyAttribute*& System::Xml::Schema::XmlSchemaSimpleContentRestriction::dyn_anyAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentRestriction::dyn_anyAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anyAttribute"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaAnyAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleContentRestriction.get_BaseTypeName
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaSimpleContentRestriction::get_BaseTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentRestriction::get_BaseTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleContentRestriction.set_BaseTypeName
void System::Xml::Schema::XmlSchemaSimpleContentRestriction::set_BaseTypeName(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentRestriction::set_BaseTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BaseTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleContentRestriction.get_BaseType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::XmlSchemaSimpleContentRestriction::get_BaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentRestriction::get_BaseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleContentRestriction.set_BaseType
void System::Xml::Schema::XmlSchemaSimpleContentRestriction::set_BaseType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentRestriction::set_BaseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleContentRestriction.get_Facets
::System::Xml::Schema::XmlSchemaObjectCollection* System::Xml::Schema::XmlSchemaSimpleContentRestriction::get_Facets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentRestriction::get_Facets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Facets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleContentRestriction.get_Attributes
::System::Xml::Schema::XmlSchemaObjectCollection* System::Xml::Schema::XmlSchemaSimpleContentRestriction::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentRestriction::get_Attributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleContentRestriction.get_AnyAttribute
::System::Xml::Schema::XmlSchemaAnyAttribute* System::Xml::Schema::XmlSchemaSimpleContentRestriction::get_AnyAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentRestriction::get_AnyAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AnyAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaAnyAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleContentRestriction.set_AnyAttribute
void System::Xml::Schema::XmlSchemaSimpleContentRestriction::set_AnyAttribute(::System::Xml::Schema::XmlSchemaAnyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentRestriction::set_AnyAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AnyAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleContentRestriction.SetAttributes
void System::Xml::Schema::XmlSchemaSimpleContentRestriction::SetAttributes(::System::Xml::Schema::XmlSchemaObjectCollection* newAttributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleContentRestriction::SetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newAttributes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newAttributes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleTypeContent
#include "System/Xml/Schema/XmlSchemaSimpleTypeContent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleTypeContent content
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleTypeContent*& System::Xml::Schema::XmlSchemaSimpleType::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleType::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleTypeContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleType.get_Content
::System::Xml::Schema::XmlSchemaSimpleTypeContent* System::Xml::Schema::XmlSchemaSimpleType::get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleType::get_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleTypeContent*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleType.set_Content
void System::Xml::Schema::XmlSchemaSimpleType::set_Content(::System::Xml::Schema::XmlSchemaSimpleTypeContent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleType::set_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleType.Clone
::System::Xml::Schema::XmlSchemaObject* System::Xml::Schema::XmlSchemaSimpleType::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleType::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSimpleTypeContent
#include "System/Xml/Schema/XmlSchemaSimpleTypeContent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSimpleTypeList
#include "System/Xml/Schema/XmlSchemaSimpleTypeList.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName itemTypeName
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaSimpleTypeList::dyn_itemTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::dyn_itemTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemTypeName"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType itemType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleType*& System::Xml::Schema::XmlSchemaSimpleTypeList::dyn_itemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::dyn_itemType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType baseItemType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleType*& System::Xml::Schema::XmlSchemaSimpleTypeList::dyn_baseItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::dyn_baseItemType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseItemType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeList.get_ItemTypeName
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaSimpleTypeList::get_ItemTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::get_ItemTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeList.set_ItemTypeName
void System::Xml::Schema::XmlSchemaSimpleTypeList::set_ItemTypeName(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::set_ItemTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeList.get_ItemType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::XmlSchemaSimpleTypeList::get_ItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::get_ItemType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeList.set_ItemType
void System::Xml::Schema::XmlSchemaSimpleTypeList::set_ItemType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::set_ItemType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeList.get_BaseItemType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::XmlSchemaSimpleTypeList::get_BaseItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::get_BaseItemType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeList.set_BaseItemType
void System::Xml::Schema::XmlSchemaSimpleTypeList::set_BaseItemType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::set_BaseItemType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BaseItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeList.Clone
::System::Xml::Schema::XmlSchemaObject* System::Xml::Schema::XmlSchemaSimpleTypeList::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeList::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSimpleTypeRestriction
#include "System/Xml/Schema/XmlSchemaSimpleTypeRestriction.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName baseTypeName
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaSimpleTypeRestriction::dyn_baseTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeRestriction::dyn_baseTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseTypeName"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType baseType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleType*& System::Xml::Schema::XmlSchemaSimpleTypeRestriction::dyn_baseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeRestriction::dyn_baseType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectCollection facets
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectCollection*& System::Xml::Schema::XmlSchemaSimpleTypeRestriction::dyn_facets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeRestriction::dyn_facets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "facets"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeRestriction.get_BaseTypeName
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaSimpleTypeRestriction::get_BaseTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeRestriction::get_BaseTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeRestriction.set_BaseTypeName
void System::Xml::Schema::XmlSchemaSimpleTypeRestriction::set_BaseTypeName(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeRestriction::set_BaseTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BaseTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeRestriction.get_BaseType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::XmlSchemaSimpleTypeRestriction::get_BaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeRestriction::get_BaseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeRestriction.set_BaseType
void System::Xml::Schema::XmlSchemaSimpleTypeRestriction::set_BaseType(::System::Xml::Schema::XmlSchemaSimpleType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeRestriction::set_BaseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeRestriction.get_Facets
::System::Xml::Schema::XmlSchemaObjectCollection* System::Xml::Schema::XmlSchemaSimpleTypeRestriction::get_Facets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeRestriction::get_Facets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Facets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeRestriction.Clone
::System::Xml::Schema::XmlSchemaObject* System::Xml::Schema::XmlSchemaSimpleTypeRestriction::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeRestriction::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSimpleTypeUnion
#include "System/Xml/Schema/XmlSchemaSimpleTypeUnion.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectCollection baseTypes
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObjectCollection*& System::Xml::Schema::XmlSchemaSimpleTypeUnion::dyn_baseTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeUnion::dyn_baseTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseTypes"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName[] memberTypes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlQualifiedName*>& System::Xml::Schema::XmlSchemaSimpleTypeUnion::dyn_memberTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeUnion::dyn_memberTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "memberTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlQualifiedName*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType[] baseMemberTypes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>& System::Xml::Schema::XmlSchemaSimpleTypeUnion::dyn_baseMemberTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeUnion::dyn_baseMemberTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseMemberTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeUnion.get_BaseTypes
::System::Xml::Schema::XmlSchemaObjectCollection* System::Xml::Schema::XmlSchemaSimpleTypeUnion::get_BaseTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeUnion::get_BaseTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObjectCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeUnion.get_MemberTypes
::ArrayW<::System::Xml::XmlQualifiedName*> System::Xml::Schema::XmlSchemaSimpleTypeUnion::get_MemberTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeUnion::get_MemberTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Xml::XmlQualifiedName*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeUnion.set_MemberTypes
void System::Xml::Schema::XmlSchemaSimpleTypeUnion::set_MemberTypes(::ArrayW<::System::Xml::XmlQualifiedName*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeUnion::set_MemberTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MemberTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeUnion.get_BaseMemberTypes
::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*> System::Xml::Schema::XmlSchemaSimpleTypeUnion::get_BaseMemberTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeUnion::get_BaseMemberTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseMemberTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeUnion.SetBaseMemberTypes
void System::Xml::Schema::XmlSchemaSimpleTypeUnion::SetBaseMemberTypes(::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*> baseMemberTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeUnion::SetBaseMemberTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBaseMemberTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseMemberTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseMemberTypes);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSimpleTypeUnion.Clone
::System::Xml::Schema::XmlSchemaObject* System::Xml::Schema::XmlSchemaSimpleTypeUnion::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSimpleTypeUnion::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSubstitutionGroup
#include "System/Xml/Schema/XmlSchemaSubstitutionGroup.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList membersList
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Schema::XmlSchemaSubstitutionGroup::dyn_membersList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSubstitutionGroup::dyn_membersList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "membersList"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName examplar
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaSubstitutionGroup::dyn_examplar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSubstitutionGroup::dyn_examplar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "examplar"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSubstitutionGroup.get_Members
::System::Collections::ArrayList* System::Xml::Schema::XmlSchemaSubstitutionGroup::get_Members() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSubstitutionGroup::get_Members");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Members", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSubstitutionGroup.get_Examplar
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaSubstitutionGroup::get_Examplar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSubstitutionGroup::get_Examplar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Examplar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSubstitutionGroup.set_Examplar
void System::Xml::Schema::XmlSchemaSubstitutionGroup::set_Examplar(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSubstitutionGroup::set_Examplar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Examplar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaSubstitutionGroupV1Compat
#include "System/Xml/Schema/XmlSchemaSubstitutionGroupV1Compat.hpp"
// Including type: System.Xml.Schema.XmlSchemaChoice
#include "System/Xml/Schema/XmlSchemaChoice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaChoice choice
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaChoice*& System::Xml::Schema::XmlSchemaSubstitutionGroupV1Compat::dyn_choice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSubstitutionGroupV1Compat::dyn_choice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "choice"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaChoice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaSubstitutionGroupV1Compat.get_Choice
::System::Xml::Schema::XmlSchemaChoice* System::Xml::Schema::XmlSchemaSubstitutionGroupV1Compat::get_Choice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaSubstitutionGroupV1Compat::get_Choice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Choice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaChoice*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Xml.Schema.SchemaElementDecl
#include "System/Xml/Schema/SchemaElementDecl.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexType
#include "System/Xml/Schema/XmlSchemaComplexType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaType::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDerivationMethod final
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaDerivationMethod& System::Xml::Schema::XmlSchemaType::dyn_final() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_final");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "final"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDerivationMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDerivationMethod derivedBy
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaDerivationMethod& System::Xml::Schema::XmlSchemaType::dyn_derivedBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_derivedBy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "derivedBy"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDerivationMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaType baseSchemaType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaType*& System::Xml::Schema::XmlSchemaType::dyn_baseSchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_baseSchemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseSchemaType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDatatype datatype
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaDatatype*& System::Xml::Schema::XmlSchemaType::dyn_datatype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_datatype");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "datatype"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDatatype**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDerivationMethod finalResolved
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaDerivationMethod& System::Xml::Schema::XmlSchemaType::dyn_finalResolved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_finalResolved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finalResolved"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDerivationMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaElementDecl elementDecl
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaElementDecl*& System::Xml::Schema::XmlSchemaType::dyn_elementDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_elementDecl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementDecl"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaElementDecl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName qname
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaType::dyn_qname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_qname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qname"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaType redefined
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaType*& System::Xml::Schema::XmlSchemaType::dyn_redefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_redefined");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "redefined"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaContentType contentType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaContentType& System::Xml::Schema::XmlSchemaType::dyn_contentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::dyn_contentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaContentType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_Name
::StringW System::Xml::Schema::XmlSchemaType::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.set_Name
void System::Xml::Schema::XmlSchemaType::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_Final
::System::Xml::Schema::XmlSchemaDerivationMethod System::Xml::Schema::XmlSchemaType::get_Final() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_Final");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Final", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaDerivationMethod, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.set_Final
void System::Xml::Schema::XmlSchemaType::set_Final(::System::Xml::Schema::XmlSchemaDerivationMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::set_Final");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Final", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_QualifiedName
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaType::get_QualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_QualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_QualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_FinalResolved
::System::Xml::Schema::XmlSchemaDerivationMethod System::Xml::Schema::XmlSchemaType::get_FinalResolved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_FinalResolved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FinalResolved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaDerivationMethod, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_BaseXmlSchemaType
::System::Xml::Schema::XmlSchemaType* System::Xml::Schema::XmlSchemaType::get_BaseXmlSchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_BaseXmlSchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseXmlSchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_DerivedBy
::System::Xml::Schema::XmlSchemaDerivationMethod System::Xml::Schema::XmlSchemaType::get_DerivedBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_DerivedBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DerivedBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaDerivationMethod, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_Datatype
::System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::XmlSchemaType::get_Datatype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_Datatype");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Datatype", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaDatatype*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_IsMixed
bool System::Xml::Schema::XmlSchemaType::get_IsMixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_IsMixed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.set_IsMixed
void System::Xml::Schema::XmlSchemaType::set_IsMixed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::set_IsMixed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaType*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlSchemaType::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_TypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_ValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlSchemaType::get_ValueConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_ValueConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_SchemaContentType
::System::Xml::Schema::XmlSchemaContentType System::Xml::Schema::XmlSchemaType::get_SchemaContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_SchemaContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaContentType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_ElementDecl
::System::Xml::Schema::SchemaElementDecl* System::Xml::Schema::XmlSchemaType::get_ElementDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_ElementDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaElementDecl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.set_ElementDecl
void System::Xml::Schema::XmlSchemaType::set_ElementDecl(::System::Xml::Schema::SchemaElementDecl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::set_ElementDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ElementDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_Redefined
::System::Xml::Schema::XmlSchemaType* System::Xml::Schema::XmlSchemaType::get_Redefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_Redefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Redefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.set_Redefined
void System::Xml::Schema::XmlSchemaType::set_Redefined(::System::Xml::Schema::XmlSchemaType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::set_Redefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Redefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::XmlSchemaType::GetBuiltInSimpleType(::System::Xml::XmlQualifiedName* qualifiedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::GetBuiltInSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaType", "GetBuiltInSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qualifiedName);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::XmlSchemaType::GetBuiltInSimpleType(::System::Xml::Schema::XmlTypeCode typeCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::GetBuiltInSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaType", "GetBuiltInSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeCode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeCode);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType
::System::Xml::Schema::XmlSchemaComplexType* System::Xml::Schema::XmlSchemaType::GetBuiltInComplexType(::System::Xml::XmlQualifiedName* qualifiedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::GetBuiltInComplexType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaType", "GetBuiltInComplexType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaComplexType*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qualifiedName);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.SetQualifiedName
void System::Xml::Schema::XmlSchemaType::SetQualifiedName(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::SetQualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.SetFinalResolved
void System::Xml::Schema::XmlSchemaType::SetFinalResolved(::System::Xml::Schema::XmlSchemaDerivationMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::SetFinalResolved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFinalResolved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.SetBaseSchemaType
void System::Xml::Schema::XmlSchemaType::SetBaseSchemaType(::System::Xml::Schema::XmlSchemaType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::SetBaseSchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBaseSchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.SetDerivedBy
void System::Xml::Schema::XmlSchemaType::SetDerivedBy(::System::Xml::Schema::XmlSchemaDerivationMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::SetDerivedBy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDerivedBy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.SetDatatype
void System::Xml::Schema::XmlSchemaType::SetDatatype(::System::Xml::Schema::XmlSchemaDatatype* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::SetDatatype");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDatatype", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.SetContentType
void System::Xml::Schema::XmlSchemaType::SetContentType(::System::Xml::Schema::XmlSchemaContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::SetContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.IsDerivedFrom
bool System::Xml::Schema::XmlSchemaType::IsDerivedFrom(::System::Xml::Schema::XmlSchemaType* derivedType, ::System::Xml::Schema::XmlSchemaType* baseType, ::System::Xml::Schema::XmlSchemaDerivationMethod except) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::IsDerivedFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaType", "IsDerivedFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedType), ::il2cpp_utils::ExtractType(baseType), ::il2cpp_utils::ExtractType(except)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, derivedType, baseType, except);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.IsDerivedFromDatatype
bool System::Xml::Schema::XmlSchemaType::IsDerivedFromDatatype(::System::Xml::Schema::XmlSchemaDatatype* derivedDataType, ::System::Xml::Schema::XmlSchemaDatatype* baseDataType, ::System::Xml::Schema::XmlSchemaDerivationMethod except) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::IsDerivedFromDatatype");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaType", "IsDerivedFromDatatype", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedDataType), ::il2cpp_utils::ExtractType(baseDataType), ::il2cpp_utils::ExtractType(except)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, derivedDataType, baseDataType, except);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.get_NameAttribute
::StringW System::Xml::Schema::XmlSchemaType::get_NameAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::get_NameAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaType.set_NameAttribute
void System::Xml::Schema::XmlSchemaType::set_NameAttribute(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaType::set_NameAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaObject*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaUse
#include "System/Xml/Schema/XmlSchemaUse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaUse None
::System::Xml::Schema::XmlSchemaUse System::Xml::Schema::XmlSchemaUse::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaUse::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaUse>("System.Xml.Schema", "XmlSchemaUse", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaUse None
void System::Xml::Schema::XmlSchemaUse::_set_None(::System::Xml::Schema::XmlSchemaUse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaUse::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaUse", "None", value));
}
// [XmlEnumAttribute] Offset: 0x6A4CF4
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaUse Optional
::System::Xml::Schema::XmlSchemaUse System::Xml::Schema::XmlSchemaUse::_get_Optional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaUse::_get_Optional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaUse>("System.Xml.Schema", "XmlSchemaUse", "Optional"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaUse Optional
void System::Xml::Schema::XmlSchemaUse::_set_Optional(::System::Xml::Schema::XmlSchemaUse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaUse::_set_Optional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaUse", "Optional", value));
}
// [XmlEnumAttribute] Offset: 0x6A4D2C
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaUse Prohibited
::System::Xml::Schema::XmlSchemaUse System::Xml::Schema::XmlSchemaUse::_get_Prohibited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaUse::_get_Prohibited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaUse>("System.Xml.Schema", "XmlSchemaUse", "Prohibited"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaUse Prohibited
void System::Xml::Schema::XmlSchemaUse::_set_Prohibited(::System::Xml::Schema::XmlSchemaUse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaUse::_set_Prohibited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaUse", "Prohibited", value));
}
// [XmlEnumAttribute] Offset: 0x6A4D64
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaUse Required
::System::Xml::Schema::XmlSchemaUse System::Xml::Schema::XmlSchemaUse::_get_Required() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaUse::_get_Required");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaUse>("System.Xml.Schema", "XmlSchemaUse", "Required"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaUse Required
void System::Xml::Schema::XmlSchemaUse::_set_Required(::System::Xml::Schema::XmlSchemaUse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaUse::_set_Required");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaUse", "Required", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaUse::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaUse::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaValidationException
#include "System/Xml/Schema/XmlSchemaValidationException.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlSchemaValidationException.GetObjectData
void System::Xml::Schema::XmlSchemaValidationException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaException*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlValueGetter
#include "System/Xml/Schema/XmlValueGetter.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlValueGetter.Invoke
::Il2CppObject* System::Xml::Schema::XmlValueGetter::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueGetter::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueGetter*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlValueGetter.BeginInvoke
::System::IAsyncResult* System::Xml::Schema::XmlValueGetter::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueGetter::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueGetter*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: System.Xml.Schema.XmlValueGetter.EndInvoke
::Il2CppObject* System::Xml::Schema::XmlValueGetter::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueGetter::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueGetter*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaValidationFlags
#include "System/Xml/Schema/XmlSchemaValidationFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidationFlags None
::System::Xml::Schema::XmlSchemaValidationFlags System::Xml::Schema::XmlSchemaValidationFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidationFlags>("System.Xml.Schema", "XmlSchemaValidationFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidationFlags None
void System::Xml::Schema::XmlSchemaValidationFlags::_set_None(::System::Xml::Schema::XmlSchemaValidationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidationFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessInlineSchema
::System::Xml::Schema::XmlSchemaValidationFlags System::Xml::Schema::XmlSchemaValidationFlags::_get_ProcessInlineSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_get_ProcessInlineSchema");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidationFlags>("System.Xml.Schema", "XmlSchemaValidationFlags", "ProcessInlineSchema"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessInlineSchema
void System::Xml::Schema::XmlSchemaValidationFlags::_set_ProcessInlineSchema(::System::Xml::Schema::XmlSchemaValidationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_set_ProcessInlineSchema");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidationFlags", "ProcessInlineSchema", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessSchemaLocation
::System::Xml::Schema::XmlSchemaValidationFlags System::Xml::Schema::XmlSchemaValidationFlags::_get_ProcessSchemaLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_get_ProcessSchemaLocation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidationFlags>("System.Xml.Schema", "XmlSchemaValidationFlags", "ProcessSchemaLocation"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessSchemaLocation
void System::Xml::Schema::XmlSchemaValidationFlags::_set_ProcessSchemaLocation(::System::Xml::Schema::XmlSchemaValidationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_set_ProcessSchemaLocation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidationFlags", "ProcessSchemaLocation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidationFlags ReportValidationWarnings
::System::Xml::Schema::XmlSchemaValidationFlags System::Xml::Schema::XmlSchemaValidationFlags::_get_ReportValidationWarnings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_get_ReportValidationWarnings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidationFlags>("System.Xml.Schema", "XmlSchemaValidationFlags", "ReportValidationWarnings"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidationFlags ReportValidationWarnings
void System::Xml::Schema::XmlSchemaValidationFlags::_set_ReportValidationWarnings(::System::Xml::Schema::XmlSchemaValidationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_set_ReportValidationWarnings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidationFlags", "ReportValidationWarnings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessIdentityConstraints
::System::Xml::Schema::XmlSchemaValidationFlags System::Xml::Schema::XmlSchemaValidationFlags::_get_ProcessIdentityConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_get_ProcessIdentityConstraints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidationFlags>("System.Xml.Schema", "XmlSchemaValidationFlags", "ProcessIdentityConstraints"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidationFlags ProcessIdentityConstraints
void System::Xml::Schema::XmlSchemaValidationFlags::_set_ProcessIdentityConstraints(::System::Xml::Schema::XmlSchemaValidationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_set_ProcessIdentityConstraints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidationFlags", "ProcessIdentityConstraints", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidationFlags AllowXmlAttributes
::System::Xml::Schema::XmlSchemaValidationFlags System::Xml::Schema::XmlSchemaValidationFlags::_get_AllowXmlAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_get_AllowXmlAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidationFlags>("System.Xml.Schema", "XmlSchemaValidationFlags", "AllowXmlAttributes"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidationFlags AllowXmlAttributes
void System::Xml::Schema::XmlSchemaValidationFlags::_set_AllowXmlAttributes(::System::Xml::Schema::XmlSchemaValidationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::_set_AllowXmlAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidationFlags", "AllowXmlAttributes", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaValidationFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidationFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.ValidatorState
#include "System/Xml/Schema/ValidatorState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.ValidatorState None
::System::Xml::Schema::ValidatorState System::Xml::Schema::ValidatorState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ValidatorState>("System.Xml.Schema", "ValidatorState", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.ValidatorState None
void System::Xml::Schema::ValidatorState::_set_None(::System::Xml::Schema::ValidatorState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ValidatorState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.ValidatorState Start
::System::Xml::Schema::ValidatorState System::Xml::Schema::ValidatorState::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ValidatorState>("System.Xml.Schema", "ValidatorState", "Start"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.ValidatorState Start
void System::Xml::Schema::ValidatorState::_set_Start(::System::Xml::Schema::ValidatorState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ValidatorState", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.ValidatorState TopLevelAttribute
::System::Xml::Schema::ValidatorState System::Xml::Schema::ValidatorState::_get_TopLevelAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_get_TopLevelAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ValidatorState>("System.Xml.Schema", "ValidatorState", "TopLevelAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.ValidatorState TopLevelAttribute
void System::Xml::Schema::ValidatorState::_set_TopLevelAttribute(::System::Xml::Schema::ValidatorState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_set_TopLevelAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ValidatorState", "TopLevelAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.ValidatorState TopLevelTextOrWS
::System::Xml::Schema::ValidatorState System::Xml::Schema::ValidatorState::_get_TopLevelTextOrWS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_get_TopLevelTextOrWS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ValidatorState>("System.Xml.Schema", "ValidatorState", "TopLevelTextOrWS"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.ValidatorState TopLevelTextOrWS
void System::Xml::Schema::ValidatorState::_set_TopLevelTextOrWS(::System::Xml::Schema::ValidatorState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_set_TopLevelTextOrWS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ValidatorState", "TopLevelTextOrWS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.ValidatorState Element
::System::Xml::Schema::ValidatorState System::Xml::Schema::ValidatorState::_get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_get_Element");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ValidatorState>("System.Xml.Schema", "ValidatorState", "Element"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.ValidatorState Element
void System::Xml::Schema::ValidatorState::_set_Element(::System::Xml::Schema::ValidatorState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_set_Element");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ValidatorState", "Element", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.ValidatorState Attribute
::System::Xml::Schema::ValidatorState System::Xml::Schema::ValidatorState::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ValidatorState>("System.Xml.Schema", "ValidatorState", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.ValidatorState Attribute
void System::Xml::Schema::ValidatorState::_set_Attribute(::System::Xml::Schema::ValidatorState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ValidatorState", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.ValidatorState EndOfAttributes
::System::Xml::Schema::ValidatorState System::Xml::Schema::ValidatorState::_get_EndOfAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_get_EndOfAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ValidatorState>("System.Xml.Schema", "ValidatorState", "EndOfAttributes"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.ValidatorState EndOfAttributes
void System::Xml::Schema::ValidatorState::_set_EndOfAttributes(::System::Xml::Schema::ValidatorState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_set_EndOfAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ValidatorState", "EndOfAttributes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.ValidatorState Text
::System::Xml::Schema::ValidatorState System::Xml::Schema::ValidatorState::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ValidatorState>("System.Xml.Schema", "ValidatorState", "Text"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.ValidatorState Text
void System::Xml::Schema::ValidatorState::_set_Text(::System::Xml::Schema::ValidatorState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ValidatorState", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.ValidatorState Whitespace
::System::Xml::Schema::ValidatorState System::Xml::Schema::ValidatorState::_get_Whitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_get_Whitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ValidatorState>("System.Xml.Schema", "ValidatorState", "Whitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.ValidatorState Whitespace
void System::Xml::Schema::ValidatorState::_set_Whitespace(::System::Xml::Schema::ValidatorState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_set_Whitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ValidatorState", "Whitespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.ValidatorState EndElement
::System::Xml::Schema::ValidatorState System::Xml::Schema::ValidatorState::_get_EndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_get_EndElement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ValidatorState>("System.Xml.Schema", "ValidatorState", "EndElement"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.ValidatorState EndElement
void System::Xml::Schema::ValidatorState::_set_EndElement(::System::Xml::Schema::ValidatorState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_set_EndElement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ValidatorState", "EndElement", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.ValidatorState SkipToEndElement
::System::Xml::Schema::ValidatorState System::Xml::Schema::ValidatorState::_get_SkipToEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_get_SkipToEndElement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ValidatorState>("System.Xml.Schema", "ValidatorState", "SkipToEndElement"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.ValidatorState SkipToEndElement
void System::Xml::Schema::ValidatorState::_set_SkipToEndElement(::System::Xml::Schema::ValidatorState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_set_SkipToEndElement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ValidatorState", "SkipToEndElement", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.ValidatorState Finish
::System::Xml::Schema::ValidatorState System::Xml::Schema::ValidatorState::_get_Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_get_Finish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::ValidatorState>("System.Xml.Schema", "ValidatorState", "Finish"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.ValidatorState Finish
void System::Xml::Schema::ValidatorState::_set_Finish(::System::Xml::Schema::ValidatorState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::_set_Finish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "ValidatorState", "Finish", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::ValidatorState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidatorState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.IdRefNode
#include "System/Xml/Schema/IdRefNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String Id
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::IdRefNode::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IdRefNode::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 LineNo
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::IdRefNode::dyn_LineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IdRefNode::dyn_LineNo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LineNo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 LinePos
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::IdRefNode::dyn_LinePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IdRefNode::dyn_LinePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LinePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.IdRefNode Next
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::IdRefNode*& System::Xml::Schema::IdRefNode::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IdRefNode::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::IdRefNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlSchemaValidator
#include "System/Xml/Schema/XmlSchemaValidator.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
// Including type: System.Xml.Schema.SchemaInfo
#include "System/Xml/Schema/SchemaInfo.hpp"
// Including type: System.Xml.IDtdInfo
#include "System/Xml/IDtdInfo.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.HWStack
#include "System/Xml/HWStack.hpp"
// Including type: System.Xml.Schema.ValidationState
#include "System/Xml/Schema/ValidationState.hpp"
// Including type: System.Xml.Schema.SchemaAttDef
#include "System/Xml/Schema/SchemaAttDef.hpp"
// Including type: System.Xml.Schema.IdRefNode
#include "System/Xml/Schema/IdRefNode.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Xml.Schema.ValidationEventHandler
#include "System/Xml/Schema/ValidationEventHandler.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlLineInfo
#include "System/Xml/IXmlLineInfo.hpp"
// Including type: System.Xml.XmlResolver
#include "System/Xml/XmlResolver.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Xml.Schema.XmlSchemaParticle
#include "System/Xml/Schema/XmlSchemaParticle.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttribute
#include "System/Xml/Schema/XmlSchemaAttribute.hpp"
// Including type: System.Xml.Schema.XmlSchemaContentType
#include "System/Xml/Schema/XmlSchemaContentType.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.Schema.XmlSchemaInfo
#include "System/Xml/Schema/XmlSchemaInfo.hpp"
// Including type: System.Xml.Schema.XmlValueGetter
#include "System/Xml/Schema/XmlValueGetter.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlSchemaElement
#include "System/Xml/Schema/XmlSchemaElement.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.Schema.SchemaDeclBase
#include "System/Xml/Schema/SchemaDeclBase.hpp"
// Including type: System.Xml.Schema.SchemaElementDecl
#include "System/Xml/Schema/SchemaElementDecl.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSeverityType
#include "System/Xml/Schema/XmlSeverityType.hpp"
// Including type: System.Xml.Schema.XmlSchemaValidationException
#include "System/Xml/Schema/XmlSchemaValidationException.hpp"
// Including type: System.Xml.Schema.XmlSchemaException
#include "System/Xml/Schema/XmlSchemaException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XmlSchemaDatatype dtQName
::System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::XmlSchemaValidator::_get_dtQName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::_get_dtQName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDatatype*>("System.Xml.Schema", "XmlSchemaValidator", "dtQName"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XmlSchemaDatatype dtQName
void System::Xml::Schema::XmlSchemaValidator::_set_dtQName(::System::Xml::Schema::XmlSchemaDatatype* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::_set_dtQName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidator", "dtQName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XmlSchemaDatatype dtCDATA
::System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::XmlSchemaValidator::_get_dtCDATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::_get_dtCDATA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDatatype*>("System.Xml.Schema", "XmlSchemaValidator", "dtCDATA"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XmlSchemaDatatype dtCDATA
void System::Xml::Schema::XmlSchemaValidator::_set_dtCDATA(::System::Xml::Schema::XmlSchemaDatatype* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::_set_dtCDATA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidator", "dtCDATA", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XmlSchemaDatatype dtStringArray
::System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::XmlSchemaValidator::_get_dtStringArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::_get_dtStringArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDatatype*>("System.Xml.Schema", "XmlSchemaValidator", "dtStringArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XmlSchemaDatatype dtStringArray
void System::Xml::Schema::XmlSchemaValidator::_set_dtStringArray(::System::Xml::Schema::XmlSchemaDatatype* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::_set_dtStringArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidator", "dtStringArray", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaParticle[] EmptyParticleArray
::ArrayW<::System::Xml::Schema::XmlSchemaParticle*> System::Xml::Schema::XmlSchemaValidator::_get_EmptyParticleArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::_get_EmptyParticleArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XmlSchemaParticle*>>("System.Xml.Schema", "XmlSchemaValidator", "EmptyParticleArray"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaParticle[] EmptyParticleArray
void System::Xml::Schema::XmlSchemaValidator::_set_EmptyParticleArray(::ArrayW<::System::Xml::Schema::XmlSchemaParticle*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::_set_EmptyParticleArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidator", "EmptyParticleArray", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchemaAttribute[] EmptyAttributeArray
::ArrayW<::System::Xml::Schema::XmlSchemaAttribute*> System::Xml::Schema::XmlSchemaValidator::_get_EmptyAttributeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::_get_EmptyAttributeArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XmlSchemaAttribute*>>("System.Xml.Schema", "XmlSchemaValidator", "EmptyAttributeArray"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchemaAttribute[] EmptyAttributeArray
void System::Xml::Schema::XmlSchemaValidator::_set_EmptyAttributeArray(::ArrayW<::System::Xml::Schema::XmlSchemaAttribute*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::_set_EmptyAttributeArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidator", "EmptyAttributeArray", value));
}
// Autogenerated static field getter
// Get static field: static System.Boolean[,] ValidStates
::ArrayW<bool> System::Xml::Schema::XmlSchemaValidator::_get_ValidStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::_get_ValidStates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<bool>>("System.Xml.Schema", "XmlSchemaValidator", "ValidStates"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean[,] ValidStates
void System::Xml::Schema::XmlSchemaValidator::_set_ValidStates(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::_set_ValidStates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidator", "ValidStates", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] MethodNames
::ArrayW<::StringW> System::Xml::Schema::XmlSchemaValidator::_get_MethodNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::_get_MethodNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Xml.Schema", "XmlSchemaValidator", "MethodNames"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] MethodNames
void System::Xml::Schema::XmlSchemaValidator::_set_MethodNames(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::_set_MethodNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidator", "MethodNames", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSet schemaSet
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSet*& System::Xml::Schema::XmlSchemaValidator::dyn_schemaSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_schemaSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaSet"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaValidationFlags validationFlags
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaValidationFlags& System::Xml::Schema::XmlSchemaValidator::dyn_validationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_validationFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validationFlags"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaValidationFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 startIDConstraint
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaValidator::dyn_startIDConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_startIDConstraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startIDConstraint"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRoot
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XmlSchemaValidator::dyn_isRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_isRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRoot"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean rootHasSchema
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XmlSchemaValidator::dyn_rootHasSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_rootHasSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootHasSchema"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean attrValid
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XmlSchemaValidator::dyn_attrValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_attrValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean checkEntity
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XmlSchemaValidator::dyn_checkEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_checkEntity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkEntity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaInfo compiledSchemaInfo
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaInfo*& System::Xml::Schema::XmlSchemaValidator::dyn_compiledSchemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_compiledSchemaInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compiledSchemaInfo"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.IDtdInfo dtdSchemaInfo
[[deprecated("Use field access instead!")]] ::System::Xml::IDtdInfo*& System::Xml::Schema::XmlSchemaValidator::dyn_dtdSchemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_dtdSchemaInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dtdSchemaInfo"))->offset;
  return *reinterpret_cast<::System::Xml::IDtdInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable validatedNamespaces
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::XmlSchemaValidator::dyn_validatedNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_validatedNamespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validatedNamespaces"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.HWStack validationStack
[[deprecated("Use field access instead!")]] ::System::Xml::HWStack*& System::Xml::Schema::XmlSchemaValidator::dyn_validationStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_validationStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validationStack"))->offset;
  return *reinterpret_cast<::System::Xml::HWStack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ValidationState context
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::ValidationState*& System::Xml::Schema::XmlSchemaValidator::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::ValidationState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ValidatorState currentState
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::ValidatorState& System::Xml::Schema::XmlSchemaValidator::dyn_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentState"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::ValidatorState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable attPresence
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::XmlSchemaValidator::dyn_attPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_attPresence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attPresence"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaAttDef wildID
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaAttDef*& System::Xml::Schema::XmlSchemaValidator::dyn_wildID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_wildID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wildID"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaAttDef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable IDs
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::XmlSchemaValidator::dyn_IDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_IDs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IDs"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.IdRefNode idRefListHead
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::IdRefNode*& System::Xml::Schema::XmlSchemaValidator::dyn_idRefListHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_idRefListHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idRefListHead"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::IdRefNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName contextQName
[[deprecated("Use field access instead!")]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XmlSchemaValidator::dyn_contextQName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_contextQName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contextQName"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String NsXs
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaValidator::dyn_NsXs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_NsXs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NsXs"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String NsXsi
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaValidator::dyn_NsXsi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_NsXsi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NsXsi"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String NsXmlNs
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaValidator::dyn_NsXmlNs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_NsXmlNs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NsXmlNs"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String NsXml
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaValidator::dyn_NsXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_NsXml");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NsXml"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObject partialValidationType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObject*& System::Xml::Schema::XmlSchemaValidator::dyn_partialValidationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_partialValidationType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partialValidationType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder textValue
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::Xml::Schema::XmlSchemaValidator::dyn_textValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_textValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textValue"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ValidationEventHandler eventHandler
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::ValidationEventHandler*& System::Xml::Schema::XmlSchemaValidator::dyn_eventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_eventHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventHandler"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::ValidationEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object validationEventSender
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Schema::XmlSchemaValidator::dyn_validationEventSender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_validationEventSender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validationEventSender"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& System::Xml::Schema::XmlSchemaValidator::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.IXmlLineInfo positionInfo
[[deprecated("Use field access instead!")]] ::System::Xml::IXmlLineInfo*& System::Xml::Schema::XmlSchemaValidator::dyn_positionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_positionInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionInfo"))->offset;
  return *reinterpret_cast<::System::Xml::IXmlLineInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.IXmlLineInfo dummyPositionInfo
[[deprecated("Use field access instead!")]] ::System::Xml::IXmlLineInfo*& System::Xml::Schema::XmlSchemaValidator::dyn_dummyPositionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_dummyPositionInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dummyPositionInfo"))->offset;
  return *reinterpret_cast<::System::Xml::IXmlLineInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlResolver xmlResolver
[[deprecated("Use field access instead!")]] ::System::Xml::XmlResolver*& System::Xml::Schema::XmlSchemaValidator::dyn_xmlResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_xmlResolver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlResolver"))->offset;
  return *reinterpret_cast<::System::Xml::XmlResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri sourceUri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Xml::Schema::XmlSchemaValidator::dyn_sourceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_sourceUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceUri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String sourceUriString
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaValidator::dyn_sourceUriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_sourceUriString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceUriString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.IXmlNamespaceResolver nsResolver
[[deprecated("Use field access instead!")]] ::System::Xml::IXmlNamespaceResolver*& System::Xml::Schema::XmlSchemaValidator::dyn_nsResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_nsResolver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nsResolver"))->offset;
  return *reinterpret_cast<::System::Xml::IXmlNamespaceResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaContentProcessing processContents
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaContentProcessing& System::Xml::Schema::XmlSchemaValidator::dyn_processContents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_processContents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "processContents"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaContentProcessing*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String xsiTypeString
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaValidator::dyn_xsiTypeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_xsiTypeString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xsiTypeString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String xsiNilString
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaValidator::dyn_xsiNilString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_xsiNilString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xsiNilString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String xsiSchemaLocationString
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaValidator::dyn_xsiSchemaLocationString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_xsiSchemaLocationString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xsiSchemaLocationString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String xsiNoNamespaceSchemaLocationString
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XmlSchemaValidator::dyn_xsiNoNamespaceSchemaLocationString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_xsiNoNamespaceSchemaLocationString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xsiNoNamespaceSchemaLocationString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlCharType xmlCharType
[[deprecated("Use field access instead!")]] ::System::Xml::XmlCharType& System::Xml::Schema::XmlSchemaValidator::dyn_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::dyn_xmlCharType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlCharType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlCharType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.set_XmlResolver
void System::Xml::Schema::XmlSchemaValidator::set_XmlResolver(::System::Xml::XmlResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::set_XmlResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XmlResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.set_LineInfoProvider
void System::Xml::Schema::XmlSchemaValidator::set_LineInfoProvider(::System::Xml::IXmlLineInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::set_LineInfoProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LineInfoProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.set_SourceUri
void System::Xml::Schema::XmlSchemaValidator::set_SourceUri(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::set_SourceUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SourceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.set_ValidationEventSender
void System::Xml::Schema::XmlSchemaValidator::set_ValidationEventSender(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::set_ValidationEventSender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ValidationEventSender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.get_SchemaSet
::System::Xml::Schema::XmlSchemaSet* System::Xml::Schema::XmlSchemaValidator::get_SchemaSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::get_SchemaSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSet*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.get_ValidationFlags
::System::Xml::Schema::XmlSchemaValidationFlags System::Xml::Schema::XmlSchemaValidator::get_ValidationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::get_ValidationFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaValidationFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.get_CurrentContentType
::System::Xml::Schema::XmlSchemaContentType System::Xml::Schema::XmlSchemaValidator::get_CurrentContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::get_CurrentContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaContentType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.get_StrictlyAssessed
bool System::Xml::Schema::XmlSchemaValidator::get_StrictlyAssessed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::get_StrictlyAssessed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StrictlyAssessed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.get_HasSchema
bool System::Xml::Schema::XmlSchemaValidator::get_HasSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::get_HasSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.get_HasIdentityConstraints
bool System::Xml::Schema::XmlSchemaValidator::get_HasIdentityConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::get_HasIdentityConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasIdentityConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.get_ProcessIdentityConstraints
bool System::Xml::Schema::XmlSchemaValidator::get_ProcessIdentityConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::get_ProcessIdentityConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessIdentityConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.get_ReportValidationWarnings
bool System::Xml::Schema::XmlSchemaValidator::get_ReportValidationWarnings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::get_ReportValidationWarnings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReportValidationWarnings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.get_ProcessSchemaHints
bool System::Xml::Schema::XmlSchemaValidator::get_ProcessSchemaHints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::get_ProcessSchemaHints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessSchemaHints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.add_ValidationEventHandler
void System::Xml::Schema::XmlSchemaValidator::add_ValidationEventHandler(::System::Xml::Schema::ValidationEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::add_ValidationEventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_ValidationEventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.remove_ValidationEventHandler
void System::Xml::Schema::XmlSchemaValidator::remove_ValidationEventHandler(::System::Xml::Schema::ValidationEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::remove_ValidationEventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_ValidationEventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator..cctor
void System::Xml::Schema::XmlSchemaValidator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaValidator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.Init
void System::Xml::Schema::XmlSchemaValidator::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.Reset
void System::Xml::Schema::XmlSchemaValidator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.AddSchema
void System::Xml::Schema::XmlSchemaValidator::AddSchema(::System::Xml::Schema::XmlSchema* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::AddSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schema);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.Initialize
void System::Xml::Schema::XmlSchemaValidator::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.Initialize
void System::Xml::Schema::XmlSchemaValidator::Initialize(::System::Xml::Schema::XmlSchemaObject* partialValidationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partialValidationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, partialValidationType);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ValidateElement
void System::Xml::Schema::XmlSchemaValidator::ValidateElement(::StringW localName, ::StringW namespaceUri, ::System::Xml::Schema::XmlSchemaInfo* schemaInfo, ::StringW xsiType, ::StringW xsiNil, ::StringW xsiSchemaLocation, ::StringW xsiNoNamespaceSchemaLocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ValidateElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceUri), ::il2cpp_utils::ExtractType(schemaInfo), ::il2cpp_utils::ExtractType(xsiType), ::il2cpp_utils::ExtractType(xsiNil), ::il2cpp_utils::ExtractType(xsiSchemaLocation), ::il2cpp_utils::ExtractType(xsiNoNamespaceSchemaLocation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localName, namespaceUri, schemaInfo, xsiType, xsiNil, xsiSchemaLocation, xsiNoNamespaceSchemaLocation);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute
::Il2CppObject* System::Xml::Schema::XmlSchemaValidator::ValidateAttribute(::StringW localName, ::StringW namespaceUri, ::System::Xml::Schema::XmlValueGetter* attributeValue, ::System::Xml::Schema::XmlSchemaInfo* schemaInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ValidateAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceUri), ::il2cpp_utils::ExtractType(attributeValue), ::il2cpp_utils::ExtractType(schemaInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, localName, namespaceUri, attributeValue, schemaInfo);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute
::Il2CppObject* System::Xml::Schema::XmlSchemaValidator::ValidateAttribute(::StringW lName, ::StringW ns, ::System::Xml::Schema::XmlValueGetter* attributeValueGetter, ::StringW attributeStringValue, ::System::Xml::Schema::XmlSchemaInfo* schemaInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ValidateAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lName), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(attributeValueGetter), ::il2cpp_utils::ExtractType(attributeStringValue), ::il2cpp_utils::ExtractType(schemaInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, lName, ns, attributeValueGetter, attributeStringValue, schemaInfo);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes
void System::Xml::Schema::XmlSchemaValidator::ValidateEndOfAttributes(::System::Xml::Schema::XmlSchemaInfo* schemaInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ValidateEndOfAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateEndOfAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schemaInfo);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ValidateText
void System::Xml::Schema::XmlSchemaValidator::ValidateText(::System::Xml::Schema::XmlValueGetter* elementValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ValidateText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, elementValue);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ValidateText
void System::Xml::Schema::XmlSchemaValidator::ValidateText(::StringW elementStringValue, ::System::Xml::Schema::XmlValueGetter* elementValueGetter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ValidateText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementStringValue), ::il2cpp_utils::ExtractType(elementValueGetter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, elementStringValue, elementValueGetter);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace
void System::Xml::Schema::XmlSchemaValidator::ValidateWhitespace(::System::Xml::Schema::XmlValueGetter* elementValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ValidateWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, elementValue);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace
void System::Xml::Schema::XmlSchemaValidator::ValidateWhitespace(::StringW elementStringValue, ::System::Xml::Schema::XmlValueGetter* elementValueGetter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ValidateWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementStringValue), ::il2cpp_utils::ExtractType(elementValueGetter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, elementStringValue, elementValueGetter);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement
::Il2CppObject* System::Xml::Schema::XmlSchemaValidator::ValidateEndElement(::System::Xml::Schema::XmlSchemaInfo* schemaInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ValidateEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, schemaInfo);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement
void System::Xml::Schema::XmlSchemaValidator::SkipToEndElement(::System::Xml::Schema::XmlSchemaInfo* schemaInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::SkipToEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipToEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schemaInfo);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.EndValidation
void System::Xml::Schema::XmlSchemaValidator::EndValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::EndValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes
void System::Xml::Schema::XmlSchemaValidator::GetUnspecifiedDefaultAttributes(::System::Collections::ArrayList* defaultAttributes, bool createNodeData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::GetUnspecifiedDefaultAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnspecifiedDefaultAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultAttributes), ::il2cpp_utils::ExtractType(createNodeData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, defaultAttributes, createNodeData);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.SetDtdSchemaInfo
void System::Xml::Schema::XmlSchemaValidator::SetDtdSchemaInfo(::System::Xml::IDtdInfo* dtdSchemaInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::SetDtdSchemaInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDtdSchemaInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dtdSchemaInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dtdSchemaInfo);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.GetConcatenatedValue
::StringW System::Xml::Schema::XmlSchemaValidator::GetConcatenatedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::GetConcatenatedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConcatenatedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.InternalValidateEndElement
::Il2CppObject* System::Xml::Schema::XmlSchemaValidator::InternalValidateEndElement(::System::Xml::Schema::XmlSchemaInfo* schemaInfo, ::Il2CppObject* typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::InternalValidateEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalValidateEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaInfo), ::il2cpp_utils::ExtractType(typedValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, schemaInfo, typedValue);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ProcessSchemaLocations
void System::Xml::Schema::XmlSchemaValidator::ProcessSchemaLocations(::StringW xsiSchemaLocation, ::StringW xsiNoNamespaceSchemaLocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ProcessSchemaLocations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSchemaLocations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xsiSchemaLocation), ::il2cpp_utils::ExtractType(xsiNoNamespaceSchemaLocation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xsiSchemaLocation, xsiNoNamespaceSchemaLocation);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ValidateElementContext
::Il2CppObject* System::Xml::Schema::XmlSchemaValidator::ValidateElementContext(::System::Xml::XmlQualifiedName* elementName, ByRef<bool> invalidElementInContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ValidateElementContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateElementContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementName), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, elementName, byref(invalidElementInContext));
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.GetSubstitutionGroupHead
::System::Xml::Schema::XmlSchemaElement* System::Xml::Schema::XmlSchemaValidator::GetSubstitutionGroupHead(::System::Xml::XmlQualifiedName* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::GetSubstitutionGroupHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubstitutionGroupHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaElement*, false>(this, ___internal__method, member);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ValidateAtomicValue
::Il2CppObject* System::Xml::Schema::XmlSchemaValidator::ValidateAtomicValue(::StringW stringValue, ByRef<::System::Xml::Schema::XmlSchemaSimpleType*> memberType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ValidateAtomicValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateAtomicValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringValue), ::il2cpp_utils::ExtractIndependentType<::System::Xml::Schema::XmlSchemaSimpleType*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, stringValue, byref(memberType));
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ValidateAtomicValue
::Il2CppObject* System::Xml::Schema::XmlSchemaValidator::ValidateAtomicValue(::Il2CppObject* parsedValue, ByRef<::System::Xml::Schema::XmlSchemaSimpleType*> memberType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ValidateAtomicValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateAtomicValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parsedValue), ::il2cpp_utils::ExtractIndependentType<::System::Xml::Schema::XmlSchemaSimpleType*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, parsedValue, byref(memberType));
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.GetTypeName
::StringW System::Xml::Schema::XmlSchemaValidator::GetTypeName(::System::Xml::Schema::SchemaDeclBase* decl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::GetTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(decl)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, decl);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.SaveTextValue
void System::Xml::Schema::XmlSchemaValidator::SaveTextValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::SaveTextValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveTextValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.Push
void System::Xml::Schema::XmlSchemaValidator::Push(::System::Xml::XmlQualifiedName* elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::Push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, elementName);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.Pop
void System::Xml::Schema::XmlSchemaValidator::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.FastGetElementDecl
::System::Xml::Schema::SchemaElementDecl* System::Xml::Schema::XmlSchemaValidator::FastGetElementDecl(::System::Xml::XmlQualifiedName* elementName, ::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::FastGetElementDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FastGetElementDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementName), ::il2cpp_utils::ExtractType(particle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaElementDecl*, false>(this, ___internal__method, elementName, particle);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.CheckXsiTypeAndNil
::System::Xml::Schema::SchemaElementDecl* System::Xml::Schema::XmlSchemaValidator::CheckXsiTypeAndNil(::System::Xml::Schema::SchemaElementDecl* elementDecl, ::StringW xsiType, ::StringW xsiNil, ByRef<bool> declFound) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::CheckXsiTypeAndNil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckXsiTypeAndNil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementDecl), ::il2cpp_utils::ExtractType(xsiType), ::il2cpp_utils::ExtractType(xsiNil), ::il2cpp_utils::ExtractType(declFound)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaElementDecl*, false>(this, ___internal__method, elementDecl, xsiType, xsiNil, byref(declFound));
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ThrowDeclNotFoundWarningOrError
void System::Xml::Schema::XmlSchemaValidator::ThrowDeclNotFoundWarningOrError(bool declFound) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ThrowDeclNotFoundWarningOrError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowDeclNotFoundWarningOrError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(declFound)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, declFound);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.CheckElementProperties
void System::Xml::Schema::XmlSchemaValidator::CheckElementProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::CheckElementProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckElementProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ValidateStartElementIdentityConstraints
void System::Xml::Schema::XmlSchemaValidator::ValidateStartElementIdentityConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ValidateStartElementIdentityConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateStartElementIdentityConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.CheckIsXmlAttribute
::System::Xml::Schema::SchemaAttDef* System::Xml::Schema::XmlSchemaValidator::CheckIsXmlAttribute(::System::Xml::XmlQualifiedName* attQName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::CheckIsXmlAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIsXmlAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attQName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaAttDef*, false>(this, ___internal__method, attQName);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.AddXmlNamespaceSchema
void System::Xml::Schema::XmlSchemaValidator::AddXmlNamespaceSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::AddXmlNamespaceSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddXmlNamespaceSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.CheckMixedValueConstraint
::Il2CppObject* System::Xml::Schema::XmlSchemaValidator::CheckMixedValueConstraint(::StringW elementValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::CheckMixedValueConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckMixedValueConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, elementValue);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.LoadSchema
void System::Xml::Schema::XmlSchemaValidator::LoadSchema(::StringW uri, ::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::LoadSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(url)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri, url);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.RecompileSchemaSet
void System::Xml::Schema::XmlSchemaValidator::RecompileSchemaSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::RecompileSchemaSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecompileSchemaSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ProcessTokenizedType
void System::Xml::Schema::XmlSchemaValidator::ProcessTokenizedType(::System::Xml::XmlTokenizedType ttype, ::StringW name, bool attrValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ProcessTokenizedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessTokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ttype), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(attrValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ttype, name, attrValue);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.CheckAttributeValue
::Il2CppObject* System::Xml::Schema::XmlSchemaValidator::CheckAttributeValue(::Il2CppObject* value, ::System::Xml::Schema::SchemaAttDef* attdef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::CheckAttributeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAttributeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(attdef)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, attdef);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.CheckElementValue
::Il2CppObject* System::Xml::Schema::XmlSchemaValidator::CheckElementValue(::StringW stringValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::CheckElementValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckElementValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, stringValue);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.CheckTokenizedTypes
void System::Xml::Schema::XmlSchemaValidator::CheckTokenizedTypes(::System::Xml::Schema::XmlSchemaDatatype* dtype, ::Il2CppObject* typedValue, bool attrValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::CheckTokenizedTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckTokenizedTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dtype), ::il2cpp_utils::ExtractType(typedValue), ::il2cpp_utils::ExtractType(attrValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dtype, typedValue, attrValue);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.FindId
::Il2CppObject* System::Xml::Schema::XmlSchemaValidator::FindId(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::FindId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.CheckForwardRefs
void System::Xml::Schema::XmlSchemaValidator::CheckForwardRefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::CheckForwardRefs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForwardRefs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.CheckStateTransition
void System::Xml::Schema::XmlSchemaValidator::CheckStateTransition(::System::Xml::Schema::ValidatorState toState, ::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::CheckStateTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckStateTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toState), ::il2cpp_utils::ExtractType(methodName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toState, methodName);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ClearPSVI
void System::Xml::Schema::XmlSchemaValidator::ClearPSVI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ClearPSVI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearPSVI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.CheckRequiredAttributes
void System::Xml::Schema::XmlSchemaValidator::CheckRequiredAttributes(::System::Xml::Schema::SchemaElementDecl* currentElementDecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::CheckRequiredAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRequiredAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentElementDecl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentElementDecl);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.GetSchemaElement
::System::Xml::Schema::XmlSchemaElement* System::Xml::Schema::XmlSchemaValidator::GetSchemaElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::GetSchemaElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSchemaElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.GetDefaultAttributePrefix
::StringW System::Xml::Schema::XmlSchemaValidator::GetDefaultAttributePrefix(::StringW attributeNS) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::GetDefaultAttributePrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultAttributePrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeNS)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, attributeNS);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.AddIdentityConstraints
void System::Xml::Schema::XmlSchemaValidator::AddIdentityConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::AddIdentityConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddIdentityConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ElementIdentityConstraints
void System::Xml::Schema::XmlSchemaValidator::ElementIdentityConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ElementIdentityConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ElementIdentityConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.AttributeIdentityConstraints
void System::Xml::Schema::XmlSchemaValidator::AttributeIdentityConstraints(::StringW name, ::StringW ns, ::Il2CppObject* obj, ::StringW sobj, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::AttributeIdentityConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttributeIdentityConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(sobj), ::il2cpp_utils::ExtractType(datatype)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, ns, obj, sobj, datatype);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.EndElementIdentityConstraints
void System::Xml::Schema::XmlSchemaValidator::EndElementIdentityConstraints(::Il2CppObject* typedValue, ::StringW stringValue, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::EndElementIdentityConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndElementIdentityConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typedValue), ::il2cpp_utils::ExtractType(stringValue), ::il2cpp_utils::ExtractType(datatype)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, typedValue, stringValue, datatype);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ElementValidationError
void System::Xml::Schema::XmlSchemaValidator::ElementValidationError(::System::Xml::XmlQualifiedName* name, ::System::Xml::Schema::ValidationState* context, ::System::Xml::Schema::ValidationEventHandler* eventHandler, ::Il2CppObject* sender, ::StringW sourceUri, int lineNo, int linePos, ::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ElementValidationError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaValidator", "ElementValidationError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(eventHandler), ::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(sourceUri), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos), ::il2cpp_utils::ExtractType(schemaSet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, context, eventHandler, sender, sourceUri, lineNo, linePos, schemaSet);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.CompleteValidationError
void System::Xml::Schema::XmlSchemaValidator::CompleteValidationError(::System::Xml::Schema::ValidationState* context, ::System::Xml::Schema::ValidationEventHandler* eventHandler, ::Il2CppObject* sender, ::StringW sourceUri, int lineNo, int linePos, ::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::CompleteValidationError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaValidator", "CompleteValidationError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(eventHandler), ::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(sourceUri), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos), ::il2cpp_utils::ExtractType(schemaSet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, context, eventHandler, sender, sourceUri, lineNo, linePos, schemaSet);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.PrintExpectedElements
::StringW System::Xml::Schema::XmlSchemaValidator::PrintExpectedElements(::System::Collections::ArrayList* expected, bool getParticles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::PrintExpectedElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaValidator", "PrintExpectedElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(getParticles)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expected, getParticles);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.PrintNames
::StringW System::Xml::Schema::XmlSchemaValidator::PrintNames(::System::Collections::ArrayList* expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::PrintNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaValidator", "PrintNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expected);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.PrintNamesWithNS
void System::Xml::Schema::XmlSchemaValidator::PrintNamesWithNS(::System::Collections::ArrayList* expected, ::System::Text::StringBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::PrintNamesWithNS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaValidator", "PrintNamesWithNS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expected, builder);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.EnumerateAny
void System::Xml::Schema::XmlSchemaValidator::EnumerateAny(::System::Text::StringBuilder* builder, ::StringW namespaces) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::EnumerateAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaValidator", "EnumerateAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(namespaces)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, namespaces);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.QNameString
::StringW System::Xml::Schema::XmlSchemaValidator::QNameString(::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::QNameString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaValidator", "QNameString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, localName, ns);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.BuildElementName
::StringW System::Xml::Schema::XmlSchemaValidator::BuildElementName(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::BuildElementName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaValidator", "BuildElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.BuildElementName
::StringW System::Xml::Schema::XmlSchemaValidator::BuildElementName(::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::BuildElementName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaValidator", "BuildElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, localName, ns);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.ProcessEntity
void System::Xml::Schema::XmlSchemaValidator::ProcessEntity(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::ProcessEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.SendValidationEvent
void System::Xml::Schema::XmlSchemaValidator::SendValidationEvent(::StringW code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.SendValidationEvent
void System::Xml::Schema::XmlSchemaValidator::SendValidationEvent(::StringW code, ::ArrayW<::StringW> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, args);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.SendValidationEvent
void System::Xml::Schema::XmlSchemaValidator::SendValidationEvent(::StringW code, ::StringW arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, arg);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.SendValidationEvent
void System::Xml::Schema::XmlSchemaValidator::SendValidationEvent(::StringW code, ::StringW arg1, ::StringW arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, arg1, arg2);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.SendValidationEvent
void System::Xml::Schema::XmlSchemaValidator::SendValidationEvent(::StringW code, ::ArrayW<::StringW> args, ::System::Exception* innerException, ::System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(innerException), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, args, innerException, severity);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.SendValidationEvent
void System::Xml::Schema::XmlSchemaValidator::SendValidationEvent(::StringW code, ::ArrayW<::StringW> args, ::System::Exception* innerException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(innerException)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, args, innerException);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.SendValidationEvent
void System::Xml::Schema::XmlSchemaValidator::SendValidationEvent(::System::Xml::Schema::XmlSchemaValidationException* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.SendValidationEvent
void System::Xml::Schema::XmlSchemaValidator::SendValidationEvent(::System::Xml::Schema::XmlSchemaException* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.SendValidationEvent
void System::Xml::Schema::XmlSchemaValidator::SendValidationEvent(::StringW code, ::StringW msg, ::System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, msg, severity);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.SendValidationEvent
void System::Xml::Schema::XmlSchemaValidator::SendValidationEvent(::System::Xml::Schema::XmlSchemaValidationException* e, ::System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, severity);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaValidator.SendValidationEvent
void System::Xml::Schema::XmlSchemaValidator::SendValidationEvent(::System::Xml::Schema::ValidationEventHandler* eventHandler, ::Il2CppObject* sender, ::System::Xml::Schema::XmlSchemaValidationException* e, ::System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidator::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaValidator", "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventHandler), ::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventHandler, sender, e, severity);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaValidity
#include "System/Xml/Schema/XmlSchemaValidity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidity NotKnown
::System::Xml::Schema::XmlSchemaValidity System::Xml::Schema::XmlSchemaValidity::_get_NotKnown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::_get_NotKnown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidity>("System.Xml.Schema", "XmlSchemaValidity", "NotKnown"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidity NotKnown
void System::Xml::Schema::XmlSchemaValidity::_set_NotKnown(::System::Xml::Schema::XmlSchemaValidity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::_set_NotKnown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidity", "NotKnown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidity Valid
::System::Xml::Schema::XmlSchemaValidity System::Xml::Schema::XmlSchemaValidity::_get_Valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::_get_Valid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidity>("System.Xml.Schema", "XmlSchemaValidity", "Valid"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidity Valid
void System::Xml::Schema::XmlSchemaValidity::_set_Valid(::System::Xml::Schema::XmlSchemaValidity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::_set_Valid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidity", "Valid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaValidity Invalid
::System::Xml::Schema::XmlSchemaValidity System::Xml::Schema::XmlSchemaValidity::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaValidity>("System.Xml.Schema", "XmlSchemaValidity", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaValidity Invalid
void System::Xml::Schema::XmlSchemaValidity::_set_Invalid(::System::Xml::Schema::XmlSchemaValidity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaValidity", "Invalid", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSchemaValidity::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaValidity::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSeverityType
#include "System/Xml/Schema/XmlSeverityType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSeverityType Error
::System::Xml::Schema::XmlSeverityType System::Xml::Schema::XmlSeverityType::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSeverityType::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSeverityType>("System.Xml.Schema", "XmlSeverityType", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSeverityType Error
void System::Xml::Schema::XmlSeverityType::_set_Error(::System::Xml::Schema::XmlSeverityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSeverityType::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSeverityType", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSeverityType Warning
::System::Xml::Schema::XmlSeverityType System::Xml::Schema::XmlSeverityType::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSeverityType::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSeverityType>("System.Xml.Schema", "XmlSeverityType", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSeverityType Warning
void System::Xml::Schema::XmlSeverityType::_set_Warning(::System::Xml::Schema::XmlSeverityType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSeverityType::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSeverityType", "Warning", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlSeverityType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSeverityType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode None
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode None
void System::Xml::Schema::XmlTypeCode::_set_None(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Item
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Item() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Item");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Item"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Item
void System::Xml::Schema::XmlTypeCode::_set_Item(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Item");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Item", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Node
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Node");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Node"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Node
void System::Xml::Schema::XmlTypeCode::_set_Node(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Node");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Node", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Document
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Document");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Document"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Document
void System::Xml::Schema::XmlTypeCode::_set_Document(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Document");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Document", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Element
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Element");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Element"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Element
void System::Xml::Schema::XmlTypeCode::_set_Element(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Element");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Element", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Attribute
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Attribute
void System::Xml::Schema::XmlTypeCode::_set_Attribute(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Namespace
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Namespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Namespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Namespace
void System::Xml::Schema::XmlTypeCode::_set_Namespace(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Namespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Namespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode ProcessingInstruction
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_ProcessingInstruction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_ProcessingInstruction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "ProcessingInstruction"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode ProcessingInstruction
void System::Xml::Schema::XmlTypeCode::_set_ProcessingInstruction(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_ProcessingInstruction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "ProcessingInstruction", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Comment
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Comment
void System::Xml::Schema::XmlTypeCode::_set_Comment(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Text
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Text"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Text
void System::Xml::Schema::XmlTypeCode::_set_Text(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode AnyAtomicType
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_AnyAtomicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_AnyAtomicType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "AnyAtomicType"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode AnyAtomicType
void System::Xml::Schema::XmlTypeCode::_set_AnyAtomicType(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_AnyAtomicType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "AnyAtomicType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode UntypedAtomic
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_UntypedAtomic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_UntypedAtomic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "UntypedAtomic"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode UntypedAtomic
void System::Xml::Schema::XmlTypeCode::_set_UntypedAtomic(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_UntypedAtomic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "UntypedAtomic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode String
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "String"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode String
void System::Xml::Schema::XmlTypeCode::_set_String(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Boolean
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Boolean
void System::Xml::Schema::XmlTypeCode::_set_Boolean(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Decimal
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Decimal"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Decimal
void System::Xml::Schema::XmlTypeCode::_set_Decimal(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Decimal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Float
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Float"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Float
void System::Xml::Schema::XmlTypeCode::_set_Float(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Double
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Double"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Double
void System::Xml::Schema::XmlTypeCode::_set_Double(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Duration
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Duration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Duration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Duration
void System::Xml::Schema::XmlTypeCode::_set_Duration(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Duration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Duration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode DateTime
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_DateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "DateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode DateTime
void System::Xml::Schema::XmlTypeCode::_set_DateTime(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_DateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "DateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Time
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Time");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Time"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Time
void System::Xml::Schema::XmlTypeCode::_set_Time(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Time");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Time", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Date
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Date"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Date
void System::Xml::Schema::XmlTypeCode::_set_Date(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Date", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode GYearMonth
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_GYearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_GYearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "GYearMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode GYearMonth
void System::Xml::Schema::XmlTypeCode::_set_GYearMonth(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_GYearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "GYearMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode GYear
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_GYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_GYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "GYear"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode GYear
void System::Xml::Schema::XmlTypeCode::_set_GYear(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_GYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "GYear", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode GMonthDay
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_GMonthDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_GMonthDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "GMonthDay"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode GMonthDay
void System::Xml::Schema::XmlTypeCode::_set_GMonthDay(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_GMonthDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "GMonthDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode GDay
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_GDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_GDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "GDay"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode GDay
void System::Xml::Schema::XmlTypeCode::_set_GDay(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_GDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "GDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode GMonth
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_GMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_GMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "GMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode GMonth
void System::Xml::Schema::XmlTypeCode::_set_GMonth(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_GMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "GMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode HexBinary
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_HexBinary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_HexBinary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "HexBinary"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode HexBinary
void System::Xml::Schema::XmlTypeCode::_set_HexBinary(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_HexBinary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "HexBinary", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Base64Binary
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Base64Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Base64Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Base64Binary"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Base64Binary
void System::Xml::Schema::XmlTypeCode::_set_Base64Binary(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Base64Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Base64Binary", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode AnyUri
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_AnyUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_AnyUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "AnyUri"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode AnyUri
void System::Xml::Schema::XmlTypeCode::_set_AnyUri(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_AnyUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "AnyUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode QName
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_QName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_QName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "QName"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode QName
void System::Xml::Schema::XmlTypeCode::_set_QName(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_QName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "QName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Notation
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Notation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Notation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Notation"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Notation
void System::Xml::Schema::XmlTypeCode::_set_Notation(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Notation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Notation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode NormalizedString
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_NormalizedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_NormalizedString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "NormalizedString"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode NormalizedString
void System::Xml::Schema::XmlTypeCode::_set_NormalizedString(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_NormalizedString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "NormalizedString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Token
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Token");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Token"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Token
void System::Xml::Schema::XmlTypeCode::_set_Token(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Token");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Token", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Language
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Language");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Language"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Language
void System::Xml::Schema::XmlTypeCode::_set_Language(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Language");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Language", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode NmToken
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_NmToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_NmToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "NmToken"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode NmToken
void System::Xml::Schema::XmlTypeCode::_set_NmToken(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_NmToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "NmToken", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Name
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Name"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Name
void System::Xml::Schema::XmlTypeCode::_set_Name(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode NCName
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_NCName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_NCName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "NCName"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode NCName
void System::Xml::Schema::XmlTypeCode::_set_NCName(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_NCName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "NCName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Id
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Id");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Id"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Id
void System::Xml::Schema::XmlTypeCode::_set_Id(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Id");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Id", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Idref
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Idref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Idref");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Idref"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Idref
void System::Xml::Schema::XmlTypeCode::_set_Idref(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Idref");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Idref", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Entity
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Entity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Entity"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Entity
void System::Xml::Schema::XmlTypeCode::_set_Entity(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Entity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Entity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Integer
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Integer"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Integer
void System::Xml::Schema::XmlTypeCode::_set_Integer(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Integer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode NonPositiveInteger
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_NonPositiveInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_NonPositiveInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "NonPositiveInteger"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode NonPositiveInteger
void System::Xml::Schema::XmlTypeCode::_set_NonPositiveInteger(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_NonPositiveInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "NonPositiveInteger", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode NegativeInteger
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_NegativeInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_NegativeInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "NegativeInteger"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode NegativeInteger
void System::Xml::Schema::XmlTypeCode::_set_NegativeInteger(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_NegativeInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "NegativeInteger", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Long
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Long() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Long");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Long"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Long
void System::Xml::Schema::XmlTypeCode::_set_Long(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Long");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Long", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Int
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Int"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Int
void System::Xml::Schema::XmlTypeCode::_set_Int(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Int", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Short
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Short() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Short");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Short"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Short
void System::Xml::Schema::XmlTypeCode::_set_Short(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Short");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Short", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode Byte
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_Byte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_Byte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "Byte"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode Byte
void System::Xml::Schema::XmlTypeCode::_set_Byte(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_Byte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "Byte", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode NonNegativeInteger
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_NonNegativeInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_NonNegativeInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "NonNegativeInteger"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode NonNegativeInteger
void System::Xml::Schema::XmlTypeCode::_set_NonNegativeInteger(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_NonNegativeInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "NonNegativeInteger", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode UnsignedLong
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_UnsignedLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_UnsignedLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "UnsignedLong"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode UnsignedLong
void System::Xml::Schema::XmlTypeCode::_set_UnsignedLong(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_UnsignedLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "UnsignedLong", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode UnsignedInt
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_UnsignedInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_UnsignedInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "UnsignedInt"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode UnsignedInt
void System::Xml::Schema::XmlTypeCode::_set_UnsignedInt(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_UnsignedInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "UnsignedInt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode UnsignedShort
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_UnsignedShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_UnsignedShort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "UnsignedShort"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode UnsignedShort
void System::Xml::Schema::XmlTypeCode::_set_UnsignedShort(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_UnsignedShort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "UnsignedShort", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode UnsignedByte
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_UnsignedByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_UnsignedByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "UnsignedByte"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode UnsignedByte
void System::Xml::Schema::XmlTypeCode::_set_UnsignedByte(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_UnsignedByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "UnsignedByte", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode PositiveInteger
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_PositiveInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_PositiveInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "PositiveInteger"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode PositiveInteger
void System::Xml::Schema::XmlTypeCode::_set_PositiveInteger(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_PositiveInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "PositiveInteger", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode YearMonthDuration
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_YearMonthDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_YearMonthDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "YearMonthDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode YearMonthDuration
void System::Xml::Schema::XmlTypeCode::_set_YearMonthDuration(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_YearMonthDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "YearMonthDuration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlTypeCode DayTimeDuration
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlTypeCode::_get_DayTimeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_get_DayTimeDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlTypeCode>("System.Xml.Schema", "XmlTypeCode", "DayTimeDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlTypeCode DayTimeDuration
void System::Xml::Schema::XmlTypeCode::_set_DayTimeDuration(::System::Xml::Schema::XmlTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::_set_DayTimeDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlTypeCode", "DayTimeDuration", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XmlTypeCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlTypeCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToBoolean
bool System::Xml::Schema::XmlValueConverter::ToBoolean(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToBoolean
bool System::Xml::Schema::XmlValueConverter::ToBoolean(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToBoolean
bool System::Xml::Schema::XmlValueConverter::ToBoolean(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToBoolean
bool System::Xml::Schema::XmlValueConverter::ToBoolean(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToBoolean
bool System::Xml::Schema::XmlValueConverter::ToBoolean(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToBoolean
bool System::Xml::Schema::XmlValueConverter::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt32
int System::Xml::Schema::XmlValueConverter::ToInt32(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt32
int System::Xml::Schema::XmlValueConverter::ToInt32(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt32
int System::Xml::Schema::XmlValueConverter::ToInt32(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt32
int System::Xml::Schema::XmlValueConverter::ToInt32(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt32
int System::Xml::Schema::XmlValueConverter::ToInt32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt32
int System::Xml::Schema::XmlValueConverter::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt64
int64_t System::Xml::Schema::XmlValueConverter::ToInt64(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt64
int64_t System::Xml::Schema::XmlValueConverter::ToInt64(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt64
int64_t System::Xml::Schema::XmlValueConverter::ToInt64(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt64
int64_t System::Xml::Schema::XmlValueConverter::ToInt64(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt64
int64_t System::Xml::Schema::XmlValueConverter::ToInt64(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToInt64
int64_t System::Xml::Schema::XmlValueConverter::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlValueConverter::ToDecimal(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlValueConverter::ToDecimal(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDouble
double System::Xml::Schema::XmlValueConverter::ToDouble(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDouble
double System::Xml::Schema::XmlValueConverter::ToDouble(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDouble
double System::Xml::Schema::XmlValueConverter::ToDouble(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDouble
double System::Xml::Schema::XmlValueConverter::ToDouble(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDouble
double System::Xml::Schema::XmlValueConverter::ToDouble(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDouble
double System::Xml::Schema::XmlValueConverter::ToDouble(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToSingle
float System::Xml::Schema::XmlValueConverter::ToSingle(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToSingle
float System::Xml::Schema::XmlValueConverter::ToSingle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToSingle
float System::Xml::Schema::XmlValueConverter::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlValueConverter::ToDateTime(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlValueConverter::ToDateTimeOffset(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlValueConverter::ToDateTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlValueConverter::ToDateTimeOffset(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ToString
::StringW System::Xml::Schema::XmlValueConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(bool value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(int value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(int64_t value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(::System::Decimal value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(double value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(::System::DateTime value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlValueConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlValueConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlValueConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlBaseConverter
#include "System/Xml/Schema/XmlBaseConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected readonly System.Type ICollectionType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_ICollectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_ICollectionType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "ICollectionType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type ICollectionType
void System::Xml::Schema::XmlBaseConverter::_set_ICollectionType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_ICollectionType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "ICollectionType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type IEnumerableType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_IEnumerableType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_IEnumerableType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "IEnumerableType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type IEnumerableType
void System::Xml::Schema::XmlBaseConverter::_set_IEnumerableType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_IEnumerableType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "IEnumerableType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type IListType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_IListType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_IListType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "IListType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type IListType
void System::Xml::Schema::XmlBaseConverter::_set_IListType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_IListType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "IListType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type ObjectArrayType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_ObjectArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_ObjectArrayType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "ObjectArrayType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type ObjectArrayType
void System::Xml::Schema::XmlBaseConverter::_set_ObjectArrayType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_ObjectArrayType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "ObjectArrayType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type StringArrayType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_StringArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_StringArrayType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "StringArrayType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type StringArrayType
void System::Xml::Schema::XmlBaseConverter::_set_StringArrayType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_StringArrayType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "StringArrayType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type XmlAtomicValueArrayType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_XmlAtomicValueArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_XmlAtomicValueArrayType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "XmlAtomicValueArrayType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type XmlAtomicValueArrayType
void System::Xml::Schema::XmlBaseConverter::_set_XmlAtomicValueArrayType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_XmlAtomicValueArrayType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "XmlAtomicValueArrayType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type DecimalType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_DecimalType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_DecimalType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "DecimalType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type DecimalType
void System::Xml::Schema::XmlBaseConverter::_set_DecimalType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_DecimalType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "DecimalType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type Int32Type
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_Int32Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_Int32Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "Int32Type"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type Int32Type
void System::Xml::Schema::XmlBaseConverter::_set_Int32Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_Int32Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "Int32Type", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type Int64Type
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_Int64Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_Int64Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "Int64Type"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type Int64Type
void System::Xml::Schema::XmlBaseConverter::_set_Int64Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_Int64Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "Int64Type", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type StringType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_StringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_StringType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "StringType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type StringType
void System::Xml::Schema::XmlBaseConverter::_set_StringType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_StringType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "StringType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type XmlAtomicValueType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_XmlAtomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_XmlAtomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "XmlAtomicValueType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type XmlAtomicValueType
void System::Xml::Schema::XmlBaseConverter::_set_XmlAtomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_XmlAtomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "XmlAtomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type ObjectType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_ObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_ObjectType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "ObjectType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type ObjectType
void System::Xml::Schema::XmlBaseConverter::_set_ObjectType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_ObjectType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "ObjectType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type ByteType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_ByteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_ByteType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "ByteType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type ByteType
void System::Xml::Schema::XmlBaseConverter::_set_ByteType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_ByteType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "ByteType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type Int16Type
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_Int16Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_Int16Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "Int16Type"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type Int16Type
void System::Xml::Schema::XmlBaseConverter::_set_Int16Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_Int16Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "Int16Type", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type SByteType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_SByteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_SByteType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "SByteType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type SByteType
void System::Xml::Schema::XmlBaseConverter::_set_SByteType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_SByteType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "SByteType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type UInt16Type
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_UInt16Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_UInt16Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "UInt16Type"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type UInt16Type
void System::Xml::Schema::XmlBaseConverter::_set_UInt16Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_UInt16Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "UInt16Type", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type UInt32Type
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_UInt32Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_UInt32Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "UInt32Type"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type UInt32Type
void System::Xml::Schema::XmlBaseConverter::_set_UInt32Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_UInt32Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "UInt32Type", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type UInt64Type
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_UInt64Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_UInt64Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "UInt64Type"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type UInt64Type
void System::Xml::Schema::XmlBaseConverter::_set_UInt64Type(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_UInt64Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "UInt64Type", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type XPathItemType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_XPathItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_XPathItemType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "XPathItemType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type XPathItemType
void System::Xml::Schema::XmlBaseConverter::_set_XPathItemType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_XPathItemType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "XPathItemType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type DoubleType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_DoubleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_DoubleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "DoubleType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type DoubleType
void System::Xml::Schema::XmlBaseConverter::_set_DoubleType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_DoubleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "DoubleType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type SingleType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_SingleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_SingleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "SingleType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type SingleType
void System::Xml::Schema::XmlBaseConverter::_set_SingleType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_SingleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "SingleType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type DateTimeType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_DateTimeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_DateTimeType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "DateTimeType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type DateTimeType
void System::Xml::Schema::XmlBaseConverter::_set_DateTimeType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_DateTimeType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "DateTimeType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type DateTimeOffsetType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_DateTimeOffsetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_DateTimeOffsetType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "DateTimeOffsetType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type DateTimeOffsetType
void System::Xml::Schema::XmlBaseConverter::_set_DateTimeOffsetType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_DateTimeOffsetType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "DateTimeOffsetType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type BooleanType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_BooleanType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_BooleanType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "BooleanType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type BooleanType
void System::Xml::Schema::XmlBaseConverter::_set_BooleanType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_BooleanType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "BooleanType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type ByteArrayType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_ByteArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_ByteArrayType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "ByteArrayType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type ByteArrayType
void System::Xml::Schema::XmlBaseConverter::_set_ByteArrayType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_ByteArrayType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "ByteArrayType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type XmlQualifiedNameType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_XmlQualifiedNameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_XmlQualifiedNameType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "XmlQualifiedNameType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type XmlQualifiedNameType
void System::Xml::Schema::XmlBaseConverter::_set_XmlQualifiedNameType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_XmlQualifiedNameType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "XmlQualifiedNameType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type UriType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_UriType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_UriType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "UriType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type UriType
void System::Xml::Schema::XmlBaseConverter::_set_UriType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_UriType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "UriType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type TimeSpanType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_TimeSpanType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_TimeSpanType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "TimeSpanType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type TimeSpanType
void System::Xml::Schema::XmlBaseConverter::_set_TimeSpanType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_TimeSpanType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "TimeSpanType", value));
}
// Autogenerated static field getter
// Get static field: static protected readonly System.Type XPathNavigatorType
::System::Type* System::Xml::Schema::XmlBaseConverter::_get_XPathNavigatorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_get_XPathNavigatorType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "XmlBaseConverter", "XPathNavigatorType"));
}
// Autogenerated static field setter
// Set static field: static protected readonly System.Type XPathNavigatorType
void System::Xml::Schema::XmlBaseConverter::_set_XPathNavigatorType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::_set_XPathNavigatorType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlBaseConverter", "XPathNavigatorType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaType schemaType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaType*& System::Xml::Schema::XmlBaseConverter::dyn_schemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::dyn_schemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlTypeCode typeCode
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlTypeCode& System::Xml::Schema::XmlBaseConverter::dyn_typeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::dyn_typeCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeCode"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlTypeCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type clrTypeDefault
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::Schema::XmlBaseConverter::dyn_clrTypeDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::dyn_clrTypeDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clrTypeDefault"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.get_SchemaType
::System::Xml::Schema::XmlSchemaType* System::Xml::Schema::XmlBaseConverter::get_SchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::get_SchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::XmlBaseConverter::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::get_TypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.get_XmlTypeName
::StringW System::Xml::Schema::XmlBaseConverter::get_XmlTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::get_XmlTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.get_DefaultClrType
::System::Type* System::Xml::Schema::XmlBaseConverter::get_DefaultClrType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::get_DefaultClrType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultClrType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter..cctor
void System::Xml::Schema::XmlBaseConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.IsDerivedFrom
bool System::Xml::Schema::XmlBaseConverter::IsDerivedFrom(::System::Type* derivedType, ::System::Type* baseType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::IsDerivedFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "IsDerivedFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedType), ::il2cpp_utils::ExtractType(baseType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, derivedType, baseType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.CreateInvalidClrMappingException
::System::Exception* System::Xml::Schema::XmlBaseConverter::CreateInvalidClrMappingException(::System::Type* sourceType, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::CreateInvalidClrMappingException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInvalidClrMappingException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceType), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, sourceType, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.QNameToString
::StringW System::Xml::Schema::XmlBaseConverter::QNameToString(::System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::QNameToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "QNameToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeListType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeListType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeListType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 62));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToBase64Binary
::ArrayW<uint8_t> System::Xml::Schema::XmlBaseConverter::StringToBase64Binary(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToBase64Binary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToBase64Binary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToDate
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToDate(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToDateTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToDayTimeDuration
::System::TimeSpan System::Xml::Schema::XmlBaseConverter::StringToDayTimeDuration(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToDayTimeDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToDayTimeDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToDuration
::System::TimeSpan System::Xml::Schema::XmlBaseConverter::StringToDuration(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGDay
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToGDay(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGMonth
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToGMonth(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGMonth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGMonthDay
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToGMonthDay(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGMonthDay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGMonthDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGYear
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToGYear(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGYear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGYearMonth
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToGYearMonth(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGYearMonth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGYearMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToDateOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToDateOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToDateOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToDateOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToDateTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGDayOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToGDayOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGDayOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGDayOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGMonthOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToGMonthOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGMonthOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGMonthOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGMonthDayOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToGMonthDayOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGMonthDayOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGMonthDayOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGYearOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToGYearOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGYearOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGYearOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToGYearMonthOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToGYearMonthOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToGYearMonthOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToGYearMonthOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToHexBinary
::ArrayW<uint8_t> System::Xml::Schema::XmlBaseConverter::StringToHexBinary(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToHexBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToHexBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToQName
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlBaseConverter::StringToQName(::StringW value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::StringToTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::StringToTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.StringToYearMonthDuration
::System::TimeSpan System::Xml::Schema::XmlBaseConverter::StringToYearMonthDuration(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::StringToYearMonthDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "StringToYearMonthDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.AnyUriToString
::StringW System::Xml::Schema::XmlBaseConverter::AnyUriToString(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::AnyUriToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "AnyUriToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Base64BinaryToString
::StringW System::Xml::Schema::XmlBaseConverter::Base64BinaryToString(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Base64BinaryToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Base64BinaryToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DateToString
::StringW System::Xml::Schema::XmlBaseConverter::DateToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DateToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DateToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DateTimeToString
::StringW System::Xml::Schema::XmlBaseConverter::DateTimeToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DateTimeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DateTimeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DayTimeDurationToString
::StringW System::Xml::Schema::XmlBaseConverter::DayTimeDurationToString(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DayTimeDurationToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DayTimeDurationToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DurationToString
::StringW System::Xml::Schema::XmlBaseConverter::DurationToString(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DurationToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DurationToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GDayToString
::StringW System::Xml::Schema::XmlBaseConverter::GDayToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GDayToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GDayToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GMonthToString
::StringW System::Xml::Schema::XmlBaseConverter::GMonthToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GMonthToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GMonthToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GMonthDayToString
::StringW System::Xml::Schema::XmlBaseConverter::GMonthDayToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GMonthDayToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GMonthDayToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GYearToString
::StringW System::Xml::Schema::XmlBaseConverter::GYearToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GYearToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GYearToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GYearMonthToString
::StringW System::Xml::Schema::XmlBaseConverter::GYearMonthToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GYearMonthToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GYearMonthToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DateOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::DateOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DateOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DateOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DateTimeOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::DateTimeOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DateTimeOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DateTimeOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GDayOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::GDayOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GDayOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GDayOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GMonthOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::GMonthOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GMonthOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GMonthOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GMonthDayOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::GMonthDayOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GMonthDayOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GMonthDayOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GYearOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::GYearOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GYearOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GYearOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.GYearMonthOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::GYearMonthOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::GYearMonthOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "GYearMonthOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.QNameToString
::StringW System::Xml::Schema::XmlBaseConverter::QNameToString(::System::Xml::XmlQualifiedName* qname, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::QNameToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "QNameToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qname, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.TimeToString
::StringW System::Xml::Schema::XmlBaseConverter::TimeToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::TimeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "TimeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.TimeOffsetToString
::StringW System::Xml::Schema::XmlBaseConverter::TimeOffsetToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::TimeOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "TimeOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.YearMonthDurationToString
::StringW System::Xml::Schema::XmlBaseConverter::YearMonthDurationToString(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::YearMonthDurationToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "YearMonthDurationToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DateTimeOffsetToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::DateTimeOffsetToDateTime(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DateTimeOffsetToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DateTimeOffsetToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DecimalToInt32
int System::Xml::Schema::XmlBaseConverter::DecimalToInt32(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DecimalToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DecimalToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DecimalToInt64
int64_t System::Xml::Schema::XmlBaseConverter::DecimalToInt64(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DecimalToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DecimalToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.DecimalToUInt64
uint64_t System::Xml::Schema::XmlBaseConverter::DecimalToUInt64(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::DecimalToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "DecimalToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Int32ToByte
uint8_t System::Xml::Schema::XmlBaseConverter::Int32ToByte(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Int32ToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Int32ToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Int32ToInt16
int16_t System::Xml::Schema::XmlBaseConverter::Int32ToInt16(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Int32ToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Int32ToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Int32ToSByte
int8_t System::Xml::Schema::XmlBaseConverter::Int32ToSByte(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Int32ToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Int32ToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Int32ToUInt16
uint16_t System::Xml::Schema::XmlBaseConverter::Int32ToUInt16(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Int32ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Int32ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Int64ToInt32
int System::Xml::Schema::XmlBaseConverter::Int64ToInt32(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Int64ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Int64ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.Int64ToUInt32
uint System::Xml::Schema::XmlBaseConverter::Int64ToUInt32(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::Int64ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "Int64ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.UntypedAtomicToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::UntypedAtomicToDateTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::UntypedAtomicToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "UntypedAtomicToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.UntypedAtomicToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::UntypedAtomicToDateTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::UntypedAtomicToDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBaseConverter", "UntypedAtomicToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToBoolean
bool System::Xml::Schema::XmlBaseConverter::ToBoolean(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToBoolean
bool System::Xml::Schema::XmlBaseConverter::ToBoolean(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToBoolean
bool System::Xml::Schema::XmlBaseConverter::ToBoolean(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToBoolean
bool System::Xml::Schema::XmlBaseConverter::ToBoolean(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToBoolean
bool System::Xml::Schema::XmlBaseConverter::ToBoolean(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToBoolean
bool System::Xml::Schema::XmlBaseConverter::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 33));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 35));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlBaseConverter::ToDateTime(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::ToDateTimeOffset(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::ToDateTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 41));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlBaseConverter::ToDateTimeOffset(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 42));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlBaseConverter::ToDecimal(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlBaseConverter::ToDecimal(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDouble
double System::Xml::Schema::XmlBaseConverter::ToDouble(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 24));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDouble
double System::Xml::Schema::XmlBaseConverter::ToDouble(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 27));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDouble
double System::Xml::Schema::XmlBaseConverter::ToDouble(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 25));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDouble
double System::Xml::Schema::XmlBaseConverter::ToDouble(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 26));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDouble
double System::Xml::Schema::XmlBaseConverter::ToDouble(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 28));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToDouble
double System::Xml::Schema::XmlBaseConverter::ToDouble(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 29));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt32
int System::Xml::Schema::XmlBaseConverter::ToInt32(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt32
int System::Xml::Schema::XmlBaseConverter::ToInt32(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt32
int System::Xml::Schema::XmlBaseConverter::ToInt32(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt32
int System::Xml::Schema::XmlBaseConverter::ToInt32(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt32
int System::Xml::Schema::XmlBaseConverter::ToInt32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt32
int System::Xml::Schema::XmlBaseConverter::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt64
int64_t System::Xml::Schema::XmlBaseConverter::ToInt64(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt64
int64_t System::Xml::Schema::XmlBaseConverter::ToInt64(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 19));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt64
int64_t System::Xml::Schema::XmlBaseConverter::ToInt64(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt64
int64_t System::Xml::Schema::XmlBaseConverter::ToInt64(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt64
int64_t System::Xml::Schema::XmlBaseConverter::ToInt64(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToInt64
int64_t System::Xml::Schema::XmlBaseConverter::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToSingle
float System::Xml::Schema::XmlBaseConverter::ToSingle(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 30));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToSingle
float System::Xml::Schema::XmlBaseConverter::ToSingle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 31));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToSingle
float System::Xml::Schema::XmlBaseConverter::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 32));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 43));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 49));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 50));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 48));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 44));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ToString
::StringW System::Xml::Schema::XmlBaseConverter::ToString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 51));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(bool value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 53));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(::System::DateTime value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 58));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(::System::Decimal value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 56));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(double value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 57));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(int value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 54));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(int64_t value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 55));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBaseConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBaseConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBaseConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 60));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlNumeric10Converter
#include "System/Xml/Schema/XmlNumeric10Converter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlNumeric10Converter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlNumeric10Converter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeTypeWildcardDestination
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeTypeWildcardDestination(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeTypeWildcardDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeTypeWildcardSource
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeTypeWildcardSource(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeTypeWildcardSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToDecimal
::System::Decimal System::Xml::Schema::XmlNumeric10Converter::ToDecimal(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToDecimal
::System::Decimal System::Xml::Schema::XmlNumeric10Converter::ToDecimal(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToInt32
int System::Xml::Schema::XmlNumeric10Converter::ToInt32(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToInt32
int System::Xml::Schema::XmlNumeric10Converter::ToInt32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToInt32
int System::Xml::Schema::XmlNumeric10Converter::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToInt64
int64_t System::Xml::Schema::XmlNumeric10Converter::ToInt64(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 17));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToInt64
int64_t System::Xml::Schema::XmlNumeric10Converter::ToInt64(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToInt64
int64_t System::Xml::Schema::XmlNumeric10Converter::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToString
::StringW System::Xml::Schema::XmlNumeric10Converter::ToString(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToString
::StringW System::Xml::Schema::XmlNumeric10Converter::ToString(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 44));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToString
::StringW System::Xml::Schema::XmlNumeric10Converter::ToString(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ToString
::StringW System::Xml::Schema::XmlNumeric10Converter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeType(::System::Decimal value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 56));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeType(int value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 54));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeType(int64_t value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 55));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric10Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric10Converter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric10Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlNumeric2Converter
#include "System/Xml/Schema/XmlNumeric2Converter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlNumeric2Converter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlNumeric2Converter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToDouble
double System::Xml::Schema::XmlNumeric2Converter::ToDouble(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 28));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToDouble
double System::Xml::Schema::XmlNumeric2Converter::ToDouble(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 29));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToSingle
float System::Xml::Schema::XmlNumeric2Converter::ToSingle(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 30));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToSingle
float System::Xml::Schema::XmlNumeric2Converter::ToSingle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 31));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToSingle
float System::Xml::Schema::XmlNumeric2Converter::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 32));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToString
::StringW System::Xml::Schema::XmlNumeric2Converter::ToString(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 48));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToString
::StringW System::Xml::Schema::XmlNumeric2Converter::ToString(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ToString
::StringW System::Xml::Schema::XmlNumeric2Converter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric2Converter::ChangeType(double value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 57));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric2Converter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlNumeric2Converter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlNumeric2Converter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlNumeric2Converter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlDateTimeConverter
#include "System/Xml/Schema/XmlDateTimeConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlDateTimeConverter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlDateTimeConverter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlDateTimeConverter::ToDateTime(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlDateTimeConverter::ToDateTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlDateTimeConverter::ToDateTime(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlDateTimeConverter::ToDateTimeOffset(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlDateTimeConverter::ToDateTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 41));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlDateTimeConverter::ToDateTimeOffset(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 42));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToString
::StringW System::Xml::Schema::XmlDateTimeConverter::ToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 49));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToString
::StringW System::Xml::Schema::XmlDateTimeConverter::ToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 50));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ToString
::StringW System::Xml::Schema::XmlDateTimeConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlDateTimeConverter::ChangeType(::System::DateTime value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 58));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlDateTimeConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlDateTimeConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlDateTimeConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlDateTimeConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlBooleanConverter
#include "System/Xml/Schema/XmlBooleanConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlBooleanConverter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlBooleanConverter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ToBoolean
bool System::Xml::Schema::XmlBooleanConverter::ToBoolean(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ToBoolean
bool System::Xml::Schema::XmlBooleanConverter::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ToString
::StringW System::Xml::Schema::XmlBooleanConverter::ToString(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 43));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ToString
::StringW System::Xml::Schema::XmlBooleanConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBooleanConverter::ChangeType(bool value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 53));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBooleanConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlBooleanConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlBooleanConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlBooleanConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlMiscConverter
#include "System/Xml/Schema/XmlMiscConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlMiscConverter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlMiscConverter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlMiscConverter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlMiscConverter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlMiscConverter.ChangeTypeWildcardDestination
::Il2CppObject* System::Xml::Schema::XmlMiscConverter::ChangeTypeWildcardDestination(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlMiscConverter::ChangeTypeWildcardDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlMiscConverter.ChangeTypeWildcardSource
::Il2CppObject* System::Xml::Schema::XmlMiscConverter::ChangeTypeWildcardSource(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlMiscConverter::ChangeTypeWildcardSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlMiscConverter.ToString
::StringW System::Xml::Schema::XmlMiscConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlMiscConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlMiscConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlMiscConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlMiscConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlMiscConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlMiscConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlMiscConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlStringConverter
#include "System/Xml/Schema/XmlStringConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlStringConverter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlStringConverter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlStringConverter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlStringConverter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlStringConverter.ToString
::StringW System::Xml::Schema::XmlStringConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlStringConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlStringConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlStringConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlStringConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlStringConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlStringConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlStringConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlUntypedConverter
#include "System/Xml/Schema/XmlUntypedConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.XmlValueConverter Untyped
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlUntypedConverter::_get_Untyped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::_get_Untyped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlValueConverter*>("System.Xml.Schema", "XmlUntypedConverter", "Untyped"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.XmlValueConverter Untyped
void System::Xml::Schema::XmlUntypedConverter::_set_Untyped(::System::Xml::Schema::XmlValueConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::_set_Untyped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlUntypedConverter", "Untyped", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.XmlValueConverter UntypedList
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlUntypedConverter::_get_UntypedList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::_get_UntypedList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlValueConverter*>("System.Xml.Schema", "XmlUntypedConverter", "UntypedList"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.XmlValueConverter UntypedList
void System::Xml::Schema::XmlUntypedConverter::_set_UntypedList(::System::Xml::Schema::XmlValueConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::_set_UntypedList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlUntypedConverter", "UntypedList", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean allowListToList
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XmlUntypedConverter::dyn_allowListToList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::dyn_allowListToList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowListToList"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeTypeWildcardDestination
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeTypeWildcardDestination(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeTypeWildcardDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeTypeWildcardSource
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeTypeWildcardSource(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeTypeWildcardSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.SupportsType
bool System::Xml::Schema::XmlUntypedConverter::SupportsType(::System::Type* clrType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::SupportsType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SupportsType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clrType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, clrType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter..cctor
void System::Xml::Schema::XmlUntypedConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlUntypedConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToBoolean
bool System::Xml::Schema::XmlUntypedConverter::ToBoolean(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToBoolean
bool System::Xml::Schema::XmlUntypedConverter::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlUntypedConverter::ToDateTime(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlUntypedConverter::ToDateTime(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlUntypedConverter::ToDateTimeOffset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 41));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlUntypedConverter::ToDateTimeOffset(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 42));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlUntypedConverter::ToDecimal(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlUntypedConverter::ToDecimal(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDouble
double System::Xml::Schema::XmlUntypedConverter::ToDouble(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 28));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToDouble
double System::Xml::Schema::XmlUntypedConverter::ToDouble(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 29));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToInt32
int System::Xml::Schema::XmlUntypedConverter::ToInt32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToInt32
int System::Xml::Schema::XmlUntypedConverter::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToInt64
int64_t System::Xml::Schema::XmlUntypedConverter::ToInt64(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 20));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToInt64
int64_t System::Xml::Schema::XmlUntypedConverter::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToSingle
float System::Xml::Schema::XmlUntypedConverter::ToSingle(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 31));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToSingle
float System::Xml::Schema::XmlUntypedConverter::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 32));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 43));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 49));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 50));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 48));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 44));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 45));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 47));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ToString
::StringW System::Xml::Schema::XmlUntypedConverter::ToString(::Il2CppObject* value, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 52));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(bool value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 53));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(::System::DateTime value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 58));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(::System::Decimal value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 56));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(double value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 57));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(int value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 54));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(int64_t value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 55));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlListConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlUntypedConverter.ChangeListType
::Il2CppObject* System::Xml::Schema::XmlUntypedConverter::ChangeListType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUntypedConverter::ChangeListType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlListConverter*), 62));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlAnyConverter
#include "System/Xml/Schema/XmlAnyConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.XPath.XPathNavigator
#include "System/Xml/XPath/XPathNavigator.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.XmlValueConverter Item
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlAnyConverter::_get_Item() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::_get_Item");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlValueConverter*>("System.Xml.Schema", "XmlAnyConverter", "Item"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.XmlValueConverter Item
void System::Xml::Schema::XmlAnyConverter::_set_Item(::System::Xml::Schema::XmlValueConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::_set_Item");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlAnyConverter", "Item", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.XmlValueConverter AnyAtomic
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlAnyConverter::_get_AnyAtomic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::_get_AnyAtomic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlValueConverter*>("System.Xml.Schema", "XmlAnyConverter", "AnyAtomic"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.XmlValueConverter AnyAtomic
void System::Xml::Schema::XmlAnyConverter::_set_AnyAtomic(::System::Xml::Schema::XmlValueConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::_set_AnyAtomic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlAnyConverter", "AnyAtomic", value));
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeTypeWildcardDestination
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeTypeWildcardDestination(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeTypeWildcardDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeTypeWildcardSource
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeTypeWildcardSource(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeTypeWildcardSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTypeWildcardSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToNavigator
::System::Xml::XPath::XPathNavigator* System::Xml::Schema::XmlAnyConverter::ToNavigator(::System::Xml::XPath::XPathNavigator* nav) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToNavigator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToNavigator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nav)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNavigator*, false>(this, ___internal__method, nav);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter..cctor
void System::Xml::Schema::XmlAnyConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlAnyConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToBoolean
bool System::Xml::Schema::XmlAnyConverter::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToDateTime
::System::DateTime System::Xml::Schema::XmlAnyConverter::ToDateTime(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 39));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToDateTimeOffset
::System::DateTimeOffset System::Xml::Schema::XmlAnyConverter::ToDateTimeOffset(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToDateTimeOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 42));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToDecimal
::System::Decimal System::Xml::Schema::XmlAnyConverter::ToDecimal(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToDecimal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToDouble
double System::Xml::Schema::XmlAnyConverter::ToDouble(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 29));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToInt32
int System::Xml::Schema::XmlAnyConverter::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToInt64
int64_t System::Xml::Schema::XmlAnyConverter::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ToSingle
float System::Xml::Schema::XmlAnyConverter::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 32));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(bool value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 53));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(::System::DateTime value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 58));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(::System::Decimal value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 56));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(double value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 57));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(int value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 54));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(int64_t value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 55));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(::StringW value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 59));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlAnyConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlAnyListConverter
#include "System/Xml/Schema/XmlAnyListConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.XmlValueConverter ItemList
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlAnyListConverter::_get_ItemList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyListConverter::_get_ItemList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlValueConverter*>("System.Xml.Schema", "XmlAnyListConverter", "ItemList"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.XmlValueConverter ItemList
void System::Xml::Schema::XmlAnyListConverter::_set_ItemList(::System::Xml::Schema::XmlValueConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyListConverter::_set_ItemList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlAnyListConverter", "ItemList", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.XmlValueConverter AnyAtomicList
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlAnyListConverter::_get_AnyAtomicList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyListConverter::_get_AnyAtomicList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlValueConverter*>("System.Xml.Schema", "XmlAnyListConverter", "AnyAtomicList"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.XmlValueConverter AnyAtomicList
void System::Xml::Schema::XmlAnyListConverter::_set_AnyAtomicList(::System::Xml::Schema::XmlValueConverter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyListConverter::_set_AnyAtomicList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlAnyListConverter", "AnyAtomicList", value));
}
// Autogenerated method: System.Xml.Schema.XmlAnyListConverter..cctor
void System::Xml::Schema::XmlAnyListConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyListConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlAnyListConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAnyListConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlAnyListConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAnyListConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlListConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlListConverter
#include "System/Xml/Schema/XmlListConverter.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Xml.Schema.XmlValueConverter atomicConverter
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlValueConverter*& System::Xml::Schema::XmlListConverter::dyn_atomicConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::dyn_atomicConverter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "atomicConverter"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlValueConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlListConverter::Create(::System::Xml::Schema::XmlValueConverter* atomicConverter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlListConverter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(atomicConverter)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, atomicConverter);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.IsListType
bool System::Xml::Schema::XmlListConverter::IsListType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::IsListType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsListType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.ToList
::System::Collections::IList* System::Xml::Schema::XmlListConverter::ToList(::Il2CppObject* list, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::ToList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method, list, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.StringAsList
::System::Collections::Generic::List_1<::StringW>* System::Xml::Schema::XmlListConverter::StringAsList(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::StringAsList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StringAsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.ListAsString
::StringW System::Xml::Schema::XmlListConverter::ListAsString(::System::Collections::IEnumerable* list, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::ListAsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ListAsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(nsResolver)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, list, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlListConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.ChangeListType
::Il2CppObject* System::Xml::Schema::XmlListConverter::ChangeListType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::ChangeListType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlBaseConverter*), 62));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlListConverter.CreateInvalidClrMappingException
::System::Exception* System::Xml::Schema::XmlListConverter::CreateInvalidClrMappingException(::System::Type* sourceType, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlListConverter::CreateInvalidClrMappingException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInvalidClrMappingException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceType), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, sourceType, destinationType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlUnionConverter
#include "System/Xml/Schema/XmlUnionConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlValueConverter[] converters
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Schema::XmlValueConverter*>& System::Xml::Schema::XmlUnionConverter::dyn_converters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUnionConverter::dyn_converters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "converters"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::XmlValueConverter*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasAtomicMember
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XmlUnionConverter::dyn_hasAtomicMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUnionConverter::dyn_hasAtomicMember");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasAtomicMember"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasListMember
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XmlUnionConverter::dyn_hasListMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUnionConverter::dyn_hasListMember");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasListMember"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlUnionConverter.Create
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::XmlUnionConverter::Create(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUnionConverter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlUnionConverter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.XmlUnionConverter.ChangeType
::Il2CppObject* System::Xml::Schema::XmlUnionConverter::ChangeType(::Il2CppObject* value, ::System::Type* destinationType, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlUnionConverter::ChangeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlValueConverter*), 61));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType, nsResolver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XsdBuilder
#include "System/Xml/Schema/XsdBuilder.hpp"
// Including type: System.Xml.Schema.SchemaNames/System.Xml.Schema.Token
#include "System/Xml/Schema/SchemaNames_Token.hpp"
// Including type: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdBuildFunction
#include "System/Xml/Schema/XsdBuilder_XsdBuildFunction.hpp"
// Including type: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdInitFunction
#include "System/Xml/Schema/XsdBuilder_XsdInitFunction.hpp"
// Including type: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdEndChildFunction
#include "System/Xml/Schema/XsdBuilder_XsdEndChildFunction.hpp"
// Including type: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry
#include "System/Xml/Schema/XsdBuilder_XsdAttributeEntry.hpp"
// Including type: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdEntry
#include "System/Xml/Schema/XsdBuilder_XsdEntry.hpp"
// Including type: System.Xml.Schema.XsdBuilder/System.Xml.Schema.BuilderNamespaceManager
#include "System/Xml/Schema/XsdBuilder_BuilderNamespaceManager.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.PositionInfo
#include "System/Xml/PositionInfo.hpp"
// Including type: System.Xml.HWStack
#include "System/Xml/HWStack.hpp"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
// Including type: System.Xml.Schema.XmlSchemaElement
#include "System/Xml/Schema/XmlSchemaElement.hpp"
// Including type: System.Xml.Schema.XmlSchemaAny
#include "System/Xml/Schema/XmlSchemaAny.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttribute
#include "System/Xml/Schema/XmlSchemaAttribute.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnyAttribute
#include "System/Xml/Schema/XmlSchemaAnyAttribute.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexType
#include "System/Xml/Schema/XmlSchemaComplexType.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexContent
#include "System/Xml/Schema/XmlSchemaComplexContent.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexContentExtension
#include "System/Xml/Schema/XmlSchemaComplexContentExtension.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexContentRestriction
#include "System/Xml/Schema/XmlSchemaComplexContentRestriction.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleContent
#include "System/Xml/Schema/XmlSchemaSimpleContent.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleContentExtension
#include "System/Xml/Schema/XmlSchemaSimpleContentExtension.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleContentRestriction
#include "System/Xml/Schema/XmlSchemaSimpleContentRestriction.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleTypeUnion
#include "System/Xml/Schema/XmlSchemaSimpleTypeUnion.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleTypeList
#include "System/Xml/Schema/XmlSchemaSimpleTypeList.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleTypeRestriction
#include "System/Xml/Schema/XmlSchemaSimpleTypeRestriction.hpp"
// Including type: System.Xml.Schema.XmlSchemaGroup
#include "System/Xml/Schema/XmlSchemaGroup.hpp"
// Including type: System.Xml.Schema.XmlSchemaGroupRef
#include "System/Xml/Schema/XmlSchemaGroupRef.hpp"
// Including type: System.Xml.Schema.XmlSchemaAll
#include "System/Xml/Schema/XmlSchemaAll.hpp"
// Including type: System.Xml.Schema.XmlSchemaChoice
#include "System/Xml/Schema/XmlSchemaChoice.hpp"
// Including type: System.Xml.Schema.XmlSchemaSequence
#include "System/Xml/Schema/XmlSchemaSequence.hpp"
// Including type: System.Xml.Schema.XmlSchemaParticle
#include "System/Xml/Schema/XmlSchemaParticle.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttributeGroup
#include "System/Xml/Schema/XmlSchemaAttributeGroup.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttributeGroupRef
#include "System/Xml/Schema/XmlSchemaAttributeGroupRef.hpp"
// Including type: System.Xml.Schema.XmlSchemaNotation
#include "System/Xml/Schema/XmlSchemaNotation.hpp"
// Including type: System.Xml.Schema.XmlSchemaIdentityConstraint
#include "System/Xml/Schema/XmlSchemaIdentityConstraint.hpp"
// Including type: System.Xml.Schema.XmlSchemaXPath
#include "System/Xml/Schema/XmlSchemaXPath.hpp"
// Including type: System.Xml.Schema.XmlSchemaInclude
#include "System/Xml/Schema/XmlSchemaInclude.hpp"
// Including type: System.Xml.Schema.XmlSchemaImport
#include "System/Xml/Schema/XmlSchemaImport.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnnotation
#include "System/Xml/Schema/XmlSchemaAnnotation.hpp"
// Including type: System.Xml.Schema.XmlSchemaAppInfo
#include "System/Xml/Schema/XmlSchemaAppInfo.hpp"
// Including type: System.Xml.Schema.XmlSchemaDocumentation
#include "System/Xml/Schema/XmlSchemaDocumentation.hpp"
// Including type: System.Xml.Schema.XmlSchemaFacet
#include "System/Xml/Schema/XmlSchemaFacet.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Xml.Schema.XmlSchemaRedefine
#include "System/Xml/Schema/XmlSchemaRedefine.hpp"
// Including type: System.Xml.Schema.ValidationEventHandler
#include "System/Xml/Schema/ValidationEventHandler.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSeverityType
#include "System/Xml/Schema/XmlSeverityType.hpp"
// Including type: System.Xml.Schema.XmlSchemaException
#include "System/Xml/Schema/XmlSchemaException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] SchemaElement
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_SchemaElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_SchemaElement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "SchemaElement"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] SchemaElement
void System::Xml::Schema::XsdBuilder::_set_SchemaElement(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_SchemaElement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "SchemaElement", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] SchemaSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_SchemaSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_SchemaSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "SchemaSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] SchemaSubelements
void System::Xml::Schema::XsdBuilder::_set_SchemaSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_SchemaSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "SchemaSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] AttributeSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_AttributeSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_AttributeSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "AttributeSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] AttributeSubelements
void System::Xml::Schema::XsdBuilder::_set_AttributeSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_AttributeSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "AttributeSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] ElementSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_ElementSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_ElementSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "ElementSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] ElementSubelements
void System::Xml::Schema::XsdBuilder::_set_ElementSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_ElementSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "ElementSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] ComplexTypeSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_ComplexTypeSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_ComplexTypeSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "ComplexTypeSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] ComplexTypeSubelements
void System::Xml::Schema::XsdBuilder::_set_ComplexTypeSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_ComplexTypeSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "ComplexTypeSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] SimpleContentSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_SimpleContentSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_SimpleContentSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "SimpleContentSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] SimpleContentSubelements
void System::Xml::Schema::XsdBuilder::_set_SimpleContentSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_SimpleContentSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "SimpleContentSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] SimpleContentExtensionSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_SimpleContentExtensionSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_SimpleContentExtensionSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "SimpleContentExtensionSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] SimpleContentExtensionSubelements
void System::Xml::Schema::XsdBuilder::_set_SimpleContentExtensionSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_SimpleContentExtensionSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "SimpleContentExtensionSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] SimpleContentRestrictionSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_SimpleContentRestrictionSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_SimpleContentRestrictionSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "SimpleContentRestrictionSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] SimpleContentRestrictionSubelements
void System::Xml::Schema::XsdBuilder::_set_SimpleContentRestrictionSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_SimpleContentRestrictionSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "SimpleContentRestrictionSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] ComplexContentSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_ComplexContentSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_ComplexContentSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "ComplexContentSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] ComplexContentSubelements
void System::Xml::Schema::XsdBuilder::_set_ComplexContentSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_ComplexContentSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "ComplexContentSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] ComplexContentExtensionSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_ComplexContentExtensionSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_ComplexContentExtensionSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "ComplexContentExtensionSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] ComplexContentExtensionSubelements
void System::Xml::Schema::XsdBuilder::_set_ComplexContentExtensionSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_ComplexContentExtensionSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "ComplexContentExtensionSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] ComplexContentRestrictionSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_ComplexContentRestrictionSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_ComplexContentRestrictionSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "ComplexContentRestrictionSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] ComplexContentRestrictionSubelements
void System::Xml::Schema::XsdBuilder::_set_ComplexContentRestrictionSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_ComplexContentRestrictionSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "ComplexContentRestrictionSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] SimpleTypeSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_SimpleTypeSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_SimpleTypeSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "SimpleTypeSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] SimpleTypeSubelements
void System::Xml::Schema::XsdBuilder::_set_SimpleTypeSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_SimpleTypeSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "SimpleTypeSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] SimpleTypeRestrictionSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_SimpleTypeRestrictionSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_SimpleTypeRestrictionSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "SimpleTypeRestrictionSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] SimpleTypeRestrictionSubelements
void System::Xml::Schema::XsdBuilder::_set_SimpleTypeRestrictionSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_SimpleTypeRestrictionSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "SimpleTypeRestrictionSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] SimpleTypeListSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_SimpleTypeListSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_SimpleTypeListSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "SimpleTypeListSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] SimpleTypeListSubelements
void System::Xml::Schema::XsdBuilder::_set_SimpleTypeListSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_SimpleTypeListSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "SimpleTypeListSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] SimpleTypeUnionSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_SimpleTypeUnionSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_SimpleTypeUnionSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "SimpleTypeUnionSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] SimpleTypeUnionSubelements
void System::Xml::Schema::XsdBuilder::_set_SimpleTypeUnionSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_SimpleTypeUnionSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "SimpleTypeUnionSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] RedefineSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_RedefineSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_RedefineSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "RedefineSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] RedefineSubelements
void System::Xml::Schema::XsdBuilder::_set_RedefineSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_RedefineSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "RedefineSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] AttributeGroupSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_AttributeGroupSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_AttributeGroupSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "AttributeGroupSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] AttributeGroupSubelements
void System::Xml::Schema::XsdBuilder::_set_AttributeGroupSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_AttributeGroupSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "AttributeGroupSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] GroupSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_GroupSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_GroupSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "GroupSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] GroupSubelements
void System::Xml::Schema::XsdBuilder::_set_GroupSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_GroupSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "GroupSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] AllSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_AllSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_AllSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "AllSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] AllSubelements
void System::Xml::Schema::XsdBuilder::_set_AllSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_AllSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "AllSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] ChoiceSequenceSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_ChoiceSequenceSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_ChoiceSequenceSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "ChoiceSequenceSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] ChoiceSequenceSubelements
void System::Xml::Schema::XsdBuilder::_set_ChoiceSequenceSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_ChoiceSequenceSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "ChoiceSequenceSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] IdentityConstraintSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_IdentityConstraintSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_IdentityConstraintSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "IdentityConstraintSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] IdentityConstraintSubelements
void System::Xml::Schema::XsdBuilder::_set_IdentityConstraintSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_IdentityConstraintSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "IdentityConstraintSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] AnnotationSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_AnnotationSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_AnnotationSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "AnnotationSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] AnnotationSubelements
void System::Xml::Schema::XsdBuilder::_set_AnnotationSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_AnnotationSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "AnnotationSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] AnnotatedSubelements
::ArrayW<::System::Xml::Schema::XsdBuilder::State> System::Xml::Schema::XsdBuilder::_get_AnnotatedSubelements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_AnnotatedSubelements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::State>>("System.Xml.Schema", "XsdBuilder", "AnnotatedSubelements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] AnnotatedSubelements
void System::Xml::Schema::XsdBuilder::_set_AnnotatedSubelements(::ArrayW<::System::Xml::Schema::XsdBuilder::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_AnnotatedSubelements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "AnnotatedSubelements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] SchemaAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_SchemaAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_SchemaAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "SchemaAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] SchemaAttributes
void System::Xml::Schema::XsdBuilder::_set_SchemaAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_SchemaAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "SchemaAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] AttributeAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_AttributeAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_AttributeAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "AttributeAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] AttributeAttributes
void System::Xml::Schema::XsdBuilder::_set_AttributeAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_AttributeAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "AttributeAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] ElementAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_ElementAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_ElementAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "ElementAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] ElementAttributes
void System::Xml::Schema::XsdBuilder::_set_ElementAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_ElementAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "ElementAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] ComplexTypeAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_ComplexTypeAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_ComplexTypeAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "ComplexTypeAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] ComplexTypeAttributes
void System::Xml::Schema::XsdBuilder::_set_ComplexTypeAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_ComplexTypeAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "ComplexTypeAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] SimpleContentAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_SimpleContentAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_SimpleContentAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "SimpleContentAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] SimpleContentAttributes
void System::Xml::Schema::XsdBuilder::_set_SimpleContentAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_SimpleContentAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "SimpleContentAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] SimpleContentExtensionAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_SimpleContentExtensionAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_SimpleContentExtensionAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "SimpleContentExtensionAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] SimpleContentExtensionAttributes
void System::Xml::Schema::XsdBuilder::_set_SimpleContentExtensionAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_SimpleContentExtensionAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "SimpleContentExtensionAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] SimpleContentRestrictionAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_SimpleContentRestrictionAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_SimpleContentRestrictionAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "SimpleContentRestrictionAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] SimpleContentRestrictionAttributes
void System::Xml::Schema::XsdBuilder::_set_SimpleContentRestrictionAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_SimpleContentRestrictionAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "SimpleContentRestrictionAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] ComplexContentAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_ComplexContentAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_ComplexContentAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "ComplexContentAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] ComplexContentAttributes
void System::Xml::Schema::XsdBuilder::_set_ComplexContentAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_ComplexContentAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "ComplexContentAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] ComplexContentExtensionAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_ComplexContentExtensionAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_ComplexContentExtensionAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "ComplexContentExtensionAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] ComplexContentExtensionAttributes
void System::Xml::Schema::XsdBuilder::_set_ComplexContentExtensionAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_ComplexContentExtensionAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "ComplexContentExtensionAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] ComplexContentRestrictionAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_ComplexContentRestrictionAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_ComplexContentRestrictionAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "ComplexContentRestrictionAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] ComplexContentRestrictionAttributes
void System::Xml::Schema::XsdBuilder::_set_ComplexContentRestrictionAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_ComplexContentRestrictionAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "ComplexContentRestrictionAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] SimpleTypeAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_SimpleTypeAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_SimpleTypeAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "SimpleTypeAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] SimpleTypeAttributes
void System::Xml::Schema::XsdBuilder::_set_SimpleTypeAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_SimpleTypeAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "SimpleTypeAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] SimpleTypeRestrictionAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_SimpleTypeRestrictionAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_SimpleTypeRestrictionAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "SimpleTypeRestrictionAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] SimpleTypeRestrictionAttributes
void System::Xml::Schema::XsdBuilder::_set_SimpleTypeRestrictionAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_SimpleTypeRestrictionAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "SimpleTypeRestrictionAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] SimpleTypeUnionAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_SimpleTypeUnionAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_SimpleTypeUnionAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "SimpleTypeUnionAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] SimpleTypeUnionAttributes
void System::Xml::Schema::XsdBuilder::_set_SimpleTypeUnionAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_SimpleTypeUnionAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "SimpleTypeUnionAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] SimpleTypeListAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_SimpleTypeListAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_SimpleTypeListAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "SimpleTypeListAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] SimpleTypeListAttributes
void System::Xml::Schema::XsdBuilder::_set_SimpleTypeListAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_SimpleTypeListAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "SimpleTypeListAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] AttributeGroupAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_AttributeGroupAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_AttributeGroupAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "AttributeGroupAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] AttributeGroupAttributes
void System::Xml::Schema::XsdBuilder::_set_AttributeGroupAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_AttributeGroupAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "AttributeGroupAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] AttributeGroupRefAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_AttributeGroupRefAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_AttributeGroupRefAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "AttributeGroupRefAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] AttributeGroupRefAttributes
void System::Xml::Schema::XsdBuilder::_set_AttributeGroupRefAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_AttributeGroupRefAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "AttributeGroupRefAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] GroupAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_GroupAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_GroupAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "GroupAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] GroupAttributes
void System::Xml::Schema::XsdBuilder::_set_GroupAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_GroupAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "GroupAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] GroupRefAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_GroupRefAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_GroupRefAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "GroupRefAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] GroupRefAttributes
void System::Xml::Schema::XsdBuilder::_set_GroupRefAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_GroupRefAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "GroupRefAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] ParticleAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_ParticleAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_ParticleAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "ParticleAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] ParticleAttributes
void System::Xml::Schema::XsdBuilder::_set_ParticleAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_ParticleAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "ParticleAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] AnyAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_AnyAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_AnyAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "AnyAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] AnyAttributes
void System::Xml::Schema::XsdBuilder::_set_AnyAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_AnyAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "AnyAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] IdentityConstraintAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_IdentityConstraintAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_IdentityConstraintAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "IdentityConstraintAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] IdentityConstraintAttributes
void System::Xml::Schema::XsdBuilder::_set_IdentityConstraintAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_IdentityConstraintAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "IdentityConstraintAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] SelectorAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_SelectorAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_SelectorAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "SelectorAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] SelectorAttributes
void System::Xml::Schema::XsdBuilder::_set_SelectorAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_SelectorAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "SelectorAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] FieldAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_FieldAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_FieldAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "FieldAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] FieldAttributes
void System::Xml::Schema::XsdBuilder::_set_FieldAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_FieldAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "FieldAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] NotationAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_NotationAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_NotationAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "NotationAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] NotationAttributes
void System::Xml::Schema::XsdBuilder::_set_NotationAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_NotationAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "NotationAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] IncludeAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_IncludeAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_IncludeAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "IncludeAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] IncludeAttributes
void System::Xml::Schema::XsdBuilder::_set_IncludeAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_IncludeAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "IncludeAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] ImportAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_ImportAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_ImportAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "ImportAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] ImportAttributes
void System::Xml::Schema::XsdBuilder::_set_ImportAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_ImportAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "ImportAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] FacetAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_FacetAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_FacetAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "FacetAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] FacetAttributes
void System::Xml::Schema::XsdBuilder::_set_FacetAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_FacetAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "FacetAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] AnyAttributeAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_AnyAttributeAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_AnyAttributeAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "AnyAttributeAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] AnyAttributeAttributes
void System::Xml::Schema::XsdBuilder::_set_AnyAttributeAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_AnyAttributeAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "AnyAttributeAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] DocumentationAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_DocumentationAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_DocumentationAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "DocumentationAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] DocumentationAttributes
void System::Xml::Schema::XsdBuilder::_set_DocumentationAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_DocumentationAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "DocumentationAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] AppinfoAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_AppinfoAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_AppinfoAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "AppinfoAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] AppinfoAttributes
void System::Xml::Schema::XsdBuilder::_set_AppinfoAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_AppinfoAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "AppinfoAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] RedefineAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_RedefineAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_RedefineAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "RedefineAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] RedefineAttributes
void System::Xml::Schema::XsdBuilder::_set_RedefineAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_RedefineAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "RedefineAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] AnnotationAttributes
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> System::Xml::Schema::XsdBuilder::_get_AnnotationAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_AnnotationAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>>("System.Xml.Schema", "XsdBuilder", "AnnotationAttributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] AnnotationAttributes
void System::Xml::Schema::XsdBuilder::_set_AnnotationAttributes(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_AnnotationAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "AnnotationAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdEntry[] SchemaEntries
::ArrayW<::System::Xml::Schema::XsdBuilder::XsdEntry*> System::Xml::Schema::XsdBuilder::_get_SchemaEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_SchemaEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdEntry*>>("System.Xml.Schema", "XsdBuilder", "SchemaEntries"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdEntry[] SchemaEntries
void System::Xml::Schema::XsdBuilder::_set_SchemaEntries(::ArrayW<::System::Xml::Schema::XsdBuilder::XsdEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_SchemaEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "SchemaEntries", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] DerivationMethodValues
::ArrayW<int> System::Xml::Schema::XsdBuilder::_get_DerivationMethodValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_DerivationMethodValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Xml.Schema", "XsdBuilder", "DerivationMethodValues"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] DerivationMethodValues
void System::Xml::Schema::XsdBuilder::_set_DerivationMethodValues(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_DerivationMethodValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "DerivationMethodValues", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] DerivationMethodStrings
::ArrayW<::StringW> System::Xml::Schema::XsdBuilder::_get_DerivationMethodStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_DerivationMethodStrings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Xml.Schema", "XsdBuilder", "DerivationMethodStrings"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] DerivationMethodStrings
void System::Xml::Schema::XsdBuilder::_set_DerivationMethodStrings(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_DerivationMethodStrings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "DerivationMethodStrings", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] FormStringValues
::ArrayW<::StringW> System::Xml::Schema::XsdBuilder::_get_FormStringValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_FormStringValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Xml.Schema", "XsdBuilder", "FormStringValues"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] FormStringValues
void System::Xml::Schema::XsdBuilder::_set_FormStringValues(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_FormStringValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "FormStringValues", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] UseStringValues
::ArrayW<::StringW> System::Xml::Schema::XsdBuilder::_get_UseStringValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_UseStringValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Xml.Schema", "XsdBuilder", "UseStringValues"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] UseStringValues
void System::Xml::Schema::XsdBuilder::_set_UseStringValues(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_UseStringValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "UseStringValues", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] ProcessContentsStringValues
::ArrayW<::StringW> System::Xml::Schema::XsdBuilder::_get_ProcessContentsStringValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_get_ProcessContentsStringValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Xml.Schema", "XsdBuilder", "ProcessContentsStringValues"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] ProcessContentsStringValues
void System::Xml::Schema::XsdBuilder::_set_ProcessContentsStringValues(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::_set_ProcessContentsStringValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder", "ProcessContentsStringValues", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlReader reader
[[deprecated("Use field access instead!")]] ::System::Xml::XmlReader*& System::Xml::Schema::XsdBuilder::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::Xml::XmlReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.PositionInfo positionInfo
[[deprecated("Use field access instead!")]] ::System::Xml::PositionInfo*& System::Xml::Schema::XsdBuilder::dyn_positionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_positionInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionInfo"))->offset;
  return *reinterpret_cast<::System::Xml::PositionInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdEntry currentEntry
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XsdBuilder::XsdEntry*& System::Xml::Schema::XsdBuilder::dyn_currentEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_currentEntry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentEntry"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XsdBuilder::XsdEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdEntry nextEntry
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XsdBuilder::XsdEntry*& System::Xml::Schema::XsdBuilder::dyn_nextEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_nextEntry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextEntry"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XsdBuilder::XsdEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasChild
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XsdBuilder::dyn_hasChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_hasChild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasChild"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.HWStack stateHistory
[[deprecated("Use field access instead!")]] ::System::Xml::HWStack*& System::Xml::Schema::XsdBuilder::dyn_stateHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_stateHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stateHistory"))->offset;
  return *reinterpret_cast<::System::Xml::HWStack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Stack containerStack
[[deprecated("Use field access instead!")]] ::System::Collections::Stack*& System::Xml::Schema::XsdBuilder::dyn_containerStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_containerStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "containerStack"))->offset;
  return *reinterpret_cast<::System::Collections::Stack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& System::Xml::Schema::XsdBuilder::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaNames schemaNames
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaNames*& System::Xml::Schema::XsdBuilder::dyn_schemaNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_schemaNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaNames"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaNames**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNamespaceManager namespaceManager
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNamespaceManager*& System::Xml::Schema::XsdBuilder::dyn_namespaceManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_namespaceManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceManager"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNamespaceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean canIncludeImport
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XsdBuilder::dyn_canIncludeImport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_canIncludeImport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canIncludeImport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchema schema
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchema*& System::Xml::Schema::XsdBuilder::dyn_schema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_schema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schema"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchema**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObject xso
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaObject*& System::Xml::Schema::XsdBuilder::dyn_xso() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_xso");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xso"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaElement element
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaElement*& System::Xml::Schema::XsdBuilder::dyn_element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_element");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "element"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaAny anyElement
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaAny*& System::Xml::Schema::XsdBuilder::dyn_anyElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_anyElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anyElement"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaAny**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaAttribute attribute
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaAttribute*& System::Xml::Schema::XsdBuilder::dyn_attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_attribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attribute"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaAnyAttribute anyAttribute
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaAnyAttribute*& System::Xml::Schema::XsdBuilder::dyn_anyAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_anyAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anyAttribute"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaAnyAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaComplexType complexType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaComplexType*& System::Xml::Schema::XsdBuilder::dyn_complexType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_complexType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "complexType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaComplexType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType simpleType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleType*& System::Xml::Schema::XsdBuilder::dyn_simpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_simpleType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simpleType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaComplexContent complexContent
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaComplexContent*& System::Xml::Schema::XsdBuilder::dyn_complexContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_complexContent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "complexContent"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaComplexContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaComplexContentExtension complexContentExtension
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaComplexContentExtension*& System::Xml::Schema::XsdBuilder::dyn_complexContentExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_complexContentExtension");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "complexContentExtension"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaComplexContentExtension**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaComplexContentRestriction complexContentRestriction
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaComplexContentRestriction*& System::Xml::Schema::XsdBuilder::dyn_complexContentRestriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_complexContentRestriction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "complexContentRestriction"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaComplexContentRestriction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleContent simpleContent
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleContent*& System::Xml::Schema::XsdBuilder::dyn_simpleContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_simpleContent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simpleContent"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleContentExtension simpleContentExtension
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleContentExtension*& System::Xml::Schema::XsdBuilder::dyn_simpleContentExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_simpleContentExtension");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simpleContentExtension"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleContentExtension**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleContentRestriction simpleContentRestriction
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleContentRestriction*& System::Xml::Schema::XsdBuilder::dyn_simpleContentRestriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_simpleContentRestriction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simpleContentRestriction"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleContentRestriction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleTypeUnion simpleTypeUnion
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleTypeUnion*& System::Xml::Schema::XsdBuilder::dyn_simpleTypeUnion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_simpleTypeUnion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simpleTypeUnion"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleTypeUnion**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleTypeList simpleTypeList
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleTypeList*& System::Xml::Schema::XsdBuilder::dyn_simpleTypeList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_simpleTypeList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simpleTypeList"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleTypeList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleTypeRestriction simpleTypeRestriction
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleTypeRestriction*& System::Xml::Schema::XsdBuilder::dyn_simpleTypeRestriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_simpleTypeRestriction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simpleTypeRestriction"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleTypeRestriction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaGroup group
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaGroup*& System::Xml::Schema::XsdBuilder::dyn_group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "group"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaGroupRef groupRef
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaGroupRef*& System::Xml::Schema::XsdBuilder::dyn_groupRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_groupRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groupRef"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaGroupRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaAll all
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaAll*& System::Xml::Schema::XsdBuilder::dyn_all() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_all");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "all"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaAll**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaChoice choice
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaChoice*& System::Xml::Schema::XsdBuilder::dyn_choice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_choice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "choice"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaChoice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSequence sequence
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSequence*& System::Xml::Schema::XsdBuilder::dyn_sequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_sequence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sequence"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSequence**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaParticle particle
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaParticle*& System::Xml::Schema::XsdBuilder::dyn_particle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_particle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particle"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaParticle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaAttributeGroup attributeGroup
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaAttributeGroup*& System::Xml::Schema::XsdBuilder::dyn_attributeGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_attributeGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeGroup"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaAttributeGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaAttributeGroupRef attributeGroupRef
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaAttributeGroupRef*& System::Xml::Schema::XsdBuilder::dyn_attributeGroupRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_attributeGroupRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeGroupRef"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaAttributeGroupRef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaNotation notation
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaNotation*& System::Xml::Schema::XsdBuilder::dyn_notation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_notation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notation"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaNotation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaIdentityConstraint identityConstraint
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaIdentityConstraint*& System::Xml::Schema::XsdBuilder::dyn_identityConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_identityConstraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "identityConstraint"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaIdentityConstraint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaXPath xpath
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaXPath*& System::Xml::Schema::XsdBuilder::dyn_xpath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_xpath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xpath"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaXPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaInclude include
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaInclude*& System::Xml::Schema::XsdBuilder::dyn_include() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_include");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "include"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaInclude**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaImport import
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaImport*& System::Xml::Schema::XsdBuilder::dyn_import() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_import");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "import"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaImport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaAnnotation annotation
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaAnnotation*& System::Xml::Schema::XsdBuilder::dyn_annotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_annotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "annotation"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaAnnotation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaAppInfo appInfo
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaAppInfo*& System::Xml::Schema::XsdBuilder::dyn_appInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_appInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "appInfo"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaAppInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDocumentation documentation
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaDocumentation*& System::Xml::Schema::XsdBuilder::dyn_documentation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_documentation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "documentation"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDocumentation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaFacet facet
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaFacet*& System::Xml::Schema::XsdBuilder::dyn_facet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_facet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "facet"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaFacet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNode[] markup
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlNode*>& System::Xml::Schema::XsdBuilder::dyn_markup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_markup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "markup"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaRedefine redefine
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaRedefine*& System::Xml::Schema::XsdBuilder::dyn_redefine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_redefine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "redefine"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaRedefine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ValidationEventHandler validationEventHandler
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::ValidationEventHandler*& System::Xml::Schema::XsdBuilder::dyn_validationEventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_validationEventHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validationEventHandler"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::ValidationEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList unhandledAttributes
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Xml::Schema::XsdBuilder::dyn_unhandledAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_unhandledAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unhandledAttributes"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable namespaces
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::XsdBuilder::dyn_namespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::dyn_namespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaces"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.get_CurrentElement
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::XsdBuilder::get_CurrentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::get_CurrentElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaNames::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.get_ParentElement
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::XsdBuilder::get_ParentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::get_ParentElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaNames::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.get_ParentContainer
::System::Xml::Schema::XmlSchemaObject* System::Xml::Schema::XsdBuilder::get_ParentContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::get_ParentContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder..cctor
void System::Xml::Schema::XsdBuilder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.Push
void System::Xml::Schema::XsdBuilder::Push() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::Push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.Pop
void System::Xml::Schema::XsdBuilder::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.GetContainer
::System::Xml::Schema::XmlSchemaObject* System::Xml::Schema::XsdBuilder::GetContainer(::System::Xml::Schema::XsdBuilder::State state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::GetContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaObject*, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.SetContainer
void System::Xml::Schema::XsdBuilder::SetContainer(::System::Xml::Schema::XsdBuilder::State state, ::Il2CppObject* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::SetContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, container);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildAnnotated_Id
void System::Xml::Schema::XsdBuilder::BuildAnnotated_Id(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildAnnotated_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildAnnotated_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildSchema_AttributeFormDefault
void System::Xml::Schema::XsdBuilder::BuildSchema_AttributeFormDefault(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildSchema_AttributeFormDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildSchema_AttributeFormDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildSchema_ElementFormDefault
void System::Xml::Schema::XsdBuilder::BuildSchema_ElementFormDefault(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildSchema_ElementFormDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildSchema_ElementFormDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildSchema_TargetNamespace
void System::Xml::Schema::XsdBuilder::BuildSchema_TargetNamespace(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildSchema_TargetNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildSchema_TargetNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildSchema_Version
void System::Xml::Schema::XsdBuilder::BuildSchema_Version(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildSchema_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildSchema_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildSchema_FinalDefault
void System::Xml::Schema::XsdBuilder::BuildSchema_FinalDefault(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildSchema_FinalDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildSchema_FinalDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildSchema_BlockDefault
void System::Xml::Schema::XsdBuilder::BuildSchema_BlockDefault(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildSchema_BlockDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildSchema_BlockDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitSchema
void System::Xml::Schema::XsdBuilder::InitSchema(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitInclude
void System::Xml::Schema::XsdBuilder::InitInclude(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitInclude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitInclude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildInclude_SchemaLocation
void System::Xml::Schema::XsdBuilder::BuildInclude_SchemaLocation(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildInclude_SchemaLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildInclude_SchemaLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitImport
void System::Xml::Schema::XsdBuilder::InitImport(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitImport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitImport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildImport_Namespace
void System::Xml::Schema::XsdBuilder::BuildImport_Namespace(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildImport_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildImport_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildImport_SchemaLocation
void System::Xml::Schema::XsdBuilder::BuildImport_SchemaLocation(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildImport_SchemaLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildImport_SchemaLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitRedefine
void System::Xml::Schema::XsdBuilder::InitRedefine(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitRedefine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitRedefine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildRedefine_SchemaLocation
void System::Xml::Schema::XsdBuilder::BuildRedefine_SchemaLocation(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildRedefine_SchemaLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildRedefine_SchemaLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.EndRedefine
void System::Xml::Schema::XsdBuilder::EndRedefine(::System::Xml::Schema::XsdBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::EndRedefine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "EndRedefine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitAttribute
void System::Xml::Schema::XsdBuilder::InitAttribute(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildAttribute_Default
void System::Xml::Schema::XsdBuilder::BuildAttribute_Default(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildAttribute_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildAttribute_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildAttribute_Fixed
void System::Xml::Schema::XsdBuilder::BuildAttribute_Fixed(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildAttribute_Fixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildAttribute_Fixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildAttribute_Form
void System::Xml::Schema::XsdBuilder::BuildAttribute_Form(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildAttribute_Form");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildAttribute_Form", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildAttribute_Use
void System::Xml::Schema::XsdBuilder::BuildAttribute_Use(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildAttribute_Use");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildAttribute_Use", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildAttribute_Ref
void System::Xml::Schema::XsdBuilder::BuildAttribute_Ref(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildAttribute_Ref");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildAttribute_Ref", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildAttribute_Name
void System::Xml::Schema::XsdBuilder::BuildAttribute_Name(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildAttribute_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildAttribute_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildAttribute_Type
void System::Xml::Schema::XsdBuilder::BuildAttribute_Type(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildAttribute_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildAttribute_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitElement
void System::Xml::Schema::XsdBuilder::InitElement(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildElement_Abstract
void System::Xml::Schema::XsdBuilder::BuildElement_Abstract(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildElement_Abstract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildElement_Abstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildElement_Block
void System::Xml::Schema::XsdBuilder::BuildElement_Block(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildElement_Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildElement_Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildElement_Default
void System::Xml::Schema::XsdBuilder::BuildElement_Default(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildElement_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildElement_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildElement_Form
void System::Xml::Schema::XsdBuilder::BuildElement_Form(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildElement_Form");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildElement_Form", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildElement_SubstitutionGroup
void System::Xml::Schema::XsdBuilder::BuildElement_SubstitutionGroup(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildElement_SubstitutionGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildElement_SubstitutionGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildElement_Final
void System::Xml::Schema::XsdBuilder::BuildElement_Final(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildElement_Final");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildElement_Final", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildElement_Fixed
void System::Xml::Schema::XsdBuilder::BuildElement_Fixed(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildElement_Fixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildElement_Fixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildElement_MaxOccurs
void System::Xml::Schema::XsdBuilder::BuildElement_MaxOccurs(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildElement_MaxOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildElement_MaxOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildElement_MinOccurs
void System::Xml::Schema::XsdBuilder::BuildElement_MinOccurs(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildElement_MinOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildElement_MinOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildElement_Name
void System::Xml::Schema::XsdBuilder::BuildElement_Name(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildElement_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildElement_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildElement_Nillable
void System::Xml::Schema::XsdBuilder::BuildElement_Nillable(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildElement_Nillable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildElement_Nillable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildElement_Ref
void System::Xml::Schema::XsdBuilder::BuildElement_Ref(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildElement_Ref");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildElement_Ref", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildElement_Type
void System::Xml::Schema::XsdBuilder::BuildElement_Type(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildElement_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildElement_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitSimpleType
void System::Xml::Schema::XsdBuilder::InitSimpleType(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildSimpleType_Name
void System::Xml::Schema::XsdBuilder::BuildSimpleType_Name(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildSimpleType_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildSimpleType_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildSimpleType_Final
void System::Xml::Schema::XsdBuilder::BuildSimpleType_Final(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildSimpleType_Final");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildSimpleType_Final", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitSimpleTypeUnion
void System::Xml::Schema::XsdBuilder::InitSimpleTypeUnion(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitSimpleTypeUnion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitSimpleTypeUnion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildSimpleTypeUnion_MemberTypes
void System::Xml::Schema::XsdBuilder::BuildSimpleTypeUnion_MemberTypes(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildSimpleTypeUnion_MemberTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildSimpleTypeUnion_MemberTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitSimpleTypeList
void System::Xml::Schema::XsdBuilder::InitSimpleTypeList(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitSimpleTypeList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitSimpleTypeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildSimpleTypeList_ItemType
void System::Xml::Schema::XsdBuilder::BuildSimpleTypeList_ItemType(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildSimpleTypeList_ItemType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildSimpleTypeList_ItemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitSimpleTypeRestriction
void System::Xml::Schema::XsdBuilder::InitSimpleTypeRestriction(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitSimpleTypeRestriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitSimpleTypeRestriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildSimpleTypeRestriction_Base
void System::Xml::Schema::XsdBuilder::BuildSimpleTypeRestriction_Base(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildSimpleTypeRestriction_Base");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildSimpleTypeRestriction_Base", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitComplexType
void System::Xml::Schema::XsdBuilder::InitComplexType(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitComplexType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitComplexType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildComplexType_Abstract
void System::Xml::Schema::XsdBuilder::BuildComplexType_Abstract(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildComplexType_Abstract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildComplexType_Abstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildComplexType_Block
void System::Xml::Schema::XsdBuilder::BuildComplexType_Block(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildComplexType_Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildComplexType_Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildComplexType_Final
void System::Xml::Schema::XsdBuilder::BuildComplexType_Final(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildComplexType_Final");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildComplexType_Final", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildComplexType_Mixed
void System::Xml::Schema::XsdBuilder::BuildComplexType_Mixed(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildComplexType_Mixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildComplexType_Mixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildComplexType_Name
void System::Xml::Schema::XsdBuilder::BuildComplexType_Name(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildComplexType_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildComplexType_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitComplexContent
void System::Xml::Schema::XsdBuilder::InitComplexContent(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitComplexContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitComplexContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildComplexContent_Mixed
void System::Xml::Schema::XsdBuilder::BuildComplexContent_Mixed(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildComplexContent_Mixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildComplexContent_Mixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitComplexContentExtension
void System::Xml::Schema::XsdBuilder::InitComplexContentExtension(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitComplexContentExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitComplexContentExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildComplexContentExtension_Base
void System::Xml::Schema::XsdBuilder::BuildComplexContentExtension_Base(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildComplexContentExtension_Base");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildComplexContentExtension_Base", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitComplexContentRestriction
void System::Xml::Schema::XsdBuilder::InitComplexContentRestriction(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitComplexContentRestriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitComplexContentRestriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildComplexContentRestriction_Base
void System::Xml::Schema::XsdBuilder::BuildComplexContentRestriction_Base(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildComplexContentRestriction_Base");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildComplexContentRestriction_Base", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitSimpleContent
void System::Xml::Schema::XsdBuilder::InitSimpleContent(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitSimpleContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitSimpleContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitSimpleContentExtension
void System::Xml::Schema::XsdBuilder::InitSimpleContentExtension(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitSimpleContentExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitSimpleContentExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildSimpleContentExtension_Base
void System::Xml::Schema::XsdBuilder::BuildSimpleContentExtension_Base(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildSimpleContentExtension_Base");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildSimpleContentExtension_Base", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitSimpleContentRestriction
void System::Xml::Schema::XsdBuilder::InitSimpleContentRestriction(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitSimpleContentRestriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitSimpleContentRestriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildSimpleContentRestriction_Base
void System::Xml::Schema::XsdBuilder::BuildSimpleContentRestriction_Base(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildSimpleContentRestriction_Base");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildSimpleContentRestriction_Base", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitAttributeGroup
void System::Xml::Schema::XsdBuilder::InitAttributeGroup(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitAttributeGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitAttributeGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildAttributeGroup_Name
void System::Xml::Schema::XsdBuilder::BuildAttributeGroup_Name(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildAttributeGroup_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildAttributeGroup_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitAttributeGroupRef
void System::Xml::Schema::XsdBuilder::InitAttributeGroupRef(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitAttributeGroupRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitAttributeGroupRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildAttributeGroupRef_Ref
void System::Xml::Schema::XsdBuilder::BuildAttributeGroupRef_Ref(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildAttributeGroupRef_Ref");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildAttributeGroupRef_Ref", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitAnyAttribute
void System::Xml::Schema::XsdBuilder::InitAnyAttribute(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitAnyAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitAnyAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildAnyAttribute_Namespace
void System::Xml::Schema::XsdBuilder::BuildAnyAttribute_Namespace(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildAnyAttribute_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildAnyAttribute_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildAnyAttribute_ProcessContents
void System::Xml::Schema::XsdBuilder::BuildAnyAttribute_ProcessContents(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildAnyAttribute_ProcessContents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildAnyAttribute_ProcessContents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitGroup
void System::Xml::Schema::XsdBuilder::InitGroup(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildGroup_Name
void System::Xml::Schema::XsdBuilder::BuildGroup_Name(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildGroup_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildGroup_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitGroupRef
void System::Xml::Schema::XsdBuilder::InitGroupRef(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitGroupRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitGroupRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildParticle_MaxOccurs
void System::Xml::Schema::XsdBuilder::BuildParticle_MaxOccurs(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildParticle_MaxOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildParticle_MaxOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildParticle_MinOccurs
void System::Xml::Schema::XsdBuilder::BuildParticle_MinOccurs(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildParticle_MinOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildParticle_MinOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildGroupRef_Ref
void System::Xml::Schema::XsdBuilder::BuildGroupRef_Ref(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildGroupRef_Ref");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildGroupRef_Ref", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitAll
void System::Xml::Schema::XsdBuilder::InitAll(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitChoice
void System::Xml::Schema::XsdBuilder::InitChoice(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitChoice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitChoice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitSequence
void System::Xml::Schema::XsdBuilder::InitSequence(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitSequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitAny
void System::Xml::Schema::XsdBuilder::InitAny(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildAny_Namespace
void System::Xml::Schema::XsdBuilder::BuildAny_Namespace(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildAny_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildAny_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildAny_ProcessContents
void System::Xml::Schema::XsdBuilder::BuildAny_ProcessContents(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildAny_ProcessContents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildAny_ProcessContents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitNotation
void System::Xml::Schema::XsdBuilder::InitNotation(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitNotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitNotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildNotation_Name
void System::Xml::Schema::XsdBuilder::BuildNotation_Name(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildNotation_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildNotation_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildNotation_Public
void System::Xml::Schema::XsdBuilder::BuildNotation_Public(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildNotation_Public");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildNotation_Public", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildNotation_System
void System::Xml::Schema::XsdBuilder::BuildNotation_System(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildNotation_System");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildNotation_System", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitFacet
void System::Xml::Schema::XsdBuilder::InitFacet(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitFacet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildFacet_Fixed
void System::Xml::Schema::XsdBuilder::BuildFacet_Fixed(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildFacet_Fixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildFacet_Fixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildFacet_Value
void System::Xml::Schema::XsdBuilder::BuildFacet_Value(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildFacet_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildFacet_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitIdentityConstraint
void System::Xml::Schema::XsdBuilder::InitIdentityConstraint(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitIdentityConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitIdentityConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildIdentityConstraint_Name
void System::Xml::Schema::XsdBuilder::BuildIdentityConstraint_Name(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildIdentityConstraint_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildIdentityConstraint_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildIdentityConstraint_Refer
void System::Xml::Schema::XsdBuilder::BuildIdentityConstraint_Refer(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildIdentityConstraint_Refer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildIdentityConstraint_Refer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitSelector
void System::Xml::Schema::XsdBuilder::InitSelector(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildSelector_XPath
void System::Xml::Schema::XsdBuilder::BuildSelector_XPath(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildSelector_XPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildSelector_XPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitField
void System::Xml::Schema::XsdBuilder::InitField(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildField_XPath
void System::Xml::Schema::XsdBuilder::BuildField_XPath(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildField_XPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildField_XPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitAnnotation
void System::Xml::Schema::XsdBuilder::InitAnnotation(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitAnnotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitAnnotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitAppinfo
void System::Xml::Schema::XsdBuilder::InitAppinfo(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitAppinfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitAppinfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildAppinfo_Source
void System::Xml::Schema::XsdBuilder::BuildAppinfo_Source(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildAppinfo_Source");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildAppinfo_Source", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.EndAppinfo
void System::Xml::Schema::XsdBuilder::EndAppinfo(::System::Xml::Schema::XsdBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::EndAppinfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "EndAppinfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.InitDocumentation
void System::Xml::Schema::XsdBuilder::InitDocumentation(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::InitDocumentation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "InitDocumentation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildDocumentation_Source
void System::Xml::Schema::XsdBuilder::BuildDocumentation_Source(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildDocumentation_Source");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildDocumentation_Source", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.BuildDocumentation_XmlLang
void System::Xml::Schema::XsdBuilder::BuildDocumentation_XmlLang(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuildDocumentation_XmlLang");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "BuildDocumentation_XmlLang", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.EndDocumentation
void System::Xml::Schema::XsdBuilder::EndDocumentation(::System::Xml::Schema::XsdBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::EndDocumentation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "EndDocumentation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.AddAttribute
void System::Xml::Schema::XsdBuilder::AddAttribute(::System::Xml::Schema::XmlSchemaObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::AddAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.AddParticle
void System::Xml::Schema::XsdBuilder::AddParticle(::System::Xml::Schema::XmlSchemaParticle* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::AddParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, particle);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.GetNextState
bool System::Xml::Schema::XsdBuilder::GetNextState(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::GetNextState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.IsSkipableElement
bool System::Xml::Schema::XsdBuilder::IsSkipableElement(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::IsSkipableElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSkipableElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.SetMinOccurs
void System::Xml::Schema::XsdBuilder::SetMinOccurs(::System::Xml::Schema::XmlSchemaParticle* particle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::SetMinOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMinOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, particle, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.SetMaxOccurs
void System::Xml::Schema::XsdBuilder::SetMaxOccurs(::System::Xml::Schema::XmlSchemaParticle* particle, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::SetMaxOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaxOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, particle, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.ParseBoolean
bool System::Xml::Schema::XsdBuilder::ParseBoolean(::StringW value, ::StringW attributeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::ParseBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(attributeName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, attributeName);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.ParseEnum
int System::Xml::Schema::XsdBuilder::ParseEnum(::StringW value, ::StringW attributeName, ::ArrayW<::StringW> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::ParseEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(attributeName), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, attributeName, values);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.ParseQName
::System::Xml::XmlQualifiedName* System::Xml::Schema::XsdBuilder::ParseQName(::StringW value, ::StringW attributeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::ParseQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(attributeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method, value, attributeName);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.ParseBlockFinalEnum
int System::Xml::Schema::XsdBuilder::ParseBlockFinalEnum(::StringW value, ::StringW attributeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::ParseBlockFinalEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseBlockFinalEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(attributeName)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value, attributeName);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.ParseUriReference
::StringW System::Xml::Schema::XsdBuilder::ParseUriReference(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::ParseUriReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdBuilder", "ParseUriReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.SendValidationEvent
void System::Xml::Schema::XsdBuilder::SendValidationEvent(::StringW code, ::StringW arg0, ::StringW arg1, ::StringW arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, arg0, arg1, arg2);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.SendValidationEvent
void System::Xml::Schema::XsdBuilder::SendValidationEvent(::StringW code, ::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, msg);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.SendValidationEvent
void System::Xml::Schema::XsdBuilder::SendValidationEvent(::StringW code, ::ArrayW<::StringW> args, ::System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, args, severity);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.SendValidationEvent
void System::Xml::Schema::XsdBuilder::SendValidationEvent(::System::Xml::Schema::XmlSchemaException* e, ::System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, severity);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.SendValidationEvent
void System::Xml::Schema::XsdBuilder::SendValidationEvent(::System::Xml::Schema::XmlSchemaException* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.RecordPosition
void System::Xml::Schema::XsdBuilder::RecordPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::RecordPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.ProcessElement
bool System::Xml::Schema::XsdBuilder::ProcessElement(::StringW prefix, ::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::ProcessElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, prefix, name, ns);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.ProcessAttribute
void System::Xml::Schema::XsdBuilder::ProcessAttribute(::StringW prefix, ::StringW name, ::StringW ns, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::ProcessAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, name, ns, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.IsContentParsed
bool System::Xml::Schema::XsdBuilder::IsContentParsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::IsContentParsed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.ProcessMarkup
void System::Xml::Schema::XsdBuilder::ProcessMarkup(::ArrayW<::System::Xml::XmlNode*> markup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::ProcessMarkup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, markup);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.ProcessCData
void System::Xml::Schema::XsdBuilder::ProcessCData(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::ProcessCData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.StartChildren
void System::Xml::Schema::XsdBuilder::StartChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::StartChildren");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder.EndChildren
void System::Xml::Schema::XsdBuilder::EndChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::EndChildren");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdBuilder/System.Xml.Schema.State
#include "System/Xml/Schema/XsdBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Root
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Root"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Root
void System::Xml::Schema::XsdBuilder::State::_set_Root(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Root", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Schema
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Schema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Schema");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Schema"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Schema
void System::Xml::Schema::XsdBuilder::State::_set_Schema(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Schema");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Schema", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Annotation
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Annotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Annotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Annotation"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Annotation
void System::Xml::Schema::XsdBuilder::State::_set_Annotation(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Annotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Annotation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Include
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Include() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Include");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Include"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Include
void System::Xml::Schema::XsdBuilder::State::_set_Include(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Include");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Include", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Import
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Import() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Import");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Import"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Import
void System::Xml::Schema::XsdBuilder::State::_set_Import(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Import");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Import", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Element
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Element");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Element"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Element
void System::Xml::Schema::XsdBuilder::State::_set_Element(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Element");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Element", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Attribute
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Attribute
void System::Xml::Schema::XsdBuilder::State::_set_Attribute(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State AttributeGroup
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_AttributeGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_AttributeGroup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "AttributeGroup"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State AttributeGroup
void System::Xml::Schema::XsdBuilder::State::_set_AttributeGroup(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_AttributeGroup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "AttributeGroup", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State AttributeGroupRef
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_AttributeGroupRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_AttributeGroupRef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "AttributeGroupRef"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State AttributeGroupRef
void System::Xml::Schema::XsdBuilder::State::_set_AttributeGroupRef(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_AttributeGroupRef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "AttributeGroupRef", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State AnyAttribute
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_AnyAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_AnyAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "AnyAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State AnyAttribute
void System::Xml::Schema::XsdBuilder::State::_set_AnyAttribute(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_AnyAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "AnyAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Group
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Group");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Group"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Group
void System::Xml::Schema::XsdBuilder::State::_set_Group(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Group");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Group", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State GroupRef
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_GroupRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_GroupRef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "GroupRef"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State GroupRef
void System::Xml::Schema::XsdBuilder::State::_set_GroupRef(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_GroupRef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "GroupRef", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State All
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State All
void System::Xml::Schema::XsdBuilder::State::_set_All(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "All", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Choice
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Choice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Choice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Choice"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Choice
void System::Xml::Schema::XsdBuilder::State::_set_Choice(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Choice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Choice", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Sequence
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Sequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Sequence");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Sequence"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Sequence
void System::Xml::Schema::XsdBuilder::State::_set_Sequence(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Sequence");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Sequence", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Any
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Any"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Any
void System::Xml::Schema::XsdBuilder::State::_set_Any(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Any", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Notation
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Notation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Notation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Notation"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Notation
void System::Xml::Schema::XsdBuilder::State::_set_Notation(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Notation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Notation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State SimpleType
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_SimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_SimpleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "SimpleType"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State SimpleType
void System::Xml::Schema::XsdBuilder::State::_set_SimpleType(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_SimpleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "SimpleType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State ComplexType
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_ComplexType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_ComplexType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "ComplexType"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State ComplexType
void System::Xml::Schema::XsdBuilder::State::_set_ComplexType(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_ComplexType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "ComplexType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State ComplexContent
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_ComplexContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_ComplexContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "ComplexContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State ComplexContent
void System::Xml::Schema::XsdBuilder::State::_set_ComplexContent(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_ComplexContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "ComplexContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State ComplexContentRestriction
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_ComplexContentRestriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_ComplexContentRestriction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "ComplexContentRestriction"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State ComplexContentRestriction
void System::Xml::Schema::XsdBuilder::State::_set_ComplexContentRestriction(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_ComplexContentRestriction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "ComplexContentRestriction", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State ComplexContentExtension
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_ComplexContentExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_ComplexContentExtension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "ComplexContentExtension"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State ComplexContentExtension
void System::Xml::Schema::XsdBuilder::State::_set_ComplexContentExtension(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_ComplexContentExtension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "ComplexContentExtension", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State SimpleContent
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_SimpleContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_SimpleContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "SimpleContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State SimpleContent
void System::Xml::Schema::XsdBuilder::State::_set_SimpleContent(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_SimpleContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "SimpleContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State SimpleContentExtension
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_SimpleContentExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_SimpleContentExtension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "SimpleContentExtension"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State SimpleContentExtension
void System::Xml::Schema::XsdBuilder::State::_set_SimpleContentExtension(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_SimpleContentExtension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "SimpleContentExtension", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State SimpleContentRestriction
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_SimpleContentRestriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_SimpleContentRestriction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "SimpleContentRestriction"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State SimpleContentRestriction
void System::Xml::Schema::XsdBuilder::State::_set_SimpleContentRestriction(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_SimpleContentRestriction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "SimpleContentRestriction", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State SimpleTypeUnion
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_SimpleTypeUnion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_SimpleTypeUnion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "SimpleTypeUnion"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State SimpleTypeUnion
void System::Xml::Schema::XsdBuilder::State::_set_SimpleTypeUnion(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_SimpleTypeUnion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "SimpleTypeUnion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State SimpleTypeList
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_SimpleTypeList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_SimpleTypeList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "SimpleTypeList"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State SimpleTypeList
void System::Xml::Schema::XsdBuilder::State::_set_SimpleTypeList(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_SimpleTypeList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "SimpleTypeList", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State SimpleTypeRestriction
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_SimpleTypeRestriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_SimpleTypeRestriction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "SimpleTypeRestriction"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State SimpleTypeRestriction
void System::Xml::Schema::XsdBuilder::State::_set_SimpleTypeRestriction(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_SimpleTypeRestriction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "SimpleTypeRestriction", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Unique
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Unique() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Unique");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Unique"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Unique
void System::Xml::Schema::XsdBuilder::State::_set_Unique(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Unique");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Unique", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Key
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Key");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Key"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Key
void System::Xml::Schema::XsdBuilder::State::_set_Key(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Key");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Key", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State KeyRef
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_KeyRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_KeyRef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "KeyRef"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State KeyRef
void System::Xml::Schema::XsdBuilder::State::_set_KeyRef(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_KeyRef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "KeyRef", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Selector
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Selector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Selector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Selector"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Selector
void System::Xml::Schema::XsdBuilder::State::_set_Selector(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Selector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Selector", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Field
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Field() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Field");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Field"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Field
void System::Xml::Schema::XsdBuilder::State::_set_Field(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Field");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Field", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State MinExclusive
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_MinExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_MinExclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "MinExclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State MinExclusive
void System::Xml::Schema::XsdBuilder::State::_set_MinExclusive(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_MinExclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "MinExclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State MinInclusive
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_MinInclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_MinInclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "MinInclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State MinInclusive
void System::Xml::Schema::XsdBuilder::State::_set_MinInclusive(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_MinInclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "MinInclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State MaxExclusive
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_MaxExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_MaxExclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "MaxExclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State MaxExclusive
void System::Xml::Schema::XsdBuilder::State::_set_MaxExclusive(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_MaxExclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "MaxExclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State MaxInclusive
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_MaxInclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_MaxInclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "MaxInclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State MaxInclusive
void System::Xml::Schema::XsdBuilder::State::_set_MaxInclusive(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_MaxInclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "MaxInclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State TotalDigits
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_TotalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_TotalDigits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "TotalDigits"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State TotalDigits
void System::Xml::Schema::XsdBuilder::State::_set_TotalDigits(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_TotalDigits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "TotalDigits", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State FractionDigits
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_FractionDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_FractionDigits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "FractionDigits"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State FractionDigits
void System::Xml::Schema::XsdBuilder::State::_set_FractionDigits(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_FractionDigits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "FractionDigits", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Length
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Length");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Length"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Length
void System::Xml::Schema::XsdBuilder::State::_set_Length(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Length");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Length", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State MinLength
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_MinLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_MinLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "MinLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State MinLength
void System::Xml::Schema::XsdBuilder::State::_set_MinLength(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_MinLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "MinLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State MaxLength
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_MaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_MaxLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "MaxLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State MaxLength
void System::Xml::Schema::XsdBuilder::State::_set_MaxLength(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_MaxLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "MaxLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Enumeration
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Enumeration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Enumeration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Enumeration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Enumeration
void System::Xml::Schema::XsdBuilder::State::_set_Enumeration(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Enumeration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Enumeration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Pattern
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Pattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Pattern"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Pattern
void System::Xml::Schema::XsdBuilder::State::_set_Pattern(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Pattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Pattern", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State WhiteSpace
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_WhiteSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_WhiteSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "WhiteSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State WhiteSpace
void System::Xml::Schema::XsdBuilder::State::_set_WhiteSpace(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_WhiteSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "WhiteSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State AppInfo
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_AppInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_AppInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "AppInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State AppInfo
void System::Xml::Schema::XsdBuilder::State::_set_AppInfo(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_AppInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "AppInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Documentation
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Documentation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Documentation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Documentation"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Documentation
void System::Xml::Schema::XsdBuilder::State::_set_Documentation(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Documentation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Documentation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Redefine
::System::Xml::Schema::XsdBuilder::State System::Xml::Schema::XsdBuilder::State::_get_Redefine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_get_Redefine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdBuilder::State>("System.Xml.Schema", "XsdBuilder/State", "Redefine"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State Redefine
void System::Xml::Schema::XsdBuilder::State::_set_Redefine(::System::Xml::Schema::XsdBuilder::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::_set_Redefine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdBuilder/State", "Redefine", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdBuilder::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdBuildFunction
#include "System/Xml/Schema/XsdBuilder_XsdBuildFunction.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdBuildFunction.Invoke
void System::Xml::Schema::XsdBuilder::XsdBuildFunction::Invoke(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::XsdBuildFunction::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XsdBuilder::XsdBuildFunction*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdBuildFunction.BeginInvoke
::System::IAsyncResult* System::Xml::Schema::XsdBuilder::XsdBuildFunction::BeginInvoke(::System::Xml::Schema::XsdBuilder* builder, ::StringW value, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::XsdBuildFunction::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XsdBuilder::XsdBuildFunction*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, builder, value, callback, object);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdBuildFunction.EndInvoke
void System::Xml::Schema::XsdBuilder::XsdBuildFunction::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::XsdBuildFunction::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XsdBuilder::XsdBuildFunction*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdInitFunction
#include "System/Xml/Schema/XsdBuilder_XsdInitFunction.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdInitFunction.Invoke
void System::Xml::Schema::XsdBuilder::XsdInitFunction::Invoke(::System::Xml::Schema::XsdBuilder* builder, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::XsdInitFunction::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XsdBuilder::XsdInitFunction*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, builder, value);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdInitFunction.BeginInvoke
::System::IAsyncResult* System::Xml::Schema::XsdBuilder::XsdInitFunction::BeginInvoke(::System::Xml::Schema::XsdBuilder* builder, ::StringW value, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::XsdInitFunction::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XsdBuilder::XsdInitFunction*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, builder, value, callback, object);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdInitFunction.EndInvoke
void System::Xml::Schema::XsdBuilder::XsdInitFunction::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::XsdInitFunction::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XsdBuilder::XsdInitFunction*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdEndChildFunction
#include "System/Xml/Schema/XsdBuilder_XsdEndChildFunction.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdEndChildFunction.Invoke
void System::Xml::Schema::XsdBuilder::XsdEndChildFunction::Invoke(::System::Xml::Schema::XsdBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::XsdEndChildFunction::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XsdBuilder::XsdEndChildFunction*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, builder);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdEndChildFunction.BeginInvoke
::System::IAsyncResult* System::Xml::Schema::XsdBuilder::XsdEndChildFunction::BeginInvoke(::System::Xml::Schema::XsdBuilder* builder, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::XsdEndChildFunction::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XsdBuilder::XsdEndChildFunction*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, builder, callback, object);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdEndChildFunction.EndInvoke
void System::Xml::Schema::XsdBuilder::XsdEndChildFunction::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::XsdEndChildFunction::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XsdBuilder::XsdEndChildFunction*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry
#include "System/Xml/Schema/XsdBuilder_XsdAttributeEntry.hpp"
// Including type: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdBuildFunction
#include "System/Xml/Schema/XsdBuilder_XsdBuildFunction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token Attribute
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaNames::Token& System::Xml::Schema::XsdBuilder::XsdAttributeEntry::dyn_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::XsdAttributeEntry::dyn_Attribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Attribute"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaNames::Token*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdBuildFunction BuildFunc
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XsdBuilder::XsdBuildFunction*& System::Xml::Schema::XsdBuilder::XsdAttributeEntry::dyn_BuildFunc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::XsdAttributeEntry::dyn_BuildFunc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildFunc"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XsdBuilder::XsdBuildFunction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdEntry
#include "System/Xml/Schema/XsdBuilder_XsdEntry.hpp"
// Including type: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry
#include "System/Xml/Schema/XsdBuilder_XsdAttributeEntry.hpp"
// Including type: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdInitFunction
#include "System/Xml/Schema/XsdBuilder_XsdInitFunction.hpp"
// Including type: System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdEndChildFunction
#include "System/Xml/Schema/XsdBuilder_XsdEndChildFunction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token Name
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaNames::Token& System::Xml::Schema::XsdBuilder::XsdEntry::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::XsdEntry::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaNames::Token*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State CurrentState
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XsdBuilder::State& System::Xml::Schema::XsdBuilder::XsdEntry::dyn_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::XsdEntry::dyn_CurrentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentState"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XsdBuilder::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.XsdBuilder/System.Xml.Schema.State[] NextStates
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Schema::XsdBuilder::State>& System::Xml::Schema::XsdBuilder::XsdEntry::dyn_NextStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::XsdEntry::dyn_NextStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NextStates"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::XsdBuilder::State>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdAttributeEntry[] Attributes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>& System::Xml::Schema::XsdBuilder::XsdEntry::dyn_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::XsdEntry::dyn_Attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Attributes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::XsdBuilder::XsdAttributeEntry*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdInitFunction InitFunc
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XsdBuilder::XsdInitFunction*& System::Xml::Schema::XsdBuilder::XsdEntry::dyn_InitFunc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::XsdEntry::dyn_InitFunc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InitFunc"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XsdBuilder::XsdInitFunction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.XsdBuilder/System.Xml.Schema.XsdEndChildFunction EndChildFunc
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XsdBuilder::XsdEndChildFunction*& System::Xml::Schema::XsdBuilder::XsdEntry::dyn_EndChildFunc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::XsdEntry::dyn_EndChildFunc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EndChildFunc"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XsdBuilder::XsdEndChildFunction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ParseContent
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XsdBuilder::XsdEntry::dyn_ParseContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::XsdEntry::dyn_ParseContent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ParseContent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdBuilder/System.Xml.Schema.BuilderNamespaceManager
#include "System/Xml/Schema/XsdBuilder_BuilderNamespaceManager.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNamespaceManager nsMgr
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNamespaceManager*& System::Xml::Schema::XsdBuilder::BuilderNamespaceManager::dyn_nsMgr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuilderNamespaceManager::dyn_nsMgr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nsMgr"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNamespaceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlReader reader
[[deprecated("Use field access instead!")]] ::System::Xml::XmlReader*& System::Xml::Schema::XsdBuilder::BuilderNamespaceManager::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuilderNamespaceManager::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::Xml::XmlReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XsdBuilder/System.Xml.Schema.BuilderNamespaceManager.LookupNamespace
::StringW System::Xml::Schema::XsdBuilder::BuilderNamespaceManager::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdBuilder::BuilderNamespaceManager::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNamespaceManager*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDateTimeFlags
#include "System/Xml/Schema/XsdDateTimeFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags DateTime
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_DateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "DateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags DateTime
void System::Xml::Schema::XsdDateTimeFlags::_set_DateTime(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_DateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "DateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags Time
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_Time");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "Time"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags Time
void System::Xml::Schema::XsdDateTimeFlags::_set_Time(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_Time");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "Time", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags Date
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "Date"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags Date
void System::Xml::Schema::XsdDateTimeFlags::_set_Date(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "Date", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags GYearMonth
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_GYearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_GYearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "GYearMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags GYearMonth
void System::Xml::Schema::XsdDateTimeFlags::_set_GYearMonth(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_GYearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "GYearMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags GYear
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_GYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_GYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "GYear"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags GYear
void System::Xml::Schema::XsdDateTimeFlags::_set_GYear(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_GYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "GYear", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags GMonthDay
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_GMonthDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_GMonthDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "GMonthDay"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags GMonthDay
void System::Xml::Schema::XsdDateTimeFlags::_set_GMonthDay(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_GMonthDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "GMonthDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags GDay
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_GDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_GDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "GDay"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags GDay
void System::Xml::Schema::XsdDateTimeFlags::_set_GDay(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_GDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "GDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags GMonth
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_GMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_GMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "GMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags GMonth
void System::Xml::Schema::XsdDateTimeFlags::_set_GMonth(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_GMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "GMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags XdrDateTimeNoTz
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_XdrDateTimeNoTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_XdrDateTimeNoTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "XdrDateTimeNoTz"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags XdrDateTimeNoTz
void System::Xml::Schema::XsdDateTimeFlags::_set_XdrDateTimeNoTz(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_XdrDateTimeNoTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "XdrDateTimeNoTz", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags XdrDateTime
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_XdrDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_XdrDateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "XdrDateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags XdrDateTime
void System::Xml::Schema::XsdDateTimeFlags::_set_XdrDateTime(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_XdrDateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "XdrDateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags XdrTimeNoTz
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_XdrTimeNoTz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_XdrTimeNoTz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "XdrTimeNoTz"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags XdrTimeNoTz
void System::Xml::Schema::XsdDateTimeFlags::_set_XdrTimeNoTz(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_XdrTimeNoTz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "XdrTimeNoTz", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTimeFlags AllXsd
::System::Xml::Schema::XsdDateTimeFlags System::Xml::Schema::XsdDateTimeFlags::_get_AllXsd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_get_AllXsd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTimeFlags>("System.Xml.Schema", "XsdDateTimeFlags", "AllXsd"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTimeFlags AllXsd
void System::Xml::Schema::XsdDateTimeFlags::_set_AllXsd(::System::Xml::Schema::XsdDateTimeFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::_set_AllXsd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTimeFlags", "AllXsd", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTimeFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTimeFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDateTime
#include "System/Xml/Schema/XsdDateTime.hpp"
// Including type: System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode
#include "System/Xml/Schema/XsdDateTime_DateTimeTypeCode.hpp"
// Including type: System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind
#include "System/Xml/Schema/XsdDateTime_XsdDateTimeKind.hpp"
// Including type: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser
#include "System/Xml/Schema/XsdDateTime_Parser.hpp"
// Including type: System.Xml.Schema.XsdDateTimeFlags
#include "System/Xml/Schema/XsdDateTimeFlags.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy
int System::Xml::Schema::XsdDateTime::_get_Lzyyyy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lzyyyy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lzyyyy"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy
void System::Xml::Schema::XsdDateTime::_set_Lzyyyy(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lzyyyy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lzyyyy", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_
int System::Xml::Schema::XsdDateTime::_get_Lzyyyy_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lzyyyy_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lzyyyy_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_
void System::Xml::Schema::XsdDateTime::_set_Lzyyyy_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lzyyyy_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lzyyyy_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_MM
int System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_MM
void System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_MM_
int System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_MM_
void System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_MM_dd
int System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM_dd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM_dd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM_dd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_MM_dd
void System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM_dd(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM_dd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM_dd", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lzyyyy_MM_ddT
int System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM_ddT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lzyyyy_MM_ddT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM_ddT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lzyyyy_MM_ddT
void System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM_ddT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lzyyyy_MM_ddT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lzyyyy_MM_ddT", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH
int System::Xml::Schema::XsdDateTime::_get_LzHH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_LzHH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "LzHH"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH
void System::Xml::Schema::XsdDateTime::_set_LzHH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_LzHH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "LzHH", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH_
int System::Xml::Schema::XsdDateTime::_get_LzHH_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_LzHH_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "LzHH_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH_
void System::Xml::Schema::XsdDateTime::_set_LzHH_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_LzHH_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "LzHH_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH_mm
int System::Xml::Schema::XsdDateTime::_get_LzHH_mm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_LzHH_mm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "LzHH_mm"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH_mm
void System::Xml::Schema::XsdDateTime::_set_LzHH_mm(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_LzHH_mm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "LzHH_mm", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH_mm_
int System::Xml::Schema::XsdDateTime::_get_LzHH_mm_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_LzHH_mm_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "LzHH_mm_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH_mm_
void System::Xml::Schema::XsdDateTime::_set_LzHH_mm_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_LzHH_mm_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "LzHH_mm_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 LzHH_mm_ss
int System::Xml::Schema::XsdDateTime::_get_LzHH_mm_ss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_LzHH_mm_ss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "LzHH_mm_ss"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 LzHH_mm_ss
void System::Xml::Schema::XsdDateTime::_set_LzHH_mm_ss(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_LzHH_mm_ss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "LzHH_mm_ss", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz_
int System::Xml::Schema::XsdDateTime::_get_Lz_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz_
void System::Xml::Schema::XsdDateTime::_set_Lz_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz_zz
int System::Xml::Schema::XsdDateTime::_get_Lz_zz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz_zz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz_zz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz_zz
void System::Xml::Schema::XsdDateTime::_set_Lz_zz(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz_zz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz_zz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz_zz_
int System::Xml::Schema::XsdDateTime::_get_Lz_zz_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz_zz_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz_zz_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz_zz_
void System::Xml::Schema::XsdDateTime::_set_Lz_zz_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz_zz_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz_zz_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz_zz_zz
int System::Xml::Schema::XsdDateTime::_get_Lz_zz_zz() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz_zz_zz");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz_zz_zz"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz_zz_zz
void System::Xml::Schema::XsdDateTime::_set_Lz_zz_zz(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz_zz_zz");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz_zz_zz", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz__
int System::Xml::Schema::XsdDateTime::_get_Lz__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz__");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz__"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz__
void System::Xml::Schema::XsdDateTime::_set_Lz__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz__");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz__", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz__mm
int System::Xml::Schema::XsdDateTime::_get_Lz__mm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz__mm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz__mm"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz__mm
void System::Xml::Schema::XsdDateTime::_set_Lz__mm(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz__mm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz__mm", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz__mm_
int System::Xml::Schema::XsdDateTime::_get_Lz__mm_() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz__mm_");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz__mm_"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz__mm_
void System::Xml::Schema::XsdDateTime::_set_Lz__mm_(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz__mm_");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz__mm_", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz__mm__
int System::Xml::Schema::XsdDateTime::_get_Lz__mm__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz__mm__");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz__mm__"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz__mm__
void System::Xml::Schema::XsdDateTime::_set_Lz__mm__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz__mm__");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz__mm__", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz__mm_dd
int System::Xml::Schema::XsdDateTime::_get_Lz__mm_dd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz__mm_dd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz__mm_dd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz__mm_dd
void System::Xml::Schema::XsdDateTime::_set_Lz__mm_dd(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz__mm_dd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz__mm_dd", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz___
int System::Xml::Schema::XsdDateTime::_get_Lz___() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz___");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz___"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz___
void System::Xml::Schema::XsdDateTime::_set_Lz___(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz___");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz___", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 Lz___dd
int System::Xml::Schema::XsdDateTime::_get_Lz___dd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_Lz___dd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml.Schema", "XsdDateTime", "Lz___dd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 Lz___dd
void System::Xml::Schema::XsdDateTime::_set_Lz___dd(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_Lz___dd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "Lz___dd", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XmlTypeCode[] typeCodes
::ArrayW<::System::Xml::Schema::XmlTypeCode> System::Xml::Schema::XsdDateTime::_get_typeCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_get_typeCodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XmlTypeCode>>("System.Xml.Schema", "XsdDateTime", "typeCodes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XmlTypeCode[] typeCodes
void System::Xml::Schema::XsdDateTime::_set_typeCodes(::ArrayW<::System::Xml::Schema::XmlTypeCode> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::_set_typeCodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime", "typeCodes", value));
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime dt
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Xml::Schema::XsdDateTime::dyn_dt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::dyn_dt");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dt"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 extra
[[deprecated("Use field access instead!")]] uint& System::Xml::Schema::XsdDateTime::dyn_extra() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::dyn_extra");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extra"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_InternalTypeCode
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::get_InternalTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_InternalTypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_InternalTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_InternalKind
::System::Xml::Schema::XsdDateTime::XsdDateTimeKind System::Xml::Schema::XsdDateTime::get_InternalKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_InternalKind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_InternalKind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XsdDateTime::XsdDateTimeKind, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Year
int System::Xml::Schema::XsdDateTime::get_Year() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Year");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Year", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Month
int System::Xml::Schema::XsdDateTime::get_Month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Month");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Month", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Day
int System::Xml::Schema::XsdDateTime::get_Day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Day");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Day", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Hour
int System::Xml::Schema::XsdDateTime::get_Hour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Hour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Hour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Minute
int System::Xml::Schema::XsdDateTime::get_Minute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Minute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Minute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Second
int System::Xml::Schema::XsdDateTime::get_Second() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Second");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Second", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_Fraction
int System::Xml::Schema::XsdDateTime::get_Fraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_Fraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Fraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_ZoneHour
int System::Xml::Schema::XsdDateTime::get_ZoneHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_ZoneHour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ZoneHour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.get_ZoneMinute
int System::Xml::Schema::XsdDateTime::get_ZoneMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::get_ZoneMinute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ZoneMinute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime..ctor
System::Xml::Schema::XsdDateTime::XsdDateTime(::StringW text, ::System::Xml::Schema::XsdDateTimeFlags kinds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(kinds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, kinds);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime..ctor
System::Xml::Schema::XsdDateTime::XsdDateTime(::System::Xml::Schema::XsdDateTime::Parser parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parser)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime..ctor
System::Xml::Schema::XsdDateTime::XsdDateTime(::System::DateTime dateTime, ::System::Xml::Schema::XsdDateTimeFlags kinds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime), ::il2cpp_utils::ExtractType(kinds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dateTime, kinds);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime..ctor
System::Xml::Schema::XsdDateTime::XsdDateTime(::System::DateTimeOffset dateTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTimeOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dateTimeOffset);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime..ctor
System::Xml::Schema::XsdDateTime::XsdDateTime(::System::DateTimeOffset dateTimeOffset, ::System::Xml::Schema::XsdDateTimeFlags kinds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTimeOffset), ::il2cpp_utils::ExtractType(kinds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dateTimeOffset, kinds);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime..cctor
void System::Xml::Schema::XsdDateTime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDateTime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.InitiateXsdDateTime
void System::Xml::Schema::XsdDateTime::InitiateXsdDateTime(::System::Xml::Schema::XsdDateTime::Parser parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::InitiateXsdDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InitiateXsdDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parser)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.TryParse
bool System::Xml::Schema::XsdDateTime::TryParse(::StringW text, ::System::Xml::Schema::XsdDateTimeFlags kinds, ByRef<::System::Xml::Schema::XsdDateTime> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDateTime", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(kinds), ::il2cpp_utils::ExtractIndependentType<::System::Xml::Schema::XsdDateTime&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text, kinds, byref(result));
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.PrintDate
void System::Xml::Schema::XsdDateTime::PrintDate(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::PrintDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PrintDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.PrintTime
void System::Xml::Schema::XsdDateTime::PrintTime(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::PrintTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PrintTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.PrintZone
void System::Xml::Schema::XsdDateTime::PrintZone(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::PrintZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "PrintZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.IntToCharArray
void System::Xml::Schema::XsdDateTime::IntToCharArray(::ArrayW<::Il2CppChar> text, int start, int value, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::IntToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IntToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, start, value, digits);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.ShortToCharArray
void System::Xml::Schema::XsdDateTime::ShortToCharArray(::ArrayW<::Il2CppChar> text, int start, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::ShortToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ShortToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, start, value);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime.ToString
::StringW System::Xml::Schema::XsdDateTime::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode
#include "System/Xml/Schema/XsdDateTime_DateTimeTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode DateTime
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_DateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "DateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode DateTime
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_DateTime(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_DateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "DateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode Time
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_Time");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "Time"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode Time
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_Time(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_Time");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "Time", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode Date
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "Date"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode Date
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_Date(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "Date", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GYearMonth
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GYearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GYearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GYearMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GYearMonth
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GYearMonth(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GYearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GYearMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GYear
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GYear"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GYear
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GYear(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GYear", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GMonthDay
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GMonthDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GMonthDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GMonthDay"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GMonthDay
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GMonthDay(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GMonthDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GMonthDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GDay
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GDay"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GDay
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GDay(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GDay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GMonth
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_GMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode GMonth
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GMonth(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_GMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "GMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode XdrDateTime
::System::Xml::Schema::XsdDateTime::DateTimeTypeCode System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_XdrDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_get_XdrDateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode>("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "XdrDateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode XdrDateTime
void System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_XdrDateTime(::System::Xml::Schema::XsdDateTime::DateTimeTypeCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::_set_XdrDateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/DateTimeTypeCode", "XdrDateTime", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::DateTimeTypeCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::DateTimeTypeCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind
#include "System/Xml/Schema/XsdDateTime_XsdDateTimeKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind Unspecified
::System::Xml::Schema::XsdDateTime::XsdDateTimeKind System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_Unspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_Unspecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::XsdDateTimeKind>("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "Unspecified"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind Unspecified
void System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_Unspecified(::System::Xml::Schema::XsdDateTime::XsdDateTimeKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_Unspecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "Unspecified", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind Zulu
::System::Xml::Schema::XsdDateTime::XsdDateTimeKind System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_Zulu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_Zulu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::XsdDateTimeKind>("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "Zulu"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind Zulu
void System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_Zulu(::System::Xml::Schema::XsdDateTime::XsdDateTimeKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_Zulu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "Zulu", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind LocalWestOfZulu
::System::Xml::Schema::XsdDateTime::XsdDateTimeKind System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_LocalWestOfZulu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_LocalWestOfZulu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::XsdDateTimeKind>("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "LocalWestOfZulu"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind LocalWestOfZulu
void System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_LocalWestOfZulu(::System::Xml::Schema::XsdDateTime::XsdDateTimeKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_LocalWestOfZulu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "LocalWestOfZulu", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind LocalEastOfZulu
::System::Xml::Schema::XsdDateTime::XsdDateTimeKind System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_LocalEastOfZulu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_get_LocalEastOfZulu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDateTime::XsdDateTimeKind>("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "LocalEastOfZulu"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind LocalEastOfZulu
void System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_LocalEastOfZulu(::System::Xml::Schema::XsdDateTime::XsdDateTimeKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::_set_LocalEastOfZulu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/XsdDateTimeKind", "LocalEastOfZulu", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::XsdDateTimeKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::XsdDateTimeKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser
#include "System/Xml/Schema/XsdDateTime_Parser.hpp"
// Including type: System.Xml.Schema.XsdDateTimeFlags
#include "System/Xml/Schema/XsdDateTimeFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32[] Power10
::ArrayW<int> System::Xml::Schema::XsdDateTime::Parser::_get_Power10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::_get_Power10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Xml.Schema", "XsdDateTime/Parser", "Power10"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32[] Power10
void System::Xml::Schema::XsdDateTime::Parser::_set_Power10(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::_set_Power10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDateTime/Parser", "Power10", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.XsdDateTime/System.Xml.Schema.DateTimeTypeCode typeCode
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XsdDateTime::DateTimeTypeCode& System::Xml::Schema::XsdDateTime::Parser::dyn_typeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_typeCode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeCode"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XsdDateTime::DateTimeTypeCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 year
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_year() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_year");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "year"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 month
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_month");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "month"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 day
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_day");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "day"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 hour
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_hour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_hour");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hour"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 minute
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_minute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_minute");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minute"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 second
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_second() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_second");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "second"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 fraction
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_fraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_fraction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fraction"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.XsdDateTime/System.Xml.Schema.XsdDateTimeKind kind
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XsdDateTime::XsdDateTimeKind& System::Xml::Schema::XsdDateTime::Parser::dyn_kind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_kind");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kind"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XsdDateTime::XsdDateTimeKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 zoneHour
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_zoneHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_zoneHour");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zoneHour"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 zoneMinute
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_zoneMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_zoneMinute");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zoneMinute"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String text
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XsdDateTime::Parser::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_text");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 length
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDateTime::Parser::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::dyn_length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser..cctor
void System::Xml::Schema::XsdDateTime::Parser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDateTime/Parser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.Parse
bool System::Xml::Schema::XsdDateTime::Parser::Parse(::StringW text, ::System::Xml::Schema::XsdDateTimeFlags kinds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(kinds)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, text, kinds);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.ParseDate
bool System::Xml::Schema::XsdDateTime::Parser::ParseDate(int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::ParseDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.ParseTimeAndZoneAndWhitespace
bool System::Xml::Schema::XsdDateTime::Parser::ParseTimeAndZoneAndWhitespace(int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::ParseTimeAndZoneAndWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseTimeAndZoneAndWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.ParseTimeAndWhitespace
bool System::Xml::Schema::XsdDateTime::Parser::ParseTimeAndWhitespace(int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::ParseTimeAndWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseTimeAndWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.ParseTime
bool System::Xml::Schema::XsdDateTime::Parser::ParseTime(ByRef<int> start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::ParseTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(start));
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.ParseZoneAndWhitespace
bool System::Xml::Schema::XsdDateTime::Parser::ParseZoneAndWhitespace(int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::ParseZoneAndWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseZoneAndWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.Parse4Dig
bool System::Xml::Schema::XsdDateTime::Parser::Parse4Dig(int start, ByRef<int> num) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::Parse4Dig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Parse4Dig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(num)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(num));
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.Parse2Dig
bool System::Xml::Schema::XsdDateTime::Parser::Parse2Dig(int start, ByRef<int> num) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::Parse2Dig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Parse2Dig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(num)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, byref(num));
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.ParseChar
bool System::Xml::Schema::XsdDateTime::Parser::ParseChar(int start, ::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::ParseChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, start, ch);
}
// Autogenerated method: System.Xml.Schema.XsdDateTime/System.Xml.Schema.Parser.Test
bool System::Xml::Schema::XsdDateTime::Parser::Test(::System::Xml::Schema::XsdDateTimeFlags left, ::System::Xml::Schema::XsdDateTimeFlags right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDateTime::Parser::Test");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDateTime/Parser", "Test", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDuration
#include "System/Xml/Schema/XsdDuration.hpp"
// Including type: System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts
#include "System/Xml/Schema/XsdDuration_Parts.hpp"
// Including type: System.Xml.Schema.XsdDuration/System.Xml.Schema.DurationType
#include "System/Xml/Schema/XsdDuration_DurationType.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 years
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::dyn_years() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_years");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "years"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 months
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::dyn_months() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_months");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "months"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 days
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::dyn_days() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_days");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "days"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hours
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::dyn_hours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_hours");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hours"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minutes
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::dyn_minutes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_minutes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minutes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 seconds
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::dyn_seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_seconds");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "seconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 nanoseconds
[[deprecated("Use field access instead!")]] uint& System::Xml::Schema::XsdDuration::dyn_nanoseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::dyn_nanoseconds");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nanoseconds"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_IsNegative
bool System::Xml::Schema::XsdDuration::get_IsNegative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_IsNegative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsNegative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Years
int System::Xml::Schema::XsdDuration::get_Years() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Years");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Years", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Months
int System::Xml::Schema::XsdDuration::get_Months() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Months");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Months", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Days
int System::Xml::Schema::XsdDuration::get_Days() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Days");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Days", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Hours
int System::Xml::Schema::XsdDuration::get_Hours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Hours");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Hours", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Minutes
int System::Xml::Schema::XsdDuration::get_Minutes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Minutes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Minutes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Seconds
int System::Xml::Schema::XsdDuration::get_Seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Seconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Seconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.get_Nanoseconds
int System::Xml::Schema::XsdDuration::get_Nanoseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::get_Nanoseconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Nanoseconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration..ctor
System::Xml::Schema::XsdDuration::XsdDuration(bool isNegative, int years, int months, int days, int hours, int minutes, int seconds, int nanoseconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isNegative), ::il2cpp_utils::ExtractType(years), ::il2cpp_utils::ExtractType(months), ::il2cpp_utils::ExtractType(days), ::il2cpp_utils::ExtractType(hours), ::il2cpp_utils::ExtractType(minutes), ::il2cpp_utils::ExtractType(seconds), ::il2cpp_utils::ExtractType(nanoseconds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isNegative, years, months, days, hours, minutes, seconds, nanoseconds);
}
// Autogenerated method: System.Xml.Schema.XsdDuration..ctor
System::Xml::Schema::XsdDuration::XsdDuration(::System::TimeSpan timeSpan) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeSpan)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeSpan);
}
// Autogenerated method: System.Xml.Schema.XsdDuration..ctor
System::Xml::Schema::XsdDuration::XsdDuration(::System::TimeSpan timeSpan, ::System::Xml::Schema::XsdDuration::DurationType durationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeSpan), ::il2cpp_utils::ExtractType(durationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeSpan, durationType);
}
// Autogenerated method: System.Xml.Schema.XsdDuration..ctor
System::Xml::Schema::XsdDuration::XsdDuration(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Xml.Schema.XsdDuration..ctor
System::Xml::Schema::XsdDuration::XsdDuration(::StringW s, ::System::Xml::Schema::XsdDuration::DurationType durationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(durationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, durationType);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.ToTimeSpan
::System::TimeSpan System::Xml::Schema::XsdDuration::ToTimeSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::ToTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.ToTimeSpan
::System::TimeSpan System::Xml::Schema::XsdDuration::ToTimeSpan(::System::Xml::Schema::XsdDuration::DurationType durationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::ToTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(durationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method, durationType);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.TryToTimeSpan
::System::Exception* System::Xml::Schema::XsdDuration::TryToTimeSpan(ByRef<::System::TimeSpan> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::TryToTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryToTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, byref(result));
}
// Autogenerated method: System.Xml.Schema.XsdDuration.TryToTimeSpan
::System::Exception* System::Xml::Schema::XsdDuration::TryToTimeSpan(::System::Xml::Schema::XsdDuration::DurationType durationType, ByRef<::System::TimeSpan> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::TryToTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryToTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(durationType), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, durationType, byref(result));
}
// Autogenerated method: System.Xml.Schema.XsdDuration.ToString
::StringW System::Xml::Schema::XsdDuration::ToString(::System::Xml::Schema::XsdDuration::DurationType durationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(durationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, durationType);
}
// Autogenerated method: System.Xml.Schema.XsdDuration.TryParse
::System::Exception* System::Xml::Schema::XsdDuration::TryParse(::StringW s, ByRef<::System::Xml::Schema::XsdDuration> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDuration", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::System::Xml::Schema::XsdDuration&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.Schema.XsdDuration.TryParse
::System::Exception* System::Xml::Schema::XsdDuration::TryParse(::StringW s, ::System::Xml::Schema::XsdDuration::DurationType durationType, ByRef<::System::Xml::Schema::XsdDuration> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDuration", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(durationType), ::il2cpp_utils::ExtractIndependentType<::System::Xml::Schema::XsdDuration&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, durationType, byref(result));
}
// Autogenerated method: System.Xml.Schema.XsdDuration.TryParseDigits
::StringW System::Xml::Schema::XsdDuration::TryParseDigits(::StringW s, ByRef<int> offset, bool eatDigits, ByRef<int> result, ByRef<int> numDigits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::TryParseDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdDuration", "TryParseDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(eatDigits), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(offset), eatDigits, byref(result), byref(numDigits));
}
// Autogenerated method: System.Xml.Schema.XsdDuration.ToString
::StringW System::Xml::Schema::XsdDuration::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts
#include "System/Xml/Schema/XsdDuration_Parts.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasNone
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasNone"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasNone
void System::Xml::Schema::XsdDuration::Parts::_set_HasNone(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasNone", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasYears
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasYears() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasYears");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasYears"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasYears
void System::Xml::Schema::XsdDuration::Parts::_set_HasYears(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasYears");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasYears", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasMonths
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasMonths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasMonths");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasMonths"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasMonths
void System::Xml::Schema::XsdDuration::Parts::_set_HasMonths(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasMonths");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasMonths", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasDays
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasDays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasDays");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasDays"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasDays
void System::Xml::Schema::XsdDuration::Parts::_set_HasDays(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasDays");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasDays", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasHours
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasHours() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasHours");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasHours"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasHours
void System::Xml::Schema::XsdDuration::Parts::_set_HasHours(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasHours");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasHours", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasMinutes
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasMinutes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasMinutes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasMinutes"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasMinutes
void System::Xml::Schema::XsdDuration::Parts::_set_HasMinutes(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasMinutes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasMinutes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasSeconds
::System::Xml::Schema::XsdDuration::Parts System::Xml::Schema::XsdDuration::Parts::_get_HasSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_get_HasSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::Parts>("System.Xml.Schema", "XsdDuration/Parts", "HasSeconds"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.Parts HasSeconds
void System::Xml::Schema::XsdDuration::Parts::_set_HasSeconds(::System::Xml::Schema::XsdDuration::Parts value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::_set_HasSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/Parts", "HasSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::Parts::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::Parts::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XsdDuration/System.Xml.Schema.DurationType
#include "System/Xml/Schema/XsdDuration_DurationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.DurationType Duration
::System::Xml::Schema::XsdDuration::DurationType System::Xml::Schema::XsdDuration::DurationType::_get_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::_get_Duration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::DurationType>("System.Xml.Schema", "XsdDuration/DurationType", "Duration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.DurationType Duration
void System::Xml::Schema::XsdDuration::DurationType::_set_Duration(::System::Xml::Schema::XsdDuration::DurationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::_set_Duration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/DurationType", "Duration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.DurationType YearMonthDuration
::System::Xml::Schema::XsdDuration::DurationType System::Xml::Schema::XsdDuration::DurationType::_get_YearMonthDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::_get_YearMonthDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::DurationType>("System.Xml.Schema", "XsdDuration/DurationType", "YearMonthDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.DurationType YearMonthDuration
void System::Xml::Schema::XsdDuration::DurationType::_set_YearMonthDuration(::System::Xml::Schema::XsdDuration::DurationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::_set_YearMonthDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/DurationType", "YearMonthDuration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.DurationType DayTimeDuration
::System::Xml::Schema::XsdDuration::DurationType System::Xml::Schema::XsdDuration::DurationType::_get_DayTimeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::_get_DayTimeDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XsdDuration::DurationType>("System.Xml.Schema", "XsdDuration/DurationType", "DayTimeDuration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XsdDuration/System.Xml.Schema.DurationType DayTimeDuration
void System::Xml::Schema::XsdDuration::DurationType::_set_DayTimeDuration(::System::Xml::Schema::XsdDuration::DurationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::_set_DayTimeDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdDuration/DurationType", "DayTimeDuration", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdDuration::DurationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdDuration::DurationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XsdValidator
#include "System/Xml/Schema/XsdValidator.hpp"
// Including type: System.Xml.HWStack
#include "System/Xml/HWStack.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
// Including type: System.Xml.Schema.IdRefNode
#include "System/Xml/Schema/IdRefNode.hpp"
// Including type: System.Xml.Schema.Parser
#include "System/Xml/Schema/Parser.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.SchemaElementDecl
#include "System/Xml/Schema/SchemaElementDecl.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.SchemaAttDef
#include "System/Xml/Schema/SchemaAttDef.hpp"
// Including type: System.Xml.XmlValidatingReaderImpl
#include "System/Xml/XmlValidatingReaderImpl.hpp"
// Including type: System.Xml.Schema.XmlSchemaCollection
#include "System/Xml/Schema/XmlSchemaCollection.hpp"
// Including type: System.Xml.IValidationEventHandling
#include "System/Xml/IValidationEventHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XmlSchemaDatatype dtCDATA
::System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::XsdValidator::_get_dtCDATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::_get_dtCDATA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDatatype*>("System.Xml.Schema", "XsdValidator", "dtCDATA"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XmlSchemaDatatype dtCDATA
void System::Xml::Schema::XsdValidator::_set_dtCDATA(::System::Xml::Schema::XmlSchemaDatatype* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::_set_dtCDATA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdValidator", "dtCDATA", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XmlSchemaDatatype dtQName
::System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::XsdValidator::_get_dtQName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::_get_dtQName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDatatype*>("System.Xml.Schema", "XsdValidator", "dtQName"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XmlSchemaDatatype dtQName
void System::Xml::Schema::XsdValidator::_set_dtQName(::System::Xml::Schema::XmlSchemaDatatype* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::_set_dtQName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdValidator", "dtQName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XmlSchemaDatatype dtStringArray
::System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::XsdValidator::_get_dtStringArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::_get_dtStringArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaDatatype*>("System.Xml.Schema", "XsdValidator", "dtStringArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XmlSchemaDatatype dtStringArray
void System::Xml::Schema::XsdValidator::_set_dtStringArray(::System::Xml::Schema::XmlSchemaDatatype* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::_set_dtStringArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XsdValidator", "dtStringArray", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 startIDConstraint
[[deprecated("Use field access instead!")]] int& System::Xml::Schema::XsdValidator::dyn_startIDConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::dyn_startIDConstraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startIDConstraint"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.HWStack validationStack
[[deprecated("Use field access instead!")]] ::System::Xml::HWStack*& System::Xml::Schema::XsdValidator::dyn_validationStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::dyn_validationStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validationStack"))->offset;
  return *reinterpret_cast<::System::Xml::HWStack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable attPresence
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::XsdValidator::dyn_attPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::dyn_attPresence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attPresence"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNamespaceManager nsManager
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNamespaceManager*& System::Xml::Schema::XsdValidator::dyn_nsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::dyn_nsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nsManager"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNamespaceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean bManageNamespaces
[[deprecated("Use field access instead!")]] bool& System::Xml::Schema::XsdValidator::dyn_bManageNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::dyn_bManageNamespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bManageNamespaces"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable IDs
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::Schema::XsdValidator::dyn_IDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::dyn_IDs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IDs"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.IdRefNode idRefListHead
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::IdRefNode*& System::Xml::Schema::XsdValidator::dyn_idRefListHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::dyn_idRefListHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idRefListHead"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::IdRefNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Parser inlineSchemaParser
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::Parser*& System::Xml::Schema::XsdValidator::dyn_inlineSchemaParser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::dyn_inlineSchemaParser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inlineSchemaParser"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::Parser**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaContentProcessing processContents
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaContentProcessing& System::Xml::Schema::XsdValidator::dyn_processContents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::dyn_processContents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "processContents"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaContentProcessing*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String NsXmlNs
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XsdValidator::dyn_NsXmlNs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::dyn_NsXmlNs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NsXmlNs"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String NsXs
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XsdValidator::dyn_NsXs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::dyn_NsXs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NsXs"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String NsXsi
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XsdValidator::dyn_NsXsi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::dyn_NsXsi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NsXsi"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String XsiType
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XsdValidator::dyn_XsiType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::dyn_XsiType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XsiType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String XsiNil
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XsdValidator::dyn_XsiNil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::dyn_XsiNil");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XsiNil"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String XsiSchemaLocation
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XsdValidator::dyn_XsiSchemaLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::dyn_XsiSchemaLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XsiSchemaLocation"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String XsiNoNamespaceSchemaLocation
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XsdValidator::dyn_XsiNoNamespaceSchemaLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::dyn_XsiNoNamespaceSchemaLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XsiNoNamespaceSchemaLocation"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String XsdSchema
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Schema::XsdValidator::dyn_XsdSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::dyn_XsdSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XsdSchema"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.get_IsInlineSchemaStarted
bool System::Xml::Schema::XsdValidator::get_IsInlineSchemaStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::get_IsInlineSchemaStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInlineSchemaStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.get_HasSchema
bool System::Xml::Schema::XsdValidator::get_HasSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::get_HasSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.get_HasIdentityConstraints
bool System::Xml::Schema::XsdValidator::get_HasIdentityConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::get_HasIdentityConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasIdentityConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator..cctor
void System::Xml::Schema::XsdValidator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XsdValidator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.Init
void System::Xml::Schema::XsdValidator::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.ProcessInlineSchema
void System::Xml::Schema::XsdValidator::ProcessInlineSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::ProcessInlineSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInlineSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.ValidateElement
void System::Xml::Schema::XsdValidator::ValidateElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::ValidateElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.ValidateChildElement
::Il2CppObject* System::Xml::Schema::XsdValidator::ValidateChildElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::ValidateChildElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateChildElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.ProcessElement
void System::Xml::Schema::XsdValidator::ProcessElement(::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::ProcessElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, particle);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.ProcessXsiAttributes
void System::Xml::Schema::XsdValidator::ProcessXsiAttributes(ByRef<::System::Xml::XmlQualifiedName*> xsiType, ByRef<::StringW> xsiNil) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::ProcessXsiAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessXsiAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Xml::XmlQualifiedName*&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(xsiType), byref(xsiNil));
}
// Autogenerated method: System.Xml.Schema.XsdValidator.ValidateEndElement
void System::Xml::Schema::XsdValidator::ValidateEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::ValidateEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.FastGetElementDecl
::System::Xml::Schema::SchemaElementDecl* System::Xml::Schema::XsdValidator::FastGetElementDecl(::Il2CppObject* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::FastGetElementDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FastGetElementDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaElementDecl*, false>(this, ___internal__method, particle);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.ThoroughGetElementDecl
::System::Xml::Schema::SchemaElementDecl* System::Xml::Schema::XsdValidator::ThoroughGetElementDecl(::System::Xml::Schema::SchemaElementDecl* elementDecl, ::System::Xml::XmlQualifiedName* xsiType, ::StringW xsiNil) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::ThoroughGetElementDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThoroughGetElementDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementDecl), ::il2cpp_utils::ExtractType(xsiType), ::il2cpp_utils::ExtractType(xsiNil)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaElementDecl*, false>(this, ___internal__method, elementDecl, xsiType, xsiNil);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.ValidateStartElement
void System::Xml::Schema::XsdValidator::ValidateStartElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::ValidateStartElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.ValidateEndStartElement
void System::Xml::Schema::XsdValidator::ValidateEndStartElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::ValidateEndStartElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateEndStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.LoadSchemaFromLocation
void System::Xml::Schema::XsdValidator::LoadSchemaFromLocation(::StringW uri, ::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::LoadSchemaFromLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSchemaFromLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(url)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri, url);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.LoadSchema
void System::Xml::Schema::XsdValidator::LoadSchema(::StringW uri, ::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::LoadSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(url)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri, url);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.ProcessTokenizedType
void System::Xml::Schema::XsdValidator::ProcessTokenizedType(::System::Xml::XmlTokenizedType ttype, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::ProcessTokenizedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessTokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ttype), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ttype, name);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.CheckValue
void System::Xml::Schema::XsdValidator::CheckValue(::StringW value, ::System::Xml::Schema::SchemaAttDef* attdef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::CheckValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(attdef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, attdef);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.AddID
void System::Xml::Schema::XsdValidator::AddID(::StringW name, ::Il2CppObject* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::AddID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, node);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.IsXSDRoot
bool System::Xml::Schema::XsdValidator::IsXSDRoot(::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::IsXSDRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsXSDRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, localName, ns);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.Push
void System::Xml::Schema::XsdValidator::Push(::System::Xml::XmlQualifiedName* elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::Push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, elementName);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.Pop
void System::Xml::Schema::XsdValidator::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.CheckForwardRefs
void System::Xml::Schema::XsdValidator::CheckForwardRefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::CheckForwardRefs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForwardRefs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.ValidateStartElementIdentityConstraints
void System::Xml::Schema::XsdValidator::ValidateStartElementIdentityConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::ValidateStartElementIdentityConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateStartElementIdentityConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.AddIdentityConstraints
void System::Xml::Schema::XsdValidator::AddIdentityConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::AddIdentityConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddIdentityConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.ElementIdentityConstraints
void System::Xml::Schema::XsdValidator::ElementIdentityConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::ElementIdentityConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ElementIdentityConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.AttributeIdentityConstraints
void System::Xml::Schema::XsdValidator::AttributeIdentityConstraints(::StringW name, ::StringW ns, ::Il2CppObject* obj, ::StringW sobj, ::System::Xml::Schema::SchemaAttDef* attdef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::AttributeIdentityConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttributeIdentityConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(sobj), ::il2cpp_utils::ExtractType(attdef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, ns, obj, sobj, attdef);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.UnWrapUnion
::Il2CppObject* System::Xml::Schema::XsdValidator::UnWrapUnion(::Il2CppObject* typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::UnWrapUnion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnWrapUnion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typedValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, typedValue);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.EndElementIdentityConstraints
void System::Xml::Schema::XsdValidator::EndElementIdentityConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::EndElementIdentityConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndElementIdentityConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.get_PreserveWhitespace
bool System::Xml::Schema::XsdValidator::get_PreserveWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::get_PreserveWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.Validate
void System::Xml::Schema::XsdValidator::Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::Validate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.CompleteValidation
void System::Xml::Schema::XsdValidator::CompleteValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::CompleteValidation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XsdValidator.FindId
::Il2CppObject* System::Xml::Schema::XsdValidator::FindId(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XsdValidator::FindId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlConfiguration.XmlReaderSection
#include "System/Xml/XmlConfiguration/XmlReaderSection.hpp"
// Including type: System.Xml.XmlResolver
#include "System/Xml/XmlResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlConfiguration.XmlReaderSection.get_ProhibitDefaultUrlResolver
bool System::Xml::XmlConfiguration::XmlReaderSection::get_ProhibitDefaultUrlResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConfiguration::XmlReaderSection::get_ProhibitDefaultUrlResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.XmlConfiguration", "XmlReaderSection", "get_ProhibitDefaultUrlResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlConfiguration.XmlReaderSection.get_CollapseWhiteSpaceIntoEmptyString
bool System::Xml::XmlConfiguration::XmlReaderSection::get_CollapseWhiteSpaceIntoEmptyString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConfiguration::XmlReaderSection::get_CollapseWhiteSpaceIntoEmptyString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.XmlConfiguration", "XmlReaderSection", "get_CollapseWhiteSpaceIntoEmptyString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlConfiguration.XmlReaderSection.CreateDefaultResolver
::System::Xml::XmlResolver* System::Xml::XmlConfiguration::XmlReaderSection::CreateDefaultResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConfiguration::XmlReaderSection::CreateDefaultResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.XmlConfiguration", "XmlReaderSection", "CreateDefaultResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlResolver*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Xsl.Runtime.StringConcat
#include "System/Xml/Xsl/Runtime/StringConcat.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String s1
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Xsl::Runtime::StringConcat::dyn_s1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::dyn_s1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s1"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String s2
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Xsl::Runtime::StringConcat::dyn_s2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::dyn_s2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s2"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String s3
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Xsl::Runtime::StringConcat::dyn_s3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::dyn_s3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s3"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String s4
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Xsl::Runtime::StringConcat::dyn_s4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::dyn_s4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s4"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String delimiter
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Xsl::Runtime::StringConcat::dyn_delimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::dyn_delimiter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delimiter"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> strList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Xml::Xsl::Runtime::StringConcat::dyn_strList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::dyn_strList");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 idxStr
[[deprecated("Use field access instead!")]] int& System::Xml::Xsl::Runtime::StringConcat::dyn_idxStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::dyn_idxStr");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxStr"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Xsl.Runtime.StringConcat.get_Count
int System::Xml::Xsl::Runtime::StringConcat::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Xsl.Runtime.StringConcat.Clear
void System::Xml::Xsl::Runtime::StringConcat::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Xsl.Runtime.StringConcat.GetResult
::StringW System::Xml::Xsl::Runtime::StringConcat::GetResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Xsl.Runtime.StringConcat.ConcatNoDelimiter
void System::Xml::Xsl::Runtime::StringConcat::ConcatNoDelimiter(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Xsl::Runtime::StringConcat::ConcatNoDelimiter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConcatNoDelimiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Linq.XName
#include "System/Xml/Linq/XName.hpp"
// Including type: System.Xml.Linq.XNamespace
#include "System/Xml/Linq/XNamespace.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Linq.XNamespace ns
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XNamespace*& System::Xml::Linq::XName::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XNamespace**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String localName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::XName::dyn_localName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::dyn_localName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hashCode
[[deprecated("Use field access instead!")]] int& System::Xml::Linq::XName::dyn_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::dyn_hashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XName.get_LocalName
::StringW System::Xml::Linq::XName::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::get_LocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XName.get_Namespace
::System::Xml::Linq::XNamespace* System::Xml::Linq::XName::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNamespace*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XName.get_NamespaceName
::StringW System::Xml::Linq::XName::get_NamespaceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::get_NamespaceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XName.Get
::System::Xml::Linq::XName* System::Xml::Linq::XName::Get(::StringW expandedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XName", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expandedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expandedName);
}
// Autogenerated method: System.Xml.Linq.XName.Get
::System::Xml::Linq::XName* System::Xml::Linq::XName::Get(::StringW localName, ::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XName", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, localName, namespaceName);
}
// Autogenerated method: System.Xml.Linq.XName.System.IEquatable<System.Xml.Linq.XName>.Equals
bool System::Xml::Linq::XName::System_IEquatable$System_Xml_Linq_XName$_Equals(::System::Xml::Linq::XName* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::System.IEquatable<System.Xml.Linq.XName>.Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Linq::XName*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Linq.XName.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Xml::Linq::XName::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Linq::XName*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Xml.Linq.XName.ToString
::StringW System::Xml::Linq::XName::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XName.Equals
bool System::Xml::Linq::XName::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Xml.Linq.XName.GetHashCode
int System::Xml::Linq::XName::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XName.op_Equality
bool System::Xml::Linq::operator ==(::System::Xml::Linq::XName* left, ::System::Xml::Linq::XName& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XName", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.Xml.Linq.XName.op_Inequality
bool System::Xml::Linq::operator !=(::System::Xml::Linq::XName* left, ::System::Xml::Linq::XName& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XName::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XName", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Linq.NameSerializer
#include "System/Xml/Linq/NameSerializer.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String expandedName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::NameSerializer::dyn_expandedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::NameSerializer::dyn_expandedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expandedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.NameSerializer.System.Runtime.Serialization.IObjectReference.GetRealObject
::Il2CppObject* System::Xml::Linq::NameSerializer::System_Runtime_Serialization_IObjectReference_GetRealObject(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::NameSerializer::System.Runtime.Serialization.IObjectReference.GetRealObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Linq::NameSerializer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Xml.Linq.NameSerializer.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Xml::Linq::NameSerializer::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::NameSerializer::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Linq::NameSerializer*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Linq.XNamespace
#include "System/Xml/Linq/XNamespace.hpp"
// Including type: System.Xml.Linq.XHashtable`1
#include "System/Xml/Linq/XHashtable_1.hpp"
// Including type: System.Xml.Linq.XName
#include "System/Xml/Linq/XName.hpp"
// Including type: System.WeakReference
#include "System/WeakReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.Linq.XHashtable`1<System.WeakReference> namespaces
::System::Xml::Linq::XHashtable_1<::System::WeakReference*>* System::Xml::Linq::XNamespace::_get_namespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::_get_namespaces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::XHashtable_1<::System::WeakReference*>*>("System.Xml.Linq", "XNamespace", "namespaces"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Linq.XHashtable`1<System.WeakReference> namespaces
void System::Xml::Linq::XNamespace::_set_namespaces(::System::Xml::Linq::XHashtable_1<::System::WeakReference*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::_set_namespaces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XNamespace", "namespaces", value));
}
// Autogenerated static field getter
// Get static field: static private System.WeakReference refNone
::System::WeakReference* System::Xml::Linq::XNamespace::_get_refNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::_get_refNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::WeakReference*>("System.Xml.Linq", "XNamespace", "refNone"));
}
// Autogenerated static field setter
// Set static field: static private System.WeakReference refNone
void System::Xml::Linq::XNamespace::_set_refNone(::System::WeakReference* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::_set_refNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XNamespace", "refNone", value));
}
// Autogenerated static field getter
// Get static field: static private System.WeakReference refXml
::System::WeakReference* System::Xml::Linq::XNamespace::_get_refXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::_get_refXml");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::WeakReference*>("System.Xml.Linq", "XNamespace", "refXml"));
}
// Autogenerated static field setter
// Set static field: static private System.WeakReference refXml
void System::Xml::Linq::XNamespace::_set_refXml(::System::WeakReference* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::_set_refXml");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XNamespace", "refXml", value));
}
// Autogenerated static field getter
// Get static field: static private System.WeakReference refXmlns
::System::WeakReference* System::Xml::Linq::XNamespace::_get_refXmlns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::_get_refXmlns");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::WeakReference*>("System.Xml.Linq", "XNamespace", "refXmlns"));
}
// Autogenerated static field setter
// Set static field: static private System.WeakReference refXmlns
void System::Xml::Linq::XNamespace::_set_refXmlns(::System::WeakReference* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::_set_refXmlns");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XNamespace", "refXmlns", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String namespaceName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::XNamespace::dyn_namespaceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::dyn_namespaceName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hashCode
[[deprecated("Use field access instead!")]] int& System::Xml::Linq::XNamespace::dyn_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::dyn_hashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Linq.XHashtable`1<System.Xml.Linq.XName> names
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XHashtable_1<::System::Xml::Linq::XName*>*& System::Xml::Linq::XNamespace::dyn_names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::dyn_names");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "names"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XHashtable_1<::System::Xml::Linq::XName*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XNamespace.get_NamespaceName
::StringW System::Xml::Linq::XNamespace::get_NamespaceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::get_NamespaceName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XNamespace.get_None
::System::Xml::Linq::XNamespace* System::Xml::Linq::XNamespace::get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::get_None");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "get_None", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNamespace*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XNamespace.get_Xml
::System::Xml::Linq::XNamespace* System::Xml::Linq::XNamespace::get_Xml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::get_Xml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "get_Xml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNamespace*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XNamespace.get_Xmlns
::System::Xml::Linq::XNamespace* System::Xml::Linq::XNamespace::get_Xmlns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::get_Xmlns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "get_Xmlns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNamespace*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XNamespace.GetName
::System::Xml::Linq::XName* System::Xml::Linq::XNamespace::GetName(::StringW localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XName*, false>(this, ___internal__method, localName);
}
// Autogenerated method: System.Xml.Linq.XNamespace.Get
::System::Xml::Linq::XNamespace* System::Xml::Linq::XNamespace::Get(::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNamespace*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, namespaceName);
}
// Autogenerated method: System.Xml.Linq.XNamespace.GetName
::System::Xml::Linq::XName* System::Xml::Linq::XNamespace::GetName(::StringW localName, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XName*, false>(this, ___internal__method, localName, index, count);
}
// Autogenerated method: System.Xml.Linq.XNamespace.Get
::System::Xml::Linq::XNamespace* System::Xml::Linq::XNamespace::Get(::StringW namespaceName, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceName), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNamespace*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, namespaceName, index, count);
}
// Autogenerated method: System.Xml.Linq.XNamespace.ExtractLocalName
::StringW System::Xml::Linq::XNamespace::ExtractLocalName(::System::Xml::Linq::XName* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::ExtractLocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "ExtractLocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n);
}
// Autogenerated method: System.Xml.Linq.XNamespace.ExtractNamespace
::StringW System::Xml::Linq::XNamespace::ExtractNamespace(::System::WeakReference* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::ExtractNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "ExtractNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, r);
}
// Autogenerated method: System.Xml.Linq.XNamespace.EnsureNamespace
::System::Xml::Linq::XNamespace* System::Xml::Linq::XNamespace::EnsureNamespace(ByRef<::System::WeakReference*> refNmsp, ::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::EnsureNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "EnsureNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(refNmsp), ::il2cpp_utils::ExtractType(namespaceName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNamespace*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(refNmsp), namespaceName);
}
// Autogenerated method: System.Xml.Linq.XNamespace.ToString
::StringW System::Xml::Linq::XNamespace::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XNamespace.Equals
bool System::Xml::Linq::XNamespace::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Xml.Linq.XNamespace.GetHashCode
int System::Xml::Linq::XNamespace::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XNamespace.op_Equality
bool System::Xml::Linq::operator ==(::System::Xml::Linq::XNamespace* left, ::System::Xml::Linq::XNamespace& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.Xml.Linq.XNamespace.op_Inequality
bool System::Xml::Linq::operator !=(::System::Xml::Linq::XNamespace* left, ::System::Xml::Linq::XNamespace& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNamespace::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XNamespace", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Linq.XObject
#include "System/Xml/Linq/XObject.hpp"
// Including type: System.Xml.Linq.XObject/System.Xml.Linq.<Annotations>d__16`1
#include "System/Xml/Linq/XObject_-Annotations-d__16_1.hpp"
// Including type: System.Xml.Linq.XContainer
#include "System/Xml/Linq/XContainer.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.Linq.XElement
#include "System/Xml/Linq/XElement.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Xml.Linq.XObjectChangeEventArgs
#include "System/Xml/Linq/XObjectChangeEventArgs.hpp"
// Including type: System.Xml.Linq.SaveOptions
#include "System/Xml/Linq/SaveOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.Linq.XContainer parent
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XContainer*& System::Xml::Linq::XObject::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object annotations
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::Linq::XObject::dyn_annotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::dyn_annotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "annotations"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XObject.get_BaseUri
::StringW System::Xml::Linq::XObject::get_BaseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::get_BaseUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XObject.get_NodeType
::System::Xml::XmlNodeType System::Xml::Linq::XObject::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Linq::XObject*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XObject.get_Parent
::System::Xml::Linq::XElement* System::Xml::Linq::XObject::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::get_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XObject.System.Xml.IXmlLineInfo.get_LineNumber
int System::Xml::Linq::XObject::System_Xml_IXmlLineInfo_get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::System.Xml.IXmlLineInfo.get_LineNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Linq::XObject*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XObject.System.Xml.IXmlLineInfo.get_LinePosition
int System::Xml::Linq::XObject::System_Xml_IXmlLineInfo_get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::System.Xml.IXmlLineInfo.get_LinePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Linq::XObject*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XObject.get_HasBaseUri
bool System::Xml::Linq::XObject::get_HasBaseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::get_HasBaseUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasBaseUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XObject.AddAnnotation
void System::Xml::Linq::XObject::AddAnnotation(::Il2CppObject* annotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::AddAnnotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAnnotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(annotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, annotation);
}
// Autogenerated method: System.Xml.Linq.XObject.Annotation
::Il2CppObject* System::Xml::Linq::XObject::Annotation(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::Annotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Annotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.Linq.XObject.System.Xml.IXmlLineInfo.HasLineInfo
bool System::Xml::Linq::XObject::System_Xml_IXmlLineInfo_HasLineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::System.Xml.IXmlLineInfo.HasLineInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Linq::XObject*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XObject.NotifyChanged
bool System::Xml::Linq::XObject::NotifyChanged(::Il2CppObject* sender, ::System::Xml::Linq::XObjectChangeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::NotifyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Xml.Linq.XObject.NotifyChanging
bool System::Xml::Linq::XObject::NotifyChanging(::Il2CppObject* sender, ::System::Xml::Linq::XObjectChangeEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::NotifyChanging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyChanging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Xml.Linq.XObject.SetBaseUri
void System::Xml::Linq::XObject::SetBaseUri(::StringW baseUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::SetBaseUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBaseUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUri);
}
// Autogenerated method: System.Xml.Linq.XObject.SetLineInfo
void System::Xml::Linq::XObject::SetLineInfo(int lineNumber, int linePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::SetLineInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLineInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineNumber), ::il2cpp_utils::ExtractType(linePosition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineNumber, linePosition);
}
// Autogenerated method: System.Xml.Linq.XObject.SkipNotify
bool System::Xml::Linq::XObject::SkipNotify() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::SkipNotify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XObject.GetSaveOptionsFromAnnotations
::System::Xml::Linq::SaveOptions System::Xml::Linq::XObject::GetSaveOptionsFromAnnotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObject::GetSaveOptionsFromAnnotations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSaveOptionsFromAnnotations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::SaveOptions, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.BaseUriAnnotation
#include "System/Xml/Linq/BaseUriAnnotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String baseUri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::BaseUriAnnotation::dyn_baseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::BaseUriAnnotation::dyn_baseUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.LineInfoAnnotation
#include "System/Xml/Linq/LineInfoAnnotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 lineNumber
[[deprecated("Use field access instead!")]] int& System::Xml::Linq::LineInfoAnnotation::dyn_lineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::LineInfoAnnotation::dyn_lineNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 linePosition
[[deprecated("Use field access instead!")]] int& System::Xml::Linq::LineInfoAnnotation::dyn_linePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::LineInfoAnnotation::dyn_linePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.LineInfoEndElementAnnotation
#include "System/Xml/Linq/LineInfoEndElementAnnotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.XObjectChange
#include "System/Xml/Linq/XObjectChange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Linq.XObjectChange Add
::System::Xml::Linq::XObjectChange System::Xml::Linq::XObjectChange::_get_Add() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChange::_get_Add");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::XObjectChange>("System.Xml.Linq", "XObjectChange", "Add"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Linq.XObjectChange Add
void System::Xml::Linq::XObjectChange::_set_Add(::System::Xml::Linq::XObjectChange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChange::_set_Add");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XObjectChange", "Add", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Linq.XObjectChange Remove
::System::Xml::Linq::XObjectChange System::Xml::Linq::XObjectChange::_get_Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChange::_get_Remove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::XObjectChange>("System.Xml.Linq", "XObjectChange", "Remove"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Linq.XObjectChange Remove
void System::Xml::Linq::XObjectChange::_set_Remove(::System::Xml::Linq::XObjectChange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChange::_set_Remove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XObjectChange", "Remove", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Linq.XObjectChange Name
::System::Xml::Linq::XObjectChange System::Xml::Linq::XObjectChange::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChange::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::XObjectChange>("System.Xml.Linq", "XObjectChange", "Name"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Linq.XObjectChange Name
void System::Xml::Linq::XObjectChange::_set_Name(::System::Xml::Linq::XObjectChange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChange::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XObjectChange", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Linq.XObjectChange Value
::System::Xml::Linq::XObjectChange System::Xml::Linq::XObjectChange::_get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChange::_get_Value");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::XObjectChange>("System.Xml.Linq", "XObjectChange", "Value"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Linq.XObjectChange Value
void System::Xml::Linq::XObjectChange::_set_Value(::System::Xml::Linq::XObjectChange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChange::_set_Value");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XObjectChange", "Value", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::Linq::XObjectChange::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChange::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.XObjectChangeEventArgs
#include "System/Xml/Linq/XObjectChangeEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Add
::System::Xml::Linq::XObjectChangeEventArgs* System::Xml::Linq::XObjectChangeEventArgs::_get_Add() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::_get_Add");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::XObjectChangeEventArgs*>("System.Xml.Linq", "XObjectChangeEventArgs", "Add"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Add
void System::Xml::Linq::XObjectChangeEventArgs::_set_Add(::System::Xml::Linq::XObjectChangeEventArgs* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::_set_Add");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XObjectChangeEventArgs", "Add", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Remove
::System::Xml::Linq::XObjectChangeEventArgs* System::Xml::Linq::XObjectChangeEventArgs::_get_Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::_get_Remove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::XObjectChangeEventArgs*>("System.Xml.Linq", "XObjectChangeEventArgs", "Remove"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Remove
void System::Xml::Linq::XObjectChangeEventArgs::_set_Remove(::System::Xml::Linq::XObjectChangeEventArgs* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::_set_Remove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XObjectChangeEventArgs", "Remove", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Name
::System::Xml::Linq::XObjectChangeEventArgs* System::Xml::Linq::XObjectChangeEventArgs::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::XObjectChangeEventArgs*>("System.Xml.Linq", "XObjectChangeEventArgs", "Name"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Name
void System::Xml::Linq::XObjectChangeEventArgs::_set_Name(::System::Xml::Linq::XObjectChangeEventArgs* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XObjectChangeEventArgs", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Value
::System::Xml::Linq::XObjectChangeEventArgs* System::Xml::Linq::XObjectChangeEventArgs::_get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::_get_Value");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Linq::XObjectChangeEventArgs*>("System.Xml.Linq", "XObjectChangeEventArgs", "Value"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Linq.XObjectChangeEventArgs Value
void System::Xml::Linq::XObjectChangeEventArgs::_set_Value(::System::Xml::Linq::XObjectChangeEventArgs* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::_set_Value");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Linq", "XObjectChangeEventArgs", "Value", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Linq.XObjectChange objectChange
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XObjectChange& System::Xml::Linq::XObjectChangeEventArgs::dyn_objectChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::dyn_objectChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectChange"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XObjectChange*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XObjectChangeEventArgs..cctor
void System::Xml::Linq::XObjectChangeEventArgs::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XObjectChangeEventArgs::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Linq", "XObjectChangeEventArgs", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Linq.XNode
#include "System/Xml/Linq/XNode.hpp"
// Including type: System.Xml.Linq.SaveOptions
#include "System/Xml/Linq/SaveOptions.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.Linq.XNode next
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XNode*& System::Xml::Linq::XNode::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNode::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XNode.Remove
void System::Xml::Linq::XNode::Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNode::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XNode.ToString
::StringW System::Xml::Linq::XNode::ToString(::System::Xml::Linq::SaveOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNode::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, options);
}
// Autogenerated method: System.Xml.Linq.XNode.WriteTo
void System::Xml::Linq::XNode::WriteTo(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNode::WriteTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Linq::XNode*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Xml.Linq.XNode.AppendText
void System::Xml::Linq::XNode::AppendText(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNode::AppendText");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Linq::XNode*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.Linq.XNode.CloneNode
::System::Xml::Linq::XNode* System::Xml::Linq::XNode::CloneNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNode::CloneNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Linq::XNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XNode.GetXmlString
::StringW System::Xml::Linq::XNode::GetXmlString(::System::Xml::Linq::SaveOptions o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNode::GetXmlString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetXmlString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Xml.Linq.XNode.ToString
::StringW System::Xml::Linq::XNode::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XNode::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Linq.XText
#include "System/Xml/Linq/XText.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String text
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::Linq::XText::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XText::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Linq.XText.get_Value
::StringW System::Xml::Linq::XText::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XText::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XText.set_Value
void System::Xml::Linq::XText::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XText::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Linq.XText.get_NodeType
::System::Xml::XmlNodeType System::Xml::Linq::XText::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XText::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Linq::XObject*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Linq.XText.WriteTo
void System::Xml::Linq::XText::WriteTo(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XText::WriteTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Linq::XNode*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Xml.Linq.XText.AppendText
void System::Xml::Linq::XText::AppendText(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XText::AppendText");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Linq::XNode*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.Linq.XText.CloneNode
::System::Xml::Linq::XNode* System::Xml::Linq::XText::CloneNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Linq::XText::CloneNode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Linq::XNode*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XNode*, false>(this, ___internal__method);
}
