// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.SoundSource
#include "VROSC/SoundSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.SoundSource None
::VROSC::SoundSource VROSC::SoundSource::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SoundSource::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::SoundSource>("VROSC", "SoundSource", "None"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.SoundSource None
void VROSC::SoundSource::_set_None(::VROSC::SoundSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SoundSource::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "SoundSource", "None", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.SoundSource Helm
::VROSC::SoundSource VROSC::SoundSource::_get_Helm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SoundSource::_get_Helm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::SoundSource>("VROSC", "SoundSource", "Helm"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.SoundSource Helm
void VROSC::SoundSource::_set_Helm(::VROSC::SoundSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SoundSource::_set_Helm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "SoundSource", "Helm", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.SoundSource Drums
::VROSC::SoundSource VROSC::SoundSource::_get_Drums() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SoundSource::_get_Drums");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::SoundSource>("VROSC", "SoundSource", "Drums"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.SoundSource Drums
void VROSC::SoundSource::_set_Drums(::VROSC::SoundSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SoundSource::_set_Drums");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "SoundSource", "Drums", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.SoundSource Microphone
::VROSC::SoundSource VROSC::SoundSource::_get_Microphone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SoundSource::_get_Microphone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::SoundSource>("VROSC", "SoundSource", "Microphone"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.SoundSource Microphone
void VROSC::SoundSource::_set_Microphone(::VROSC::SoundSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SoundSource::_set_Microphone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "SoundSource", "Microphone", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.SoundSource Master
::VROSC::SoundSource VROSC::SoundSource::_get_Master() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SoundSource::_get_Master");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::SoundSource>("VROSC", "SoundSource", "Master"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.SoundSource Master
void VROSC::SoundSource::_set_Master(::VROSC::SoundSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SoundSource::_set_Master");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "SoundSource", "Master", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VROSC::SoundSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SoundSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.InternalSynthesizer
#include "VROSC/InternalSynthesizer.hpp"
// Including type: VROSC.InternalSynthesizer/VROSC.<Setup>d__10
#include "VROSC/InternalSynthesizer_-Setup-d__10.hpp"
// Including type: AudioHelm.AudioHelmClock
#include "AudioHelm/AudioHelmClock.hpp"
// Including type: VROSC.VirtuosoSampler
#include "VROSC/VirtuosoSampler.hpp"
// Including type: VROSC.HelmWrapper
#include "VROSC/HelmWrapper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: VROSC.PatchSettings
#include "VROSC/PatchSettings.hpp"
// Including type: VROSC.HandType
#include "VROSC/HandType.hpp"
// Including type: AudioHelm.Param
#include "AudioHelm/Param.hpp"
// Including type: VROSC.AudioHelmInstrumentWrapper
#include "VROSC/AudioHelmInstrumentWrapper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Action OnActivePatchChanged
::System::Action* VROSC::InternalSynthesizer::_get_OnActivePatchChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::_get_OnActivePatchChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("VROSC", "InternalSynthesizer", "OnActivePatchChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.Action OnActivePatchChanged
void VROSC::InternalSynthesizer::_set_OnActivePatchChanged(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::_set_OnActivePatchChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "InternalSynthesizer", "OnActivePatchChanged", value));
}
// Autogenerated instance field getter
// Get instance field: private AudioHelm.AudioHelmClock _audioHelmClock
[[deprecated("Use field access instead!")]] ::AudioHelm::AudioHelmClock*& VROSC::InternalSynthesizer::dyn__audioHelmClock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::dyn__audioHelmClock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioHelmClock"))->offset;
  return *reinterpret_cast<::AudioHelm::AudioHelmClock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.VirtuosoSampler _sampler
[[deprecated("Use field access instead!")]] ::VROSC::VirtuosoSampler*& VROSC::InternalSynthesizer::dyn__sampler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::dyn__sampler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sampler"))->offset;
  return *reinterpret_cast<::VROSC::VirtuosoSampler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.HelmWrapper _helmOne
[[deprecated("Use field access instead!")]] ::VROSC::HelmWrapper*& VROSC::InternalSynthesizer::dyn__helmOne() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::dyn__helmOne");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_helmOne"))->offset;
  return *reinterpret_cast<::VROSC::HelmWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.HelmWrapper _helmTwo
[[deprecated("Use field access instead!")]] ::VROSC::HelmWrapper*& VROSC::InternalSynthesizer::dyn__helmTwo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::dyn__helmTwo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_helmTwo"))->offset;
  return *reinterpret_cast<::VROSC::HelmWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.HelmWrapper> _helms
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::VROSC::HelmWrapper*>*& VROSC::InternalSynthesizer::dyn__helms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::dyn__helms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_helms"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::HelmWrapper*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.HelmWrapper _activeHelm
[[deprecated("Use field access instead!")]] ::VROSC::HelmWrapper*& VROSC::InternalSynthesizer::dyn__activeHelm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::dyn__activeHelm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeHelm"))->offset;
  return *reinterpret_cast<::VROSC::HelmWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.SoundSource _currentSoundSource
[[deprecated("Use field access instead!")]] ::VROSC::SoundSource& VROSC::InternalSynthesizer::dyn__currentSoundSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::dyn__currentSoundSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentSoundSource"))->offset;
  return *reinterpret_cast<::VROSC::SoundSource*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.WidgetSettings/VROSC.Identifier _currentInstrumentId
[[deprecated("Use field access instead!")]] ::VROSC::WidgetSettings::Identifier& VROSC::InternalSynthesizer::dyn__currentInstrumentId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::dyn__currentInstrumentId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentInstrumentId"))->offset;
  return *reinterpret_cast<::VROSC::WidgetSettings::Identifier*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _patchSet
[[deprecated("Use field access instead!")]] bool& VROSC::InternalSynthesizer::dyn__patchSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::dyn__patchSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_patchSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.InternalSynthesizer.Setup
::System::Threading::Tasks::Task* VROSC::InternalSynthesizer::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InternalSynthesizer.PlayNote
void VROSC::InternalSynthesizer::PlayNote(::VROSC::WidgetSettings::Identifier instrumentId, int note, float velocity, ::VROSC::PatchSettings* patchSettings, double predictedDspTime, ::VROSC::HandType handType, float pitch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::PlayNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instrumentId), ::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(patchSettings), ::il2cpp_utils::ExtractType(predictedDspTime), ::il2cpp_utils::ExtractType(handType), ::il2cpp_utils::ExtractType(pitch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instrumentId, note, velocity, patchSettings, predictedDspTime, handType, pitch);
}
// Autogenerated method: VROSC.InternalSynthesizer.StopNote
void VROSC::InternalSynthesizer::StopNote(int note, ::VROSC::PatchSettings* patchSettings, ::VROSC::HandType handType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::StopNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(note), ::il2cpp_utils::ExtractType(patchSettings), ::il2cpp_utils::ExtractType(handType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, patchSettings, handType);
}
// Autogenerated method: VROSC.InternalSynthesizer.SetMidiCC
void VROSC::InternalSynthesizer::SetMidiCC(float midiCCValue, int midiCC, ::VROSC::PatchSettings* patchSettings, ::VROSC::HandType handType, bool saveToPatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::SetMidiCC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMidiCC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(midiCCValue), ::il2cpp_utils::ExtractType(midiCC), ::il2cpp_utils::ExtractType(patchSettings), ::il2cpp_utils::ExtractType(handType), ::il2cpp_utils::ExtractType(saveToPatch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, midiCCValue, midiCC, patchSettings, handType, saveToPatch);
}
// Autogenerated method: VROSC.InternalSynthesizer.SetPitchBend
void VROSC::InternalSynthesizer::SetPitchBend(float pitchBendValue, ::VROSC::PatchSettings* patchSettings, ::VROSC::HandType handType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::SetPitchBend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPitchBend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pitchBendValue), ::il2cpp_utils::ExtractType(patchSettings), ::il2cpp_utils::ExtractType(handType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pitchBendValue, patchSettings, handType);
}
// Autogenerated method: VROSC.InternalSynthesizer.SetHelmParameterValue
void VROSC::InternalSynthesizer::SetHelmParameterValue(::VROSC::PatchSettings* patchSettings, ::AudioHelm::Param parameter, float newValue, ::VROSC::HandType handType, bool saveToPatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::SetHelmParameterValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHelmParameterValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(patchSettings), ::il2cpp_utils::ExtractType(parameter), ::il2cpp_utils::ExtractType(newValue), ::il2cpp_utils::ExtractType(handType), ::il2cpp_utils::ExtractType(saveToPatch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, patchSettings, parameter, newValue, handType, saveToPatch);
}
// Autogenerated method: VROSC.InternalSynthesizer.SetHelmParameterPercent
void VROSC::InternalSynthesizer::SetHelmParameterPercent(::VROSC::PatchSettings* patchSettings, ::AudioHelm::Param parameter, float newValue, ::VROSC::HandType handType, bool saveToPatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::SetHelmParameterPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHelmParameterPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(patchSettings), ::il2cpp_utils::ExtractType(parameter), ::il2cpp_utils::ExtractType(newValue), ::il2cpp_utils::ExtractType(handType), ::il2cpp_utils::ExtractType(saveToPatch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, patchSettings, parameter, newValue, handType, saveToPatch);
}
// Autogenerated method: VROSC.InternalSynthesizer.SetPatchToModularDrums
void VROSC::InternalSynthesizer::SetPatchToModularDrums() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::SetPatchToModularDrums");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPatchToModularDrums", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InternalSynthesizer.SetPatch
void VROSC::InternalSynthesizer::SetPatch(::VROSC::HelmWrapper* helmWrapper, ::VROSC::PatchSettings* patchSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::SetPatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(helmWrapper), ::il2cpp_utils::ExtractType(patchSettings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, helmWrapper, patchSettings);
}
// Autogenerated method: VROSC.InternalSynthesizer.AllNotesOff
void VROSC::InternalSynthesizer::AllNotesOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::AllNotesOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllNotesOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InternalSynthesizer.AllNotesOff
void VROSC::InternalSynthesizer::AllNotesOff(::Il2CppObject* patch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::AllNotesOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllNotesOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(patch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, patch);
}
// Autogenerated method: VROSC.InternalSynthesizer.SetPatchToMicrophone
void VROSC::InternalSynthesizer::SetPatchToMicrophone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::SetPatchToMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPatchToMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InternalSynthesizer.SetBPM
void VROSC::InternalSynthesizer::SetBPM(float bpm, bool reset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::SetBPM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBPM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bpm), ::il2cpp_utils::ExtractType(reset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bpm, reset);
}
// Autogenerated method: VROSC.InternalSynthesizer.GetHelmOrSamplerWrapper
::VROSC::AudioHelmInstrumentWrapper* VROSC::InternalSynthesizer::GetHelmOrSamplerWrapper(::VROSC::PatchSettings* patchSettings, ::VROSC::HandType handType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::GetHelmOrSamplerWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHelmOrSamplerWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(patchSettings), ::il2cpp_utils::ExtractType(handType)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::AudioHelmInstrumentWrapper*, false>(this, ___internal__method, patchSettings, handType);
}
// Autogenerated method: VROSC.InternalSynthesizer.GetCurrentInstrumentName
::StringW VROSC::InternalSynthesizer::GetCurrentInstrumentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::GetCurrentInstrumentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentInstrumentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InternalSynthesizer.GetCurrentPatchName
::StringW VROSC::InternalSynthesizer::GetCurrentPatchName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::GetCurrentPatchName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentPatchName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InternalSynthesizer.GetCurrentSoundSource
::VROSC::SoundSource VROSC::InternalSynthesizer::GetCurrentSoundSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::GetCurrentSoundSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentSoundSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::SoundSource, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.InternalSynthesizer/VROSC.<Setup>d__10
#include "VROSC/InternalSynthesizer_-Setup-d__10.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& VROSC::InternalSynthesizer::$Setup$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::$Setup$d__10::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& VROSC::InternalSynthesizer::$Setup$d__10::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::$Setup$d__10::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.InternalSynthesizer <>4__this
[[deprecated("Use field access instead!")]] ::VROSC::InternalSynthesizer*& VROSC::InternalSynthesizer::$Setup$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::$Setup$d__10::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::InternalSynthesizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& VROSC::InternalSynthesizer::$Setup$d__10::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::$Setup$d__10::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.InternalSynthesizer/VROSC.<Setup>d__10.MoveNext
void VROSC::InternalSynthesizer::$Setup$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::$Setup$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::InternalSynthesizer::$Setup$d__10), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InternalSynthesizer/VROSC.<Setup>d__10.SetStateMachine
void VROSC::InternalSynthesizer::$Setup$d__10::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InternalSynthesizer::$Setup$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::InternalSynthesizer::$Setup$d__10), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.PatchSettings
#include "VROSC/PatchSettings.hpp"
// Including type: AudioHelm.HelmPatchFormat
#include "AudioHelm/HelmPatchFormat.hpp"
// Including type: AudioHelm.Param
#include "AudioHelm/Param.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AudioHelm.HelmPatchFormat Patch
[[deprecated("Use field access instead!")]] ::AudioHelm::HelmPatchFormat*& VROSC::PatchSettings::dyn_Patch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PatchSettings::dyn_Patch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Patch"))->offset;
  return *reinterpret_cast<::AudioHelm::HelmPatchFormat**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.PatchSettings.GetVirtuosoAdjustedPercentValue
float VROSC::PatchSettings::GetVirtuosoAdjustedPercentValue(::AudioHelm::Param parameter, float percent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PatchSettings::GetVirtuosoAdjustedPercentValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "PatchSettings", "GetVirtuosoAdjustedPercentValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter), ::il2cpp_utils::ExtractType(percent)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameter, percent);
}
// Autogenerated method: VROSC.PatchSettings.SetParameterPercent
void VROSC::PatchSettings::SetParameterPercent(::AudioHelm::Param parameter, float percent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PatchSettings::SetParameterPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParameterPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter), ::il2cpp_utils::ExtractType(percent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameter, percent);
}
// Autogenerated method: VROSC.PatchSettings.GetParameterPercent
float VROSC::PatchSettings::GetParameterPercent(::AudioHelm::Param parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PatchSettings::GetParameterPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameterPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, parameter);
}
// Autogenerated method: VROSC.PatchSettings.SetParameterValue
void VROSC::PatchSettings::SetParameterValue(::AudioHelm::Param parameter, float newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PatchSettings::SetParameterValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParameterValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameter, newValue);
}
// Autogenerated method: VROSC.PatchSettings.GetParameterValue
float VROSC::PatchSettings::GetParameterValue(::AudioHelm::Param parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::PatchSettings::GetParameterValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameterValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameter)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, parameter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.SamplerWrapper
#include "VROSC/SamplerWrapper.hpp"
// Including type: AudioHelm.Sampler
#include "AudioHelm/Sampler.hpp"
// Including type: VROSC.InternalSynthesizer
#include "VROSC/InternalSynthesizer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AudioHelm.Sampler _sampler
[[deprecated("Use field access instead!")]] ::AudioHelm::Sampler*& VROSC::SamplerWrapper::dyn__sampler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SamplerWrapper::dyn__sampler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sampler"))->offset;
  return *reinterpret_cast<::AudioHelm::Sampler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.InternalSynthesizer _internalSynthesizer
[[deprecated("Use field access instead!")]] ::VROSC::InternalSynthesizer*& VROSC::SamplerWrapper::dyn__internalSynthesizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SamplerWrapper::dyn__internalSynthesizer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_internalSynthesizer"))->offset;
  return *reinterpret_cast<::VROSC::InternalSynthesizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.SamplerWrapper.ResetInstrument
void VROSC::SamplerWrapper::ResetInstrument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SamplerWrapper::ResetInstrument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetInstrument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.SamplerWrapper.Setup
void VROSC::SamplerWrapper::Setup(::VROSC::InternalSynthesizer* internalSynthesizer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SamplerWrapper::Setup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::AudioHelmInstrumentWrapper*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, internalSynthesizer);
}
// Autogenerated method: VROSC.SamplerWrapper.NoteOn
void VROSC::SamplerWrapper::NoteOn(int note, float velocity, double predictedDspTime, float pitch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SamplerWrapper::NoteOn");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::AudioHelmInstrumentWrapper*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, velocity, predictedDspTime, pitch);
}
// Autogenerated method: VROSC.SamplerWrapper.NoteOff
void VROSC::SamplerWrapper::NoteOff(int note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SamplerWrapper::NoteOff");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::AudioHelmInstrumentWrapper*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note);
}
// Autogenerated method: VROSC.SamplerWrapper.AllNotesOff
void VROSC::SamplerWrapper::AllNotesOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SamplerWrapper::AllNotesOff");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::AudioHelmInstrumentWrapper*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.SamplerWrapper.SetMidiCC
void VROSC::SamplerWrapper::SetMidiCC(float midiCCValue, int midiCC) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SamplerWrapper::SetMidiCC");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::AudioHelmInstrumentWrapper*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, midiCCValue, midiCC);
}
// Autogenerated method: VROSC.SamplerWrapper.SetPitchBend
void VROSC::SamplerWrapper::SetPitchBend(float pitchBendValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SamplerWrapper::SetPitchBend");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::AudioHelmInstrumentWrapper*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pitchBendValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.AudioMixManager
#include "VROSC/AudioMixManager.hpp"
// Including type: VROSC.AudioMixManager/VROSC.VolumeParameter
#include "VROSC/AudioMixManager_VolumeParameter.hpp"
// Including type: VROSC.AudioMixManager/VROSC.<FadeCoroutine>d__15
#include "VROSC/AudioMixManager_-FadeCoroutine-d__15.hpp"
// Including type: UnityEngine.Audio.AudioMixer
#include "UnityEngine/Audio/AudioMixer.hpp"
// Including type: VROSC.ReverbManager
#include "VROSC/ReverbManager.hpp"
// Including type: VROSC.CompressionManager
#include "VROSC/CompressionManager.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: VROSC.UserDataControllers
#include "VROSC/UserDataControllers.hpp"
// Including type: VROSC.Error
#include "VROSC/Error.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single _minVolumeDb
float VROSC::AudioMixManager::_get__minVolumeDb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::_get__minVolumeDb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("VROSC", "AudioMixManager", "_minVolumeDb"));
}
// Autogenerated static field setter
// Set static field: static private System.Single _minVolumeDb
void VROSC::AudioMixManager::_set__minVolumeDb(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::_set__minVolumeDb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AudioMixManager", "_minVolumeDb", value));
}
// Autogenerated static field getter
// Get static field: static public System.String GameSoundsVolume
::StringW VROSC::AudioMixManager::_get_GameSoundsVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::_get_GameSoundsVolume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "AudioMixManager", "GameSoundsVolume"));
}
// Autogenerated static field setter
// Set static field: static public System.String GameSoundsVolume
void VROSC::AudioMixManager::_set_GameSoundsVolume(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::_set_GameSoundsVolume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AudioMixManager", "GameSoundsVolume", value));
}
// Autogenerated static field getter
// Get static field: static public System.String MicrophoneReverbVolume
::StringW VROSC::AudioMixManager::_get_MicrophoneReverbVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::_get_MicrophoneReverbVolume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "AudioMixManager", "MicrophoneReverbVolume"));
}
// Autogenerated static field setter
// Set static field: static public System.String MicrophoneReverbVolume
void VROSC::AudioMixManager::_set_MicrophoneReverbVolume(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::_set_MicrophoneReverbVolume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AudioMixManager", "MicrophoneReverbVolume", value));
}
// Autogenerated static field getter
// Get static field: static public System.String MasterVolume
::StringW VROSC::AudioMixManager::_get_MasterVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::_get_MasterVolume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "AudioMixManager", "MasterVolume"));
}
// Autogenerated static field setter
// Set static field: static public System.String MasterVolume
void VROSC::AudioMixManager::_set_MasterVolume(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::_set_MasterVolume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AudioMixManager", "MasterVolume", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Audio.AudioMixer _audioMixer
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixer*& VROSC::AudioMixManager::dyn__audioMixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::dyn__audioMixer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioMixer"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.ReverbManager _reverbManager
[[deprecated("Use field access instead!")]] ::VROSC::ReverbManager*& VROSC::AudioMixManager::dyn__reverbManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::dyn__reverbManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reverbManager"))->offset;
  return *reinterpret_cast<::VROSC::ReverbManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.CompressionManager _compressionManager
[[deprecated("Use field access instead!")]] ::VROSC::CompressionManager*& VROSC::AudioMixManager::dyn__compressionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::dyn__compressionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compressionManager"))->offset;
  return *reinterpret_cast<::VROSC::CompressionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,VROSC.AudioMixManager/VROSC.VolumeParameter> _volumeParameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::VROSC::AudioMixManager::VolumeParameter*>*& VROSC::AudioMixManager::dyn__volumeParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::dyn__volumeParameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volumeParameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::VROSC::AudioMixManager::VolumeParameter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fadedOutMaster
[[deprecated("Use field access instead!")]] bool& VROSC::AudioMixManager::dyn__fadedOutMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::dyn__fadedOutMaster");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadedOutMaster"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.AudioMixManager.get_AudioMixer
::UnityEngine::Audio::AudioMixer* VROSC::AudioMixManager::get_AudioMixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::get_AudioMixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Audio::AudioMixer*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AudioMixManager.Awake
void VROSC::AudioMixManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AudioMixManager.OnDestroy
void VROSC::AudioMixManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AudioMixManager.Fade
void VROSC::AudioMixManager::Fade(::StringW parameterName, float fadeTime, float targetVolumeFraction, ::Il2CppObject* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::Fade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameterName), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(targetVolumeFraction), ::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameterName, fadeTime, targetVolumeFraction, source);
}
// Autogenerated method: VROSC.AudioMixManager.FadeCoroutine
::System::Collections::IEnumerator* VROSC::AudioMixManager::FadeCoroutine(::StringW parameterName, float fadeTime, float unfadedVolume, float targetVolumeFractionDb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::FadeCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameterName), ::il2cpp_utils::ExtractType(fadeTime), ::il2cpp_utils::ExtractType(unfadedVolume), ::il2cpp_utils::ExtractType(targetVolumeFractionDb)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, parameterName, fadeTime, unfadedVolume, targetVolumeFractionDb);
}
// Autogenerated method: VROSC.AudioMixManager.SetVolume
void VROSC::AudioMixManager::SetVolume(::StringW parameterName, float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::SetVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameterName), ::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameterName, volume);
}
// Autogenerated method: VROSC.AudioMixManager.SetVolumeDb
void VROSC::AudioMixManager::SetVolumeDb(::StringW parameterName, float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::SetVolumeDb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVolumeDb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameterName), ::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameterName, volume);
}
// Autogenerated method: VROSC.AudioMixManager.PreferencesDataLoaded
void VROSC::AudioMixManager::PreferencesDataLoaded(::VROSC::UserDataControllers* userDataControllers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::PreferencesDataLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreferencesDataLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userDataControllers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userDataControllers);
}
// Autogenerated method: VROSC.AudioMixManager.SaveSucceeded
void VROSC::AudioMixManager::SaveSucceeded(::StringW sessionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::SaveSucceeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveSucceeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId);
}
// Autogenerated method: VROSC.AudioMixManager.SaveFailed
void VROSC::AudioMixManager::SaveFailed(::StringW sessionId, ::VROSC::Error error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::SaveFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, error);
}
// Autogenerated method: VROSC.AudioMixManager.LoadSucceeded
void VROSC::AudioMixManager::LoadSucceeded(::StringW sessionId, bool isDefaultSession) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::LoadSucceeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSucceeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(isDefaultSession)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, isDefaultSession);
}
// Autogenerated method: VROSC.AudioMixManager.LoadFailed
void VROSC::AudioMixManager::LoadFailed(::StringW sessionId, bool isDefaultSession, ::VROSC::Error error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::LoadFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(isDefaultSession), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, isDefaultSession, error);
}
// Autogenerated method: VROSC.AudioMixManager.FadeOutForLoadSave
void VROSC::AudioMixManager::FadeOutForLoadSave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::FadeOutForLoadSave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOutForLoadSave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AudioMixManager.FadeInAfterLoadSave
void VROSC::AudioMixManager::FadeInAfterLoadSave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::FadeInAfterLoadSave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeInAfterLoadSave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AudioMixManager.SetDrumsReverbAmount
void VROSC::AudioMixManager::SetDrumsReverbAmount(float amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::SetDrumsReverbAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDrumsReverbAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amount);
}
// Autogenerated method: VROSC.AudioMixManager.SetReverbLength
void VROSC::AudioMixManager::SetReverbLength(float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::SetReverbLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReverbLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, length);
}
// Autogenerated method: VROSC.AudioMixManager.SetDrumsDryVolume
void VROSC::AudioMixManager::SetDrumsDryVolume(float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::SetDrumsDryVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDrumsDryVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, volume);
}
// Autogenerated method: VROSC.AudioMixManager.SetDrumsCompression
void VROSC::AudioMixManager::SetDrumsCompression(float compression) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::SetDrumsCompression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDrumsCompression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compression)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, compression);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.AudioMixManager/VROSC.VolumeParameter
#include "VROSC/AudioMixManager_VolumeParameter.hpp"
// Including type: VROSC.AudioMixManager/VROSC.VolumeParameter/VROSC.FadeSource
#include "VROSC/AudioMixManager_VolumeParameter_FadeSource.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Audio.AudioMixer
#include "UnityEngine/Audio/AudioMixer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& VROSC::AudioMixManager::VolumeParameter::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::VolumeParameter::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single UnfadedVolume
[[deprecated("Use field access instead!")]] float& VROSC::AudioMixManager::VolumeParameter::dyn_UnfadedVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::VolumeParameter::dyn_UnfadedVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UnfadedVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Coroutine FadingCoroutine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& VROSC::AudioMixManager::VolumeParameter::dyn_FadingCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::VolumeParameter::dyn_FadingCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FadingCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VROSC.AudioMixManager/VROSC.VolumeParameter/VROSC.FadeSource> _fadeSources
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::VROSC::AudioMixManager::VolumeParameter::FadeSource*>*& VROSC::AudioMixManager::VolumeParameter::dyn__fadeSources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::VolumeParameter::dyn__fadeSources");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeSources"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::VROSC::AudioMixManager::VolumeParameter::FadeSource*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.AudioMixManager/VROSC.VolumeParameter.RegisterFade
void VROSC::AudioMixManager::VolumeParameter::RegisterFade(::Il2CppObject* source, float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::VolumeParameter::RegisterFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(volume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, volume);
}
// Autogenerated method: VROSC.AudioMixManager/VROSC.VolumeParameter.UnregisterFade
void VROSC::AudioMixManager::VolumeParameter::UnregisterFade(::Il2CppObject* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::VolumeParameter::UnregisterFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: VROSC.AudioMixManager/VROSC.VolumeParameter.GetFadeVolume
float VROSC::AudioMixManager::VolumeParameter::GetFadeVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::VolumeParameter::GetFadeVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFadeVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.AudioMixManager/VROSC.VolumeParameter/VROSC.FadeSource
#include "VROSC/AudioMixManager_VolumeParameter_FadeSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object Source
[[deprecated("Use field access instead!")]] ::Il2CppObject*& VROSC::AudioMixManager::VolumeParameter::FadeSource::dyn_Source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::VolumeParameter::FadeSource::dyn_Source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Source"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Volume
[[deprecated("Use field access instead!")]] float& VROSC::AudioMixManager::VolumeParameter::FadeSource::dyn_Volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::VolumeParameter::FadeSource::dyn_Volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.AudioMixManager/VROSC.<FadeCoroutine>d__15
#include "VROSC/AudioMixManager_-FadeCoroutine-d__15.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& VROSC::AudioMixManager::$FadeCoroutine$d__15::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::$FadeCoroutine$d__15::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& VROSC::AudioMixManager::$FadeCoroutine$d__15::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::$FadeCoroutine$d__15::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.AudioMixManager <>4__this
[[deprecated("Use field access instead!")]] ::VROSC::AudioMixManager*& VROSC::AudioMixManager::$FadeCoroutine$d__15::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::$FadeCoroutine$d__15::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::AudioMixManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String parameterName
[[deprecated("Use field access instead!")]] ::StringW& VROSC::AudioMixManager::$FadeCoroutine$d__15::dyn_parameterName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::$FadeCoroutine$d__15::dyn_parameterName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameterName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated("Use field access instead!")]] float& VROSC::AudioMixManager::$FadeCoroutine$d__15::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::$FadeCoroutine$d__15::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single unfadedVolume
[[deprecated("Use field access instead!")]] float& VROSC::AudioMixManager::$FadeCoroutine$d__15::dyn_unfadedVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::$FadeCoroutine$d__15::dyn_unfadedVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unfadedVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single targetVolumeFractionDb
[[deprecated("Use field access instead!")]] float& VROSC::AudioMixManager::$FadeCoroutine$d__15::dyn_targetVolumeFractionDb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::$FadeCoroutine$d__15::dyn_targetVolumeFractionDb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetVolumeFractionDb"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startVolume>5__2
[[deprecated("Use field access instead!")]] float& VROSC::AudioMixManager::$FadeCoroutine$d__15::dyn_$startVolume$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::$FadeCoroutine$d__15::dyn_$startVolume$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startVolume>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <progress>5__3
[[deprecated("Use field access instead!")]] float& VROSC::AudioMixManager::$FadeCoroutine$d__15::dyn_$progress$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::$FadeCoroutine$d__15::dyn_$progress$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<progress>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.AudioMixManager/VROSC.<FadeCoroutine>d__15.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* VROSC::AudioMixManager::$FadeCoroutine$d__15::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::$FadeCoroutine$d__15::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::AudioMixManager::$FadeCoroutine$d__15*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AudioMixManager/VROSC.<FadeCoroutine>d__15.System.Collections.IEnumerator.get_Current
::Il2CppObject* VROSC::AudioMixManager::$FadeCoroutine$d__15::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::$FadeCoroutine$d__15::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::AudioMixManager::$FadeCoroutine$d__15*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AudioMixManager/VROSC.<FadeCoroutine>d__15.System.IDisposable.Dispose
void VROSC::AudioMixManager::$FadeCoroutine$d__15::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::$FadeCoroutine$d__15::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::AudioMixManager::$FadeCoroutine$d__15*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AudioMixManager/VROSC.<FadeCoroutine>d__15.MoveNext
bool VROSC::AudioMixManager::$FadeCoroutine$d__15::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::$FadeCoroutine$d__15::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::AudioMixManager::$FadeCoroutine$d__15*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AudioMixManager/VROSC.<FadeCoroutine>d__15.System.Collections.IEnumerator.Reset
void VROSC::AudioMixManager::$FadeCoroutine$d__15::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioMixManager::$FadeCoroutine$d__15::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::AudioMixManager::$FadeCoroutine$d__15*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.AudioRecorder
#include "VROSC/AudioRecorder.hpp"
// Including type: VROSC.HelmRecorder
#include "VROSC/HelmRecorder.hpp"
// Including type: VROSC.MicrophoneRecorder
#include "VROSC/MicrophoneRecorder.hpp"
// Including type: VROSC.MixerGroupRecorder
#include "VROSC/MixerGroupRecorder.hpp"
// Including type: VROSC.MasterRecorder
#include "VROSC/MasterRecorder.hpp"
// Including type: VROSC.SoundSource
#include "VROSC/SoundSource.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 BufferSize
int VROSC::AudioRecorder::_get_BufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::_get_BufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("VROSC", "AudioRecorder", "BufferSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 BufferSize
void VROSC::AudioRecorder::_set_BufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::_set_BufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AudioRecorder", "BufferSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 <Channels>k__BackingField
int VROSC::AudioRecorder::_get_$Channels$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::_get_$Channels$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>("VROSC", "AudioRecorder", "<Channels>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 <Channels>k__BackingField
void VROSC::AudioRecorder::_set_$Channels$k__BackingField(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::_set_$Channels$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AudioRecorder", "<Channels>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 SampleRate
int VROSC::AudioRecorder::_get_SampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::_get_SampleRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("VROSC", "AudioRecorder", "SampleRate"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 SampleRate
void VROSC::AudioRecorder::_set_SampleRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::_set_SampleRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AudioRecorder", "SampleRate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxBufferSize
int VROSC::AudioRecorder::_get_MaxBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::_get_MaxBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("VROSC", "AudioRecorder", "MaxBufferSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxBufferSize
void VROSC::AudioRecorder::_set_MaxBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::_set_MaxBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AudioRecorder", "MaxBufferSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxChannels
int VROSC::AudioRecorder::_get_MaxChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::_get_MaxChannels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("VROSC", "AudioRecorder", "MaxChannels"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxChannels
void VROSC::AudioRecorder::_set_MaxChannels(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::_set_MaxChannels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AudioRecorder", "MaxChannels", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DesiredSampleRate
int VROSC::AudioRecorder::_get_DesiredSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::_get_DesiredSampleRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("VROSC", "AudioRecorder", "DesiredSampleRate"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DesiredSampleRate
void VROSC::AudioRecorder::_set_DesiredSampleRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::_set_DesiredSampleRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AudioRecorder", "DesiredSampleRate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single RecordingBufferLengthSeconds
float VROSC::AudioRecorder::_get_RecordingBufferLengthSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::_get_RecordingBufferLengthSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("VROSC", "AudioRecorder", "RecordingBufferLengthSeconds"));
}
// Autogenerated static field setter
// Set static field: static public System.Single RecordingBufferLengthSeconds
void VROSC::AudioRecorder::_set_RecordingBufferLengthSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::_set_RecordingBufferLengthSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AudioRecorder", "RecordingBufferLengthSeconds", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single AudioLatency
float VROSC::AudioRecorder::_get_AudioLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::_get_AudioLatency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("VROSC", "AudioRecorder", "AudioLatency"));
}
// Autogenerated static field setter
// Set static field: static public System.Single AudioLatency
void VROSC::AudioRecorder::_set_AudioLatency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::_set_AudioLatency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AudioRecorder", "AudioLatency", value));
}
// Autogenerated instance field getter
// Get instance field: private VROSC.HelmRecorder _helmRecorder
[[deprecated("Use field access instead!")]] ::VROSC::HelmRecorder*& VROSC::AudioRecorder::dyn__helmRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::dyn__helmRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_helmRecorder"))->offset;
  return *reinterpret_cast<::VROSC::HelmRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.MicrophoneRecorder _microphoneRecorder
[[deprecated("Use field access instead!")]] ::VROSC::MicrophoneRecorder*& VROSC::AudioRecorder::dyn__microphoneRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::dyn__microphoneRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_microphoneRecorder"))->offset;
  return *reinterpret_cast<::VROSC::MicrophoneRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.MixerGroupRecorder _samplerRecorder
[[deprecated("Use field access instead!")]] ::VROSC::MixerGroupRecorder*& VROSC::AudioRecorder::dyn__samplerRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::dyn__samplerRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_samplerRecorder"))->offset;
  return *reinterpret_cast<::VROSC::MixerGroupRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.MasterRecorder _masterRecorder
[[deprecated("Use field access instead!")]] ::VROSC::MasterRecorder*& VROSC::AudioRecorder::dyn__masterRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::dyn__masterRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_masterRecorder"))->offset;
  return *reinterpret_cast<::VROSC::MasterRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.AudioRecorder.get_Channels
int VROSC::AudioRecorder::get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::get_Channels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "AudioRecorder", "get_Channels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.AudioRecorder.set_Channels
void VROSC::AudioRecorder::set_Channels(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::set_Channels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "AudioRecorder", "set_Channels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: VROSC.AudioRecorder..cctor
void VROSC::AudioRecorder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "AudioRecorder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.AudioRecorder.Setup
void VROSC::AudioRecorder::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AudioRecorder.ResetAudioBufferSize
void VROSC::AudioRecorder::ResetAudioBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::ResetAudioBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetAudioBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AudioRecorder.StartRecording
void VROSC::AudioRecorder::StartRecording(::VROSC::SoundSource soundSource, ::System::Action_1<::ArrayW<float>>* recordingFilledCallback, int samples, ::ArrayW<float> fillArray, bool overdub, int callbackAfterLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::StartRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundSource), ::il2cpp_utils::ExtractType(recordingFilledCallback), ::il2cpp_utils::ExtractType(samples), ::il2cpp_utils::ExtractType(fillArray), ::il2cpp_utils::ExtractType(overdub), ::il2cpp_utils::ExtractType(callbackAfterLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, soundSource, recordingFilledCallback, samples, fillArray, overdub, callbackAfterLength);
}
// Autogenerated method: VROSC.AudioRecorder.StealRecording
::ArrayW<float> VROSC::AudioRecorder::StealRecording(::VROSC::SoundSource soundSource, bool clear, bool stealEvenIfNotRecording) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::StealRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StealRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundSource), ::il2cpp_utils::ExtractType(clear), ::il2cpp_utils::ExtractType(stealEvenIfNotRecording)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method, soundSource, clear, stealEvenIfNotRecording);
}
// Autogenerated method: VROSC.AudioRecorder.GetRecordingSpan
::ArrayW<float> VROSC::AudioRecorder::GetRecordingSpan(::VROSC::SoundSource soundSource, int startIndex, int endIndex, ByRef<int> currentIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::GetRecordingSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecordingSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundSource), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(endIndex), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method, soundSource, startIndex, endIndex, byref(currentIndex));
}
// Autogenerated method: VROSC.AudioRecorder.StopRecording
::ArrayW<float> VROSC::AudioRecorder::StopRecording(::VROSC::SoundSource soundSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::StopRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundSource)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method, soundSource);
}
// Autogenerated method: VROSC.AudioRecorder.SetMicrophoneSamples
void VROSC::AudioRecorder::SetMicrophoneSamples(::ArrayW<float> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::SetMicrophoneSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMicrophoneSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: VROSC.AudioRecorder.ClearMicrophoneBuffer
void VROSC::AudioRecorder::ClearMicrophoneBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::ClearMicrophoneBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMicrophoneBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AudioRecorder.GetRawMicrophoneRecordingData
::ArrayW<float> VROSC::AudioRecorder::GetRawMicrophoneRecordingData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::GetRawMicrophoneRecordingData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawMicrophoneRecordingData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AudioRecorder.IsRecording
bool VROSC::AudioRecorder::IsRecording(::VROSC::SoundSource soundSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::IsRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundSource)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, soundSource);
}
// Autogenerated method: VROSC.AudioRecorder.IsRecording
bool VROSC::AudioRecorder::IsRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AudioRecorder::IsRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.HelmRecorder
#include "VROSC/HelmRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single[] _secondaryHelmData
[[deprecated("Use field access instead!")]] ::ArrayW<float>& VROSC::HelmRecorder::dyn__secondaryHelmData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HelmRecorder::dyn__secondaryHelmData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secondaryHelmData"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.HelmRecorder.OnAudioFilterRead
void VROSC::HelmRecorder::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::HelmRecorder::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MasterRecorder
#include "VROSC/MasterRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VROSC.MasterRecorder.GetMicrophoneLatency
int VROSC::MasterRecorder::GetMicrophoneLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MasterRecorder::GetMicrophoneLatency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMicrophoneLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MasterRecorder.OnAudioFilterRead
void VROSC::MasterRecorder::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MasterRecorder::OnAudioFilterRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::MixerGroupRecorder*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MicrophoneRecorder
#include "VROSC/MicrophoneRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single[] _effectData
[[deprecated("Use field access instead!")]] ::ArrayW<float>& VROSC::MicrophoneRecorder::dyn__effectData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneRecorder::dyn__effectData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_effectData"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _microphoneData
[[deprecated("Use field access instead!")]] ::ArrayW<float>& VROSC::MicrophoneRecorder::dyn__microphoneData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneRecorder::dyn__microphoneData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_microphoneData"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.MicrophoneRecorder.SetMicrophoneData
void VROSC::MicrophoneRecorder::SetMicrophoneData(::ArrayW<float> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneRecorder::SetMicrophoneData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMicrophoneData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: VROSC.MicrophoneRecorder.ClearMicrophoneData
void VROSC::MicrophoneRecorder::ClearMicrophoneData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneRecorder::ClearMicrophoneData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMicrophoneData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MicrophoneRecorder.GetRawMicrophoneRecordingData
::ArrayW<float> VROSC::MicrophoneRecorder::GetRawMicrophoneRecordingData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneRecorder::GetRawMicrophoneRecordingData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawMicrophoneRecordingData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.MicrophoneRecorder.OnAudioFilterRead
void VROSC::MicrophoneRecorder::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MicrophoneRecorder::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MixerGroupRecorder
#include "VROSC/MixerGroupRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Single[] _mixerGroupData
[[deprecated("Use field access instead!")]] ::ArrayW<float>& VROSC::MixerGroupRecorder::dyn__mixerGroupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MixerGroupRecorder::dyn__mixerGroupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mixerGroupData"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _routingChannel
[[deprecated("Use field access instead!")]] int& VROSC::MixerGroupRecorder::dyn__routingChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MixerGroupRecorder::dyn__routingChannel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_routingChannel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.MixerGroupRecorder.Setup
void VROSC::MixerGroupRecorder::Setup(int channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MixerGroupRecorder::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channel);
}
// Autogenerated method: VROSC.MixerGroupRecorder.OnAudioFilterRead
void VROSC::MixerGroupRecorder::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MixerGroupRecorder::OnAudioFilterRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::MixerGroupRecorder*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.SourceRecorder
#include "VROSC/SourceRecorder.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.Single> _fullRecording
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<float>*& VROSC::SourceRecorder::dyn__fullRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::dyn__fullRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullRecording"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _fullRecordingWriteIndex
[[deprecated("Use field access instead!")]] int& VROSC::SourceRecorder::dyn__fullRecordingWriteIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::dyn__fullRecordingWriteIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullRecordingWriteIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _fullRecordingMaxLength
[[deprecated("Use field access instead!")]] int& VROSC::SourceRecorder::dyn__fullRecordingMaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::dyn__fullRecordingMaxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullRecordingMaxLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Single[]> OnRecordingFilled
[[deprecated("Use field access instead!")]] ::System::Action_1<::ArrayW<float>>*& VROSC::SourceRecorder::dyn_OnRecordingFilled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::dyn_OnRecordingFilled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnRecordingFilled"))->offset;
  return *reinterpret_cast<::System::Action_1<::ArrayW<float>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _performRecordingFilledCallback
[[deprecated("Use field access instead!")]] bool& VROSC::SourceRecorder::dyn__performRecordingFilledCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::dyn__performRecordingFilledCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_performRecordingFilledCallback"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _callbackAfterLength
[[deprecated("Use field access instead!")]] int& VROSC::SourceRecorder::dyn__callbackAfterLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::dyn__callbackAfterLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_callbackAfterLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _recording
[[deprecated("Use field access instead!")]] bool& VROSC::SourceRecorder::dyn__recording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::dyn__recording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recording"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _overdub
[[deprecated("Use field access instead!")]] bool& VROSC::SourceRecorder::dyn__overdub() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::dyn__overdub");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overdub"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean _useArrayReference
[[deprecated("Use field access instead!")]] bool& VROSC::SourceRecorder::dyn__useArrayReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::dyn__useArrayReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useArrayReference"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single[] _arrayReference
[[deprecated("Use field access instead!")]] ::ArrayW<float>& VROSC::SourceRecorder::dyn__arrayReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::dyn__arrayReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arrayReference"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.SourceRecorder.get_Recording
bool VROSC::SourceRecorder::get_Recording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::get_Recording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Recording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.SourceRecorder.RoutingDemo_GetData
void VROSC::SourceRecorder::RoutingDemo_GetData(int target, ::ArrayW<float> data, int numsamples, int numchannels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::RoutingDemo_GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "SourceRecorder", "RoutingDemo_GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(numsamples), ::il2cpp_utils::ExtractType(numchannels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, data, numsamples, numchannels);
}
// Autogenerated method: VROSC.SourceRecorder.Setup
void VROSC::SourceRecorder::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.SourceRecorder.Update
void VROSC::SourceRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.SourceRecorder.StartRecording
void VROSC::SourceRecorder::StartRecording(::System::Action_1<::ArrayW<float>>* recordingFilledCallback, int length, ::ArrayW<float> arrayReference, bool overdub, int callbackAfterLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::StartRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SourceRecorder*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, recordingFilledCallback, length, arrayReference, overdub, callbackAfterLength);
}
// Autogenerated method: VROSC.SourceRecorder.StopRecording
::ArrayW<float> VROSC::SourceRecorder::StopRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::StopRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.SourceRecorder.StealRecording
::ArrayW<float> VROSC::SourceRecorder::StealRecording(bool clear, bool stealEvenIfNotRecording) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::StealRecording");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SourceRecorder*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method, clear, stealEvenIfNotRecording);
}
// Autogenerated method: VROSC.SourceRecorder.GetRecordingSpan
::ArrayW<float> VROSC::SourceRecorder::GetRecordingSpan(int startIndex, int endIndex, ByRef<int> currentIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::GetRecordingSpan");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SourceRecorder*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method, startIndex, endIndex, byref(currentIndex));
}
// Autogenerated method: VROSC.SourceRecorder.CheckBuffer
void VROSC::SourceRecorder::CheckBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::CheckBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.SourceRecorder.CreateRecordingCopy
::ArrayW<float> VROSC::SourceRecorder::CreateRecordingCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::CreateRecordingCopy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::SourceRecorder*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.SourceRecorder.AddDataToRecording
void VROSC::SourceRecorder::AddDataToRecording(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::SourceRecorder::AddDataToRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDataToRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.BeatCounter
#include "VROSC/BeatCounter.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VROSC.Metronome
#include "VROSC/Metronome.hpp"
// Including type: VROSC.BeatCounterUI
#include "VROSC/BeatCounterUI.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: VROSC.UserDataControllers
#include "VROSC/UserDataControllers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single LooperMinBPM
float VROSC::BeatCounter::_get_LooperMinBPM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::_get_LooperMinBPM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("VROSC", "BeatCounter", "LooperMinBPM"));
}
// Autogenerated static field setter
// Set static field: static public System.Single LooperMinBPM
void VROSC::BeatCounter::_set_LooperMinBPM(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::_set_LooperMinBPM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "BeatCounter", "LooperMinBPM", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single ManualMinBPM
float VROSC::BeatCounter::_get_ManualMinBPM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::_get_ManualMinBPM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("VROSC", "BeatCounter", "ManualMinBPM"));
}
// Autogenerated static field setter
// Set static field: static public System.Single ManualMinBPM
void VROSC::BeatCounter::_set_ManualMinBPM(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::_set_ManualMinBPM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "BeatCounter", "ManualMinBPM", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single ManualMaxBPM
float VROSC::BeatCounter::_get_ManualMaxBPM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::_get_ManualMaxBPM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("VROSC", "BeatCounter", "ManualMaxBPM"));
}
// Autogenerated static field setter
// Set static field: static public System.Single ManualMaxBPM
void VROSC::BeatCounter::_set_ManualMaxBPM(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::_set_ManualMaxBPM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "BeatCounter", "ManualMaxBPM", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single DefaultBPM
float VROSC::BeatCounter::_get_DefaultBPM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::_get_DefaultBPM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("VROSC", "BeatCounter", "DefaultBPM"));
}
// Autogenerated static field setter
// Set static field: static public System.Single DefaultBPM
void VROSC::BeatCounter::_set_DefaultBPM(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::_set_DefaultBPM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "BeatCounter", "DefaultBPM", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<VROSC.BeatCounter/VROSC.SyncSource> OnSyncSourceChanged
::System::Action_1<::VROSC::BeatCounter::SyncSource>* VROSC::BeatCounter::_get_OnSyncSourceChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::_get_OnSyncSourceChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::VROSC::BeatCounter::SyncSource>*>("VROSC", "BeatCounter", "OnSyncSourceChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<VROSC.BeatCounter/VROSC.SyncSource> OnSyncSourceChanged
void VROSC::BeatCounter::_set_OnSyncSourceChanged(::System::Action_1<::VROSC::BeatCounter::SyncSource>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::_set_OnSyncSourceChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "BeatCounter", "OnSyncSourceChanged", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Int32> OnBeatsPerBarChanged
::System::Action_1<int>* VROSC::BeatCounter::_get_OnBeatsPerBarChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::_get_OnBeatsPerBarChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<int>*>("VROSC", "BeatCounter", "OnBeatsPerBarChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Int32> OnBeatsPerBarChanged
void VROSC::BeatCounter::_set_OnBeatsPerBarChanged(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::_set_OnBeatsPerBarChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "BeatCounter", "OnBeatsPerBarChanged", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Single> OnBPMChanged
::System::Action_1<float>* VROSC::BeatCounter::_get_OnBPMChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::_get_OnBPMChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<float>*>("VROSC", "BeatCounter", "OnBPMChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Single> OnBPMChanged
void VROSC::BeatCounter::_set_OnBPMChanged(::System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::_set_OnBPMChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "BeatCounter", "OnBPMChanged", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Int32> OnVisualBeat
::System::Action_1<int>* VROSC::BeatCounter::_get_OnVisualBeat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::_get_OnVisualBeat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<int>*>("VROSC", "BeatCounter", "OnVisualBeat"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Int32> OnVisualBeat
void VROSC::BeatCounter::_set_OnVisualBeat(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::_set_OnVisualBeat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "BeatCounter", "OnVisualBeat", value));
}
// Autogenerated instance field getter
// Get instance field: private VROSC.Metronome _metronome
[[deprecated("Use field access instead!")]] ::VROSC::Metronome*& VROSC::BeatCounter::dyn__metronome() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::dyn__metronome");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_metronome"))->offset;
  return *reinterpret_cast<::VROSC::Metronome**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.BeatCounterUI _beatCounterUI
[[deprecated("Use field access instead!")]] ::VROSC::BeatCounterUI*& VROSC::BeatCounter::dyn__beatCounterUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::dyn__beatCounterUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatCounterUI"))->offset;
  return *reinterpret_cast<::VROSC::BeatCounterUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _beatCounterAudioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& VROSC::BeatCounter::dyn__beatCounterAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::dyn__beatCounterAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatCounterAudioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastFrameVisualBarProgress
[[deprecated("Use field access instead!")]] float& VROSC::BeatCounter::dyn__lastFrameVisualBarProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::dyn__lastFrameVisualBarProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFrameVisualBarProgress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <BPM>k__BackingField
[[deprecated("Use field access instead!")]] float& VROSC::BeatCounter::dyn_$BPM$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::dyn_$BPM$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BPM>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <BeatsPerBar>k__BackingField
[[deprecated("Use field access instead!")]] int& VROSC::BeatCounter::dyn_$BeatsPerBar$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::dyn_$BeatsPerBar$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BeatsPerBar>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <BeatLengthInSamples>k__BackingField
[[deprecated("Use field access instead!")]] int& VROSC::BeatCounter::dyn_$BeatLengthInSamples$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::dyn_$BeatLengthInSamples$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BeatLengthInSamples>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.BeatCounter/VROSC.SyncSource <CurrentSyncSource>k__BackingField
[[deprecated("Use field access instead!")]] ::VROSC::BeatCounter::SyncSource& VROSC::BeatCounter::dyn_$CurrentSyncSource$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::dyn_$CurrentSyncSource$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentSyncSource>k__BackingField"))->offset;
  return *reinterpret_cast<::VROSC::BeatCounter::SyncSource*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <CurrentSyncSample>k__BackingField
[[deprecated("Use field access instead!")]] int& VROSC::BeatCounter::dyn_$CurrentSyncSample$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::dyn_$CurrentSyncSample$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CurrentSyncSample>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <AudioBarProgress>k__BackingField
[[deprecated("Use field access instead!")]] float& VROSC::BeatCounter::dyn_$AudioBarProgress$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::dyn_$AudioBarProgress$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AudioBarProgress>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <AudioBarNumber>k__BackingField
[[deprecated("Use field access instead!")]] int& VROSC::BeatCounter::dyn_$AudioBarNumber$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::dyn_$AudioBarNumber$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AudioBarNumber>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <VisualBarProgress>k__BackingField
[[deprecated("Use field access instead!")]] float& VROSC::BeatCounter::dyn_$VisualBarProgress$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::dyn_$VisualBarProgress$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<VisualBarProgress>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <VisualBarNumber>k__BackingField
[[deprecated("Use field access instead!")]] int& VROSC::BeatCounter::dyn_$VisualBarNumber$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::dyn_$VisualBarNumber$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<VisualBarNumber>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsVisualBeatFrame>k__BackingField
[[deprecated("Use field access instead!")]] bool& VROSC::BeatCounter::dyn_$IsVisualBeatFrame$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::dyn_$IsVisualBeatFrame$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsVisualBeatFrame>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <VisualCurrentBeat>k__BackingField
[[deprecated("Use field access instead!")]] int& VROSC::BeatCounter::dyn_$VisualCurrentBeat$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::dyn_$VisualCurrentBeat$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<VisualCurrentBeat>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <LooperMaxBPM>k__BackingField
[[deprecated("Use field access instead!")]] float& VROSC::BeatCounter::dyn_$LooperMaxBPM$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::dyn_$LooperMaxBPM$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LooperMaxBPM>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsSetup>k__BackingField
[[deprecated("Use field access instead!")]] bool& VROSC::BeatCounter::dyn_$IsSetup$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::dyn_$IsSetup$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsSetup>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsPlaying>k__BackingField
[[deprecated("Use field access instead!")]] bool& VROSC::BeatCounter::dyn_$IsPlaying$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::dyn_$IsPlaying$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsPlaying>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.BeatCounter.get_Metronome
::VROSC::Metronome* VROSC::BeatCounter::get_Metronome() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::get_Metronome");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Metronome", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Metronome*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.get_BPM
float VROSC::BeatCounter::get_BPM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::get_BPM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BPM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.set_BPM
void VROSC::BeatCounter::set_BPM(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::set_BPM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BPM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.BeatCounter.get_BeatsPerBar
int VROSC::BeatCounter::get_BeatsPerBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::get_BeatsPerBar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BeatsPerBar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.set_BeatsPerBar
void VROSC::BeatCounter::set_BeatsPerBar(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::set_BeatsPerBar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BeatsPerBar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.BeatCounter.get_BeatLengthInSamples
int VROSC::BeatCounter::get_BeatLengthInSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::get_BeatLengthInSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BeatLengthInSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.set_BeatLengthInSamples
void VROSC::BeatCounter::set_BeatLengthInSamples(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::set_BeatLengthInSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BeatLengthInSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.BeatCounter.get_BarLengthInSamples
int VROSC::BeatCounter::get_BarLengthInSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::get_BarLengthInSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BarLengthInSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.get_CurrentSyncSource
::VROSC::BeatCounter::SyncSource VROSC::BeatCounter::get_CurrentSyncSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::get_CurrentSyncSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentSyncSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::BeatCounter::SyncSource, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.set_CurrentSyncSource
void VROSC::BeatCounter::set_CurrentSyncSource(::VROSC::BeatCounter::SyncSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::set_CurrentSyncSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentSyncSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.BeatCounter.get_CurrentSyncSample
int VROSC::BeatCounter::get_CurrentSyncSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::get_CurrentSyncSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentSyncSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.set_CurrentSyncSample
void VROSC::BeatCounter::set_CurrentSyncSample(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::set_CurrentSyncSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CurrentSyncSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.BeatCounter.get_AudioBarProgress
float VROSC::BeatCounter::get_AudioBarProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::get_AudioBarProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioBarProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.set_AudioBarProgress
void VROSC::BeatCounter::set_AudioBarProgress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::set_AudioBarProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioBarProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.BeatCounter.get_AudioBarNumber
int VROSC::BeatCounter::get_AudioBarNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::get_AudioBarNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioBarNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.set_AudioBarNumber
void VROSC::BeatCounter::set_AudioBarNumber(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::set_AudioBarNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioBarNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.BeatCounter.get_VisualBarProgress
float VROSC::BeatCounter::get_VisualBarProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::get_VisualBarProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VisualBarProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.set_VisualBarProgress
void VROSC::BeatCounter::set_VisualBarProgress(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::set_VisualBarProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VisualBarProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.BeatCounter.get_VisualBarNumber
int VROSC::BeatCounter::get_VisualBarNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::get_VisualBarNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VisualBarNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.set_VisualBarNumber
void VROSC::BeatCounter::set_VisualBarNumber(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::set_VisualBarNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VisualBarNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.BeatCounter.get_IsVisualBeatFrame
bool VROSC::BeatCounter::get_IsVisualBeatFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::get_IsVisualBeatFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsVisualBeatFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.set_IsVisualBeatFrame
void VROSC::BeatCounter::set_IsVisualBeatFrame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::set_IsVisualBeatFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsVisualBeatFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.BeatCounter.get_VisualCurrentBeat
int VROSC::BeatCounter::get_VisualCurrentBeat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::get_VisualCurrentBeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VisualCurrentBeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.set_VisualCurrentBeat
void VROSC::BeatCounter::set_VisualCurrentBeat(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::set_VisualCurrentBeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VisualCurrentBeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.BeatCounter.get_LooperMaxBPM
float VROSC::BeatCounter::get_LooperMaxBPM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::get_LooperMaxBPM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LooperMaxBPM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.set_LooperMaxBPM
void VROSC::BeatCounter::set_LooperMaxBPM(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::set_LooperMaxBPM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LooperMaxBPM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.BeatCounter.get_IsSetup
bool VROSC::BeatCounter::get_IsSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::get_IsSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.set_IsSetup
void VROSC::BeatCounter::set_IsSetup(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::set_IsSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.BeatCounter.get_IsPlaying
bool VROSC::BeatCounter::get_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::get_IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.set_IsPlaying
void VROSC::BeatCounter::set_IsPlaying(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::set_IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.BeatCounter.Awake
void VROSC::BeatCounter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.OnDestroy
void VROSC::BeatCounter::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.Setup
void VROSC::BeatCounter::Setup(::VROSC::BeatCounterUI* beatCounterUI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatCounterUI)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatCounterUI);
}
// Autogenerated method: VROSC.BeatCounter.Update
void VROSC::BeatCounter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.UpdateBarProgress
void VROSC::BeatCounter::UpdateBarProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::UpdateBarProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBarProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.SetSyncSampleFromBarProgress
void VROSC::BeatCounter::SetSyncSampleFromBarProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::SetSyncSampleFromBarProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSyncSampleFromBarProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.VisualBeat
void VROSC::BeatCounter::VisualBeat(int beatNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::VisualBeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisualBeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatNumber);
}
// Autogenerated method: VROSC.BeatCounter.GetNextQuantizeDspTime
double VROSC::BeatCounter::GetNextQuantizeDspTime(int beatDivision, double predictedDspTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::GetNextQuantizeDspTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextQuantizeDspTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatDivision), ::il2cpp_utils::ExtractType(predictedDspTime)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, beatDivision, predictedDspTime);
}
// Autogenerated method: VROSC.BeatCounter.GetQuantizeLength
float VROSC::BeatCounter::GetQuantizeLength(int beatDivision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::GetQuantizeLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQuantizeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatDivision)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, beatDivision);
}
// Autogenerated method: VROSC.BeatCounter.GetBarLength
float VROSC::BeatCounter::GetBarLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::GetBarLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBarLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounter.SetBPM
void VROSC::BeatCounter::SetBPM(float bpm, ::VROSC::BeatCounter::SyncSource syncSource, bool restartBar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::SetBPM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBPM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bpm), ::il2cpp_utils::ExtractType(syncSource), ::il2cpp_utils::ExtractType(restartBar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bpm, syncSource, restartBar);
}
// Autogenerated method: VROSC.BeatCounter.SetBeatLength
void VROSC::BeatCounter::SetBeatLength(int beatLengthInSamples, ::VROSC::BeatCounter::SyncSource syncSource, bool restartBar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::SetBeatLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBeatLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatLengthInSamples), ::il2cpp_utils::ExtractType(syncSource), ::il2cpp_utils::ExtractType(restartBar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatLengthInSamples, syncSource, restartBar);
}
// Autogenerated method: VROSC.BeatCounter.SetBeatsPerBar
void VROSC::BeatCounter::SetBeatsPerBar(int beatsPerBar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::SetBeatsPerBar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBeatsPerBar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatsPerBar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatsPerBar);
}
// Autogenerated method: VROSC.BeatCounter.GetCurrentVisualSubdivision
int VROSC::BeatCounter::GetCurrentVisualSubdivision(int subdivision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::GetCurrentVisualSubdivision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentVisualSubdivision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subdivision)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, subdivision);
}
// Autogenerated method: VROSC.BeatCounter.OnAudioFilterRead
void VROSC::BeatCounter::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: VROSC.BeatCounter.FastForward
void VROSC::BeatCounter::FastForward(int samples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::FastForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FastForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samples)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, samples);
}
// Autogenerated method: VROSC.BeatCounter.UserDataLoaded
void VROSC::BeatCounter::UserDataLoaded(::VROSC::UserDataControllers* user) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::UserDataLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UserDataLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, user);
}
// Autogenerated method: VROSC.BeatCounter.GetNextQuantizePointAfterSample
int VROSC::BeatCounter::GetNextQuantizePointAfterSample(int sample, int barDivision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::GetNextQuantizePointAfterSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextQuantizePointAfterSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sample), ::il2cpp_utils::ExtractType(barDivision)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, sample, barDivision);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.BeatCounter/VROSC.SyncSource
#include "VROSC/BeatCounter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.BeatCounter/VROSC.SyncSource Looper
::VROSC::BeatCounter::SyncSource VROSC::BeatCounter::SyncSource::_get_Looper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::SyncSource::_get_Looper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::BeatCounter::SyncSource>("VROSC", "BeatCounter/SyncSource", "Looper"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.BeatCounter/VROSC.SyncSource Looper
void VROSC::BeatCounter::SyncSource::_set_Looper(::VROSC::BeatCounter::SyncSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::SyncSource::_set_Looper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "BeatCounter/SyncSource", "Looper", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.BeatCounter/VROSC.SyncSource BeatCounter
::VROSC::BeatCounter::SyncSource VROSC::BeatCounter::SyncSource::_get_BeatCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::SyncSource::_get_BeatCounter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::BeatCounter::SyncSource>("VROSC", "BeatCounter/SyncSource", "BeatCounter"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.BeatCounter/VROSC.SyncSource BeatCounter
void VROSC::BeatCounter::SyncSource::_set_BeatCounter(::VROSC::BeatCounter::SyncSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::SyncSource::_set_BeatCounter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "BeatCounter/SyncSource", "BeatCounter", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VROSC::BeatCounter::SyncSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounter::SyncSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.BeatCounterUI
#include "VROSC/BeatCounterUI.hpp"
// Including type: VROSC.BeatCounterUI/VROSC.SyncToggleSource
#include "VROSC/BeatCounterUI_SyncToggleSource.hpp"
// Including type: VROSC.UISlideToggle
#include "VROSC/UISlideToggle.hpp"
// Including type: VROSC.UISlider
#include "VROSC/UISlider.hpp"
// Including type: VROSC.UISpinner
#include "VROSC/UISpinner.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: VROSC.InputDevice
#include "VROSC/InputDevice.hpp"
// Including type: VROSC.Metronome/VROSC.Mode
#include "VROSC/Metronome.hpp"
// Including type: VROSC.Metronome/VROSC.Medium
// Already included the same include: VROSC/Metronome.hpp
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.UISlideToggle _syncSourceButton
[[deprecated("Use field access instead!")]] ::VROSC::UISlideToggle*& VROSC::BeatCounterUI::dyn__syncSourceButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::dyn__syncSourceButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncSourceButton"))->offset;
  return *reinterpret_cast<::VROSC::UISlideToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UISlider _bpmSlider
[[deprecated("Use field access instead!")]] ::VROSC::UISlider*& VROSC::BeatCounterUI::dyn__bpmSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::dyn__bpmSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bpmSlider"))->offset;
  return *reinterpret_cast<::VROSC::UISlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UISpinner _metronomeMode
[[deprecated("Use field access instead!")]] ::VROSC::UISpinner*& VROSC::BeatCounterUI::dyn__metronomeMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::dyn__metronomeMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_metronomeMode"))->offset;
  return *reinterpret_cast<::VROSC::UISpinner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.UISpinner _metronomeMedium
[[deprecated("Use field access instead!")]] ::VROSC::UISpinner*& VROSC::BeatCounterUI::dyn__metronomeMedium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::dyn__metronomeMedium");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_metronomeMedium"))->offset;
  return *reinterpret_cast<::VROSC::UISpinner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro _bpm
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshPro*& VROSC::BeatCounterUI::dyn__bpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::dyn__bpm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bpm"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _syncIsInternalDefaultValue
[[deprecated("Use field access instead!")]] bool& VROSC::BeatCounterUI::dyn__syncIsInternalDefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::dyn__syncIsInternalDefaultValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncIsInternalDefaultValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _syncIsInternal
[[deprecated("Use field access instead!")]] bool& VROSC::BeatCounterUI::dyn__syncIsInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::dyn__syncIsInternal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncIsInternal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _movingSliderSetsBPM
[[deprecated("Use field access instead!")]] bool& VROSC::BeatCounterUI::dyn__movingSliderSetsBPM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::dyn__movingSliderSetsBPM");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movingSliderSetsBPM"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _looperHadLoops
[[deprecated("Use field access instead!")]] bool& VROSC::BeatCounterUI::dyn__looperHadLoops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::dyn__looperHadLoops");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_looperHadLoops"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.BeatCounterUI.Awake
void VROSC::BeatCounterUI::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounterUI.Setup
void VROSC::BeatCounterUI::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounterUI.Update
void VROSC::BeatCounterUI::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounterUI.OnDestroy
void VROSC::BeatCounterUI::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounterUI.ResetAll
void VROSC::BeatCounterUI::ResetAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::ResetAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounterUI.SetSyncIsInternal
void VROSC::BeatCounterUI::SetSyncIsInternal(bool isInternal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::SetSyncIsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSyncIsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isInternal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isInternal);
}
// Autogenerated method: VROSC.BeatCounterUI.SetBpmSliderValue
void VROSC::BeatCounterUI::SetBpmSliderValue(float bpm, bool fromDataLoad) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::SetBpmSliderValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBpmSliderValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bpm), ::il2cpp_utils::ExtractType(fromDataLoad)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bpm, fromDataLoad);
}
// Autogenerated method: VROSC.BeatCounterUI.BpmSliderGrabbed
void VROSC::BeatCounterUI::BpmSliderGrabbed(bool isGrabbed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::BpmSliderGrabbed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BpmSliderGrabbed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isGrabbed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isGrabbed);
}
// Autogenerated method: VROSC.BeatCounterUI.BpmSliderValueChanged
void VROSC::BeatCounterUI::BpmSliderValueChanged(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::BpmSliderValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BpmSliderValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.BeatCounterUI.SyncSourceToggled
void VROSC::BeatCounterUI::SyncSourceToggled(::VROSC::InputDevice* inputDevice, bool syncIsInternal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::SyncSourceToggled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncSourceToggled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputDevice), ::il2cpp_utils::ExtractType(syncIsInternal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputDevice, syncIsInternal);
}
// Autogenerated method: VROSC.BeatCounterUI.SyncSourceToggled
void VROSC::BeatCounterUI::SyncSourceToggled(::VROSC::InputDevice* inputDevice, bool syncIsInternal, ::VROSC::BeatCounterUI::SyncToggleSource source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::SyncSourceToggled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncSourceToggled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputDevice), ::il2cpp_utils::ExtractType(syncIsInternal), ::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputDevice, syncIsInternal, source);
}
// Autogenerated method: VROSC.BeatCounterUI.LoopStationHasLoopsChanged
void VROSC::BeatCounterUI::LoopStationHasLoopsChanged(bool hasLoops) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::LoopStationHasLoopsChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoopStationHasLoopsChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hasLoops)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hasLoops);
}
// Autogenerated method: VROSC.BeatCounterUI.GetSliderBpm
float VROSC::BeatCounterUI::GetSliderBpm(float sliderValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::GetSliderBpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSliderBpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderValue)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, sliderValue);
}
// Autogenerated method: VROSC.BeatCounterUI.GetSliderValue
float VROSC::BeatCounterUI::GetSliderValue(float bpm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::GetSliderValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSliderValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bpm)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, bpm);
}
// Autogenerated method: VROSC.BeatCounterUI.BpmChanged
void VROSC::BeatCounterUI::BpmChanged(float bpm) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::BpmChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BpmChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bpm)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bpm);
}
// Autogenerated method: VROSC.BeatCounterUI.UpdateUI
void VROSC::BeatCounterUI::UpdateUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::UpdateUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounterUI.SetMetronomeMode
void VROSC::BeatCounterUI::SetMetronomeMode(int mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::SetMetronomeMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMetronomeMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mode);
}
// Autogenerated method: VROSC.BeatCounterUI.SetMetronomeMedium
void VROSC::BeatCounterUI::SetMetronomeMedium(int medium) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::SetMetronomeMedium");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMetronomeMedium", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(medium)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, medium);
}
// Autogenerated method: VROSC.BeatCounterUI.UpdateText
void VROSC::BeatCounterUI::UpdateText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::UpdateText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BeatCounterUI.SetMetronomeMode
void VROSC::BeatCounterUI::SetMetronomeMode(::VROSC::Metronome::Mode metronomeMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::SetMetronomeMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMetronomeMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(metronomeMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, metronomeMode);
}
// Autogenerated method: VROSC.BeatCounterUI.SetMetronomeMedium
void VROSC::BeatCounterUI::SetMetronomeMedium(::VROSC::Metronome::Medium metronomeMedium) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::SetMetronomeMedium");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMetronomeMedium", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(metronomeMedium)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, metronomeMedium);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.BeatCounterUI/VROSC.SyncToggleSource
#include "VROSC/BeatCounterUI_SyncToggleSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.BeatCounterUI/VROSC.SyncToggleSource ToggleButton
::VROSC::BeatCounterUI::SyncToggleSource VROSC::BeatCounterUI::SyncToggleSource::_get_ToggleButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::SyncToggleSource::_get_ToggleButton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::BeatCounterUI::SyncToggleSource>("VROSC", "BeatCounterUI/SyncToggleSource", "ToggleButton"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.BeatCounterUI/VROSC.SyncToggleSource ToggleButton
void VROSC::BeatCounterUI::SyncToggleSource::_set_ToggleButton(::VROSC::BeatCounterUI::SyncToggleSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::SyncToggleSource::_set_ToggleButton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "BeatCounterUI/SyncToggleSource", "ToggleButton", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.BeatCounterUI/VROSC.SyncToggleSource DataLoad
::VROSC::BeatCounterUI::SyncToggleSource VROSC::BeatCounterUI::SyncToggleSource::_get_DataLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::SyncToggleSource::_get_DataLoad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::BeatCounterUI::SyncToggleSource>("VROSC", "BeatCounterUI/SyncToggleSource", "DataLoad"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.BeatCounterUI/VROSC.SyncToggleSource DataLoad
void VROSC::BeatCounterUI::SyncToggleSource::_set_DataLoad(::VROSC::BeatCounterUI::SyncToggleSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::SyncToggleSource::_set_DataLoad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "BeatCounterUI/SyncToggleSource", "DataLoad", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.BeatCounterUI/VROSC.SyncToggleSource Slider
::VROSC::BeatCounterUI::SyncToggleSource VROSC::BeatCounterUI::SyncToggleSource::_get_Slider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::SyncToggleSource::_get_Slider");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::BeatCounterUI::SyncToggleSource>("VROSC", "BeatCounterUI/SyncToggleSource", "Slider"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.BeatCounterUI/VROSC.SyncToggleSource Slider
void VROSC::BeatCounterUI::SyncToggleSource::_set_Slider(::VROSC::BeatCounterUI::SyncToggleSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::SyncToggleSource::_set_Slider");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "BeatCounterUI/SyncToggleSource", "Slider", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.BeatCounterUI/VROSC.SyncToggleSource Reset
::VROSC::BeatCounterUI::SyncToggleSource VROSC::BeatCounterUI::SyncToggleSource::_get_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::SyncToggleSource::_get_Reset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::BeatCounterUI::SyncToggleSource>("VROSC", "BeatCounterUI/SyncToggleSource", "Reset"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.BeatCounterUI/VROSC.SyncToggleSource Reset
void VROSC::BeatCounterUI::SyncToggleSource::_set_Reset(::VROSC::BeatCounterUI::SyncToggleSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::SyncToggleSource::_set_Reset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "BeatCounterUI/SyncToggleSource", "Reset", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VROSC::BeatCounterUI::SyncToggleSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BeatCounterUI::SyncToggleSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.BitMaskAttribute
#include "VROSC/BitMaskAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type propType
[[deprecated("Use field access instead!")]] ::System::Type*& VROSC::BitMaskAttribute::dyn_propType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BitMaskAttribute::dyn_propType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.AuthenticationManager
#include "VROSC/AuthenticationManager.hpp"
// Including type: VROSC.AuthenticationManager/VROSC.LocalUserData
#include "VROSC/AuthenticationManager_LocalUserData.hpp"
// Including type: VROSC.AuthenticationManager/VROSC.FirebaseUserData
#include "VROSC/AuthenticationManager_FirebaseUserData.hpp"
// Including type: VROSC.AuthenticationManager/VROSC.<>c
#include "VROSC/AuthenticationManager_--c.hpp"
// Including type: VROSC.AuthenticationManager/VROSC.<>c__DisplayClass37_0
#include "VROSC/AuthenticationManager_--c__DisplayClass37_0.hpp"
// Including type: VROSC.StateMachine
#include "VROSC/StateMachine.hpp"
// Including type: VROSC.IState
#include "VROSC/IState.hpp"
// Including type: VROSC.LoginWithEmailState
#include "VROSC/LoginWithEmailState.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 MAX_RETRY_ATTEMPTS
int VROSC::AuthenticationManager::_get_MAX_RETRY_ATTEMPTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_get_MAX_RETRY_ATTEMPTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("VROSC", "AuthenticationManager", "MAX_RETRY_ATTEMPTS"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MAX_RETRY_ATTEMPTS
void VROSC::AuthenticationManager::_set_MAX_RETRY_ATTEMPTS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_set_MAX_RETRY_ATTEMPTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AuthenticationManager", "MAX_RETRY_ATTEMPTS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single RETRY_ATTEMPT_TIMEOUT
float VROSC::AuthenticationManager::_get_RETRY_ATTEMPT_TIMEOUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_get_RETRY_ATTEMPT_TIMEOUT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("VROSC", "AuthenticationManager", "RETRY_ATTEMPT_TIMEOUT"));
}
// Autogenerated static field setter
// Set static field: static public System.Single RETRY_ATTEMPT_TIMEOUT
void VROSC::AuthenticationManager::_set_RETRY_ATTEMPT_TIMEOUT(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_set_RETRY_ATTEMPT_TIMEOUT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AuthenticationManager", "RETRY_ATTEMPT_TIMEOUT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action OnVerifiedUserLogin
::System::Action* VROSC::AuthenticationManager::_get_OnVerifiedUserLogin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_get_OnVerifiedUserLogin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("VROSC", "AuthenticationManager", "OnVerifiedUserLogin"));
}
// Autogenerated static field setter
// Set static field: static public System.Action OnVerifiedUserLogin
void VROSC::AuthenticationManager::_set_OnVerifiedUserLogin(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_set_OnVerifiedUserLogin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AuthenticationManager", "OnVerifiedUserLogin", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<System.String,System.Boolean> OnUserLoginSuccess
::System::Action_2<::StringW, bool>* VROSC::AuthenticationManager::_get_OnUserLoginSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_get_OnUserLoginSuccess");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::StringW, bool>*>("VROSC", "AuthenticationManager", "OnUserLoginSuccess")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<System.String,System.Boolean> OnUserLoginSuccess
void VROSC::AuthenticationManager::_set_OnUserLoginSuccess(::System::Action_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_set_OnUserLoginSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AuthenticationManager", "OnUserLoginSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<VROSC.Error> OnUserLoginFailure
::System::Action_1<::VROSC::Error>* VROSC::AuthenticationManager::_get_OnUserLoginFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_get_OnUserLoginFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::VROSC::Error>*>("VROSC", "AuthenticationManager", "OnUserLoginFailure"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<VROSC.Error> OnUserLoginFailure
void VROSC::AuthenticationManager::_set_OnUserLoginFailure(::System::Action_1<::VROSC::Error>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_set_OnUserLoginFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AuthenticationManager", "OnUserLoginFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action OnUserLogout
::System::Action* VROSC::AuthenticationManager::_get_OnUserLogout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_get_OnUserLogout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("VROSC", "AuthenticationManager", "OnUserLogout"));
}
// Autogenerated static field setter
// Set static field: static public System.Action OnUserLogout
void VROSC::AuthenticationManager::_set_OnUserLogout(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_set_OnUserLogout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AuthenticationManager", "OnUserLogout", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`3<System.String,System.String,System.String> OnRefreshFirebaseAccessTokenSuccess
::System::Action_3<::StringW, ::StringW, ::StringW>* VROSC::AuthenticationManager::_get_OnRefreshFirebaseAccessTokenSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_get_OnRefreshFirebaseAccessTokenSuccess");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_3<::StringW, ::StringW, ::StringW>*>("VROSC", "AuthenticationManager", "OnRefreshFirebaseAccessTokenSuccess")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`3<System.String,System.String,System.String> OnRefreshFirebaseAccessTokenSuccess
void VROSC::AuthenticationManager::_set_OnRefreshFirebaseAccessTokenSuccess(::System::Action_3<::StringW, ::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_set_OnRefreshFirebaseAccessTokenSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AuthenticationManager", "OnRefreshFirebaseAccessTokenSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<VROSC.Error> OnRefreshFirebaseAccessTokenFailure
::System::Action_1<::VROSC::Error>* VROSC::AuthenticationManager::_get_OnRefreshFirebaseAccessTokenFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_get_OnRefreshFirebaseAccessTokenFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::VROSC::Error>*>("VROSC", "AuthenticationManager", "OnRefreshFirebaseAccessTokenFailure"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<VROSC.Error> OnRefreshFirebaseAccessTokenFailure
void VROSC::AuthenticationManager::_set_OnRefreshFirebaseAccessTokenFailure(::System::Action_1<::VROSC::Error>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_set_OnRefreshFirebaseAccessTokenFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AuthenticationManager", "OnRefreshFirebaseAccessTokenFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action OnUserEmailChangeSuccess
::System::Action* VROSC::AuthenticationManager::_get_OnUserEmailChangeSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_get_OnUserEmailChangeSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("VROSC", "AuthenticationManager", "OnUserEmailChangeSuccess"));
}
// Autogenerated static field setter
// Set static field: static public System.Action OnUserEmailChangeSuccess
void VROSC::AuthenticationManager::_set_OnUserEmailChangeSuccess(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_set_OnUserEmailChangeSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AuthenticationManager", "OnUserEmailChangeSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<VROSC.Error> OnUserEmailChangeFailure
::System::Action_1<::VROSC::Error>* VROSC::AuthenticationManager::_get_OnUserEmailChangeFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_get_OnUserEmailChangeFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::VROSC::Error>*>("VROSC", "AuthenticationManager", "OnUserEmailChangeFailure"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<VROSC.Error> OnUserEmailChangeFailure
void VROSC::AuthenticationManager::_set_OnUserEmailChangeFailure(::System::Action_1<::VROSC::Error>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_set_OnUserEmailChangeFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AuthenticationManager", "OnUserEmailChangeFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action OnUserPasswordChangeSuccess
::System::Action* VROSC::AuthenticationManager::_get_OnUserPasswordChangeSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_get_OnUserPasswordChangeSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("VROSC", "AuthenticationManager", "OnUserPasswordChangeSuccess"));
}
// Autogenerated static field setter
// Set static field: static public System.Action OnUserPasswordChangeSuccess
void VROSC::AuthenticationManager::_set_OnUserPasswordChangeSuccess(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_set_OnUserPasswordChangeSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AuthenticationManager", "OnUserPasswordChangeSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<VROSC.Error> OnUserPasswordChangeFailure
::System::Action_1<::VROSC::Error>* VROSC::AuthenticationManager::_get_OnUserPasswordChangeFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_get_OnUserPasswordChangeFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::VROSC::Error>*>("VROSC", "AuthenticationManager", "OnUserPasswordChangeFailure"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<VROSC.Error> OnUserPasswordChangeFailure
void VROSC::AuthenticationManager::_set_OnUserPasswordChangeFailure(::System::Action_1<::VROSC::Error>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_set_OnUserPasswordChangeFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AuthenticationManager", "OnUserPasswordChangeFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action OnResetPasswordSuccess
::System::Action* VROSC::AuthenticationManager::_get_OnResetPasswordSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_get_OnResetPasswordSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("VROSC", "AuthenticationManager", "OnResetPasswordSuccess"));
}
// Autogenerated static field setter
// Set static field: static public System.Action OnResetPasswordSuccess
void VROSC::AuthenticationManager::_set_OnResetPasswordSuccess(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_set_OnResetPasswordSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AuthenticationManager", "OnResetPasswordSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<VROSC.Error> OnResetPasswordFailure
::System::Action_1<::VROSC::Error>* VROSC::AuthenticationManager::_get_OnResetPasswordFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_get_OnResetPasswordFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::VROSC::Error>*>("VROSC", "AuthenticationManager", "OnResetPasswordFailure"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<VROSC.Error> OnResetPasswordFailure
void VROSC::AuthenticationManager::_set_OnResetPasswordFailure(::System::Action_1<::VROSC::Error>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_set_OnResetPasswordFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AuthenticationManager", "OnResetPasswordFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action OnSendVerificationEmailSuccess
::System::Action* VROSC::AuthenticationManager::_get_OnSendVerificationEmailSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_get_OnSendVerificationEmailSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("VROSC", "AuthenticationManager", "OnSendVerificationEmailSuccess"));
}
// Autogenerated static field setter
// Set static field: static public System.Action OnSendVerificationEmailSuccess
void VROSC::AuthenticationManager::_set_OnSendVerificationEmailSuccess(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_set_OnSendVerificationEmailSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AuthenticationManager", "OnSendVerificationEmailSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<VROSC.Error> OnSendVerificationEmailFailure
::System::Action_1<::VROSC::Error>* VROSC::AuthenticationManager::_get_OnSendVerificationEmailFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_get_OnSendVerificationEmailFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::VROSC::Error>*>("VROSC", "AuthenticationManager", "OnSendVerificationEmailFailure"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<VROSC.Error> OnSendVerificationEmailFailure
void VROSC::AuthenticationManager::_set_OnSendVerificationEmailFailure(::System::Action_1<::VROSC::Error>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::_set_OnSendVerificationEmailFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "AuthenticationManager", "OnSendVerificationEmailFailure", value));
}
// Autogenerated instance field getter
// Get instance field: public VROSC.AuthenticationManager/VROSC.LocalUserData LocalUser
[[deprecated("Use field access instead!")]] ::VROSC::AuthenticationManager::LocalUserData*& VROSC::AuthenticationManager::dyn_LocalUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::dyn_LocalUser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LocalUser"))->offset;
  return *reinterpret_cast<::VROSC::AuthenticationManager::LocalUserData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.AuthenticationManager/VROSC.FirebaseUserData FirebaseUser
[[deprecated("Use field access instead!")]] ::VROSC::AuthenticationManager::FirebaseUserData*& VROSC::AuthenticationManager::dyn_FirebaseUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::dyn_FirebaseUser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FirebaseUser"))->offset;
  return *reinterpret_cast<::VROSC::AuthenticationManager::FirebaseUserData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.StateMachine _stateMachine
[[deprecated("Use field access instead!")]] ::VROSC::StateMachine*& VROSC::AuthenticationManager::dyn__stateMachine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::dyn__stateMachine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stateMachine"))->offset;
  return *reinterpret_cast<::VROSC::StateMachine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.IState _startState
[[deprecated("Use field access instead!")]] ::VROSC::IState*& VROSC::AuthenticationManager::dyn__startState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::dyn__startState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startState"))->offset;
  return *reinterpret_cast<::VROSC::IState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.LoginWithEmailState _loginWithEmailState
[[deprecated("Use field access instead!")]] ::VROSC::LoginWithEmailState*& VROSC::AuthenticationManager::dyn__loginWithEmailState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::dyn__loginWithEmailState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loginWithEmailState"))->offset;
  return *reinterpret_cast<::VROSC::LoginWithEmailState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsWaitingForCredentials>k__BackingField
[[deprecated("Use field access instead!")]] bool& VROSC::AuthenticationManager::dyn_$IsWaitingForCredentials$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::dyn_$IsWaitingForCredentials$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsWaitingForCredentials>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.AuthenticationManager.get_IsWaitingForCredentials
bool VROSC::AuthenticationManager::get_IsWaitingForCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::get_IsWaitingForCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsWaitingForCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager.set_IsWaitingForCredentials
void VROSC::AuthenticationManager::set_IsWaitingForCredentials(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::set_IsWaitingForCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsWaitingForCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.AuthenticationManager.Awake
void VROSC::AuthenticationManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager.Setup
void VROSC::AuthenticationManager::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager.OnDestroy
void VROSC::AuthenticationManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager.Update
void VROSC::AuthenticationManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager.AuthenticateWithEmail
void VROSC::AuthenticationManager::AuthenticateWithEmail(::StringW email, ::StringW password, bool rememberMe) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::AuthenticateWithEmail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateWithEmail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(email), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(rememberMe)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, email, password, rememberMe);
}
// Autogenerated method: VROSC.AuthenticationManager.CreateUserWithEmail
void VROSC::AuthenticationManager::CreateUserWithEmail(::StringW email, ::StringW password, bool rememberMe) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::CreateUserWithEmail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUserWithEmail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(email), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(rememberMe)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, email, password, rememberMe);
}
// Autogenerated method: VROSC.AuthenticationManager.UserLoginSuccess
void VROSC::AuthenticationManager::UserLoginSuccess(::StringW email, bool isVerified) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::UserLoginSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UserLoginSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(email), ::il2cpp_utils::ExtractType(isVerified)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, email, isVerified);
}
// Autogenerated method: VROSC.AuthenticationManager.UserLoginFailure
void VROSC::AuthenticationManager::UserLoginFailure(::VROSC::Error error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::UserLoginFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UserLoginFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: VROSC.AuthenticationManager.LogoutUser
void VROSC::AuthenticationManager::LogoutUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::LogoutUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogoutUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager.ChangeUserEmail
void VROSC::AuthenticationManager::ChangeUserEmail(::StringW email) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::ChangeUserEmail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeUserEmail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(email)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, email);
}
// Autogenerated method: VROSC.AuthenticationManager.ChangeUserPassword
void VROSC::AuthenticationManager::ChangeUserPassword(::StringW currentPassword, ::StringW newPassword) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::ChangeUserPassword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeUserPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPassword), ::il2cpp_utils::ExtractType(newPassword)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentPassword, newPassword);
}
// Autogenerated method: VROSC.AuthenticationManager.SendVerificationEmail
void VROSC::AuthenticationManager::SendVerificationEmail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::SendVerificationEmail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendVerificationEmail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager.UserHasVerified
void VROSC::AuthenticationManager::UserHasVerified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::UserHasVerified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UserHasVerified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager.ResetPassword
void VROSC::AuthenticationManager::ResetPassword(::StringW email) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::ResetPassword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(email)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, email);
}
// Autogenerated method: VROSC.AuthenticationManager.UserLoggedOut
void VROSC::AuthenticationManager::UserLoggedOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::UserLoggedOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UserLoggedOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager.UserEmailChangeSuccess
void VROSC::AuthenticationManager::UserEmailChangeSuccess(::StringW email) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::UserEmailChangeSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UserEmailChangeSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(email)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, email);
}
// Autogenerated method: VROSC.AuthenticationManager.UserEmailChangeFailure
void VROSC::AuthenticationManager::UserEmailChangeFailure(::VROSC::Error error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::UserEmailChangeFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UserEmailChangeFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: VROSC.AuthenticationManager.UserPasswordChangeSuccess
void VROSC::AuthenticationManager::UserPasswordChangeSuccess(::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::UserPasswordChangeSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UserPasswordChangeSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, password);
}
// Autogenerated method: VROSC.AuthenticationManager.UserPasswordChangeFailure
void VROSC::AuthenticationManager::UserPasswordChangeFailure(::VROSC::Error error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::UserPasswordChangeFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UserPasswordChangeFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: VROSC.AuthenticationManager.ResetPasswordSuccess
void VROSC::AuthenticationManager::ResetPasswordSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::ResetPasswordSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetPasswordSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager.ResetPasswordFailure
void VROSC::AuthenticationManager::ResetPasswordFailure(::VROSC::Error error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::ResetPasswordFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetPasswordFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: VROSC.AuthenticationManager.SendVerificationEmailSuccess
void VROSC::AuthenticationManager::SendVerificationEmailSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::SendVerificationEmailSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendVerificationEmailSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager.SendVerificationEmailFailure
void VROSC::AuthenticationManager::SendVerificationEmailFailure(::VROSC::Error error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::SendVerificationEmailFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendVerificationEmailFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: VROSC.AuthenticationManager.<Awake>b__27_0
bool VROSC::AuthenticationManager::$Awake$b__27_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::<Awake>b__27_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__27_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager.<Awake>g__Continue|27_1
::System::Func_1<bool>* VROSC::AuthenticationManager::$Awake$g__Continue_27_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::<Awake>g__Continue|27_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "AuthenticationManager", "<Awake>g__Continue|27_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_1<bool>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager.<Awake>g__HasVerifiedUserLoggedIn|27_2
::System::Func_1<bool>* VROSC::AuthenticationManager::$Awake$g__HasVerifiedUserLoggedIn_27_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::<Awake>g__HasVerifiedUserLoggedIn|27_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>g__HasVerifiedUserLoggedIn|27_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_1<bool>*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager.<Awake>b__27_6
bool VROSC::AuthenticationManager::$Awake$b__27_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::<Awake>b__27_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__27_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager.<Awake>g__HasUnverifiedUserLoggedIn|27_3
::System::Func_1<bool>* VROSC::AuthenticationManager::$Awake$g__HasUnverifiedUserLoggedIn_27_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::<Awake>g__HasUnverifiedUserLoggedIn|27_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>g__HasUnverifiedUserLoggedIn|27_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_1<bool>*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager.<Awake>b__27_7
bool VROSC::AuthenticationManager::$Awake$b__27_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::<Awake>b__27_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__27_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager.<Awake>g__HasUserLoggedOut|27_4
::System::Func_1<bool>* VROSC::AuthenticationManager::$Awake$g__HasUserLoggedOut_27_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::<Awake>g__HasUserLoggedOut|27_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>g__HasUserLoggedOut|27_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_1<bool>*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager.<Awake>b__27_8
bool VROSC::AuthenticationManager::$Awake$b__27_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::<Awake>b__27_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__27_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.AuthenticationManager/VROSC.LocalUserData
#include "VROSC/AuthenticationManager_LocalUserData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Email
[[deprecated("Use field access instead!")]] ::StringW& VROSC::AuthenticationManager::LocalUserData::dyn_Email() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::LocalUserData::dyn_Email");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Email"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Password
[[deprecated("Use field access instead!")]] ::StringW& VROSC::AuthenticationManager::LocalUserData::dyn_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::LocalUserData::dyn_Password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Password"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime LastLoginDate
[[deprecated("Use field access instead!")]] ::System::DateTime& VROSC::AuthenticationManager::LocalUserData::dyn_LastLoginDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::LocalUserData::dyn_LastLoginDate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastLoginDate"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RememberMe
[[deprecated("Use field access instead!")]] bool& VROSC::AuthenticationManager::LocalUserData::dyn_RememberMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::LocalUserData::dyn_RememberMe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RememberMe"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean SentVerificationEmail
[[deprecated("Use field access instead!")]] bool& VROSC::AuthenticationManager::LocalUserData::dyn_SentVerificationEmail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::LocalUserData::dyn_SentVerificationEmail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SentVerificationEmail"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.AuthenticationManager/VROSC.LocalUserData.get_HasData
bool VROSC::AuthenticationManager::LocalUserData::get_HasData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::LocalUserData::get_HasData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.AuthenticationManager/VROSC.FirebaseUserData
#include "VROSC/AuthenticationManager_FirebaseUserData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String UserId
[[deprecated("Use field access instead!")]] ::StringW& VROSC::AuthenticationManager::FirebaseUserData::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::FirebaseUserData::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Email
[[deprecated("Use field access instead!")]] ::StringW& VROSC::AuthenticationManager::FirebaseUserData::dyn_Email() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::FirebaseUserData::dyn_Email");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Email"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsLoggedIn
[[deprecated("Use field access instead!")]] bool& VROSC::AuthenticationManager::FirebaseUserData::dyn_IsLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::FirebaseUserData::dyn_IsLoggedIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsLoggedIn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsVerified
[[deprecated("Use field access instead!")]] bool& VROSC::AuthenticationManager::FirebaseUserData::dyn_IsVerified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::FirebaseUserData::dyn_IsVerified");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsVerified"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.AuthenticationManager/VROSC.FirebaseUserData.get_HasData
bool VROSC::AuthenticationManager::FirebaseUserData::get_HasData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::FirebaseUserData::get_HasData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.AuthenticationManager/VROSC.<>c
#include "VROSC/AuthenticationManager_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VROSC.AuthenticationManager/VROSC.<>c <>9
::VROSC::AuthenticationManager::$$c* VROSC::AuthenticationManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::VROSC::AuthenticationManager::$$c*>("VROSC", "AuthenticationManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly VROSC.AuthenticationManager/VROSC.<>c <>9
void VROSC::AuthenticationManager::$$c::_set_$$9(::VROSC::AuthenticationManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("VROSC", "AuthenticationManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Boolean> <>9__27_5
::System::Func_1<bool>* VROSC::AuthenticationManager::$$c::_get_$$9__27_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::$$c::_get_$$9__27_5");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<bool>*>("VROSC", "AuthenticationManager/<>c", "<>9__27_5")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Boolean> <>9__27_5
void VROSC::AuthenticationManager::$$c::_set_$$9__27_5(::System::Func_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::$$c::_set_$$9__27_5");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("VROSC", "AuthenticationManager/<>c", "<>9__27_5", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<VROSC.Error> <>9__42_0
::System::Action_1<::VROSC::Error>* VROSC::AuthenticationManager::$$c::_get_$$9__42_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::$$c::_get_$$9__42_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::VROSC::Error>*>("VROSC", "AuthenticationManager/<>c", "<>9__42_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<VROSC.Error> <>9__42_0
void VROSC::AuthenticationManager::$$c::_set_$$9__42_0(::System::Action_1<::VROSC::Error>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::$$c::_set_$$9__42_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("VROSC", "AuthenticationManager/<>c", "<>9__42_0", value)));
}
// Autogenerated method: VROSC.AuthenticationManager/VROSC.<>c..cctor
void VROSC::AuthenticationManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "AuthenticationManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager/VROSC.<>c.<Awake>b__27_5
bool VROSC::AuthenticationManager::$$c::$Awake$b__27_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::$$c::<Awake>b__27_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__27_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.AuthenticationManager/VROSC.<>c.<UserEmailChangeSuccess>b__42_0
void VROSC::AuthenticationManager::$$c::$UserEmailChangeSuccess$b__42_0(::VROSC::Error error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::$$c::<UserEmailChangeSuccess>b__42_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UserEmailChangeSuccess>b__42_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.AuthenticationManager/VROSC.<>c__DisplayClass37_0
#include "VROSC/AuthenticationManager_--c__DisplayClass37_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String newPassword
[[deprecated("Use field access instead!")]] ::StringW& VROSC::AuthenticationManager::$$c__DisplayClass37_0::dyn_newPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::$$c__DisplayClass37_0::dyn_newPassword");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newPassword"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.AuthenticationManager <>4__this
[[deprecated("Use field access instead!")]] ::VROSC::AuthenticationManager*& VROSC::AuthenticationManager::$$c__DisplayClass37_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::$$c__DisplayClass37_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::AuthenticationManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.AuthenticationManager/VROSC.<>c__DisplayClass37_0.<ChangeUserPassword>b__0
void VROSC::AuthenticationManager::$$c__DisplayClass37_0::$ChangeUserPassword$b__0(::StringW email, bool isVerified) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::AuthenticationManager::$$c__DisplayClass37_0::<ChangeUserPassword>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ChangeUserPassword>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(email), ::il2cpp_utils::ExtractType(isVerified)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, email, isVerified);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.CheckLocalDataState
#include "VROSC/CheckLocalDataState.hpp"
// Including type: VROSC.AuthenticationManager
#include "VROSC/AuthenticationManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.AuthenticationManager _authManager
[[deprecated("Use field access instead!")]] ::VROSC::AuthenticationManager*& VROSC::CheckLocalDataState::dyn__authManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CheckLocalDataState::dyn__authManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authManager"))->offset;
  return *reinterpret_cast<::VROSC::AuthenticationManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <HasCheckedForData>k__BackingField
[[deprecated("Use field access instead!")]] bool& VROSC::CheckLocalDataState::dyn_$HasCheckedForData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CheckLocalDataState::dyn_$HasCheckedForData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HasCheckedForData>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.CheckLocalDataState.get_HasCheckedForData
bool VROSC::CheckLocalDataState::get_HasCheckedForData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CheckLocalDataState::get_HasCheckedForData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasCheckedForData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CheckLocalDataState.set_HasCheckedForData
void VROSC::CheckLocalDataState::set_HasCheckedForData(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CheckLocalDataState::set_HasCheckedForData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HasCheckedForData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.CheckLocalDataState.OnEnter
void VROSC::CheckLocalDataState::OnEnter(::ArrayW<::Il2CppObject*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CheckLocalDataState::OnEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::CheckLocalDataState*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, values);
}
// Autogenerated method: VROSC.CheckLocalDataState.OnExit
void VROSC::CheckLocalDataState::OnExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CheckLocalDataState::OnExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::CheckLocalDataState*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CheckLocalDataState.Tick
void VROSC::CheckLocalDataState::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CheckLocalDataState::Tick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::CheckLocalDataState*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CheckLocalDataState.UpdateData
void VROSC::CheckLocalDataState::UpdateData(::ArrayW<::Il2CppObject*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CheckLocalDataState::UpdateData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::CheckLocalDataState*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, values);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.LoggedInState
#include "VROSC/LoggedInState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VROSC.LoggedInState.OnEnter
void VROSC::LoggedInState::OnEnter(::ArrayW<::Il2CppObject*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoggedInState::OnEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoggedInState*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, values);
}
// Autogenerated method: VROSC.LoggedInState.OnExit
void VROSC::LoggedInState::OnExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoggedInState::OnExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoggedInState*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoggedInState.Tick
void VROSC::LoggedInState::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoggedInState::Tick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoggedInState*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoggedInState.UpdateData
void VROSC::LoggedInState::UpdateData(::ArrayW<::Il2CppObject*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoggedInState::UpdateData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoggedInState*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, values);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.LoginWithEmailState
#include "VROSC/LoginWithEmailState.hpp"
// Including type: VROSC.LoginWithEmailState/VROSC.<>c__DisplayClass20_0
#include "VROSC/LoginWithEmailState_--c__DisplayClass20_0.hpp"
// Including type: VROSC.LoginWithEmailState/VROSC.<>c
#include "VROSC/LoginWithEmailState_--c.hpp"
// Including type: VROSC.AuthenticationManager
#include "VROSC/AuthenticationManager.hpp"
// Including type: VROSC.Error
#include "VROSC/Error.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.AuthenticationManager _authManager
[[deprecated("Use field access instead!")]] ::VROSC::AuthenticationManager*& VROSC::LoginWithEmailState::dyn__authManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::dyn__authManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authManager"))->offset;
  return *reinterpret_cast<::VROSC::AuthenticationManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _email
[[deprecated("Use field access instead!")]] ::StringW& VROSC::LoginWithEmailState::dyn__email() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::dyn__email");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_email"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _password
[[deprecated("Use field access instead!")]] ::StringW& VROSC::LoginWithEmailState::dyn__password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::dyn__password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_password"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _rememberMe
[[deprecated("Use field access instead!")]] bool& VROSC::LoginWithEmailState::dyn__rememberMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::dyn__rememberMe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rememberMe"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isNewUser
[[deprecated("Use field access instead!")]] bool& VROSC::LoginWithEmailState::dyn__isNewUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::dyn__isNewUser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isNewUser"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastAttemptTimer
[[deprecated("Use field access instead!")]] float& VROSC::LoginWithEmailState::dyn__lastAttemptTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::dyn__lastAttemptTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastAttemptTimer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _attemptsCount
[[deprecated("Use field access instead!")]] int& VROSC::LoginWithEmailState::dyn__attemptsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::dyn__attemptsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attemptsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _waitingForResponse
[[deprecated("Use field access instead!")]] bool& VROSC::LoginWithEmailState::dyn__waitingForResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::dyn__waitingForResponse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitingForResponse"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasSubmittedData
[[deprecated("Use field access instead!")]] bool& VROSC::LoginWithEmailState::dyn__hasSubmittedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::dyn__hasSubmittedData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasSubmittedData"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <HasLoggedIn>k__BackingField
[[deprecated("Use field access instead!")]] bool& VROSC::LoginWithEmailState::dyn_$HasLoggedIn$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::dyn_$HasLoggedIn$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HasLoggedIn>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoginWithEmailState.get_HasLoggedIn
bool VROSC::LoginWithEmailState::get_HasLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::get_HasLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoginWithEmailState.set_HasLoggedIn
void VROSC::LoginWithEmailState::set_HasLoggedIn(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::set_HasLoggedIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HasLoggedIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.LoginWithEmailState.OnEnter
void VROSC::LoginWithEmailState::OnEnter(::ArrayW<::Il2CppObject*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::OnEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoginWithEmailState*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, values);
}
// Autogenerated method: VROSC.LoginWithEmailState.OnExit
void VROSC::LoginWithEmailState::OnExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::OnExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoginWithEmailState*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoginWithEmailState.Tick
void VROSC::LoginWithEmailState::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::Tick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoginWithEmailState*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoginWithEmailState.UpdateData
void VROSC::LoginWithEmailState::UpdateData(::ArrayW<::Il2CppObject*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::UpdateData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::LoginWithEmailState*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, values);
}
// Autogenerated method: VROSC.LoginWithEmailState.LoginWithEmail
void VROSC::LoginWithEmailState::LoginWithEmail(::StringW email, ::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::LoginWithEmail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginWithEmail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(email), ::il2cpp_utils::ExtractType(password)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, email, password);
}
// Autogenerated method: VROSC.LoginWithEmailState.FirebaseCreateUserWithEmailSuccess
void VROSC::LoginWithEmailState::FirebaseCreateUserWithEmailSuccess(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::FirebaseCreateUserWithEmailSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FirebaseCreateUserWithEmailSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: VROSC.LoginWithEmailState.FirebaseLoginUserWithEmailSuccess
void VROSC::LoginWithEmailState::FirebaseLoginUserWithEmailSuccess(::StringW userId, bool isEmailVerified) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::FirebaseLoginUserWithEmailSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FirebaseLoginUserWithEmailSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isEmailVerified)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, isEmailVerified);
}
// Autogenerated method: VROSC.LoginWithEmailState.FirebaseLoginUserWithEmailFailure
void VROSC::LoginWithEmailState::FirebaseLoginUserWithEmailFailure(::VROSC::Error error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::FirebaseLoginUserWithEmailFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FirebaseLoginUserWithEmailFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoginWithEmailState/VROSC.<>c__DisplayClass20_0
#include "VROSC/LoginWithEmailState_--c__DisplayClass20_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VROSC.LoginWithEmailState <>4__this
[[deprecated("Use field access instead!")]] ::VROSC::LoginWithEmailState*& VROSC::LoginWithEmailState::$$c__DisplayClass20_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::$$c__DisplayClass20_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::LoginWithEmailState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& VROSC::LoginWithEmailState::$$c__DisplayClass20_0::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::$$c__DisplayClass20_0::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isEmailVerified
[[deprecated("Use field access instead!")]] bool& VROSC::LoginWithEmailState::$$c__DisplayClass20_0::dyn_isEmailVerified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::$$c__DisplayClass20_0::dyn_isEmailVerified");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isEmailVerified"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action <>9__3
[[deprecated("Use field access instead!")]] ::System::Action*& VROSC::LoginWithEmailState::$$c__DisplayClass20_0::dyn_$$9__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::$$c__DisplayClass20_0::dyn_$$9__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__3"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> <>9__4
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::LoginWithEmailState::$$c__DisplayClass20_0::dyn_$$9__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::$$c__DisplayClass20_0::dyn_$$9__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__4"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.LoginWithEmailState/VROSC.<>c__DisplayClass20_0.<FirebaseLoginUserWithEmailSuccess>b__0
void VROSC::LoginWithEmailState::$$c__DisplayClass20_0::$FirebaseLoginUserWithEmailSuccess$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::$$c__DisplayClass20_0::<FirebaseLoginUserWithEmailSuccess>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FirebaseLoginUserWithEmailSuccess>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoginWithEmailState/VROSC.<>c__DisplayClass20_0.<FirebaseLoginUserWithEmailSuccess>b__1
void VROSC::LoginWithEmailState::$$c__DisplayClass20_0::$FirebaseLoginUserWithEmailSuccess$b__1(::VROSC::Error error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::$$c__DisplayClass20_0::<FirebaseLoginUserWithEmailSuccess>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FirebaseLoginUserWithEmailSuccess>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: VROSC.LoginWithEmailState/VROSC.<>c__DisplayClass20_0.<FirebaseLoginUserWithEmailSuccess>b__3
void VROSC::LoginWithEmailState::$$c__DisplayClass20_0::$FirebaseLoginUserWithEmailSuccess$b__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::$$c__DisplayClass20_0::<FirebaseLoginUserWithEmailSuccess>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FirebaseLoginUserWithEmailSuccess>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.LoginWithEmailState/VROSC.<>c__DisplayClass20_0.<FirebaseLoginUserWithEmailSuccess>b__4
void VROSC::LoginWithEmailState::$$c__DisplayClass20_0::$FirebaseLoginUserWithEmailSuccess$b__4(::VROSC::Error error2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::$$c__DisplayClass20_0::<FirebaseLoginUserWithEmailSuccess>b__4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FirebaseLoginUserWithEmailSuccess>b__4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.LoginWithEmailState/VROSC.<>c
#include "VROSC/LoginWithEmailState_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VROSC.LoginWithEmailState/VROSC.<>c <>9
::VROSC::LoginWithEmailState::$$c* VROSC::LoginWithEmailState::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::VROSC::LoginWithEmailState::$$c*>("VROSC", "LoginWithEmailState/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly VROSC.LoginWithEmailState/VROSC.<>c <>9
void VROSC::LoginWithEmailState::$$c::_set_$$9(::VROSC::LoginWithEmailState::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("VROSC", "LoginWithEmailState/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<VROSC.Error> <>9__20_2
::System::Action_1<::VROSC::Error>* VROSC::LoginWithEmailState::$$c::_get_$$9__20_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::$$c::_get_$$9__20_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::VROSC::Error>*>("VROSC", "LoginWithEmailState/<>c", "<>9__20_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<VROSC.Error> <>9__20_2
void VROSC::LoginWithEmailState::$$c::_set_$$9__20_2(::System::Action_1<::VROSC::Error>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::$$c::_set_$$9__20_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("VROSC", "LoginWithEmailState/<>c", "<>9__20_2", value)));
}
// Autogenerated method: VROSC.LoginWithEmailState/VROSC.<>c..cctor
void VROSC::LoginWithEmailState::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "LoginWithEmailState/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.LoginWithEmailState/VROSC.<>c.<FirebaseLoginUserWithEmailSuccess>b__20_2
void VROSC::LoginWithEmailState::$$c::$FirebaseLoginUserWithEmailSuccess$b__20_2(::VROSC::Error error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::LoginWithEmailState::$$c::<FirebaseLoginUserWithEmailSuccess>b__20_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FirebaseLoginUserWithEmailSuccess>b__20_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.WaitForEmailVerificationState
#include "VROSC/WaitForEmailVerificationState.hpp"
// Including type: VROSC.AuthenticationManager
#include "VROSC/AuthenticationManager.hpp"
// Including type: VROSC.Error
#include "VROSC/Error.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VROSC.AuthenticationManager _authManager
[[deprecated("Use field access instead!")]] ::VROSC::AuthenticationManager*& VROSC::WaitForEmailVerificationState::dyn__authManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::WaitForEmailVerificationState::dyn__authManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authManager"))->offset;
  return *reinterpret_cast<::VROSC::AuthenticationManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _reloadTimer
[[deprecated("Use field access instead!")]] float& VROSC::WaitForEmailVerificationState::dyn__reloadTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::WaitForEmailVerificationState::dyn__reloadTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reloadTimer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _attemptedSendingVerificationEmail
[[deprecated("Use field access instead!")]] bool& VROSC::WaitForEmailVerificationState::dyn__attemptedSendingVerificationEmail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::WaitForEmailVerificationState::dyn__attemptedSendingVerificationEmail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attemptedSendingVerificationEmail"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.WaitForEmailVerificationState.OnEnter
void VROSC::WaitForEmailVerificationState::OnEnter(::ArrayW<::Il2CppObject*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::WaitForEmailVerificationState::OnEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::WaitForEmailVerificationState*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, values);
}
// Autogenerated method: VROSC.WaitForEmailVerificationState.OnExit
void VROSC::WaitForEmailVerificationState::OnExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::WaitForEmailVerificationState::OnExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::WaitForEmailVerificationState*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.WaitForEmailVerificationState.Tick
void VROSC::WaitForEmailVerificationState::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::WaitForEmailVerificationState::Tick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::WaitForEmailVerificationState*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.WaitForEmailVerificationState.UpdateData
void VROSC::WaitForEmailVerificationState::UpdateData(::ArrayW<::Il2CppObject*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::WaitForEmailVerificationState::UpdateData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::WaitForEmailVerificationState*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, values);
}
// Autogenerated method: VROSC.WaitForEmailVerificationState.FirebaseSendVerificationEmailSuccess
void VROSC::WaitForEmailVerificationState::FirebaseSendVerificationEmailSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::WaitForEmailVerificationState::FirebaseSendVerificationEmailSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FirebaseSendVerificationEmailSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.WaitForEmailVerificationState.FirebaseSendVerificationEmailFailure
void VROSC::WaitForEmailVerificationState::FirebaseSendVerificationEmailFailure(::VROSC::Error error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::WaitForEmailVerificationState::FirebaseSendVerificationEmailFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FirebaseSendVerificationEmailFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.WaitForUserToLoginState
#include "VROSC/WaitForUserToLoginState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VROSC.WaitForUserToLoginState.OnEnter
void VROSC::WaitForUserToLoginState::OnEnter(::ArrayW<::Il2CppObject*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::WaitForUserToLoginState::OnEnter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::WaitForUserToLoginState*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, values);
}
// Autogenerated method: VROSC.WaitForUserToLoginState.OnExit
void VROSC::WaitForUserToLoginState::OnExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::WaitForUserToLoginState::OnExit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::WaitForUserToLoginState*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.WaitForUserToLoginState.Tick
void VROSC::WaitForUserToLoginState::Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::WaitForUserToLoginState::Tick");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::WaitForUserToLoginState*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.WaitForUserToLoginState.UpdateData
void VROSC::WaitForUserToLoginState::UpdateData(::ArrayW<::Il2CppObject*> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::WaitForUserToLoginState::UpdateData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::WaitForUserToLoginState*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, values);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.CallbackHandler
#include "VROSC/CallbackHandler.hpp"
// Including type: VROSC.CallbackHandler/VROSC.LoginUserWithEmailCallback
#include "VROSC/CallbackHandler_LoginUserWithEmailCallback.hpp"
// Including type: VROSC.CallbackHandler/VROSC.UserLoginAnonymouslyCallback
#include "VROSC/CallbackHandler_UserLoginAnonymouslyCallback.hpp"
// Including type: VROSC.CallbackHandler/VROSC.FirestoreCollectionReadCallback
#include "VROSC/CallbackHandler_FirestoreCollectionReadCallback.hpp"
// Including type: VROSC.CallbackHandler/VROSC.FirestoreCollectionDictionaryReadCallback
#include "VROSC/CallbackHandler_FirestoreCollectionDictionaryReadCallback.hpp"
// Including type: VROSC.CallbackHandler/VROSC.FirestoreDocumentReadCallback
#include "VROSC/CallbackHandler_FirestoreDocumentReadCallback.hpp"
// Including type: VROSC.CallbackHandler/VROSC.StringCallback
#include "VROSC/CallbackHandler_StringCallback.hpp"
// Including type: VROSC.CallbackHandler/VROSC.ErrorCallback
#include "VROSC/CallbackHandler_ErrorCallback.hpp"
// Including type: VROSC.CallbackHandler/VROSC.<PollInProgressRequests>d__25
#include "VROSC/CallbackHandler_-PollInProgressRequests-d__25.hpp"
// Including type: System.Collections.Concurrent.ConcurrentQueue`1
#include "System/Collections/Concurrent/ConcurrentQueue_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Firebase.Firestore.DocumentSnapshot
#include "Firebase/Firestore/DocumentSnapshot.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 PollingDelay
int VROSC::CallbackHandler::_get_PollingDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::_get_PollingDelay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("VROSC", "CallbackHandler", "PollingDelay"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 PollingDelay
void VROSC::CallbackHandler::_set_PollingDelay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::_set_PollingDelay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CallbackHandler", "PollingDelay", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Concurrent.ConcurrentQueue`1<VROSC.CallbackHandler/VROSC.LoginUserWithEmailCallback> _loginUserWithEmailCallbacks
::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::LoginUserWithEmailCallback*>* VROSC::CallbackHandler::_get__loginUserWithEmailCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::_get__loginUserWithEmailCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::LoginUserWithEmailCallback*>*>("VROSC", "CallbackHandler", "_loginUserWithEmailCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Concurrent.ConcurrentQueue`1<VROSC.CallbackHandler/VROSC.LoginUserWithEmailCallback> _loginUserWithEmailCallbacks
void VROSC::CallbackHandler::_set__loginUserWithEmailCallbacks(::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::LoginUserWithEmailCallback*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::_set__loginUserWithEmailCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CallbackHandler", "_loginUserWithEmailCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Concurrent.ConcurrentQueue`1<VROSC.CallbackHandler/VROSC.UserLoginAnonymouslyCallback> _userLoginAnonymouslyCallbacks
::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::UserLoginAnonymouslyCallback*>* VROSC::CallbackHandler::_get__userLoginAnonymouslyCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::_get__userLoginAnonymouslyCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::UserLoginAnonymouslyCallback*>*>("VROSC", "CallbackHandler", "_userLoginAnonymouslyCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Concurrent.ConcurrentQueue`1<VROSC.CallbackHandler/VROSC.UserLoginAnonymouslyCallback> _userLoginAnonymouslyCallbacks
void VROSC::CallbackHandler::_set__userLoginAnonymouslyCallbacks(::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::UserLoginAnonymouslyCallback*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::_set__userLoginAnonymouslyCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CallbackHandler", "_userLoginAnonymouslyCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Concurrent.ConcurrentQueue`1<VROSC.CallbackHandler/VROSC.FirestoreCollectionReadCallback> _firestoreCollectionReadCallbacks
::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::FirestoreCollectionReadCallback*>* VROSC::CallbackHandler::_get__firestoreCollectionReadCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::_get__firestoreCollectionReadCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::FirestoreCollectionReadCallback*>*>("VROSC", "CallbackHandler", "_firestoreCollectionReadCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Concurrent.ConcurrentQueue`1<VROSC.CallbackHandler/VROSC.FirestoreCollectionReadCallback> _firestoreCollectionReadCallbacks
void VROSC::CallbackHandler::_set__firestoreCollectionReadCallbacks(::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::FirestoreCollectionReadCallback*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::_set__firestoreCollectionReadCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CallbackHandler", "_firestoreCollectionReadCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Concurrent.ConcurrentQueue`1<VROSC.CallbackHandler/VROSC.FirestoreCollectionDictionaryReadCallback> _firestoreCollectionDictionaryReadCallbacks
::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::FirestoreCollectionDictionaryReadCallback*>* VROSC::CallbackHandler::_get__firestoreCollectionDictionaryReadCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::_get__firestoreCollectionDictionaryReadCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::FirestoreCollectionDictionaryReadCallback*>*>("VROSC", "CallbackHandler", "_firestoreCollectionDictionaryReadCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Concurrent.ConcurrentQueue`1<VROSC.CallbackHandler/VROSC.FirestoreCollectionDictionaryReadCallback> _firestoreCollectionDictionaryReadCallbacks
void VROSC::CallbackHandler::_set__firestoreCollectionDictionaryReadCallbacks(::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::FirestoreCollectionDictionaryReadCallback*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::_set__firestoreCollectionDictionaryReadCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CallbackHandler", "_firestoreCollectionDictionaryReadCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Concurrent.ConcurrentQueue`1<VROSC.CallbackHandler/VROSC.FirestoreDocumentReadCallback> _firestoreDocumentReadCallbacks
::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::FirestoreDocumentReadCallback*>* VROSC::CallbackHandler::_get__firestoreDocumentReadCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::_get__firestoreDocumentReadCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::FirestoreDocumentReadCallback*>*>("VROSC", "CallbackHandler", "_firestoreDocumentReadCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Concurrent.ConcurrentQueue`1<VROSC.CallbackHandler/VROSC.FirestoreDocumentReadCallback> _firestoreDocumentReadCallbacks
void VROSC::CallbackHandler::_set__firestoreDocumentReadCallbacks(::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::FirestoreDocumentReadCallback*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::_set__firestoreDocumentReadCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CallbackHandler", "_firestoreDocumentReadCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Concurrent.ConcurrentQueue`1<System.Action> _emptyCallbacks
::System::Collections::Concurrent::ConcurrentQueue_1<::System::Action*>* VROSC::CallbackHandler::_get__emptyCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::_get__emptyCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Concurrent::ConcurrentQueue_1<::System::Action*>*>("VROSC", "CallbackHandler", "_emptyCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Concurrent.ConcurrentQueue`1<System.Action> _emptyCallbacks
void VROSC::CallbackHandler::_set__emptyCallbacks(::System::Collections::Concurrent::ConcurrentQueue_1<::System::Action*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::_set__emptyCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CallbackHandler", "_emptyCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Concurrent.ConcurrentQueue`1<VROSC.CallbackHandler/VROSC.StringCallback> _stringCallbacks
::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::StringCallback*>* VROSC::CallbackHandler::_get__stringCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::_get__stringCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::StringCallback*>*>("VROSC", "CallbackHandler", "_stringCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Concurrent.ConcurrentQueue`1<VROSC.CallbackHandler/VROSC.StringCallback> _stringCallbacks
void VROSC::CallbackHandler::_set__stringCallbacks(::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::StringCallback*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::_set__stringCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CallbackHandler", "_stringCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Concurrent.ConcurrentQueue`1<VROSC.CallbackHandler/VROSC.ErrorCallback> _errorCallbacks
::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::ErrorCallback*>* VROSC::CallbackHandler::_get__errorCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::_get__errorCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::ErrorCallback*>*>("VROSC", "CallbackHandler", "_errorCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Concurrent.ConcurrentQueue`1<VROSC.CallbackHandler/VROSC.ErrorCallback> _errorCallbacks
void VROSC::CallbackHandler::_set__errorCallbacks(::System::Collections::Concurrent::ConcurrentQueue_1<::VROSC::CallbackHandler::ErrorCallback*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::_set__errorCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CallbackHandler", "_errorCallbacks", value));
}
// Autogenerated method: VROSC.CallbackHandler..cctor
void VROSC::CallbackHandler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "CallbackHandler", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.CallbackHandler.Init
void VROSC::CallbackHandler::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "CallbackHandler", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.CallbackHandler.RegisterCallback
void VROSC::CallbackHandler::RegisterCallback(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::RegisterCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "CallbackHandler", "RegisterCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action);
}
// Autogenerated method: VROSC.CallbackHandler.RegisterStringCallback
void VROSC::CallbackHandler::RegisterStringCallback(::System::Action_1<::StringW>* action, ::StringW argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::RegisterStringCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "CallbackHandler", "RegisterStringCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(argument)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action, argument);
}
// Autogenerated method: VROSC.CallbackHandler.RegisterErrorCallback
void VROSC::CallbackHandler::RegisterErrorCallback(::System::Action_1<::VROSC::Error>* action, ::VROSC::Error error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::RegisterErrorCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "CallbackHandler", "RegisterErrorCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action, error);
}
// Autogenerated method: VROSC.CallbackHandler.RegisterLoginUserWithEmailCallback
void VROSC::CallbackHandler::RegisterLoginUserWithEmailCallback(::System::Action_2<::StringW, bool>* action, ::StringW userId, bool isVerified) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::RegisterLoginUserWithEmailCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "CallbackHandler", "RegisterLoginUserWithEmailCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isVerified)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action, userId, isVerified);
}
// Autogenerated method: VROSC.CallbackHandler.RegisterUserLoginAnonymouslyCallback
void VROSC::CallbackHandler::RegisterUserLoginAnonymouslyCallback(::System::Action_3<::StringW, ::StringW, ::StringW>* action, ::StringW userId, ::StringW accessToken, ::StringW refreshToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::RegisterUserLoginAnonymouslyCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "CallbackHandler", "RegisterUserLoginAnonymouslyCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(accessToken), ::il2cpp_utils::ExtractType(refreshToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action, userId, accessToken, refreshToken);
}
// Autogenerated method: VROSC.CallbackHandler.RegisterFirestoreCollectionReadCallback
void VROSC::CallbackHandler::RegisterFirestoreCollectionReadCallback(::System::Action_1<::System::Collections::Generic::IEnumerable_1<::Firebase::Firestore::DocumentSnapshot*>*>* action, ::System::Collections::Generic::IEnumerable_1<::Firebase::Firestore::DocumentSnapshot*>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::RegisterFirestoreCollectionReadCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "CallbackHandler", "RegisterFirestoreCollectionReadCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action, data);
}
// Autogenerated method: VROSC.CallbackHandler.RegisterFirestoreCollectionDictionaryReadCallback
void VROSC::CallbackHandler::RegisterFirestoreCollectionDictionaryReadCallback(::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*>* action, ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::RegisterFirestoreCollectionDictionaryReadCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "CallbackHandler", "RegisterFirestoreCollectionDictionaryReadCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action, data);
}
// Autogenerated method: VROSC.CallbackHandler.RegisterFirestoreDocumentReadCallback
void VROSC::CallbackHandler::RegisterFirestoreDocumentReadCallback(::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>* action, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::RegisterFirestoreDocumentReadCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "CallbackHandler", "RegisterFirestoreDocumentReadCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action, data);
}
// Autogenerated method: VROSC.CallbackHandler.PollInProgressRequests
void VROSC::CallbackHandler::PollInProgressRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::PollInProgressRequests");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "CallbackHandler", "PollInProgressRequests", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.CallbackHandler/VROSC.LoginUserWithEmailCallback
#include "VROSC/CallbackHandler_LoginUserWithEmailCallback.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`2<System.String,System.Boolean> Action
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, bool>*& VROSC::CallbackHandler::LoginUserWithEmailCallback::dyn_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::LoginUserWithEmailCallback::dyn_Action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Action"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String UserId
[[deprecated("Use field access instead!")]] ::StringW& VROSC::CallbackHandler::LoginUserWithEmailCallback::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::LoginUserWithEmailCallback::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsVerified
[[deprecated("Use field access instead!")]] bool& VROSC::CallbackHandler::LoginUserWithEmailCallback::dyn_IsVerified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::LoginUserWithEmailCallback::dyn_IsVerified");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsVerified"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.CallbackHandler/VROSC.UserLoginAnonymouslyCallback
#include "VROSC/CallbackHandler_UserLoginAnonymouslyCallback.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`3<System.String,System.String,System.String> Action
[[deprecated("Use field access instead!")]] ::System::Action_3<::StringW, ::StringW, ::StringW>*& VROSC::CallbackHandler::UserLoginAnonymouslyCallback::dyn_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::UserLoginAnonymouslyCallback::dyn_Action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Action"))->offset;
  return *reinterpret_cast<::System::Action_3<::StringW, ::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String UserId
[[deprecated("Use field access instead!")]] ::StringW& VROSC::CallbackHandler::UserLoginAnonymouslyCallback::dyn_UserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::UserLoginAnonymouslyCallback::dyn_UserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UserId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String AccessToken
[[deprecated("Use field access instead!")]] ::StringW& VROSC::CallbackHandler::UserLoginAnonymouslyCallback::dyn_AccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::UserLoginAnonymouslyCallback::dyn_AccessToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AccessToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RefreshToken
[[deprecated("Use field access instead!")]] ::StringW& VROSC::CallbackHandler::UserLoginAnonymouslyCallback::dyn_RefreshToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::UserLoginAnonymouslyCallback::dyn_RefreshToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RefreshToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.CallbackHandler/VROSC.FirestoreCollectionReadCallback
#include "VROSC/CallbackHandler_FirestoreCollectionReadCallback.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Firebase.Firestore.DocumentSnapshot
#include "Firebase/Firestore/DocumentSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Collections.Generic.IEnumerable`1<Firebase.Firestore.DocumentSnapshot>> Action
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::IEnumerable_1<::Firebase::Firestore::DocumentSnapshot*>*>*& VROSC::CallbackHandler::FirestoreCollectionReadCallback::dyn_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::FirestoreCollectionReadCallback::dyn_Action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Action"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Collections::Generic::IEnumerable_1<::Firebase::Firestore::DocumentSnapshot*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.IEnumerable`1<Firebase.Firestore.DocumentSnapshot> Data
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::Firebase::Firestore::DocumentSnapshot*>*& VROSC::CallbackHandler::FirestoreCollectionReadCallback::dyn_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::FirestoreCollectionReadCallback::dyn_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Data"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::Firebase::Firestore::DocumentSnapshot*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.CallbackHandler/VROSC.FirestoreCollectionDictionaryReadCallback
#include "VROSC/CallbackHandler_FirestoreCollectionDictionaryReadCallback.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.Dictionary`2<System.String,System.Object>>> Action
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*>*& VROSC::CallbackHandler::FirestoreCollectionDictionaryReadCallback::dyn_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::FirestoreCollectionDictionaryReadCallback::dyn_Action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Action"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.Dictionary`2<System.String,System.Object>> Data
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*& VROSC::CallbackHandler::FirestoreCollectionDictionaryReadCallback::dyn_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::FirestoreCollectionDictionaryReadCallback::dyn_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Data"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.CallbackHandler/VROSC.FirestoreDocumentReadCallback
#include "VROSC/CallbackHandler_FirestoreDocumentReadCallback.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Collections.Generic.Dictionary`2<System.String,System.Object>> Action
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*& VROSC::CallbackHandler::FirestoreDocumentReadCallback::dyn_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::FirestoreDocumentReadCallback::dyn_Action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Action"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.Object> Data
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*& VROSC::CallbackHandler::FirestoreDocumentReadCallback::dyn_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::FirestoreDocumentReadCallback::dyn_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Data"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.CallbackHandler/VROSC.StringCallback
#include "VROSC/CallbackHandler_StringCallback.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> Action
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& VROSC::CallbackHandler::StringCallback::dyn_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::StringCallback::dyn_Action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Action"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Argument
[[deprecated("Use field access instead!")]] ::StringW& VROSC::CallbackHandler::StringCallback::dyn_Argument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::StringCallback::dyn_Argument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Argument"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.CallbackHandler/VROSC.ErrorCallback
#include "VROSC/CallbackHandler_ErrorCallback.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> Action
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::CallbackHandler::ErrorCallback::dyn_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::ErrorCallback::dyn_Action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Action"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.Error Error
[[deprecated("Use field access instead!")]] ::VROSC::Error& VROSC::CallbackHandler::ErrorCallback::dyn_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::ErrorCallback::dyn_Error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Error"))->offset;
  return *reinterpret_cast<::VROSC::Error*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.CallbackHandler/VROSC.<PollInProgressRequests>d__25
#include "VROSC/CallbackHandler_-PollInProgressRequests-d__25.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& VROSC::CallbackHandler::$PollInProgressRequests$d__25::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::$PollInProgressRequests$d__25::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& VROSC::CallbackHandler::$PollInProgressRequests$d__25::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::$PollInProgressRequests$d__25::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& VROSC::CallbackHandler::$PollInProgressRequests$d__25::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::$PollInProgressRequests$d__25::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.CallbackHandler/VROSC.<PollInProgressRequests>d__25.MoveNext
void VROSC::CallbackHandler::$PollInProgressRequests$d__25::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::$PollInProgressRequests$d__25::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::CallbackHandler::$PollInProgressRequests$d__25), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CallbackHandler/VROSC.<PollInProgressRequests>d__25.SetStateMachine
void VROSC::CallbackHandler::$PollInProgressRequests$d__25::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CallbackHandler::$PollInProgressRequests$d__25::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::VROSC::CallbackHandler::$PollInProgressRequests$d__25), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.ServicesWrapper
#include "VROSC/ServicesWrapper.hpp"
// Including type: VROSC.FirebaseWrapper
#include "VROSC/FirebaseWrapper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.FirebaseWrapper Firebase
::VROSC::FirebaseWrapper* VROSC::ServicesWrapper::_get_Firebase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ServicesWrapper::_get_Firebase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::FirebaseWrapper*>("VROSC", "ServicesWrapper", "Firebase"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.FirebaseWrapper Firebase
void VROSC::ServicesWrapper::_set_Firebase(::VROSC::FirebaseWrapper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ServicesWrapper::_set_Firebase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ServicesWrapper", "Firebase", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.CloudStateManager
#include "VROSC/CloudStateManager.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VROSC.CloudStateManager/VROSC.<>c__DisplayClass18_0
#include "VROSC/CloudStateManager_--c__DisplayClass18_0.hpp"
// Including type: VROSC.CloudStateManager/VROSC.<CoDownloadSession>d__18
#include "VROSC/CloudStateManager_-CoDownloadSession-d__18.hpp"
// Including type: VROSC.CloudStateManager/VROSC.<>c__DisplayClass20_0
#include "VROSC/CloudStateManager_--c__DisplayClass20_0.hpp"
// Including type: VROSC.CloudStateManager/VROSC.<CoUploadSession>d__20
#include "VROSC/CloudStateManager_-CoUploadSession-d__20.hpp"
// Including type: VROSC.CloudStateManager/VROSC.<>c__DisplayClass22_0
#include "VROSC/CloudStateManager_--c__DisplayClass22_0.hpp"
// Including type: VROSC.CloudStateManager/VROSC.<>c__DisplayClass23_0
#include "VROSC/CloudStateManager_--c__DisplayClass23_0.hpp"
// Including type: VROSC.CloudStateManager/VROSC.<CoDeleteSession>d__23
#include "VROSC/CloudStateManager_-CoDeleteSession-d__23.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.String> OnDownloadSessionFromCloudSuccess
::System::Action_1<::StringW>* VROSC::CloudStateManager::_get_OnDownloadSessionFromCloudSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_get_OnDownloadSessionFromCloudSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("VROSC", "CloudStateManager", "OnDownloadSessionFromCloudSuccess"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.String> OnDownloadSessionFromCloudSuccess
void VROSC::CloudStateManager::_set_OnDownloadSessionFromCloudSuccess(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_set_OnDownloadSessionFromCloudSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager", "OnDownloadSessionFromCloudSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<System.String,VROSC.Error> OnDownloadSessionFromCloudFailure
::System::Action_2<::StringW, ::VROSC::Error>* VROSC::CloudStateManager::_get_OnDownloadSessionFromCloudFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_get_OnDownloadSessionFromCloudFailure");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::StringW, ::VROSC::Error>*>("VROSC", "CloudStateManager", "OnDownloadSessionFromCloudFailure")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<System.String,VROSC.Error> OnDownloadSessionFromCloudFailure
void VROSC::CloudStateManager::_set_OnDownloadSessionFromCloudFailure(::System::Action_2<::StringW, ::VROSC::Error>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_set_OnDownloadSessionFromCloudFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager", "OnDownloadSessionFromCloudFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<System.String,System.Single> OnDownloadSessionFromCloudProgress
::System::Action_2<::StringW, float>* VROSC::CloudStateManager::_get_OnDownloadSessionFromCloudProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_get_OnDownloadSessionFromCloudProgress");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::StringW, float>*>("VROSC", "CloudStateManager", "OnDownloadSessionFromCloudProgress")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<System.String,System.Single> OnDownloadSessionFromCloudProgress
void VROSC::CloudStateManager::_set_OnDownloadSessionFromCloudProgress(::System::Action_2<::StringW, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_set_OnDownloadSessionFromCloudProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager", "OnDownloadSessionFromCloudProgress", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.String> OnUploadSessionToCloudSuccess
::System::Action_1<::StringW>* VROSC::CloudStateManager::_get_OnUploadSessionToCloudSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_get_OnUploadSessionToCloudSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("VROSC", "CloudStateManager", "OnUploadSessionToCloudSuccess"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.String> OnUploadSessionToCloudSuccess
void VROSC::CloudStateManager::_set_OnUploadSessionToCloudSuccess(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_set_OnUploadSessionToCloudSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager", "OnUploadSessionToCloudSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<System.String,VROSC.Error> OnUploadSessionToCloudFailure
::System::Action_2<::StringW, ::VROSC::Error>* VROSC::CloudStateManager::_get_OnUploadSessionToCloudFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_get_OnUploadSessionToCloudFailure");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::StringW, ::VROSC::Error>*>("VROSC", "CloudStateManager", "OnUploadSessionToCloudFailure")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<System.String,VROSC.Error> OnUploadSessionToCloudFailure
void VROSC::CloudStateManager::_set_OnUploadSessionToCloudFailure(::System::Action_2<::StringW, ::VROSC::Error>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_set_OnUploadSessionToCloudFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager", "OnUploadSessionToCloudFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<System.String,System.Single> OnUploadSessionToCloudProgress
::System::Action_2<::StringW, float>* VROSC::CloudStateManager::_get_OnUploadSessionToCloudProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_get_OnUploadSessionToCloudProgress");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::StringW, float>*>("VROSC", "CloudStateManager", "OnUploadSessionToCloudProgress")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<System.String,System.Single> OnUploadSessionToCloudProgress
void VROSC::CloudStateManager::_set_OnUploadSessionToCloudProgress(::System::Action_2<::StringW, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_set_OnUploadSessionToCloudProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager", "OnUploadSessionToCloudProgress", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<System.String,System.Single> OnUploadSessionPreviewToCloudProgress
::System::Action_2<::StringW, float>* VROSC::CloudStateManager::_get_OnUploadSessionPreviewToCloudProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_get_OnUploadSessionPreviewToCloudProgress");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::StringW, float>*>("VROSC", "CloudStateManager", "OnUploadSessionPreviewToCloudProgress")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<System.String,System.Single> OnUploadSessionPreviewToCloudProgress
void VROSC::CloudStateManager::_set_OnUploadSessionPreviewToCloudProgress(::System::Action_2<::StringW, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_set_OnUploadSessionPreviewToCloudProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager", "OnUploadSessionPreviewToCloudProgress", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.String> OnDeleteSessionFromCloudSuccess
::System::Action_1<::StringW>* VROSC::CloudStateManager::_get_OnDeleteSessionFromCloudSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_get_OnDeleteSessionFromCloudSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::StringW>*>("VROSC", "CloudStateManager", "OnDeleteSessionFromCloudSuccess"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.String> OnDeleteSessionFromCloudSuccess
void VROSC::CloudStateManager::_set_OnDeleteSessionFromCloudSuccess(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_set_OnDeleteSessionFromCloudSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager", "OnDeleteSessionFromCloudSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<System.String,VROSC.Error> OnDeleteSessionFromCloudFailure
::System::Action_2<::StringW, ::VROSC::Error>* VROSC::CloudStateManager::_get_OnDeleteSessionFromCloudFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_get_OnDeleteSessionFromCloudFailure");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::StringW, ::VROSC::Error>*>("VROSC", "CloudStateManager", "OnDeleteSessionFromCloudFailure")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<System.String,VROSC.Error> OnDeleteSessionFromCloudFailure
void VROSC::CloudStateManager::_set_OnDeleteSessionFromCloudFailure(::System::Action_2<::StringW, ::VROSC::Error>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_set_OnDeleteSessionFromCloudFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager", "OnDeleteSessionFromCloudFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<System.String,System.Boolean> OnDownloadPreviewSuccess
::System::Action_2<::StringW, bool>* VROSC::CloudStateManager::_get_OnDownloadPreviewSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_get_OnDownloadPreviewSuccess");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::StringW, bool>*>("VROSC", "CloudStateManager", "OnDownloadPreviewSuccess")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<System.String,System.Boolean> OnDownloadPreviewSuccess
void VROSC::CloudStateManager::_set_OnDownloadPreviewSuccess(::System::Action_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_set_OnDownloadPreviewSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager", "OnDownloadPreviewSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<System.String,VROSC.Error> OnDownloadPreviewFailure
::System::Action_2<::StringW, ::VROSC::Error>* VROSC::CloudStateManager::_get_OnDownloadPreviewFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_get_OnDownloadPreviewFailure");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::StringW, ::VROSC::Error>*>("VROSC", "CloudStateManager", "OnDownloadPreviewFailure")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<System.String,VROSC.Error> OnDownloadPreviewFailure
void VROSC::CloudStateManager::_set_OnDownloadPreviewFailure(::System::Action_2<::StringW, ::VROSC::Error>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_set_OnDownloadPreviewFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager", "OnDownloadPreviewFailure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<System.String,System.Single> OnDownloadPreviewProgress
::System::Action_2<::StringW, float>* VROSC::CloudStateManager::_get_OnDownloadPreviewProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_get_OnDownloadPreviewProgress");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_2<::StringW, float>*>("VROSC", "CloudStateManager", "OnDownloadPreviewProgress")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<System.String,System.Single> OnDownloadPreviewProgress
void VROSC::CloudStateManager::_set_OnDownloadPreviewProgress(::System::Action_2<::StringW, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::_set_OnDownloadPreviewProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager", "OnDownloadPreviewProgress", value));
}
// Autogenerated instance field getter
// Get instance field: private VROSC.CloudStateManager/VROSC.DownloadState _currentDownloadState
[[deprecated("Use field access instead!")]] ::VROSC::CloudStateManager::DownloadState& VROSC::CloudStateManager::dyn__currentDownloadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::dyn__currentDownloadState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentDownloadState"))->offset;
  return *reinterpret_cast<::VROSC::CloudStateManager::DownloadState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.CloudStateManager/VROSC.UploadState _currentUploadState
[[deprecated("Use field access instead!")]] ::VROSC::CloudStateManager::UploadState& VROSC::CloudStateManager::dyn__currentUploadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::dyn__currentUploadState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentUploadState"))->offset;
  return *reinterpret_cast<::VROSC::CloudStateManager::UploadState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.CloudStateManager.Awake
void VROSC::CloudStateManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CloudStateManager.DownloadSessionFromCloud
void VROSC::CloudStateManager::DownloadSessionFromCloud(::StringW sessionName, ::StringW userId, bool isCommunity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::DownloadSessionFromCloud");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DownloadSessionFromCloud", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionName), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isCommunity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionName, userId, isCommunity);
}
// Autogenerated method: VROSC.CloudStateManager.CoDownloadSession
::System::Collections::IEnumerator* VROSC::CloudStateManager::CoDownloadSession(::StringW sessionName, ::StringW userId, bool isCommunity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::CoDownloadSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CoDownloadSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionName), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isCommunity)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, sessionName, userId, isCommunity);
}
// Autogenerated method: VROSC.CloudStateManager.UploadSessionToCloud
void VROSC::CloudStateManager::UploadSessionToCloud(::StringW sessionName, bool isCommunity, bool hasPreview) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::UploadSessionToCloud");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UploadSessionToCloud", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionName), ::il2cpp_utils::ExtractType(isCommunity), ::il2cpp_utils::ExtractType(hasPreview)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionName, isCommunity, hasPreview);
}
// Autogenerated method: VROSC.CloudStateManager.CoUploadSession
::System::Collections::IEnumerator* VROSC::CloudStateManager::CoUploadSession(::StringW sessionName, bool isCommunity, bool hasPreview) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::CoUploadSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CoUploadSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionName), ::il2cpp_utils::ExtractType(isCommunity), ::il2cpp_utils::ExtractType(hasPreview)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, sessionName, isCommunity, hasPreview);
}
// Autogenerated method: VROSC.CloudStateManager.DeleteSessionFromCloud
void VROSC::CloudStateManager::DeleteSessionFromCloud(::StringW sessionName, bool isCommunity, bool isOgg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::DeleteSessionFromCloud");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteSessionFromCloud", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionName), ::il2cpp_utils::ExtractType(isCommunity), ::il2cpp_utils::ExtractType(isOgg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionName, isCommunity, isOgg);
}
// Autogenerated method: VROSC.CloudStateManager.DownloadPreview
void VROSC::CloudStateManager::DownloadPreview(::StringW sessionName, ::StringW userId, bool isCommunity, bool isOgg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::DownloadPreview");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DownloadPreview", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionName), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isCommunity), ::il2cpp_utils::ExtractType(isOgg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionName, userId, isCommunity, isOgg);
}
// Autogenerated method: VROSC.CloudStateManager.CoDeleteSession
::System::Collections::IEnumerator* VROSC::CloudStateManager::CoDeleteSession(::StringW sessionName, bool isCommunity, bool isOgg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::CoDeleteSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CoDeleteSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionName), ::il2cpp_utils::ExtractType(isCommunity), ::il2cpp_utils::ExtractType(isOgg)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, sessionName, isCommunity, isOgg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.CloudStateManager/VROSC.DownloadState
#include "VROSC/CloudStateManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.CloudStateManager/VROSC.DownloadState None
::VROSC::CloudStateManager::DownloadState VROSC::CloudStateManager::DownloadState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::DownloadState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::CloudStateManager::DownloadState>("VROSC", "CloudStateManager/DownloadState", "None"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.CloudStateManager/VROSC.DownloadState None
void VROSC::CloudStateManager::DownloadState::_set_None(::VROSC::CloudStateManager::DownloadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::DownloadState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager/DownloadState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.CloudStateManager/VROSC.DownloadState DownloadingSession
::VROSC::CloudStateManager::DownloadState VROSC::CloudStateManager::DownloadState::_get_DownloadingSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::DownloadState::_get_DownloadingSession");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::CloudStateManager::DownloadState>("VROSC", "CloudStateManager/DownloadState", "DownloadingSession"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.CloudStateManager/VROSC.DownloadState DownloadingSession
void VROSC::CloudStateManager::DownloadState::_set_DownloadingSession(::VROSC::CloudStateManager::DownloadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::DownloadState::_set_DownloadingSession");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager/DownloadState", "DownloadingSession", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.CloudStateManager/VROSC.DownloadState Waiting
::VROSC::CloudStateManager::DownloadState VROSC::CloudStateManager::DownloadState::_get_Waiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::DownloadState::_get_Waiting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::CloudStateManager::DownloadState>("VROSC", "CloudStateManager/DownloadState", "Waiting"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.CloudStateManager/VROSC.DownloadState Waiting
void VROSC::CloudStateManager::DownloadState::_set_Waiting(::VROSC::CloudStateManager::DownloadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::DownloadState::_set_Waiting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager/DownloadState", "Waiting", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.CloudStateManager/VROSC.DownloadState DownloadedSession
::VROSC::CloudStateManager::DownloadState VROSC::CloudStateManager::DownloadState::_get_DownloadedSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::DownloadState::_get_DownloadedSession");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::CloudStateManager::DownloadState>("VROSC", "CloudStateManager/DownloadState", "DownloadedSession"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.CloudStateManager/VROSC.DownloadState DownloadedSession
void VROSC::CloudStateManager::DownloadState::_set_DownloadedSession(::VROSC::CloudStateManager::DownloadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::DownloadState::_set_DownloadedSession");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager/DownloadState", "DownloadedSession", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.CloudStateManager/VROSC.DownloadState Abort
::VROSC::CloudStateManager::DownloadState VROSC::CloudStateManager::DownloadState::_get_Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::DownloadState::_get_Abort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::CloudStateManager::DownloadState>("VROSC", "CloudStateManager/DownloadState", "Abort"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.CloudStateManager/VROSC.DownloadState Abort
void VROSC::CloudStateManager::DownloadState::_set_Abort(::VROSC::CloudStateManager::DownloadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::DownloadState::_set_Abort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager/DownloadState", "Abort", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VROSC::CloudStateManager::DownloadState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::DownloadState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.CloudStateManager/VROSC.UploadState
#include "VROSC/CloudStateManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.CloudStateManager/VROSC.UploadState None
::VROSC::CloudStateManager::UploadState VROSC::CloudStateManager::UploadState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::UploadState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::CloudStateManager::UploadState>("VROSC", "CloudStateManager/UploadState", "None"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.CloudStateManager/VROSC.UploadState None
void VROSC::CloudStateManager::UploadState::_set_None(::VROSC::CloudStateManager::UploadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::UploadState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager/UploadState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.CloudStateManager/VROSC.UploadState UploadingSession
::VROSC::CloudStateManager::UploadState VROSC::CloudStateManager::UploadState::_get_UploadingSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::UploadState::_get_UploadingSession");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::CloudStateManager::UploadState>("VROSC", "CloudStateManager/UploadState", "UploadingSession"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.CloudStateManager/VROSC.UploadState UploadingSession
void VROSC::CloudStateManager::UploadState::_set_UploadingSession(::VROSC::CloudStateManager::UploadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::UploadState::_set_UploadingSession");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager/UploadState", "UploadingSession", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.CloudStateManager/VROSC.UploadState Waiting
::VROSC::CloudStateManager::UploadState VROSC::CloudStateManager::UploadState::_get_Waiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::UploadState::_get_Waiting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::CloudStateManager::UploadState>("VROSC", "CloudStateManager/UploadState", "Waiting"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.CloudStateManager/VROSC.UploadState Waiting
void VROSC::CloudStateManager::UploadState::_set_Waiting(::VROSC::CloudStateManager::UploadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::UploadState::_set_Waiting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager/UploadState", "Waiting", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.CloudStateManager/VROSC.UploadState UploadedSession
::VROSC::CloudStateManager::UploadState VROSC::CloudStateManager::UploadState::_get_UploadedSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::UploadState::_get_UploadedSession");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::CloudStateManager::UploadState>("VROSC", "CloudStateManager/UploadState", "UploadedSession"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.CloudStateManager/VROSC.UploadState UploadedSession
void VROSC::CloudStateManager::UploadState::_set_UploadedSession(::VROSC::CloudStateManager::UploadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::UploadState::_set_UploadedSession");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager/UploadState", "UploadedSession", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.CloudStateManager/VROSC.UploadState Abort
::VROSC::CloudStateManager::UploadState VROSC::CloudStateManager::UploadState::_get_Abort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::UploadState::_get_Abort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::CloudStateManager::UploadState>("VROSC", "CloudStateManager/UploadState", "Abort"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.CloudStateManager/VROSC.UploadState Abort
void VROSC::CloudStateManager::UploadState::_set_Abort(::VROSC::CloudStateManager::UploadState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::UploadState::_set_Abort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CloudStateManager/UploadState", "Abort", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& VROSC::CloudStateManager::UploadState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::UploadState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.CloudStateManager/VROSC.<>c__DisplayClass18_0
#include "VROSC/CloudStateManager_--c__DisplayClass18_0.hpp"
// Including type: VROSC.Error
#include "VROSC/Error.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String sessionName
[[deprecated("Use field access instead!")]] ::StringW& VROSC::CloudStateManager::$$c__DisplayClass18_0::dyn_sessionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass18_0::dyn_sessionName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sessionName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<>c__DisplayClass18_0.<CoDownloadSession>b__0
void VROSC::CloudStateManager::$$c__DisplayClass18_0::$CoDownloadSession$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass18_0::<CoDownloadSession>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CoDownloadSession>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<>c__DisplayClass18_0.<CoDownloadSession>b__1
void VROSC::CloudStateManager::$$c__DisplayClass18_0::$CoDownloadSession$b__1(float p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass18_0::<CoDownloadSession>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CoDownloadSession>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<>c__DisplayClass18_0.<CoDownloadSession>b__2
void VROSC::CloudStateManager::$$c__DisplayClass18_0::$CoDownloadSession$b__2(::VROSC::Error e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass18_0::<CoDownloadSession>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CoDownloadSession>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.CloudStateManager/VROSC.<CoDownloadSession>d__18
#include "VROSC/CloudStateManager_-CoDownloadSession-d__18.hpp"
// Including type: VROSC.CloudStateManager/VROSC.<>c__DisplayClass18_0
#include "VROSC/CloudStateManager_--c__DisplayClass18_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& VROSC::CloudStateManager::$CoDownloadSession$d__18::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDownloadSession$d__18::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& VROSC::CloudStateManager::$CoDownloadSession$d__18::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDownloadSession$d__18::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sessionName
[[deprecated("Use field access instead!")]] ::StringW& VROSC::CloudStateManager::$CoDownloadSession$d__18::dyn_sessionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDownloadSession$d__18::dyn_sessionName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sessionName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.CloudStateManager <>4__this
[[deprecated("Use field access instead!")]] ::VROSC::CloudStateManager*& VROSC::CloudStateManager::$CoDownloadSession$d__18::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDownloadSession$d__18::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::CloudStateManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& VROSC::CloudStateManager::$CoDownloadSession$d__18::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDownloadSession$d__18::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.CloudStateManager/VROSC.<>c__DisplayClass18_0 <>8__1
[[deprecated("Use field access instead!")]] ::VROSC::CloudStateManager::$$c__DisplayClass18_0*& VROSC::CloudStateManager::$CoDownloadSession$d__18::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDownloadSession$d__18::dyn_$$8__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::VROSC::CloudStateManager::$$c__DisplayClass18_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isCommunity
[[deprecated("Use field access instead!")]] bool& VROSC::CloudStateManager::$CoDownloadSession$d__18::dyn_isCommunity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDownloadSession$d__18::dyn_isCommunity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isCommunity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<CoDownloadSession>d__18.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* VROSC::CloudStateManager::$CoDownloadSession$d__18::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDownloadSession$d__18::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::CloudStateManager::$CoDownloadSession$d__18*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<CoDownloadSession>d__18.System.Collections.IEnumerator.get_Current
::Il2CppObject* VROSC::CloudStateManager::$CoDownloadSession$d__18::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDownloadSession$d__18::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::CloudStateManager::$CoDownloadSession$d__18*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<CoDownloadSession>d__18.System.IDisposable.Dispose
void VROSC::CloudStateManager::$CoDownloadSession$d__18::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDownloadSession$d__18::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::CloudStateManager::$CoDownloadSession$d__18*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<CoDownloadSession>d__18.MoveNext
bool VROSC::CloudStateManager::$CoDownloadSession$d__18::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDownloadSession$d__18::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::CloudStateManager::$CoDownloadSession$d__18*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<CoDownloadSession>d__18.System.Collections.IEnumerator.Reset
void VROSC::CloudStateManager::$CoDownloadSession$d__18::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDownloadSession$d__18::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::CloudStateManager::$CoDownloadSession$d__18*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.CloudStateManager/VROSC.<>c__DisplayClass20_0
#include "VROSC/CloudStateManager_--c__DisplayClass20_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean hasPreview
[[deprecated("Use field access instead!")]] bool& VROSC::CloudStateManager::$$c__DisplayClass20_0::dyn_hasPreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass20_0::dyn_hasPreview");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasPreview"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sessionName
[[deprecated("Use field access instead!")]] ::StringW& VROSC::CloudStateManager::$$c__DisplayClass20_0::dyn_sessionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass20_0::dyn_sessionName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sessionName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isCommunity
[[deprecated("Use field access instead!")]] bool& VROSC::CloudStateManager::$$c__DisplayClass20_0::dyn_isCommunity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass20_0::dyn_isCommunity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isCommunity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action <>9__3
[[deprecated("Use field access instead!")]] ::System::Action*& VROSC::CloudStateManager::$$c__DisplayClass20_0::dyn_$$9__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass20_0::dyn_$$9__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__3"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Single> <>9__4
[[deprecated("Use field access instead!")]] ::System::Action_1<float>*& VROSC::CloudStateManager::$$c__DisplayClass20_0::dyn_$$9__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass20_0::dyn_$$9__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__4"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> <>9__5
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::CloudStateManager::$$c__DisplayClass20_0::dyn_$$9__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass20_0::dyn_$$9__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__5"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<>c__DisplayClass20_0.<CoUploadSession>b__0
void VROSC::CloudStateManager::$$c__DisplayClass20_0::$CoUploadSession$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass20_0::<CoUploadSession>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CoUploadSession>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<>c__DisplayClass20_0.<CoUploadSession>b__3
void VROSC::CloudStateManager::$$c__DisplayClass20_0::$CoUploadSession$b__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass20_0::<CoUploadSession>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CoUploadSession>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<>c__DisplayClass20_0.<CoUploadSession>b__4
void VROSC::CloudStateManager::$$c__DisplayClass20_0::$CoUploadSession$b__4(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass20_0::<CoUploadSession>b__4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CoUploadSession>b__4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, progress);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<>c__DisplayClass20_0.<CoUploadSession>b__5
void VROSC::CloudStateManager::$$c__DisplayClass20_0::$CoUploadSession$b__5(::VROSC::Error error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass20_0::<CoUploadSession>b__5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CoUploadSession>b__5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<>c__DisplayClass20_0.<CoUploadSession>b__1
void VROSC::CloudStateManager::$$c__DisplayClass20_0::$CoUploadSession$b__1(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass20_0::<CoUploadSession>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CoUploadSession>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, progress);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<>c__DisplayClass20_0.<CoUploadSession>b__2
void VROSC::CloudStateManager::$$c__DisplayClass20_0::$CoUploadSession$b__2(::VROSC::Error error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass20_0::<CoUploadSession>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CoUploadSession>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.CloudStateManager/VROSC.<CoUploadSession>d__20
#include "VROSC/CloudStateManager_-CoUploadSession-d__20.hpp"
// Including type: VROSC.CloudStateManager/VROSC.<>c__DisplayClass20_0
#include "VROSC/CloudStateManager_--c__DisplayClass20_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& VROSC::CloudStateManager::$CoUploadSession$d__20::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoUploadSession$d__20::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& VROSC::CloudStateManager::$CoUploadSession$d__20::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoUploadSession$d__20::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean hasPreview
[[deprecated("Use field access instead!")]] bool& VROSC::CloudStateManager::$CoUploadSession$d__20::dyn_hasPreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoUploadSession$d__20::dyn_hasPreview");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasPreview"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sessionName
[[deprecated("Use field access instead!")]] ::StringW& VROSC::CloudStateManager::$CoUploadSession$d__20::dyn_sessionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoUploadSession$d__20::dyn_sessionName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sessionName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isCommunity
[[deprecated("Use field access instead!")]] bool& VROSC::CloudStateManager::$CoUploadSession$d__20::dyn_isCommunity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoUploadSession$d__20::dyn_isCommunity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isCommunity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.CloudStateManager <>4__this
[[deprecated("Use field access instead!")]] ::VROSC::CloudStateManager*& VROSC::CloudStateManager::$CoUploadSession$d__20::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoUploadSession$d__20::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::CloudStateManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.CloudStateManager/VROSC.<>c__DisplayClass20_0 <>8__1
[[deprecated("Use field access instead!")]] ::VROSC::CloudStateManager::$$c__DisplayClass20_0*& VROSC::CloudStateManager::$CoUploadSession$d__20::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoUploadSession$d__20::dyn_$$8__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::VROSC::CloudStateManager::$$c__DisplayClass20_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<CoUploadSession>d__20.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* VROSC::CloudStateManager::$CoUploadSession$d__20::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoUploadSession$d__20::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::CloudStateManager::$CoUploadSession$d__20*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<CoUploadSession>d__20.System.Collections.IEnumerator.get_Current
::Il2CppObject* VROSC::CloudStateManager::$CoUploadSession$d__20::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoUploadSession$d__20::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::CloudStateManager::$CoUploadSession$d__20*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<CoUploadSession>d__20.System.IDisposable.Dispose
void VROSC::CloudStateManager::$CoUploadSession$d__20::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoUploadSession$d__20::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::CloudStateManager::$CoUploadSession$d__20*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<CoUploadSession>d__20.MoveNext
bool VROSC::CloudStateManager::$CoUploadSession$d__20::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoUploadSession$d__20::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::CloudStateManager::$CoUploadSession$d__20*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<CoUploadSession>d__20.System.Collections.IEnumerator.Reset
void VROSC::CloudStateManager::$CoUploadSession$d__20::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoUploadSession$d__20::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::CloudStateManager::$CoUploadSession$d__20*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.CloudStateManager/VROSC.<>c__DisplayClass22_0
#include "VROSC/CloudStateManager_--c__DisplayClass22_0.hpp"
// Including type: VROSC.Error
#include "VROSC/Error.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String sessionName
[[deprecated("Use field access instead!")]] ::StringW& VROSC::CloudStateManager::$$c__DisplayClass22_0::dyn_sessionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass22_0::dyn_sessionName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sessionName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isOgg
[[deprecated("Use field access instead!")]] bool& VROSC::CloudStateManager::$$c__DisplayClass22_0::dyn_isOgg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass22_0::dyn_isOgg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOgg"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<>c__DisplayClass22_0.<DownloadPreview>b__0
void VROSC::CloudStateManager::$$c__DisplayClass22_0::$DownloadPreview$b__0(::StringW file) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass22_0::<DownloadPreview>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DownloadPreview>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(file)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, file);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<>c__DisplayClass22_0.<DownloadPreview>b__1
void VROSC::CloudStateManager::$$c__DisplayClass22_0::$DownloadPreview$b__1(float p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass22_0::<DownloadPreview>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DownloadPreview>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<>c__DisplayClass22_0.<DownloadPreview>b__2
void VROSC::CloudStateManager::$$c__DisplayClass22_0::$DownloadPreview$b__2(::VROSC::Error e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass22_0::<DownloadPreview>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DownloadPreview>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.CloudStateManager/VROSC.<>c__DisplayClass23_0
#include "VROSC/CloudStateManager_--c__DisplayClass23_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String sessionName
[[deprecated("Use field access instead!")]] ::StringW& VROSC::CloudStateManager::$$c__DisplayClass23_0::dyn_sessionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass23_0::dyn_sessionName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sessionName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isCommunity
[[deprecated("Use field access instead!")]] bool& VROSC::CloudStateManager::$$c__DisplayClass23_0::dyn_isCommunity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass23_0::dyn_isCommunity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isCommunity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isOgg
[[deprecated("Use field access instead!")]] bool& VROSC::CloudStateManager::$$c__DisplayClass23_0::dyn_isOgg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass23_0::dyn_isOgg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOgg"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action <>9__2
[[deprecated("Use field access instead!")]] ::System::Action*& VROSC::CloudStateManager::$$c__DisplayClass23_0::dyn_$$9__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass23_0::dyn_$$9__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__2"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> <>9__3
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::CloudStateManager::$$c__DisplayClass23_0::dyn_$$9__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass23_0::dyn_$$9__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__3"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<>c__DisplayClass23_0.<CoDeleteSession>b__0
void VROSC::CloudStateManager::$$c__DisplayClass23_0::$CoDeleteSession$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass23_0::<CoDeleteSession>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CoDeleteSession>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<>c__DisplayClass23_0.<CoDeleteSession>b__2
void VROSC::CloudStateManager::$$c__DisplayClass23_0::$CoDeleteSession$b__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass23_0::<CoDeleteSession>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CoDeleteSession>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<>c__DisplayClass23_0.<CoDeleteSession>b__3
void VROSC::CloudStateManager::$$c__DisplayClass23_0::$CoDeleteSession$b__3(::VROSC::Error e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass23_0::<CoDeleteSession>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CoDeleteSession>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<>c__DisplayClass23_0.<CoDeleteSession>b__1
void VROSC::CloudStateManager::$$c__DisplayClass23_0::$CoDeleteSession$b__1(::VROSC::Error e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$$c__DisplayClass23_0::<CoDeleteSession>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CoDeleteSession>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.CloudStateManager/VROSC.<CoDeleteSession>d__23
#include "VROSC/CloudStateManager_-CoDeleteSession-d__23.hpp"
// Including type: VROSC.CloudStateManager/VROSC.<>c__DisplayClass23_0
#include "VROSC/CloudStateManager_--c__DisplayClass23_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& VROSC::CloudStateManager::$CoDeleteSession$d__23::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDeleteSession$d__23::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& VROSC::CloudStateManager::$CoDeleteSession$d__23::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDeleteSession$d__23::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sessionName
[[deprecated("Use field access instead!")]] ::StringW& VROSC::CloudStateManager::$CoDeleteSession$d__23::dyn_sessionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDeleteSession$d__23::dyn_sessionName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sessionName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isCommunity
[[deprecated("Use field access instead!")]] bool& VROSC::CloudStateManager::$CoDeleteSession$d__23::dyn_isCommunity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDeleteSession$d__23::dyn_isCommunity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isCommunity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isOgg
[[deprecated("Use field access instead!")]] bool& VROSC::CloudStateManager::$CoDeleteSession$d__23::dyn_isOgg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDeleteSession$d__23::dyn_isOgg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOgg"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.CloudStateManager <>4__this
[[deprecated("Use field access instead!")]] ::VROSC::CloudStateManager*& VROSC::CloudStateManager::$CoDeleteSession$d__23::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDeleteSession$d__23::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::CloudStateManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VROSC.CloudStateManager/VROSC.<>c__DisplayClass23_0 <>8__1
[[deprecated("Use field access instead!")]] ::VROSC::CloudStateManager::$$c__DisplayClass23_0*& VROSC::CloudStateManager::$CoDeleteSession$d__23::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDeleteSession$d__23::dyn_$$8__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::VROSC::CloudStateManager::$$c__DisplayClass23_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<CoDeleteSession>d__23.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* VROSC::CloudStateManager::$CoDeleteSession$d__23::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDeleteSession$d__23::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::CloudStateManager::$CoDeleteSession$d__23*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<CoDeleteSession>d__23.System.Collections.IEnumerator.get_Current
::Il2CppObject* VROSC::CloudStateManager::$CoDeleteSession$d__23::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDeleteSession$d__23::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::CloudStateManager::$CoDeleteSession$d__23*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<CoDeleteSession>d__23.System.IDisposable.Dispose
void VROSC::CloudStateManager::$CoDeleteSession$d__23::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDeleteSession$d__23::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::CloudStateManager::$CoDeleteSession$d__23*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<CoDeleteSession>d__23.MoveNext
bool VROSC::CloudStateManager::$CoDeleteSession$d__23::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDeleteSession$d__23::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::CloudStateManager::$CoDeleteSession$d__23*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.CloudStateManager/VROSC.<CoDeleteSession>d__23.System.Collections.IEnumerator.Reset
void VROSC::CloudStateManager::$CoDeleteSession$d__23::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CloudStateManager::$CoDeleteSession$d__23::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::CloudStateManager::$CoDeleteSession$d__23*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.FirebaseWrapper
#include "VROSC/FirebaseWrapper.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass41_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass41_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass42_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass42_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass44_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass44_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass45_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass45_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass46_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass46_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass48_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass48_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass50_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass50_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass51_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass51_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass52_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass52_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass56_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass56_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass56_1
#include "VROSC/FirebaseWrapper_--c__DisplayClass56_1.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass56_2
#include "VROSC/FirebaseWrapper_--c__DisplayClass56_2.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass56_3
#include "VROSC/FirebaseWrapper_--c__DisplayClass56_3.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass57_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass57_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass58_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass58_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass62_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass62_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass76_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass76_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass78_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass78_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass80_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass80_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass81_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass81_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass82_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass82_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass83_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass83_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass84_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass84_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass85_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass85_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass86_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass86_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass87_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass87_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass88_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass88_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass89_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass89_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass90_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass90_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass91_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass91_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass92_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass92_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass93_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass93_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass94_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass94_0.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass95_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass95_0.hpp"
// Including type: Firebase.Auth.FirebaseAuth
#include "Firebase/Auth/FirebaseAuth.hpp"
// Including type: Firebase.Auth.FirebaseUser
#include "Firebase/Auth/FirebaseUser.hpp"
// Including type: Firebase.Firestore.FirebaseFirestore
#include "Firebase/Firestore/FirebaseFirestore.hpp"
// Including type: Firebase.Storage.StorageReference
#include "Firebase/Storage/StorageReference.hpp"
// Including type: Firebase.Firestore.WriteBatch
#include "Firebase/Firestore/WriteBatch.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Firebase.Firestore.CollectionReference
#include "Firebase/Firestore/CollectionReference.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Firebase.Firestore.DocumentSnapshot
#include "Firebase/Firestore/DocumentSnapshot.hpp"
// Including type: Firebase.Firestore.DocumentReference
#include "Firebase/Firestore/DocumentReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String DATABASE_URL
::StringW VROSC::FirebaseWrapper::_get_DATABASE_URL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_DATABASE_URL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "DATABASE_URL"));
}
// Autogenerated static field setter
// Set static field: static private System.String DATABASE_URL
void VROSC::FirebaseWrapper::_set_DATABASE_URL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_DATABASE_URL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "DATABASE_URL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String DATABASE_ERRORS_URL
::StringW VROSC::FirebaseWrapper::_get_DATABASE_ERRORS_URL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_DATABASE_ERRORS_URL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "DATABASE_ERRORS_URL"));
}
// Autogenerated static field setter
// Set static field: static private System.String DATABASE_ERRORS_URL
void VROSC::FirebaseWrapper::_set_DATABASE_ERRORS_URL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_DATABASE_ERRORS_URL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "DATABASE_ERRORS_URL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String DATABASE_FORCE_UPDATES_URL
::StringW VROSC::FirebaseWrapper::_get_DATABASE_FORCE_UPDATES_URL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_DATABASE_FORCE_UPDATES_URL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "DATABASE_FORCE_UPDATES_URL"));
}
// Autogenerated static field setter
// Set static field: static private System.String DATABASE_FORCE_UPDATES_URL
void VROSC::FirebaseWrapper::_set_DATABASE_FORCE_UPDATES_URL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_DATABASE_FORCE_UPDATES_URL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "DATABASE_FORCE_UPDATES_URL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String DATABASE_GLOBAL_SETTINGS_FOLDER
::StringW VROSC::FirebaseWrapper::_get_DATABASE_GLOBAL_SETTINGS_FOLDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_DATABASE_GLOBAL_SETTINGS_FOLDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "DATABASE_GLOBAL_SETTINGS_FOLDER"));
}
// Autogenerated static field setter
// Set static field: static private System.String DATABASE_GLOBAL_SETTINGS_FOLDER
void VROSC::FirebaseWrapper::_set_DATABASE_GLOBAL_SETTINGS_FOLDER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_DATABASE_GLOBAL_SETTINGS_FOLDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "DATABASE_GLOBAL_SETTINGS_FOLDER", value));
}
// Autogenerated static field getter
// Get static field: static private System.String DATABASE_FORCE_UPDATES_FOLDER
::StringW VROSC::FirebaseWrapper::_get_DATABASE_FORCE_UPDATES_FOLDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_DATABASE_FORCE_UPDATES_FOLDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "DATABASE_FORCE_UPDATES_FOLDER"));
}
// Autogenerated static field setter
// Set static field: static private System.String DATABASE_FORCE_UPDATES_FOLDER
void VROSC::FirebaseWrapper::_set_DATABASE_FORCE_UPDATES_FOLDER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_DATABASE_FORCE_UPDATES_FOLDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "DATABASE_FORCE_UPDATES_FOLDER", value));
}
// Autogenerated static field getter
// Get static field: static private System.String DATABASE_URL_SUFFIX
::StringW VROSC::FirebaseWrapper::_get_DATABASE_URL_SUFFIX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_DATABASE_URL_SUFFIX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "DATABASE_URL_SUFFIX"));
}
// Autogenerated static field setter
// Set static field: static private System.String DATABASE_URL_SUFFIX
void VROSC::FirebaseWrapper::_set_DATABASE_URL_SUFFIX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_DATABASE_URL_SUFFIX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "DATABASE_URL_SUFFIX", value));
}
// Autogenerated static field getter
// Get static field: static private System.String STORAGE_PUBLIC_FOLDER
::StringW VROSC::FirebaseWrapper::_get_STORAGE_PUBLIC_FOLDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_STORAGE_PUBLIC_FOLDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "STORAGE_PUBLIC_FOLDER"));
}
// Autogenerated static field setter
// Set static field: static private System.String STORAGE_PUBLIC_FOLDER
void VROSC::FirebaseWrapper::_set_STORAGE_PUBLIC_FOLDER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_STORAGE_PUBLIC_FOLDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "STORAGE_PUBLIC_FOLDER", value));
}
// Autogenerated static field getter
// Get static field: static private System.String STORAGE_PRIVATE_FOLDER
::StringW VROSC::FirebaseWrapper::_get_STORAGE_PRIVATE_FOLDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_STORAGE_PRIVATE_FOLDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "STORAGE_PRIVATE_FOLDER"));
}
// Autogenerated static field setter
// Set static field: static private System.String STORAGE_PRIVATE_FOLDER
void VROSC::FirebaseWrapper::_set_STORAGE_PRIVATE_FOLDER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_STORAGE_PRIVATE_FOLDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "STORAGE_PRIVATE_FOLDER", value));
}
// Autogenerated static field getter
// Get static field: static private System.String STORAGE_PREVIEWS_FOLDER
::StringW VROSC::FirebaseWrapper::_get_STORAGE_PREVIEWS_FOLDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_STORAGE_PREVIEWS_FOLDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "STORAGE_PREVIEWS_FOLDER"));
}
// Autogenerated static field setter
// Set static field: static private System.String STORAGE_PREVIEWS_FOLDER
void VROSC::FirebaseWrapper::_set_STORAGE_PREVIEWS_FOLDER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_STORAGE_PREVIEWS_FOLDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "STORAGE_PREVIEWS_FOLDER", value));
}
// Autogenerated static field getter
// Get static field: static private System.String STORAGE_SESSIONS_FOLDER
::StringW VROSC::FirebaseWrapper::_get_STORAGE_SESSIONS_FOLDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_STORAGE_SESSIONS_FOLDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "STORAGE_SESSIONS_FOLDER"));
}
// Autogenerated static field setter
// Set static field: static private System.String STORAGE_SESSIONS_FOLDER
void VROSC::FirebaseWrapper::_set_STORAGE_SESSIONS_FOLDER(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_STORAGE_SESSIONS_FOLDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "STORAGE_SESSIONS_FOLDER", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_USERS_COL
::StringW VROSC::FirebaseWrapper::_get_FS_USERS_COL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_USERS_COL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_USERS_COL"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_USERS_COL
void VROSC::FirebaseWrapper::_set_FS_USERS_COL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_USERS_COL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_USERS_COL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_USERS_SESSIONS_COL
::StringW VROSC::FirebaseWrapper::_get_FS_USERS_SESSIONS_COL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_USERS_SESSIONS_COL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_USERS_SESSIONS_COL"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_USERS_SESSIONS_COL
void VROSC::FirebaseWrapper::_set_FS_USERS_SESSIONS_COL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_USERS_SESSIONS_COL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_USERS_SESSIONS_COL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_USERS_FAVORITES_COL
::StringW VROSC::FirebaseWrapper::_get_FS_USERS_FAVORITES_COL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_USERS_FAVORITES_COL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_USERS_FAVORITES_COL"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_USERS_FAVORITES_COL
void VROSC::FirebaseWrapper::_set_FS_USERS_FAVORITES_COL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_USERS_FAVORITES_COL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_USERS_FAVORITES_COL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_USERS_UPVOTES_COL
::StringW VROSC::FirebaseWrapper::_get_FS_USERS_UPVOTES_COL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_USERS_UPVOTES_COL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_USERS_UPVOTES_COL"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_USERS_UPVOTES_COL
void VROSC::FirebaseWrapper::_set_FS_USERS_UPVOTES_COL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_USERS_UPVOTES_COL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_USERS_UPVOTES_COL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_USERS_PREFS_COL
::StringW VROSC::FirebaseWrapper::_get_FS_USERS_PREFS_COL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_USERS_PREFS_COL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_USERS_PREFS_COL"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_USERS_PREFS_COL
void VROSC::FirebaseWrapper::_set_FS_USERS_PREFS_COL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_USERS_PREFS_COL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_USERS_PREFS_COL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_USERS_GENERAL_PREFS_DOC
::StringW VROSC::FirebaseWrapper::_get_FS_USERS_GENERAL_PREFS_DOC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_USERS_GENERAL_PREFS_DOC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_USERS_GENERAL_PREFS_DOC"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_USERS_GENERAL_PREFS_DOC
void VROSC::FirebaseWrapper::_set_FS_USERS_GENERAL_PREFS_DOC(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_USERS_GENERAL_PREFS_DOC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_USERS_GENERAL_PREFS_DOC", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_USERS_MALLETS_PREFS_DOC
::StringW VROSC::FirebaseWrapper::_get_FS_USERS_MALLETS_PREFS_DOC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_USERS_MALLETS_PREFS_DOC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_USERS_MALLETS_PREFS_DOC"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_USERS_MALLETS_PREFS_DOC
void VROSC::FirebaseWrapper::_set_FS_USERS_MALLETS_PREFS_DOC(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_USERS_MALLETS_PREFS_DOC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_USERS_MALLETS_PREFS_DOC", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_USERS_PREVIEWS_PREFS_DOC
::StringW VROSC::FirebaseWrapper::_get_FS_USERS_PREVIEWS_PREFS_DOC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_USERS_PREVIEWS_PREFS_DOC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_USERS_PREVIEWS_PREFS_DOC"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_USERS_PREVIEWS_PREFS_DOC
void VROSC::FirebaseWrapper::_set_FS_USERS_PREVIEWS_PREFS_DOC(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_USERS_PREVIEWS_PREFS_DOC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_USERS_PREVIEWS_PREFS_DOC", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_USERS_SOCIAL_PREFS_DOC
::StringW VROSC::FirebaseWrapper::_get_FS_USERS_SOCIAL_PREFS_DOC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_USERS_SOCIAL_PREFS_DOC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_USERS_SOCIAL_PREFS_DOC"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_USERS_SOCIAL_PREFS_DOC
void VROSC::FirebaseWrapper::_set_FS_USERS_SOCIAL_PREFS_DOC(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_USERS_SOCIAL_PREFS_DOC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_USERS_SOCIAL_PREFS_DOC", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_USERS_KEYBOARD_PREFS_DOC
::StringW VROSC::FirebaseWrapper::_get_FS_USERS_KEYBOARD_PREFS_DOC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_USERS_KEYBOARD_PREFS_DOC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_USERS_KEYBOARD_PREFS_DOC"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_USERS_KEYBOARD_PREFS_DOC
void VROSC::FirebaseWrapper::_set_FS_USERS_KEYBOARD_PREFS_DOC(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_USERS_KEYBOARD_PREFS_DOC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_USERS_KEYBOARD_PREFS_DOC", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_USERS_LOOPSTATION_PREFS_DOC
::StringW VROSC::FirebaseWrapper::_get_FS_USERS_LOOPSTATION_PREFS_DOC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_USERS_LOOPSTATION_PREFS_DOC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_USERS_LOOPSTATION_PREFS_DOC"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_USERS_LOOPSTATION_PREFS_DOC
void VROSC::FirebaseWrapper::_set_FS_USERS_LOOPSTATION_PREFS_DOC(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_USERS_LOOPSTATION_PREFS_DOC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_USERS_LOOPSTATION_PREFS_DOC", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_COMMUNITY_SESSIONS_COL
::StringW VROSC::FirebaseWrapper::_get_FS_COMMUNITY_SESSIONS_COL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_COMMUNITY_SESSIONS_COL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_COMMUNITY_SESSIONS_COL"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_COMMUNITY_SESSIONS_COL
void VROSC::FirebaseWrapper::_set_FS_COMMUNITY_SESSIONS_COL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_COMMUNITY_SESSIONS_COL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_COMMUNITY_SESSIONS_COL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_SESSION_UPVOTES_COL
::StringW VROSC::FirebaseWrapper::_get_FS_SESSION_UPVOTES_COL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_SESSION_UPVOTES_COL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_SESSION_UPVOTES_COL"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_SESSION_UPVOTES_COL
void VROSC::FirebaseWrapper::_set_FS_SESSION_UPVOTES_COL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_SESSION_UPVOTES_COL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_SESSION_UPVOTES_COL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_SESSION_UPVOTES_COUNT
::StringW VROSC::FirebaseWrapper::_get_FS_SESSION_UPVOTES_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_SESSION_UPVOTES_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_SESSION_UPVOTES_COUNT"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_SESSION_UPVOTES_COUNT
void VROSC::FirebaseWrapper::_set_FS_SESSION_UPVOTES_COUNT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_SESSION_UPVOTES_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_SESSION_UPVOTES_COUNT", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_SESSION_FAVORITES_COL
::StringW VROSC::FirebaseWrapper::_get_FS_SESSION_FAVORITES_COL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_SESSION_FAVORITES_COL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_SESSION_FAVORITES_COL"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_SESSION_FAVORITES_COL
void VROSC::FirebaseWrapper::_set_FS_SESSION_FAVORITES_COL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_SESSION_FAVORITES_COL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_SESSION_FAVORITES_COL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_SESSION_FAVORITES_COUNT
::StringW VROSC::FirebaseWrapper::_get_FS_SESSION_FAVORITES_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_SESSION_FAVORITES_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_SESSION_FAVORITES_COUNT"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_SESSION_FAVORITES_COUNT
void VROSC::FirebaseWrapper::_set_FS_SESSION_FAVORITES_COUNT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_SESSION_FAVORITES_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_SESSION_FAVORITES_COUNT", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_SESSION_DOWNLOADS_COL
::StringW VROSC::FirebaseWrapper::_get_FS_SESSION_DOWNLOADS_COL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_SESSION_DOWNLOADS_COL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_SESSION_DOWNLOADS_COL"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_SESSION_DOWNLOADS_COL
void VROSC::FirebaseWrapper::_set_FS_SESSION_DOWNLOADS_COL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_SESSION_DOWNLOADS_COL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_SESSION_DOWNLOADS_COL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_SESSION_DOWNLOADS_COUNT
::StringW VROSC::FirebaseWrapper::_get_FS_SESSION_DOWNLOADS_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_SESSION_DOWNLOADS_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_SESSION_DOWNLOADS_COUNT"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_SESSION_DOWNLOADS_COUNT
void VROSC::FirebaseWrapper::_set_FS_SESSION_DOWNLOADS_COUNT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_SESSION_DOWNLOADS_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_SESSION_DOWNLOADS_COUNT", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_SESSION_PREVIEWPLAYS_COL
::StringW VROSC::FirebaseWrapper::_get_FS_SESSION_PREVIEWPLAYS_COL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_SESSION_PREVIEWPLAYS_COL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_SESSION_PREVIEWPLAYS_COL"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_SESSION_PREVIEWPLAYS_COL
void VROSC::FirebaseWrapper::_set_FS_SESSION_PREVIEWPLAYS_COL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_SESSION_PREVIEWPLAYS_COL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_SESSION_PREVIEWPLAYS_COL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FS_SESSION_PREVIEWPLAYS_COUNT
::StringW VROSC::FirebaseWrapper::_get_FS_SESSION_PREVIEWPLAYS_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_FS_SESSION_PREVIEWPLAYS_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "FirebaseWrapper", "FS_SESSION_PREVIEWPLAYS_COUNT"));
}
// Autogenerated static field setter
// Set static field: static private System.String FS_SESSION_PREVIEWPLAYS_COUNT
void VROSC::FirebaseWrapper::_set_FS_SESSION_PREVIEWPLAYS_COUNT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_FS_SESSION_PREVIEWPLAYS_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "FS_SESSION_PREVIEWPLAYS_COUNT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _timeoutValue
int VROSC::FirebaseWrapper::_get__timeoutValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get__timeoutValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("VROSC", "FirebaseWrapper", "_timeoutValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _timeoutValue
void VROSC::FirebaseWrapper::_set__timeoutValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set__timeoutValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "_timeoutValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Action OnUserLogout
::System::Action* VROSC::FirebaseWrapper::_get_OnUserLogout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_get_OnUserLogout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("VROSC", "FirebaseWrapper", "OnUserLogout"));
}
// Autogenerated static field setter
// Set static field: static public System.Action OnUserLogout
void VROSC::FirebaseWrapper::_set_OnUserLogout(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::_set_OnUserLogout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "FirebaseWrapper", "OnUserLogout", value));
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Auth.FirebaseAuth _fbAuth
[[deprecated("Use field access instead!")]] ::Firebase::Auth::FirebaseAuth*& VROSC::FirebaseWrapper::dyn__fbAuth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::dyn__fbAuth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fbAuth"))->offset;
  return *reinterpret_cast<::Firebase::Auth::FirebaseAuth**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Auth.FirebaseUser _fbUser
[[deprecated("Use field access instead!")]] ::Firebase::Auth::FirebaseUser*& VROSC::FirebaseWrapper::dyn__fbUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::dyn__fbUser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fbUser"))->offset;
  return *reinterpret_cast<::Firebase::Auth::FirebaseUser**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.FirebaseFirestore _fbFirestore
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::FirebaseFirestore*& VROSC::FirebaseWrapper::dyn__fbFirestore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::dyn__fbFirestore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fbFirestore"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirebaseFirestore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Storage.StorageReference _fbStorage
[[deprecated("Use field access instead!")]] ::Firebase::Storage::StorageReference*& VROSC::FirebaseWrapper::dyn__fbStorage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::dyn__fbStorage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fbStorage"))->offset;
  return *reinterpret_cast<::Firebase::Storage::StorageReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.WriteBatch _firestoreWriteBatch
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::WriteBatch*& VROSC::FirebaseWrapper::dyn__firestoreWriteBatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::dyn__firestoreWriteBatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firestoreWriteBatch"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::WriteBatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper.get_IsUserVerified
bool VROSC::FirebaseWrapper::get_IsUserVerified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::get_IsUserVerified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUserVerified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.FirebaseWrapper.ReloadUser
void VROSC::FirebaseWrapper::ReloadUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::ReloadUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.FirebaseWrapper.CreateUserWithEmail
void VROSC::FirebaseWrapper::CreateUserWithEmail(::StringW email, ::StringW password, ::System::Action_1<::StringW>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::CreateUserWithEmail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUserWithEmail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(email), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, email, password, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.LoginUserWithEmail
void VROSC::FirebaseWrapper::LoginUserWithEmail(::StringW email, ::StringW password, ::System::Action_2<::StringW, bool>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::LoginUserWithEmail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoginUserWithEmail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(email), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, email, password, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.LogoutUser
void VROSC::FirebaseWrapper::LogoutUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::LogoutUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogoutUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.FirebaseWrapper.ChangeUserEmail
void VROSC::FirebaseWrapper::ChangeUserEmail(::StringW email, ::System::Action_1<::StringW>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::ChangeUserEmail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeUserEmail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(email), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, email, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.ChangeUserPassword
void VROSC::FirebaseWrapper::ChangeUserPassword(::StringW password, ::System::Action_1<::StringW>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::ChangeUserPassword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeUserPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, password, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.ResetPassword
void VROSC::FirebaseWrapper::ResetPassword(::StringW email, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::ResetPassword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(email), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, email, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.AuthStateChanged
void VROSC::FirebaseWrapper::AuthStateChanged(::Il2CppObject* sender, ::System::EventArgs* eventArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::AuthStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(eventArgs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, eventArgs);
}
// Autogenerated method: VROSC.FirebaseWrapper.SendVerificationEmail
void VROSC::FirebaseWrapper::SendVerificationEmail(::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::SendVerificationEmail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendVerificationEmail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.StartFirestoreBatchWrite
::VROSC::Error VROSC::FirebaseWrapper::StartFirestoreBatchWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::StartFirestoreBatchWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartFirestoreBatchWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::Error, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.FirebaseWrapper.CommitFirestoreBatchWrite
void VROSC::FirebaseWrapper::CommitFirestoreBatchWrite(::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::CommitFirestoreBatchWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CommitFirestoreBatchWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.GetUserSessions
void VROSC::FirebaseWrapper::GetUserSessions(::StringW userId, ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::GetUserSessions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserSessions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.GetUserPreferences
void VROSC::FirebaseWrapper::GetUserPreferences(::StringW userId, ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::GetUserPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.GetUserPreviewsPreferences
void VROSC::FirebaseWrapper::GetUserPreviewsPreferences(::StringW userId, ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::GetUserPreviewsPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserPreviewsPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.GetUserMalletsPreferences
void VROSC::FirebaseWrapper::GetUserMalletsPreferences(::StringW userId, ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::GetUserMalletsPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserMalletsPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.GetUserProfile
void VROSC::FirebaseWrapper::GetUserProfile(::StringW userId, ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::GetUserProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.GetUserFavorites
void VROSC::FirebaseWrapper::GetUserFavorites(::StringW userId, ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::GetUserFavorites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserFavorites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.GetUserUpVotes
void VROSC::FirebaseWrapper::GetUserUpVotes(::StringW userId, ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::GetUserUpVotes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserUpVotes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.GetCommunitySessions
void VROSC::FirebaseWrapper::GetCommunitySessions(::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::GetCommunitySessions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCommunitySessions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.GetNewUserSessionId
::StringW VROSC::FirebaseWrapper::GetNewUserSessionId(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::GetNewUserSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNewUserSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, userId);
}
// Autogenerated method: VROSC.FirebaseWrapper.CreateUserSession
void VROSC::FirebaseWrapper::CreateUserSession(::StringW userId, ::StringW sessionId, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::CreateUserSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUserSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, sessionId, data, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.RemoveUserSession
void VROSC::FirebaseWrapper::RemoveUserSession(::StringW userId, ::StringW sessionId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::RemoveUserSession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveUserSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, sessionId, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.SaveUserProfile
void VROSC::FirebaseWrapper::SaveUserProfile(::StringW userId, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::SaveUserProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveUserProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, data, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.SaveUserGeneralPreferences
void VROSC::FirebaseWrapper::SaveUserGeneralPreferences(::StringW userId, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::SaveUserGeneralPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveUserGeneralPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, data, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.SaveUserPreviewsPreferences
void VROSC::FirebaseWrapper::SaveUserPreviewsPreferences(::StringW userId, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::SaveUserPreviewsPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveUserPreviewsPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, data, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.SaveUserMalletsPreferences
void VROSC::FirebaseWrapper::SaveUserMalletsPreferences(::StringW userId, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::SaveUserMalletsPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveUserMalletsPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, data, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.SaveUserSocialPreferences
void VROSC::FirebaseWrapper::SaveUserSocialPreferences(::StringW userId, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::SaveUserSocialPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveUserSocialPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, data, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.SaveUserKeyboardPreferences
void VROSC::FirebaseWrapper::SaveUserKeyboardPreferences(::StringW userId, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::SaveUserKeyboardPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveUserKeyboardPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, data, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.SaveUserLoopStationPreferences
void VROSC::FirebaseWrapper::SaveUserLoopStationPreferences(::StringW userId, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::SaveUserLoopStationPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveUserLoopStationPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, data, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.AddUserFavorite
void VROSC::FirebaseWrapper::AddUserFavorite(::StringW userId, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data, ::System::Action_1<::StringW>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::AddUserFavorite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUserFavorite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, data, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.AddUserUpVote
void VROSC::FirebaseWrapper::AddUserUpVote(::StringW userId, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data, ::System::Action_1<::StringW>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::AddUserUpVote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUserUpVote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, data, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.RemoveUserFavorite
void VROSC::FirebaseWrapper::RemoveUserFavorite(::StringW userId, ::StringW favoriteId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::RemoveUserFavorite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveUserFavorite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(favoriteId), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, favoriteId, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.RemoveUserUpVote
void VROSC::FirebaseWrapper::RemoveUserUpVote(::StringW userId, ::StringW upVoteId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::RemoveUserUpVote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveUserUpVote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(upVoteId), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, upVoteId, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.GetNewCommunitySessionId
::StringW VROSC::FirebaseWrapper::GetNewCommunitySessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::GetNewCommunitySessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNewCommunitySessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.FirebaseWrapper.CreateCommunitySession
void VROSC::FirebaseWrapper::CreateCommunitySession(::StringW sessionId, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::CreateCommunitySession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCommunitySession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, data, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.RemoveCommunitySession
void VROSC::FirebaseWrapper::RemoveCommunitySession(::StringW sessionId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::RemoveCommunitySession");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCommunitySession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.AddSessionUpVote
void VROSC::FirebaseWrapper::AddSessionUpVote(::StringW sessionId, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data, ::System::Action_1<::StringW>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::AddSessionUpVote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSessionUpVote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, data, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.RemoveSessionUpVote
void VROSC::FirebaseWrapper::RemoveSessionUpVote(::StringW sessionId, ::StringW upVoteId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::RemoveSessionUpVote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSessionUpVote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(upVoteId), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, upVoteId, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.AddSessionFavorite
void VROSC::FirebaseWrapper::AddSessionFavorite(::StringW sessionId, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data, ::System::Action_1<::StringW>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::AddSessionFavorite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSessionFavorite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, data, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.RemoveSessionFavorite
void VROSC::FirebaseWrapper::RemoveSessionFavorite(::StringW sessionId, ::StringW upVoteId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::RemoveSessionFavorite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSessionFavorite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(upVoteId), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, upVoteId, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.AddSessionDownload
void VROSC::FirebaseWrapper::AddSessionDownload(::StringW sessionId, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data, ::System::Action_1<::StringW>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::AddSessionDownload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSessionDownload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, data, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.AddSessionPreviewPlay
void VROSC::FirebaseWrapper::AddSessionPreviewPlay(::StringW sessionId, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data, ::System::Action_1<::StringW>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::AddSessionPreviewPlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSessionPreviewPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, data, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.GetFirestoreCollectionData
void VROSC::FirebaseWrapper::GetFirestoreCollectionData(::Firebase::Firestore::CollectionReference* colRef, ::System::Action_1<::System::Collections::Generic::IEnumerable_1<::Firebase::Firestore::DocumentSnapshot*>*>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::GetFirestoreCollectionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirestoreCollectionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colRef), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colRef, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.GetFirestoreCollectionDataAsDictionary
void VROSC::FirebaseWrapper::GetFirestoreCollectionDataAsDictionary(::Firebase::Firestore::CollectionReference* colRef, ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>* result, ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::GetFirestoreCollectionDataAsDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirestoreCollectionDataAsDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colRef), ::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colRef, result, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.GetFirestoreDocumentData
void VROSC::FirebaseWrapper::GetFirestoreDocumentData(::Firebase::Firestore::DocumentReference* docRef, ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::GetFirestoreDocumentData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirestoreDocumentData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(docRef), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, docRef, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.AddFirestoreDocument
void VROSC::FirebaseWrapper::AddFirestoreDocument(::Firebase::Firestore::CollectionReference* colRef, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data, ::System::Action_1<::StringW>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::AddFirestoreDocument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFirestoreDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colRef), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colRef, data, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.DeleteFirestoreDocument
void VROSC::FirebaseWrapper::DeleteFirestoreDocument(::Firebase::Firestore::DocumentReference* docRef, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::DeleteFirestoreDocument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteFirestoreDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(docRef), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, docRef, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.SaveFirestoreDocumentData
void VROSC::FirebaseWrapper::SaveFirestoreDocumentData(::Firebase::Firestore::DocumentReference* docRef, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::SaveFirestoreDocumentData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveFirestoreDocumentData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(docRef), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, docRef, data, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.IncrementValue
void VROSC::FirebaseWrapper::IncrementValue(::Firebase::Firestore::DocumentReference* docRef, ::StringW fieldName, int value, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::IncrementValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(docRef), ::il2cpp_utils::ExtractType(fieldName), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, docRef, fieldName, value, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.GetForceUpdates
void VROSC::FirebaseWrapper::GetForceUpdates(::System::Action_1<::StringW>* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::GetForceUpdates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetForceUpdates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.SaveSessionFile
void VROSC::FirebaseWrapper::SaveSessionFile(::StringW userId, ::StringW sessionName, bool isCommunity, ::System::Action* onSuccess, ::System::Action_1<float>* onProgress, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::SaveSessionFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveSessionFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(sessionName), ::il2cpp_utils::ExtractType(isCommunity), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onProgress), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, sessionName, isCommunity, onSuccess, onProgress, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.LoadSessionFile
void VROSC::FirebaseWrapper::LoadSessionFile(::StringW userId, ::StringW sessionName, bool isCommunity, ::System::Action* onSuccess, ::System::Action_1<float>* onProgress, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::LoadSessionFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSessionFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(sessionName), ::il2cpp_utils::ExtractType(isCommunity), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onProgress), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, sessionName, isCommunity, onSuccess, onProgress, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.DeleteSessionFile
void VROSC::FirebaseWrapper::DeleteSessionFile(::StringW userId, ::StringW sessionName, bool isCommunity, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::DeleteSessionFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteSessionFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(sessionName), ::il2cpp_utils::ExtractType(isCommunity), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, sessionName, isCommunity, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.SavePreviewFile
void VROSC::FirebaseWrapper::SavePreviewFile(::StringW userId, ::StringW sessionName, bool isCommunity, ::System::Action* onSuccess, ::System::Action_1<float>* onProgress, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::SavePreviewFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SavePreviewFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(sessionName), ::il2cpp_utils::ExtractType(isCommunity), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onProgress), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, sessionName, isCommunity, onSuccess, onProgress, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.LoadPreviewFile
void VROSC::FirebaseWrapper::LoadPreviewFile(::StringW userId, ::StringW sessionName, bool isCommunity, bool isOgg, ::System::Action_1<::StringW>* onSuccess, ::System::Action_1<float>* onProgress, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::LoadPreviewFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadPreviewFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(sessionName), ::il2cpp_utils::ExtractType(isCommunity), ::il2cpp_utils::ExtractType(isOgg), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onProgress), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, sessionName, isCommunity, isOgg, onSuccess, onProgress, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.DeletePreviewFile
void VROSC::FirebaseWrapper::DeletePreviewFile(::StringW userId, ::StringW sessionName, bool isCommunity, bool isOgg, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::DeletePreviewFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeletePreviewFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(sessionName), ::il2cpp_utils::ExtractType(isCommunity), ::il2cpp_utils::ExtractType(isOgg), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, sessionName, isCommunity, isOgg, onSuccess, onFailure);
}
// Autogenerated method: VROSC.FirebaseWrapper.LogError
void VROSC::FirebaseWrapper::LogError(::StringW version, ::StringW date, ::StringW device, ::StringW operatingSystem, ::StringW message, ::StringW stack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version), ::il2cpp_utils::ExtractType(date), ::il2cpp_utils::ExtractType(device), ::il2cpp_utils::ExtractType(operatingSystem), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(stack)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, version, date, device, operatingSystem, message, stack);
}
// Autogenerated method: VROSC.FirebaseWrapper.GenerateSessionFilePath
::StringW VROSC::FirebaseWrapper::GenerateSessionFilePath(::StringW userId, ::StringW sessionName, bool isCommunity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::GenerateSessionFilePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateSessionFilePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(sessionName), ::il2cpp_utils::ExtractType(isCommunity)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, userId, sessionName, isCommunity);
}
// Autogenerated method: VROSC.FirebaseWrapper.GeneratePreviewFilePath
::StringW VROSC::FirebaseWrapper::GeneratePreviewFilePath(::StringW userId, ::StringW sessionName, bool isCommunity, bool isOgg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::GeneratePreviewFilePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GeneratePreviewFilePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(sessionName), ::il2cpp_utils::ExtractType(isCommunity), ::il2cpp_utils::ExtractType(isOgg)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, userId, sessionName, isCommunity, isOgg);
}
// Autogenerated method: VROSC.FirebaseWrapper.GetZipFilePath
::StringW VROSC::FirebaseWrapper::GetZipFilePath(::StringW sessionName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::GetZipFilePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetZipFilePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, sessionName);
}
// Autogenerated method: VROSC.FirebaseWrapper.GetLocalPreviewFilePath
::StringW VROSC::FirebaseWrapper::GetLocalPreviewFilePath(::StringW sessionName, bool useOgg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::GetLocalPreviewFilePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalPreviewFilePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionName), ::il2cpp_utils::ExtractType(useOgg)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, sessionName, useOgg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass41_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass41_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Firebase.Auth.FirebaseUser
#include "Firebase/Auth/FirebaseUser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass41_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass41_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& VROSC::FirebaseWrapper::$$c__DisplayClass41_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass41_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.FirebaseWrapper <>4__this
[[deprecated("Use field access instead!")]] ::VROSC::FirebaseWrapper*& VROSC::FirebaseWrapper::$$c__DisplayClass41_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass41_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::FirebaseWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass41_0.<CreateUserWithEmail>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass41_0::$CreateUserWithEmail$b__0(::System::Threading::Tasks::Task_1<::Firebase::Auth::FirebaseUser*>* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass41_0::<CreateUserWithEmail>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateUserWithEmail>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass42_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass42_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Firebase.Auth.FirebaseUser
#include "Firebase/Auth/FirebaseUser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass42_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass42_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<System.String,System.Boolean> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, bool>*& VROSC::FirebaseWrapper::$$c__DisplayClass42_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass42_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.FirebaseWrapper <>4__this
[[deprecated("Use field access instead!")]] ::VROSC::FirebaseWrapper*& VROSC::FirebaseWrapper::$$c__DisplayClass42_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass42_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::FirebaseWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass42_0.<LoginUserWithEmail>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass42_0::$LoginUserWithEmail$b__0(::System::Threading::Tasks::Task_1<::Firebase::Auth::FirebaseUser*>* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass42_0::<LoginUserWithEmail>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoginUserWithEmail>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass44_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass44_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass44_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass44_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& VROSC::FirebaseWrapper::$$c__DisplayClass44_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass44_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String email
[[deprecated("Use field access instead!")]] ::StringW& VROSC::FirebaseWrapper::$$c__DisplayClass44_0::dyn_email() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass44_0::dyn_email");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "email"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass44_0.<ChangeUserEmail>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass44_0::$ChangeUserEmail$b__0(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass44_0::<ChangeUserEmail>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ChangeUserEmail>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass45_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass45_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass45_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass45_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& VROSC::FirebaseWrapper::$$c__DisplayClass45_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass45_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String password
[[deprecated("Use field access instead!")]] ::StringW& VROSC::FirebaseWrapper::$$c__DisplayClass45_0::dyn_password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass45_0::dyn_password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "password"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass45_0.<ChangeUserPassword>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass45_0::$ChangeUserPassword$b__0(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass45_0::<ChangeUserPassword>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ChangeUserPassword>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass46_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass46_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass46_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass46_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onSuccess
[[deprecated("Use field access instead!")]] ::System::Action*& VROSC::FirebaseWrapper::$$c__DisplayClass46_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass46_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass46_0.<ResetPassword>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass46_0::$ResetPassword$b__0(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass46_0::<ResetPassword>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ResetPassword>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass48_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass48_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass48_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass48_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onSuccess
[[deprecated("Use field access instead!")]] ::System::Action*& VROSC::FirebaseWrapper::$$c__DisplayClass48_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass48_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass48_0.<SendVerificationEmail>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass48_0::$SendVerificationEmail$b__0(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass48_0::<SendVerificationEmail>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SendVerificationEmail>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass50_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass50_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass50_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass50_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onSuccess
[[deprecated("Use field access instead!")]] ::System::Action*& VROSC::FirebaseWrapper::$$c__DisplayClass50_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass50_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass50_0.<CommitFirestoreBatchWrite>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass50_0::$CommitFirestoreBatchWrite$b__0(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass50_0::<CommitFirestoreBatchWrite>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CommitFirestoreBatchWrite>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass51_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass51_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.Dictionary`2<System.String,System.Object>>> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*>*& VROSC::FirebaseWrapper::$$c__DisplayClass51_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass51_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass51_0.<GetUserSessions>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass51_0::$GetUserSessions$b__0(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>* sessionsDocuments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass51_0::<GetUserSessions>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserSessions>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionsDocuments)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionsDocuments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass52_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass52_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Firebase.Firestore.DocumentSnapshot
#include "Firebase/Firestore/DocumentSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Collections.Generic.Dictionary`2<System.String,System.Object>> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*& VROSC::FirebaseWrapper::$$c__DisplayClass52_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass52_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass52_0.<GetUserPreferences>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass52_0::$GetUserPreferences$b__0(::System::Collections::Generic::IEnumerable_1<::Firebase::Firestore::DocumentSnapshot*>* preferencesDocuments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass52_0::<GetUserPreferences>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserPreferences>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(preferencesDocuments)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, preferencesDocuments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass56_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass56_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Firebase.Firestore.DocumentSnapshot
#include "Firebase/Firestore/DocumentSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VROSC.FirebaseWrapper <>4__this
[[deprecated("Use field access instead!")]] ::VROSC::FirebaseWrapper*& VROSC::FirebaseWrapper::$$c__DisplayClass56_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass56_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::FirebaseWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.Dictionary`2<System.String,System.Object>>> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*>*& VROSC::FirebaseWrapper::$$c__DisplayClass56_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass56_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass56_0.<GetUserFavorites>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass56_0::$GetUserFavorites$b__0(::System::Collections::Generic::IEnumerable_1<::Firebase::Firestore::DocumentSnapshot*>* favoritesDocuments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass56_0::<GetUserFavorites>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserFavorites>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(favoritesDocuments)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, favoritesDocuments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass56_1
#include "VROSC/FirebaseWrapper_--c__DisplayClass56_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass56_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass56_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.Dictionary`2<System.String,System.Object>> result
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*& VROSC::FirebaseWrapper::$$c__DisplayClass56_1::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass56_1::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sessionCount
[[deprecated("Use field access instead!")]] int& VROSC::FirebaseWrapper::$$c__DisplayClass56_1::dyn_sessionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass56_1::dyn_sessionCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sessionCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass56_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::VROSC::FirebaseWrapper::$$c__DisplayClass56_0*& VROSC::FirebaseWrapper::$$c__DisplayClass56_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass56_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::VROSC::FirebaseWrapper::$$c__DisplayClass56_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass56_2
#include "VROSC/FirebaseWrapper_--c__DisplayClass56_2.hpp"
// Including type: Firebase.Firestore.DocumentSnapshot
#include "Firebase/Firestore/DocumentSnapshot.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass56_1
#include "VROSC/FirebaseWrapper_--c__DisplayClass56_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Firebase.Firestore.DocumentSnapshot favoriteDocument
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::DocumentSnapshot*& VROSC::FirebaseWrapper::$$c__DisplayClass56_2::dyn_favoriteDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass56_2::dyn_favoriteDocument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "favoriteDocument"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::DocumentSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass56_1 CS$<>8__locals2
[[deprecated("Use field access instead!")]] ::VROSC::FirebaseWrapper::$$c__DisplayClass56_1*& VROSC::FirebaseWrapper::$$c__DisplayClass56_2::dyn_CS$$$8__locals2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass56_2::dyn_CS$$$8__locals2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals2"))->offset;
  return *reinterpret_cast<::VROSC::FirebaseWrapper::$$c__DisplayClass56_1**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass56_2.<GetUserFavorites>b__1
void VROSC::FirebaseWrapper::$$c__DisplayClass56_2::$GetUserFavorites$b__1(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* sessionDocDict) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass56_2::<GetUserFavorites>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserFavorites>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionDocDict)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionDocDict);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass56_3
#include "VROSC/FirebaseWrapper_--c__DisplayClass56_3.hpp"
// Including type: VROSC.Error
#include "VROSC/Error.hpp"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass56_2
#include "VROSC/FirebaseWrapper_--c__DisplayClass56_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String sessionId
[[deprecated("Use field access instead!")]] ::StringW& VROSC::FirebaseWrapper::$$c__DisplayClass56_3::dyn_sessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass56_3::dyn_sessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass56_2 CS$<>8__locals3
[[deprecated("Use field access instead!")]] ::VROSC::FirebaseWrapper::$$c__DisplayClass56_2*& VROSC::FirebaseWrapper::$$c__DisplayClass56_3::dyn_CS$$$8__locals3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass56_3::dyn_CS$$$8__locals3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals3"))->offset;
  return *reinterpret_cast<::VROSC::FirebaseWrapper::$$c__DisplayClass56_2**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass56_3.<GetUserFavorites>b__2
void VROSC::FirebaseWrapper::$$c__DisplayClass56_3::$GetUserFavorites$b__2(::VROSC::Error error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass56_3::<GetUserFavorites>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserFavorites>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass57_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass57_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.Dictionary`2<System.String,System.Object>>> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*>*& VROSC::FirebaseWrapper::$$c__DisplayClass57_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass57_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass57_0.<GetUserUpVotes>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass57_0::$GetUserUpVotes$b__0(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>* upVotesDocuments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass57_0::<GetUserUpVotes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserUpVotes>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(upVotesDocuments)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, upVotesDocuments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass58_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass58_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.Dictionary`2<System.String,System.Object>>> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*>*& VROSC::FirebaseWrapper::$$c__DisplayClass58_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass58_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass58_0.<GetCommunitySessions>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass58_0::$GetCommunitySessions$b__0(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>* sessionsDocuments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass58_0::<GetCommunitySessions>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetCommunitySessions>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionsDocuments)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionsDocuments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass62_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass62_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action onSuccess
[[deprecated("Use field access instead!")]] ::System::Action*& VROSC::FirebaseWrapper::$$c__DisplayClass62_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass62_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.Object> data
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*& VROSC::FirebaseWrapper::$$c__DisplayClass62_0::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass62_0::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.FirebaseWrapper <>4__this
[[deprecated("Use field access instead!")]] ::VROSC::FirebaseWrapper*& VROSC::FirebaseWrapper::$$c__DisplayClass62_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass62_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::FirebaseWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass62_0.<SaveUserProfile>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass62_0::$SaveUserProfile$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass62_0::<SaveUserProfile>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SaveUserProfile>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass76_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass76_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& VROSC::FirebaseWrapper::$$c__DisplayClass76_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass76_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String docId
[[deprecated("Use field access instead!")]] ::StringW& VROSC::FirebaseWrapper::$$c__DisplayClass76_0::dyn_docId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass76_0::dyn_docId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "docId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass76_0.<AddSessionUpVote>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass76_0::$AddSessionUpVote$b__0(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass76_0::<AddSessionUpVote>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddSessionUpVote>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass76_0.<AddSessionUpVote>b__1
void VROSC::FirebaseWrapper::$$c__DisplayClass76_0::$AddSessionUpVote$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass76_0::<AddSessionUpVote>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddSessionUpVote>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass78_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass78_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& VROSC::FirebaseWrapper::$$c__DisplayClass78_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass78_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String docId
[[deprecated("Use field access instead!")]] ::StringW& VROSC::FirebaseWrapper::$$c__DisplayClass78_0::dyn_docId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass78_0::dyn_docId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "docId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass78_0.<AddSessionFavorite>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass78_0::$AddSessionFavorite$b__0(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass78_0::<AddSessionFavorite>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddSessionFavorite>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass78_0.<AddSessionFavorite>b__1
void VROSC::FirebaseWrapper::$$c__DisplayClass78_0::$AddSessionFavorite$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass78_0::<AddSessionFavorite>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddSessionFavorite>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass80_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass80_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& VROSC::FirebaseWrapper::$$c__DisplayClass80_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass80_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String docId
[[deprecated("Use field access instead!")]] ::StringW& VROSC::FirebaseWrapper::$$c__DisplayClass80_0::dyn_docId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass80_0::dyn_docId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "docId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass80_0.<AddSessionDownload>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass80_0::$AddSessionDownload$b__0(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass80_0::<AddSessionDownload>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddSessionDownload>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass80_0.<AddSessionDownload>b__1
void VROSC::FirebaseWrapper::$$c__DisplayClass80_0::$AddSessionDownload$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass80_0::<AddSessionDownload>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddSessionDownload>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass81_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass81_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& VROSC::FirebaseWrapper::$$c__DisplayClass81_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass81_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String docId
[[deprecated("Use field access instead!")]] ::StringW& VROSC::FirebaseWrapper::$$c__DisplayClass81_0::dyn_docId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass81_0::dyn_docId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "docId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass81_0.<AddSessionPreviewPlay>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass81_0::$AddSessionPreviewPlay$b__0(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass81_0::<AddSessionPreviewPlay>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddSessionPreviewPlay>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass81_0.<AddSessionPreviewPlay>b__1
void VROSC::FirebaseWrapper::$$c__DisplayClass81_0::$AddSessionPreviewPlay$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass81_0::<AddSessionPreviewPlay>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddSessionPreviewPlay>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass82_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass82_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Firebase.Firestore.DocumentSnapshot
#include "Firebase/Firestore/DocumentSnapshot.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Firebase.Firestore.QuerySnapshot
#include "Firebase/Firestore/QuerySnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass82_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass82_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Collections.Generic.IEnumerable`1<Firebase.Firestore.DocumentSnapshot>> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::IEnumerable_1<::Firebase::Firestore::DocumentSnapshot*>*>*& VROSC::FirebaseWrapper::$$c__DisplayClass82_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass82_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Collections::Generic::IEnumerable_1<::Firebase::Firestore::DocumentSnapshot*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass82_0.<GetFirestoreCollectionData>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass82_0::$GetFirestoreCollectionData$b__0(::System::Threading::Tasks::Task_1<::Firebase::Firestore::QuerySnapshot*>* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass82_0::<GetFirestoreCollectionData>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetFirestoreCollectionData>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass83_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass83_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Firebase.Firestore.QuerySnapshot
#include "Firebase/Firestore/QuerySnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass83_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass83_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.Dictionary`2<System.String,System.Object>> result
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*& VROSC::FirebaseWrapper::$$c__DisplayClass83_0::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass83_0::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.Dictionary`2<System.String,System.Object>>> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*>*& VROSC::FirebaseWrapper::$$c__DisplayClass83_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass83_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass83_0.<GetFirestoreCollectionDataAsDictionary>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass83_0::$GetFirestoreCollectionDataAsDictionary$b__0(::System::Threading::Tasks::Task_1<::Firebase::Firestore::QuerySnapshot*>* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass83_0::<GetFirestoreCollectionDataAsDictionary>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetFirestoreCollectionDataAsDictionary>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass84_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass84_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Firebase.Firestore.DocumentSnapshot
#include "Firebase/Firestore/DocumentSnapshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass84_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass84_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Collections.Generic.Dictionary`2<System.String,System.Object>> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>*& VROSC::FirebaseWrapper::$$c__DisplayClass84_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass84_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass84_0.<GetFirestoreDocumentData>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass84_0::$GetFirestoreDocumentData$b__0(::System::Threading::Tasks::Task_1<::Firebase::Firestore::DocumentSnapshot*>* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass84_0::<GetFirestoreDocumentData>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetFirestoreDocumentData>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass85_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass85_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Firebase.Firestore.DocumentReference
#include "Firebase/Firestore/DocumentReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass85_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass85_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& VROSC::FirebaseWrapper::$$c__DisplayClass85_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass85_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass85_0.<AddFirestoreDocument>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass85_0::$AddFirestoreDocument$b__0(::System::Threading::Tasks::Task_1<::Firebase::Firestore::DocumentReference*>* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass85_0::<AddFirestoreDocument>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddFirestoreDocument>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass86_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass86_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass86_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass86_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onSuccess
[[deprecated("Use field access instead!")]] ::System::Action*& VROSC::FirebaseWrapper::$$c__DisplayClass86_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass86_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass86_0.<DeleteFirestoreDocument>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass86_0::$DeleteFirestoreDocument$b__0(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass86_0::<DeleteFirestoreDocument>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DeleteFirestoreDocument>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass87_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass87_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass87_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass87_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onSuccess
[[deprecated("Use field access instead!")]] ::System::Action*& VROSC::FirebaseWrapper::$$c__DisplayClass87_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass87_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass87_0.<SaveFirestoreDocumentData>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass87_0::$SaveFirestoreDocumentData$b__0(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass87_0::<SaveFirestoreDocumentData>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SaveFirestoreDocumentData>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass88_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass88_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass88_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass88_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onSuccess
[[deprecated("Use field access instead!")]] ::System::Action*& VROSC::FirebaseWrapper::$$c__DisplayClass88_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass88_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass88_0.<IncrementValue>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass88_0::$IncrementValue$b__0(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass88_0::<IncrementValue>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<IncrementValue>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass89_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass89_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Proyecto26.ResponseHelper
#include "Proyecto26/ResponseHelper.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String responseJson
[[deprecated("Use field access instead!")]] ::StringW& VROSC::FirebaseWrapper::$$c__DisplayClass89_0::dyn_responseJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass89_0::dyn_responseJson");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "responseJson"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& VROSC::FirebaseWrapper::$$c__DisplayClass89_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass89_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass89_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass89_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass89_0.<GetForceUpdates>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass89_0::$GetForceUpdates$b__0(::Proyecto26::ResponseHelper* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass89_0::<GetForceUpdates>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetForceUpdates>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass89_0.<GetForceUpdates>b__1
void VROSC::FirebaseWrapper::$$c__DisplayClass89_0::$GetForceUpdates$b__1(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass89_0::<GetForceUpdates>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetForceUpdates>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass90_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass90_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Firebase.Storage.UploadState
#include "Firebase/Storage/UploadState.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Firebase.Storage.StorageMetadata
#include "Firebase/Storage/StorageMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Single> onProgress
[[deprecated("Use field access instead!")]] ::System::Action_1<float>*& VROSC::FirebaseWrapper::$$c__DisplayClass90_0::dyn_onProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass90_0::dyn_onProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onProgress"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass90_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass90_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onSuccess
[[deprecated("Use field access instead!")]] ::System::Action*& VROSC::FirebaseWrapper::$$c__DisplayClass90_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass90_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass90_0.<SaveSessionFile>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass90_0::$SaveSessionFile$b__0(::Firebase::Storage::UploadState* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass90_0::<SaveSessionFile>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SaveSessionFile>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass90_0.<SaveSessionFile>b__1
void VROSC::FirebaseWrapper::$$c__DisplayClass90_0::$SaveSessionFile$b__1(::System::Threading::Tasks::Task_1<::Firebase::Storage::StorageMetadata*>* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass90_0::<SaveSessionFile>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SaveSessionFile>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass91_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass91_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Firebase.Storage.DownloadState
#include "Firebase/Storage/DownloadState.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Single> onProgress
[[deprecated("Use field access instead!")]] ::System::Action_1<float>*& VROSC::FirebaseWrapper::$$c__DisplayClass91_0::dyn_onProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass91_0::dyn_onProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onProgress"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass91_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass91_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onSuccess
[[deprecated("Use field access instead!")]] ::System::Action*& VROSC::FirebaseWrapper::$$c__DisplayClass91_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass91_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass91_0.<LoadSessionFile>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass91_0::$LoadSessionFile$b__0(::Firebase::Storage::DownloadState* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass91_0::<LoadSessionFile>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadSessionFile>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass91_0.<LoadSessionFile>b__1
void VROSC::FirebaseWrapper::$$c__DisplayClass91_0::$LoadSessionFile$b__1(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass91_0::<LoadSessionFile>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadSessionFile>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass92_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass92_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action onSuccess
[[deprecated("Use field access instead!")]] ::System::Action*& VROSC::FirebaseWrapper::$$c__DisplayClass92_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass92_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass92_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass92_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass92_0.<DeleteSessionFile>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass92_0::$DeleteSessionFile$b__0(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass92_0::<DeleteSessionFile>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DeleteSessionFile>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass93_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass93_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Firebase.Storage.UploadState
#include "Firebase/Storage/UploadState.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Firebase.Storage.StorageMetadata
#include "Firebase/Storage/StorageMetadata.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Single> onProgress
[[deprecated("Use field access instead!")]] ::System::Action_1<float>*& VROSC::FirebaseWrapper::$$c__DisplayClass93_0::dyn_onProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass93_0::dyn_onProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onProgress"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass93_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass93_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onSuccess
[[deprecated("Use field access instead!")]] ::System::Action*& VROSC::FirebaseWrapper::$$c__DisplayClass93_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass93_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass93_0.<SavePreviewFile>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass93_0::$SavePreviewFile$b__0(::Firebase::Storage::UploadState* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass93_0::<SavePreviewFile>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SavePreviewFile>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass93_0.<SavePreviewFile>b__1
void VROSC::FirebaseWrapper::$$c__DisplayClass93_0::$SavePreviewFile$b__1(::System::Threading::Tasks::Task_1<::Firebase::Storage::StorageMetadata*>* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass93_0::<SavePreviewFile>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SavePreviewFile>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass94_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass94_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Firebase.Storage.DownloadState
#include "Firebase/Storage/DownloadState.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Single> onProgress
[[deprecated("Use field access instead!")]] ::System::Action_1<float>*& VROSC::FirebaseWrapper::$$c__DisplayClass94_0::dyn_onProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass94_0::dyn_onProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onProgress"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass94_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass94_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.String> onSuccess
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& VROSC::FirebaseWrapper::$$c__DisplayClass94_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass94_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String destinationFilePath
[[deprecated("Use field access instead!")]] ::StringW& VROSC::FirebaseWrapper::$$c__DisplayClass94_0::dyn_destinationFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass94_0::dyn_destinationFilePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destinationFilePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass94_0.<LoadPreviewFile>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass94_0::$LoadPreviewFile$b__0(::Firebase::Storage::DownloadState* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass94_0::<LoadPreviewFile>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadPreviewFile>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass94_0.<LoadPreviewFile>b__1
void VROSC::FirebaseWrapper::$$c__DisplayClass94_0::$LoadPreviewFile$b__1(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass94_0::<LoadPreviewFile>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadPreviewFile>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass95_0
#include "VROSC/FirebaseWrapper_--c__DisplayClass95_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action onSuccess
[[deprecated("Use field access instead!")]] ::System::Action*& VROSC::FirebaseWrapper::$$c__DisplayClass95_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass95_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<VROSC.Error> onFailure
[[deprecated("Use field access instead!")]] ::System::Action_1<::VROSC::Error>*& VROSC::FirebaseWrapper::$$c__DisplayClass95_0::dyn_onFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass95_0::dyn_onFailure");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onFailure"))->offset;
  return *reinterpret_cast<::System::Action_1<::VROSC::Error>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.FirebaseWrapper/VROSC.<>c__DisplayClass95_0.<DeletePreviewFile>b__0
void VROSC::FirebaseWrapper::$$c__DisplayClass95_0::$DeletePreviewFile$b__0(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::FirebaseWrapper::$$c__DisplayClass95_0::<DeletePreviewFile>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DeletePreviewFile>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.CompressionManager
#include "VROSC/CompressionManager.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String DrumsThreshholdString
::StringW VROSC::CompressionManager::_get_DrumsThreshholdString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CompressionManager::_get_DrumsThreshholdString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "CompressionManager", "DrumsThreshholdString"));
}
// Autogenerated static field setter
// Set static field: static private System.String DrumsThreshholdString
void VROSC::CompressionManager::_set_DrumsThreshholdString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CompressionManager::_set_DrumsThreshholdString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CompressionManager", "DrumsThreshholdString", value));
}
// Autogenerated static field getter
// Get static field: static private System.String DrumsMakeupString
::StringW VROSC::CompressionManager::_get_DrumsMakeupString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CompressionManager::_get_DrumsMakeupString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "CompressionManager", "DrumsMakeupString"));
}
// Autogenerated static field setter
// Set static field: static private System.String DrumsMakeupString
void VROSC::CompressionManager::_set_DrumsMakeupString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CompressionManager::_set_DrumsMakeupString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "CompressionManager", "DrumsMakeupString", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _thresholdMin
[[deprecated("Use field access instead!")]] float& VROSC::CompressionManager::dyn__thresholdMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CompressionManager::dyn__thresholdMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thresholdMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _thresholdMax
[[deprecated("Use field access instead!")]] float& VROSC::CompressionManager::dyn__thresholdMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CompressionManager::dyn__thresholdMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thresholdMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _thresholdCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& VROSC::CompressionManager::dyn__thresholdCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CompressionManager::dyn__thresholdCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thresholdCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _makeupMin
[[deprecated("Use field access instead!")]] float& VROSC::CompressionManager::dyn__makeupMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CompressionManager::dyn__makeupMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_makeupMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _makeupMax
[[deprecated("Use field access instead!")]] float& VROSC::CompressionManager::dyn__makeupMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CompressionManager::dyn__makeupMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_makeupMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _makeupCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& VROSC::CompressionManager::dyn__makeupCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CompressionManager::dyn__makeupCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_makeupCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.CompressionManager.SetDrumsCompression
void VROSC::CompressionManager::SetDrumsCompression(float compression) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CompressionManager::SetDrumsCompression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDrumsCompression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compression)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, compression);
}
// Autogenerated method: VROSC.CompressionManager.SetCompressionParameter
void VROSC::CompressionManager::SetCompressionParameter(::StringW name, float amount, ::UnityEngine::AnimationCurve* curve, float min, float max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::CompressionManager::SetCompressionParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompressionParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(amount), ::il2cpp_utils::ExtractType(curve), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, amount, curve, min, max);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.Core
#include "VROSC/Core.hpp"
// Including type: VROSC.AppController
#include "VROSC/AppController.hpp"
// Including type: VROSC.InputManager
#include "VROSC/InputManager.hpp"
// Including type: VROSC.PlatformSelector
#include "VROSC/PlatformSelector.hpp"
// Including type: VROSC.MidiManager
#include "VROSC/MidiManager.hpp"
// Including type: VROSC.AudioMixManager
#include "VROSC/AudioMixManager.hpp"
// Including type: VROSC.MalletManager
#include "VROSC/MalletManager.hpp"
// Including type: VROSC.InstrumentHub
#include "VROSC/InstrumentHub.hpp"
// Including type: VROSC.HapticManager
#include "VROSC/HapticManager.hpp"
// Including type: VROSC.VideoManager
#include "VROSC/VideoManager.hpp"
// Including type: VROSC.SpectatorCameraController
#include "VROSC/SpectatorCameraController.hpp"
// Including type: VROSC.BeatCounter
#include "VROSC/BeatCounter.hpp"
// Including type: VROSC.UserDataControllers
#include "VROSC/UserDataControllers.hpp"
// Including type: VROSC.EnvironmentController
#include "VROSC/EnvironmentController.hpp"
// Including type: VROSC.SaveLoadManager
#include "VROSC/SaveLoadManager.hpp"
// Including type: VROSC.AuthenticationManager
#include "VROSC/AuthenticationManager.hpp"
// Including type: VROSC.AudioRecorder
#include "VROSC/AudioRecorder.hpp"
// Including type: VROSC.AppValidityChecker
#include "VROSC/AppValidityChecker.hpp"
// Including type: LIV.SDK.Unity.LIV
#include "LIV/SDK/Unity/LIV.hpp"
// Including type: VROSC.GarbageManager
#include "VROSC/GarbageManager.hpp"
// Including type: VROSC.TutorialManager
#include "VROSC/TutorialManager.hpp"
// Including type: VROSC.StaticData
#include "VROSC/StaticData.hpp"
// Including type: VROSC.RemoteConfigManager
#include "VROSC/RemoteConfigManager.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: VROSC.Dashboard
#include "VROSC/Dashboard.hpp"
// Including type: PunchKeyboard
#include "GlobalNamespace/PunchKeyboard.hpp"
// Including type: VROSC.VRPlayer
#include "VROSC/VRPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VROSC.AppController AppController
::VROSC::AppController* VROSC::Core::_get_AppController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_AppController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::AppController*>("VROSC", "Core", "AppController"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.AppController AppController
void VROSC::Core::_set_AppController(::VROSC::AppController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_AppController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "AppController", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.InputManager InputManager
::VROSC::InputManager* VROSC::Core::_get_InputManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_InputManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::InputManager*>("VROSC", "Core", "InputManager"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.InputManager InputManager
void VROSC::Core::_set_InputManager(::VROSC::InputManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_InputManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "InputManager", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.PlatformSelector PlatformSelector
::VROSC::PlatformSelector* VROSC::Core::_get_PlatformSelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_PlatformSelector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::PlatformSelector*>("VROSC", "Core", "PlatformSelector"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.PlatformSelector PlatformSelector
void VROSC::Core::_set_PlatformSelector(::VROSC::PlatformSelector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_PlatformSelector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "PlatformSelector", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.MidiManager MidiManager
::VROSC::MidiManager* VROSC::Core::_get_MidiManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_MidiManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::MidiManager*>("VROSC", "Core", "MidiManager"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.MidiManager MidiManager
void VROSC::Core::_set_MidiManager(::VROSC::MidiManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_MidiManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "MidiManager", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.AudioMixManager AudioMixManager
::VROSC::AudioMixManager* VROSC::Core::_get_AudioMixManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_AudioMixManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::AudioMixManager*>("VROSC", "Core", "AudioMixManager"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.AudioMixManager AudioMixManager
void VROSC::Core::_set_AudioMixManager(::VROSC::AudioMixManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_AudioMixManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "AudioMixManager", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.MalletManager MalletManager
::VROSC::MalletManager* VROSC::Core::_get_MalletManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_MalletManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::MalletManager*>("VROSC", "Core", "MalletManager"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.MalletManager MalletManager
void VROSC::Core::_set_MalletManager(::VROSC::MalletManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_MalletManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "MalletManager", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.InstrumentHub InstrumentHub
::VROSC::InstrumentHub* VROSC::Core::_get_InstrumentHub() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_InstrumentHub");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::InstrumentHub*>("VROSC", "Core", "InstrumentHub"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.InstrumentHub InstrumentHub
void VROSC::Core::_set_InstrumentHub(::VROSC::InstrumentHub* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_InstrumentHub");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "InstrumentHub", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.HapticManager HapticManager
::VROSC::HapticManager* VROSC::Core::_get_HapticManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_HapticManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::HapticManager*>("VROSC", "Core", "HapticManager"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.HapticManager HapticManager
void VROSC::Core::_set_HapticManager(::VROSC::HapticManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_HapticManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "HapticManager", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.VideoManager VideoManager
::VROSC::VideoManager* VROSC::Core::_get_VideoManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_VideoManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::VideoManager*>("VROSC", "Core", "VideoManager"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.VideoManager VideoManager
void VROSC::Core::_set_VideoManager(::VROSC::VideoManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_VideoManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "VideoManager", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.SpectatorCameraController SpectatorCameraController
::VROSC::SpectatorCameraController* VROSC::Core::_get_SpectatorCameraController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_SpectatorCameraController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::SpectatorCameraController*>("VROSC", "Core", "SpectatorCameraController"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.SpectatorCameraController SpectatorCameraController
void VROSC::Core::_set_SpectatorCameraController(::VROSC::SpectatorCameraController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_SpectatorCameraController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "SpectatorCameraController", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.BeatCounter BeatCounter
::VROSC::BeatCounter* VROSC::Core::_get_BeatCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_BeatCounter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::BeatCounter*>("VROSC", "Core", "BeatCounter"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.BeatCounter BeatCounter
void VROSC::Core::_set_BeatCounter(::VROSC::BeatCounter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_BeatCounter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "BeatCounter", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.UserDataControllers UserDataControllers
::VROSC::UserDataControllers* VROSC::Core::_get_UserDataControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_UserDataControllers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::UserDataControllers*>("VROSC", "Core", "UserDataControllers"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.UserDataControllers UserDataControllers
void VROSC::Core::_set_UserDataControllers(::VROSC::UserDataControllers* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_UserDataControllers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "UserDataControllers", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.EnvironmentController EnvironmentController
::VROSC::EnvironmentController* VROSC::Core::_get_EnvironmentController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_EnvironmentController");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::EnvironmentController*>("VROSC", "Core", "EnvironmentController"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.EnvironmentController EnvironmentController
void VROSC::Core::_set_EnvironmentController(::VROSC::EnvironmentController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_EnvironmentController");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "EnvironmentController", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.SaveLoadManager SaveLoadManager
::VROSC::SaveLoadManager* VROSC::Core::_get_SaveLoadManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_SaveLoadManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::SaveLoadManager*>("VROSC", "Core", "SaveLoadManager"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.SaveLoadManager SaveLoadManager
void VROSC::Core::_set_SaveLoadManager(::VROSC::SaveLoadManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_SaveLoadManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "SaveLoadManager", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.AuthenticationManager AuthenticationManager
::VROSC::AuthenticationManager* VROSC::Core::_get_AuthenticationManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_AuthenticationManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::AuthenticationManager*>("VROSC", "Core", "AuthenticationManager"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.AuthenticationManager AuthenticationManager
void VROSC::Core::_set_AuthenticationManager(::VROSC::AuthenticationManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_AuthenticationManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "AuthenticationManager", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.AudioRecorder AudioRecorder
::VROSC::AudioRecorder* VROSC::Core::_get_AudioRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_AudioRecorder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::AudioRecorder*>("VROSC", "Core", "AudioRecorder"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.AudioRecorder AudioRecorder
void VROSC::Core::_set_AudioRecorder(::VROSC::AudioRecorder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_AudioRecorder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "AudioRecorder", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.AppValidityChecker AppValidityChecker
::VROSC::AppValidityChecker* VROSC::Core::_get_AppValidityChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_AppValidityChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::AppValidityChecker*>("VROSC", "Core", "AppValidityChecker"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.AppValidityChecker AppValidityChecker
void VROSC::Core::_set_AppValidityChecker(::VROSC::AppValidityChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_AppValidityChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "AppValidityChecker", value));
}
// Autogenerated static field getter
// Get static field: static public LIV.SDK.Unity.LIV LIV
::LIV::SDK::Unity::LIV* VROSC::Core::_get_LIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_LIV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LIV::SDK::Unity::LIV*>("VROSC", "Core", "LIV"));
}
// Autogenerated static field setter
// Set static field: static public LIV.SDK.Unity.LIV LIV
void VROSC::Core::_set_LIV(::LIV::SDK::Unity::LIV* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_LIV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "LIV", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.GarbageManager GarbageManager
::VROSC::GarbageManager* VROSC::Core::_get_GarbageManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_GarbageManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::GarbageManager*>("VROSC", "Core", "GarbageManager"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.GarbageManager GarbageManager
void VROSC::Core::_set_GarbageManager(::VROSC::GarbageManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_GarbageManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "GarbageManager", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.TutorialManager TutorialManager
::VROSC::TutorialManager* VROSC::Core::_get_TutorialManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_TutorialManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::TutorialManager*>("VROSC", "Core", "TutorialManager"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.TutorialManager TutorialManager
void VROSC::Core::_set_TutorialManager(::VROSC::TutorialManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_TutorialManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "TutorialManager", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.StaticData StaticData
::VROSC::StaticData* VROSC::Core::_get_StaticData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_StaticData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::StaticData*>("VROSC", "Core", "StaticData"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.StaticData StaticData
void VROSC::Core::_set_StaticData(::VROSC::StaticData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_StaticData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "StaticData", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.RemoteConfigManager RemoteConfigManager
::VROSC::RemoteConfigManager* VROSC::Core::_get_RemoteConfigManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_RemoteConfigManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::RemoteConfigManager*>("VROSC", "Core", "RemoteConfigManager"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.RemoteConfigManager RemoteConfigManager
void VROSC::Core::_set_RemoteConfigManager(::VROSC::RemoteConfigManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_RemoteConfigManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "RemoteConfigManager", value));
}
// Autogenerated static field getter
// Get static field: static public System.String HostingURL
::StringW VROSC::Core::_get_HostingURL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_HostingURL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("VROSC", "Core", "HostingURL"));
}
// Autogenerated static field setter
// Set static field: static public System.String HostingURL
void VROSC::Core::_set_HostingURL(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_HostingURL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "HostingURL", value));
}
// Autogenerated static field getter
// Get static field: static public VROSC.Dashboard Dashboard
::VROSC::Dashboard* VROSC::Core::_get_Dashboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_Dashboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::VROSC::Dashboard*>("VROSC", "Core", "Dashboard"));
}
// Autogenerated static field setter
// Set static field: static public VROSC.Dashboard Dashboard
void VROSC::Core::_set_Dashboard(::VROSC::Dashboard* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_Dashboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "Dashboard", value));
}
// Autogenerated static field getter
// Get static field: static public PunchKeyboard Keyboard
::GlobalNamespace::PunchKeyboard* VROSC::Core::_get_Keyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_get_Keyboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PunchKeyboard*>("VROSC", "Core", "Keyboard"));
}
// Autogenerated static field setter
// Set static field: static public PunchKeyboard Keyboard
void VROSC::Core::_set_Keyboard(::GlobalNamespace::PunchKeyboard* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::_set_Keyboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "Core", "Keyboard", value));
}
// Autogenerated method: VROSC.Core.get_VRPlayer
::VROSC::VRPlayer* VROSC::Core::get_VRPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::get_VRPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "Core", "get_VRPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::VRPlayer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VROSC.Core.FetchReferences
void VROSC::Core::FetchReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::Core::FetchReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("VROSC", "Core", "FetchReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.BaseDataController
#include "VROSC/BaseDataController.hpp"
// Including type: VROSC.BaseDataController/VROSC.<>c__DisplayClass14_0
#include "VROSC/BaseDataController_--c__DisplayClass14_0.hpp"
// Including type: VROSC.BaseDataModel
#include "VROSC/BaseDataModel.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VROSC.ChangeFlags
#include "VROSC/ChangeFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected VROSC.BaseDataModel _dataModel
[[deprecated("Use field access instead!")]] ::VROSC::BaseDataModel*& VROSC::BaseDataController::dyn__dataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::dyn__dataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataModel"))->offset;
  return *reinterpret_cast<::VROSC::BaseDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsLoaded>k__BackingField
[[deprecated("Use field access instead!")]] bool& VROSC::BaseDataController::dyn_$IsLoaded$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::dyn_$IsLoaded$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsLoaded>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsSaved>k__BackingField
[[deprecated("Use field access instead!")]] bool& VROSC::BaseDataController::dyn_$IsSaved$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::dyn_$IsSaved$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsSaved>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action OnProgressStepFinished
[[deprecated("Use field access instead!")]] ::System::Action*& VROSC::BaseDataController::dyn_OnProgressStepFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::dyn_OnProgressStepFinished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnProgressStepFinished"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.BaseDataController.get_ModelType
::System::Type* VROSC::BaseDataController::get_ModelType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::get_ModelType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ModelType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BaseDataController.get_IsLoaded
bool VROSC::BaseDataController::get_IsLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::get_IsLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BaseDataController.set_IsLoaded
void VROSC::BaseDataController::set_IsLoaded(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::set_IsLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.BaseDataController.get_IsSaved
bool VROSC::BaseDataController::get_IsSaved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::get_IsSaved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSaved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BaseDataController.set_IsSaved
void VROSC::BaseDataController::set_IsSaved(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::set_IsSaved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsSaved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.BaseDataController.get_HasChanged
bool VROSC::BaseDataController::get_HasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::get_HasChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BaseDataController.LoadLocalData
void VROSC::BaseDataController::LoadLocalData(::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::LoadLocalData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::BaseDataController*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onSuccess, onFailure);
}
// Autogenerated method: VROSC.BaseDataController.SaveLocalData
void VROSC::BaseDataController::SaveLocalData(::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::SaveLocalData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::BaseDataController*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onSuccess, onFailure);
}
// Autogenerated method: VROSC.BaseDataController.LoadCloudData
void VROSC::BaseDataController::LoadCloudData(::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::LoadCloudData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::BaseDataController*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onSuccess, onFailure);
}
// Autogenerated method: VROSC.BaseDataController.SaveCloudData
void VROSC::BaseDataController::SaveCloudData(::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::SaveCloudData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::BaseDataController*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onSuccess, onFailure);
}
// Autogenerated method: VROSC.BaseDataController.LoadLocalData
void VROSC::BaseDataController::LoadLocalData(::StringW sessionId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::LoadLocalData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::BaseDataController*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, onSuccess, onFailure);
}
// Autogenerated method: VROSC.BaseDataController.SaveLocalData
void VROSC::BaseDataController::SaveLocalData(::StringW sessionId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::SaveLocalData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::BaseDataController*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, onSuccess, onFailure);
}
// Autogenerated method: VROSC.BaseDataController.LoadCloudData
void VROSC::BaseDataController::LoadCloudData(::StringW sessionId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::LoadCloudData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::BaseDataController*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, onSuccess, onFailure);
}
// Autogenerated method: VROSC.BaseDataController.SaveCloudData
void VROSC::BaseDataController::SaveCloudData(::StringW sessionId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::SaveCloudData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::BaseDataController*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, onSuccess, onFailure);
}
// Autogenerated method: VROSC.BaseDataController.GetModelJson
::StringW VROSC::BaseDataController::GetModelJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::GetModelJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModelJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BaseDataController.Changed
void VROSC::BaseDataController::Changed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::Changed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Changed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BaseDataController.SetChangeFlags
void VROSC::BaseDataController::SetChangeFlags(::VROSC::ChangeFlags changeFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::SetChangeFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChangeFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(changeFlags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, changeFlags);
}
// Autogenerated method: VROSC.BaseDataController.UpdateSaveVersion
void VROSC::BaseDataController::UpdateSaveVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::UpdateSaveVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSaveVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BaseDataController.GetLoadSteps
int VROSC::BaseDataController::GetLoadSteps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::GetLoadSteps");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::BaseDataController*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BaseDataController.GetSaveSteps
int VROSC::BaseDataController::GetSaveSteps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::GetSaveSteps");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::BaseDataController*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BaseDataController.LoadData
void VROSC::BaseDataController::LoadData(::StringW sessionId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::LoadData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::BaseDataController*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, onSuccess, onFailure);
}
// Autogenerated method: VROSC.BaseDataController.SaveData
void VROSC::BaseDataController::SaveData(::StringW sessionId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::SaveData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::BaseDataController*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, onSuccess, onFailure);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.BaseDataController/VROSC.<>c__DisplayClass14_0
#include "VROSC/BaseDataController_--c__DisplayClass14_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VROSC.BaseDataController <>4__this
[[deprecated("Use field access instead!")]] ::VROSC::BaseDataController*& VROSC::BaseDataController::$$c__DisplayClass14_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::$$c__DisplayClass14_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::BaseDataController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onSuccess
[[deprecated("Use field access instead!")]] ::System::Action*& VROSC::BaseDataController::$$c__DisplayClass14_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::$$c__DisplayClass14_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.BaseDataController/VROSC.<>c__DisplayClass14_0.<LoadLocalData>b__0
void VROSC::BaseDataController::$$c__DisplayClass14_0::$LoadLocalData$b__0(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataController::$$c__DisplayClass14_0::<LoadLocalData>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadLocalData>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.BaseDataModel
#include "VROSC/BaseDataModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VROSC.ChangeFlags Flags
[[deprecated("Use field access instead!")]] ::VROSC::ChangeFlags& VROSC::BaseDataModel::dyn_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataModel::dyn_Flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Flags"))->offset;
  return *reinterpret_cast<::VROSC::ChangeFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SaveVersion
[[deprecated("Use field access instead!")]] int& VROSC::BaseDataModel::dyn_SaveVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataModel::dyn_SaveVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SaveVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.BaseDataModel.get_Key
::StringW VROSC::BaseDataModel::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataModel::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::BaseDataModel*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BaseDataModel.get_Version
int VROSC::BaseDataModel::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataModel::get_Version");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::BaseDataModel*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BaseDataModel.Serialize
::StringW VROSC::BaseDataModel::Serialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataModel::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::BaseDataModel*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.BaseDataModel.GetFirestoreData
::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* VROSC::BaseDataModel::GetFirestoreData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::BaseDataModel::GetFirestoreData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::BaseDataModel*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.InstrumentDataController
#include "VROSC/InstrumentDataController.hpp"
// Including type: VROSC.TransformDataController
#include "VROSC/TransformDataController.hpp"
// Including type: VROSC.WidgetSettings
#include "VROSC/WidgetSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VROSC.InstrumentDataController.get_TransformData
::VROSC::TransformDataController* VROSC::InstrumentDataController::get_TransformData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentDataController::get_TransformData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::TransformDataController*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InstrumentDataController.get_HasBeenOpened
bool VROSC::InstrumentDataController::get_HasBeenOpened() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentDataController::get_HasBeenOpened");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InstrumentDataController.set_HasBeenOpened
void VROSC::InstrumentDataController::set_HasBeenOpened(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentDataController::set_HasBeenOpened");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InstrumentDataController.get_Quantize
bool VROSC::InstrumentDataController::get_Quantize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentDataController::get_Quantize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InstrumentDataController.set_Quantize
void VROSC::InstrumentDataController::set_Quantize(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentDataController::set_Quantize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InstrumentDataController.get_QuantizeTolerance
float VROSC::InstrumentDataController::get_QuantizeTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentDataController::get_QuantizeTolerance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InstrumentDataController.set_QuantizeTolerance
void VROSC::InstrumentDataController::set_QuantizeTolerance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentDataController::set_QuantizeTolerance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InstrumentDataController.get_QuantizeBeatDivision
int VROSC::InstrumentDataController::get_QuantizeBeatDivision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentDataController::get_QuantizeBeatDivision");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InstrumentDataController.set_QuantizeBeatDivision
void VROSC::InstrumentDataController::set_QuantizeBeatDivision(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentDataController::set_QuantizeBeatDivision");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InstrumentDataController.get_FrameIsActive
bool VROSC::InstrumentDataController::get_FrameIsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentDataController::get_FrameIsActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.InstrumentDataController.set_FrameIsActive
void VROSC::InstrumentDataController::set_FrameIsActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentDataController::set_FrameIsActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.InstrumentDataController.ApplyDefaults
void VROSC::InstrumentDataController::ApplyDefaults(::VROSC::WidgetSettings* widgetDefaultSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentDataController::ApplyDefaults");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, widgetDefaultSettings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.MidiData
#include "VROSC/MidiData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 SelectedMidiChannel
[[deprecated("Use field access instead!")]] int& VROSC::MidiData::dyn_SelectedMidiChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiData::dyn_SelectedMidiChannel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SelectedMidiChannel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MinMidiChannel
[[deprecated("Use field access instead!")]] int& VROSC::MidiData::dyn_MinMidiChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiData::dyn_MinMidiChannel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinMidiChannel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxMidiChannel
[[deprecated("Use field access instead!")]] int& VROSC::MidiData::dyn_MaxMidiChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::MidiData::dyn_MaxMidiChannel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxMidiChannel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.InstrumentDataModel
#include "VROSC/InstrumentDataModel.hpp"
// Including type: VROSC.TransformDataModel
#include "VROSC/TransformDataModel.hpp"
// Including type: VROSC.MidiData
#include "VROSC/MidiData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Id
[[deprecated("Use field access instead!")]] ::StringW& VROSC::InstrumentDataModel::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentDataModel::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.TransformDataModel TransformData
[[deprecated("Use field access instead!")]] ::VROSC::TransformDataModel*& VROSC::InstrumentDataModel::dyn_TransformData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentDataModel::dyn_TransformData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TransformData"))->offset;
  return *reinterpret_cast<::VROSC::TransformDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.MidiData MidiData
[[deprecated("Use field access instead!")]] ::VROSC::MidiData*& VROSC::InstrumentDataModel::dyn_MidiData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentDataModel::dyn_MidiData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MidiData"))->offset;
  return *reinterpret_cast<::VROSC::MidiData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Quantize
[[deprecated("Use field access instead!")]] bool& VROSC::InstrumentDataModel::dyn_Quantize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentDataModel::dyn_Quantize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Quantize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single QuantizeTolerance
[[deprecated("Use field access instead!")]] float& VROSC::InstrumentDataModel::dyn_QuantizeTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentDataModel::dyn_QuantizeTolerance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QuantizeTolerance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 QuantizeBeatDivision
[[deprecated("Use field access instead!")]] int& VROSC::InstrumentDataModel::dyn_QuantizeBeatDivision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentDataModel::dyn_QuantizeBeatDivision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QuantizeBeatDivision"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean HasBeenOpened
[[deprecated("Use field access instead!")]] bool& VROSC::InstrumentDataModel::dyn_HasBeenOpened() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentDataModel::dyn_HasBeenOpened");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HasBeenOpened"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.InstrumentsDataController
#include "VROSC/InstrumentsDataController.hpp"
// Including type: VROSC.InstrumentsDataController/VROSC.PatchSettings
#include "VROSC/InstrumentsDataController_PatchSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VROSC.InstrumentsDataController.ApplyDefaults
void VROSC::InstrumentsDataController::ApplyDefaults(::VROSC::WidgetSettings* widgetDefaultSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentsDataController::ApplyDefaults");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentsDataController*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, widgetDefaultSettings);
}
// Autogenerated method: VROSC.InstrumentsDataController.IsOpen
bool VROSC::InstrumentsDataController::IsOpen(::VROSC::WidgetSettings::Identifier id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentsDataController::IsOpen");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentsDataController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id);
}
// Autogenerated method: VROSC.InstrumentsDataController.GetPosition
::UnityEngine::Vector3 VROSC::InstrumentsDataController::GetPosition(::VROSC::WidgetSettings::Identifier id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentsDataController::GetPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentsDataController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, id);
}
// Autogenerated method: VROSC.InstrumentsDataController.GetRotation
::UnityEngine::Quaternion VROSC::InstrumentsDataController::GetRotation(::VROSC::WidgetSettings::Identifier id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentsDataController::GetRotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentsDataController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, id);
}
// Autogenerated method: VROSC.InstrumentsDataController.GetScale
::UnityEngine::Vector3 VROSC::InstrumentsDataController::GetScale(::VROSC::WidgetSettings::Identifier id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentsDataController::GetScale");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentsDataController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, id);
}
// Autogenerated method: VROSC.InstrumentsDataController.SetOpen
void VROSC::InstrumentsDataController::SetOpen(::VROSC::WidgetSettings::Identifier id, bool isOpen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentsDataController::SetOpen");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentsDataController*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, isOpen);
}
// Autogenerated method: VROSC.InstrumentsDataController.SetPosition
void VROSC::InstrumentsDataController::SetPosition(::VROSC::WidgetSettings::Identifier id, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentsDataController::SetPosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentsDataController*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, position);
}
// Autogenerated method: VROSC.InstrumentsDataController.SetRotation
void VROSC::InstrumentsDataController::SetRotation(::VROSC::WidgetSettings::Identifier id, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentsDataController::SetRotation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentsDataController*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, rotation);
}
// Autogenerated method: VROSC.InstrumentsDataController.SetScale
void VROSC::InstrumentsDataController::SetScale(::VROSC::WidgetSettings::Identifier id, ::UnityEngine::Vector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentsDataController::SetScale");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentsDataController*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, scale);
}
// Autogenerated method: VROSC.InstrumentsDataController.SetQuantize
void VROSC::InstrumentsDataController::SetQuantize(::VROSC::WidgetSettings::Identifier id, bool quantize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentsDataController::SetQuantize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentsDataController*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, quantize);
}
// Autogenerated method: VROSC.InstrumentsDataController.SetQuantizeTolerance
void VROSC::InstrumentsDataController::SetQuantizeTolerance(::VROSC::WidgetSettings::Identifier id, float tolerance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentsDataController::SetQuantizeTolerance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentsDataController*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, tolerance);
}
// Autogenerated method: VROSC.InstrumentsDataController.SetQuantizeBeatDivision
void VROSC::InstrumentsDataController::SetQuantizeBeatDivision(::VROSC::WidgetSettings::Identifier id, int division) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentsDataController::SetQuantizeBeatDivision");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentsDataController*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, division);
}
// Autogenerated method: VROSC.InstrumentsDataController.GetQuantize
bool VROSC::InstrumentsDataController::GetQuantize(::VROSC::WidgetSettings::Identifier id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentsDataController::GetQuantize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentsDataController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id);
}
// Autogenerated method: VROSC.InstrumentsDataController.GetQuantizeTolerance
float VROSC::InstrumentsDataController::GetQuantizeTolerance(::VROSC::WidgetSettings::Identifier id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentsDataController::GetQuantizeTolerance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentsDataController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, id);
}
// Autogenerated method: VROSC.InstrumentsDataController.GetQuantizeBeatDivision
int VROSC::InstrumentsDataController::GetQuantizeBeatDivision(::VROSC::WidgetSettings::Identifier id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentsDataController::GetQuantizeBeatDivision");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentsDataController*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, id);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VROSC.InstrumentsDataController/VROSC.PatchSettings
#include "VROSC/InstrumentsDataController_PatchSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VROSC.WidgetSettings/VROSC.Identifier InstrumentId
[[deprecated("Use field access instead!")]] ::VROSC::WidgetSettings::Identifier& VROSC::InstrumentsDataController::PatchSettings::dyn_InstrumentId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentsDataController::PatchSettings::dyn_InstrumentId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InstrumentId"))->offset;
  return *reinterpret_cast<::VROSC::WidgetSettings::Identifier*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object Patch
[[deprecated("Use field access instead!")]] ::Il2CppObject*& VROSC::InstrumentsDataController::PatchSettings::dyn_Patch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::InstrumentsDataController::PatchSettings::dyn_Patch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Patch"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.ModularDrumsDataController
#include "VROSC/ModularDrumsDataController.hpp"
// Including type: VROSC.ModularDrumsDataController/VROSC.<>c__DisplayClass33_0
#include "VROSC/ModularDrumsDataController_--c__DisplayClass33_0.hpp"
// Including type: VROSC.TransformDataController
#include "VROSC/TransformDataController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VROSC.ModularDrumsDataModel
#include "VROSC/ModularDrumsDataModel.hpp"
// Including type: VROSC.EmpadDataModel
#include "VROSC/EmpadDataModel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: VROSC.WidgetSettings
#include "VROSC/WidgetSettings.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Action`1<VROSC.ModularDrumsDataController> OnDataLoaded
::System::Action_1<::VROSC::ModularDrumsDataController*>* VROSC::ModularDrumsDataController::_get_OnDataLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::_get_OnDataLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::VROSC::ModularDrumsDataController*>*>("VROSC", "ModularDrumsDataController", "OnDataLoaded"));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<VROSC.ModularDrumsDataController> OnDataLoaded
void VROSC::ModularDrumsDataController::_set_OnDataLoaded(::System::Action_1<::VROSC::ModularDrumsDataController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::_set_OnDataLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("VROSC", "ModularDrumsDataController", "OnDataLoaded", value));
}
// Autogenerated instance field getter
// Get instance field: private VROSC.TransformDataController _transformData
[[deprecated("Use field access instead!")]] ::VROSC::TransformDataController*& VROSC::ModularDrumsDataController::dyn__transformData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::dyn__transformData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformData"))->offset;
  return *reinterpret_cast<::VROSC::TransformDataController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _nextInstanceId
[[deprecated("Use field access instead!")]] int& VROSC::ModularDrumsDataController::dyn__nextInstanceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::dyn__nextInstanceId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextInstanceId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.ModularDrumsDataController.get_DataModel
::VROSC::ModularDrumsDataModel* VROSC::ModularDrumsDataController::get_DataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::get_DataModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::ModularDrumsDataModel*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ModularDrumsDataController.get_ReverbAmount
float VROSC::ModularDrumsDataController::get_ReverbAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::get_ReverbAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReverbAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ModularDrumsDataController.set_ReverbAmount
void VROSC::ModularDrumsDataController::set_ReverbAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::set_ReverbAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReverbAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.ModularDrumsDataController.get_ReverbLength
float VROSC::ModularDrumsDataController::get_ReverbLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::get_ReverbLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReverbLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ModularDrumsDataController.set_ReverbLength
void VROSC::ModularDrumsDataController::set_ReverbLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::set_ReverbLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReverbLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.ModularDrumsDataController.get_DryVolume
float VROSC::ModularDrumsDataController::get_DryVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::get_DryVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DryVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ModularDrumsDataController.set_DryVolume
void VROSC::ModularDrumsDataController::set_DryVolume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::set_DryVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DryVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.ModularDrumsDataController.get_Compression
float VROSC::ModularDrumsDataController::get_Compression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::get_Compression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Compression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ModularDrumsDataController.set_Compression
void VROSC::ModularDrumsDataController::set_Compression(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::set_Compression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Compression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.ModularDrumsDataController.UpgradeSaveVersion
void VROSC::ModularDrumsDataController::UpgradeSaveVersion(int savedVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::UpgradeSaveVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpgradeSaveVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(savedVersion)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, savedVersion);
}
// Autogenerated method: VROSC.ModularDrumsDataController.GetEmpadData
::VROSC::EmpadDataModel* VROSC::ModularDrumsDataController::GetEmpadData(int instanceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::GetEmpadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEmpadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::EmpadDataModel*, false>(this, ___internal__method, instanceId);
}
// Autogenerated method: VROSC.ModularDrumsDataController.GetEmpadData
::VROSC::EmpadDataModel* VROSC::ModularDrumsDataController::GetEmpadData(int instanceId, ::StringW functionName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::GetEmpadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEmpadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId), ::il2cpp_utils::ExtractType(functionName)})));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::EmpadDataModel*, false>(this, ___internal__method, instanceId, functionName);
}
// Autogenerated method: VROSC.ModularDrumsDataController.CreateEmpad
int VROSC::ModularDrumsDataController::CreateEmpad(int groupId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::CreateEmpad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEmpad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, groupId);
}
// Autogenerated method: VROSC.ModularDrumsDataController.CreateEmpad
int VROSC::ModularDrumsDataController::CreateEmpad(::VROSC::EmpadDataModel* otherEmpad) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::CreateEmpad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEmpad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherEmpad)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, otherEmpad);
}
// Autogenerated method: VROSC.ModularDrumsDataController.RemoveEmpad
void VROSC::ModularDrumsDataController::RemoveEmpad(int empadId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::RemoveEmpad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveEmpad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(empadId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, empadId);
}
// Autogenerated method: VROSC.ModularDrumsDataController.GetGroupEmpads
::System::Collections::Generic::List_1<int>* VROSC::ModularDrumsDataController::GetGroupEmpads(int groupId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::GetGroupEmpads");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGroupEmpads", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<int>*, false>(this, ___internal__method, groupId);
}
// Autogenerated method: VROSC.ModularDrumsDataController.GetFixedEmpadId
int VROSC::ModularDrumsDataController::GetFixedEmpadId(int groupId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::GetFixedEmpadId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFixedEmpadId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, groupId);
}
// Autogenerated method: VROSC.ModularDrumsDataController.GetEmpadGroupId
int VROSC::ModularDrumsDataController::GetEmpadGroupId(int instanceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::GetEmpadGroupId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEmpadGroupId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, instanceId);
}
// Autogenerated method: VROSC.ModularDrumsDataController.GetEmpadSampleId
int VROSC::ModularDrumsDataController::GetEmpadSampleId(int instanceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::GetEmpadSampleId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEmpadSampleId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, instanceId);
}
// Autogenerated method: VROSC.ModularDrumsDataController.GetEmpadSelectedSampleIndex
int VROSC::ModularDrumsDataController::GetEmpadSelectedSampleIndex(int instanceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::GetEmpadSelectedSampleIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEmpadSelectedSampleIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, instanceId);
}
// Autogenerated method: VROSC.ModularDrumsDataController.SetEmpadSample
void VROSC::ModularDrumsDataController::SetEmpadSample(int instanceId, int sampleIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::SetEmpadSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEmpadSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId), ::il2cpp_utils::ExtractType(sampleIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instanceId, sampleIndex);
}
// Autogenerated method: VROSC.ModularDrumsDataController.SetEmpadMidiNote
void VROSC::ModularDrumsDataController::SetEmpadMidiNote(int instanceId, int midiNote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::SetEmpadMidiNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEmpadMidiNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId), ::il2cpp_utils::ExtractType(midiNote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instanceId, midiNote);
}
// Autogenerated method: VROSC.ModularDrumsDataController.GetEmpadDisplayName
::StringW VROSC::ModularDrumsDataController::GetEmpadDisplayName(int instanceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::GetEmpadDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEmpadDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, instanceId);
}
// Autogenerated method: VROSC.ModularDrumsDataController.GetEmpadMidiNote
int VROSC::ModularDrumsDataController::GetEmpadMidiNote(int instanceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::GetEmpadMidiNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEmpadMidiNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, instanceId);
}
// Autogenerated method: VROSC.ModularDrumsDataController.IsEmpadPressureSensitive
bool VROSC::ModularDrumsDataController::IsEmpadPressureSensitive(int instanceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::IsEmpadPressureSensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmpadPressureSensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, instanceId);
}
// Autogenerated method: VROSC.ModularDrumsDataController.GetEmpadPitch
int VROSC::ModularDrumsDataController::GetEmpadPitch(int instanceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::GetEmpadPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEmpadPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, instanceId);
}
// Autogenerated method: VROSC.ModularDrumsDataController.GetEmpadSize
float VROSC::ModularDrumsDataController::GetEmpadSize(int instanceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::GetEmpadSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEmpadSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, instanceId);
}
// Autogenerated method: VROSC.ModularDrumsDataController.GetEmpadPosition
::UnityEngine::Vector3 VROSC::ModularDrumsDataController::GetEmpadPosition(int instanceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::GetEmpadPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEmpadPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, instanceId);
}
// Autogenerated method: VROSC.ModularDrumsDataController.GetEmpadRotation
::UnityEngine::Quaternion VROSC::ModularDrumsDataController::GetEmpadRotation(int instanceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::GetEmpadRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEmpadRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, instanceId);
}
// Autogenerated method: VROSC.ModularDrumsDataController.GetEmpadPinned
bool VROSC::ModularDrumsDataController::GetEmpadPinned(int instanceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::GetEmpadPinned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEmpadPinned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, instanceId);
}
// Autogenerated method: VROSC.ModularDrumsDataController.SetIsPressureSensitive
void VROSC::ModularDrumsDataController::SetIsPressureSensitive(int instanceId, bool isPressureSensitive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::SetIsPressureSensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsPressureSensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId), ::il2cpp_utils::ExtractType(isPressureSensitive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instanceId, isPressureSensitive);
}
// Autogenerated method: VROSC.ModularDrumsDataController.SetPitch
void VROSC::ModularDrumsDataController::SetPitch(int instanceId, int pitch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::SetPitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId), ::il2cpp_utils::ExtractType(pitch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instanceId, pitch);
}
// Autogenerated method: VROSC.ModularDrumsDataController.SetEmpadSize
void VROSC::ModularDrumsDataController::SetEmpadSize(int instanceId, float size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::SetEmpadSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEmpadSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instanceId, size);
}
// Autogenerated method: VROSC.ModularDrumsDataController.SetEmpadPosition
void VROSC::ModularDrumsDataController::SetEmpadPosition(int instanceId, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::SetEmpadPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEmpadPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instanceId, position);
}
// Autogenerated method: VROSC.ModularDrumsDataController.SetEmpadRotation
void VROSC::ModularDrumsDataController::SetEmpadRotation(int instanceId, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::SetEmpadRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEmpadRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instanceId, rotation);
}
// Autogenerated method: VROSC.ModularDrumsDataController.SetEmpadPinned
void VROSC::ModularDrumsDataController::SetEmpadPinned(int instanceId, bool pinned) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::SetEmpadPinned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEmpadPinned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceId), ::il2cpp_utils::ExtractType(pinned)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instanceId, pinned);
}
// Autogenerated method: VROSC.ModularDrumsDataController.get_TransformData
::VROSC::TransformDataController* VROSC::ModularDrumsDataController::get_TransformData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::get_TransformData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::VROSC::TransformDataController*, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ModularDrumsDataController.get_Quantize
bool VROSC::ModularDrumsDataController::get_Quantize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::get_Quantize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), 20));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ModularDrumsDataController.set_Quantize
void VROSC::ModularDrumsDataController::set_Quantize(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::set_Quantize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.ModularDrumsDataController.get_QuantizeTolerance
float VROSC::ModularDrumsDataController::get_QuantizeTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::get_QuantizeTolerance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), 22));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ModularDrumsDataController.set_QuantizeTolerance
void VROSC::ModularDrumsDataController::set_QuantizeTolerance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::set_QuantizeTolerance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.ModularDrumsDataController.get_QuantizeBeatDivision
int VROSC::ModularDrumsDataController::get_QuantizeBeatDivision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::get_QuantizeBeatDivision");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), 24));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ModularDrumsDataController.set_QuantizeBeatDivision
void VROSC::ModularDrumsDataController::set_QuantizeBeatDivision(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::set_QuantizeBeatDivision");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.ModularDrumsDataController.get_HasBeenOpened
bool VROSC::ModularDrumsDataController::get_HasBeenOpened() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::get_HasBeenOpened");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ModularDrumsDataController.set_HasBeenOpened
void VROSC::ModularDrumsDataController::set_HasBeenOpened(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::set_HasBeenOpened");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.ModularDrumsDataController.get_FrameIsActive
bool VROSC::ModularDrumsDataController::get_FrameIsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::get_FrameIsActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), 26));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VROSC.ModularDrumsDataController.set_FrameIsActive
void VROSC::ModularDrumsDataController::set_FrameIsActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::set_FrameIsActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VROSC.ModularDrumsDataController.ApplyDefaults
void VROSC::ModularDrumsDataController::ApplyDefaults(::VROSC::WidgetSettings* widgetDefaultSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::ApplyDefaults");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::InstrumentDataController*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, widgetDefaultSettings);
}
// Autogenerated method: VROSC.ModularDrumsDataController.LoadData
void VROSC::ModularDrumsDataController::LoadData(::StringW sessionId, ::System::Action* onSuccess, ::System::Action_1<::VROSC::Error>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::LoadData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::VROSC::BaseDataController*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionId, onSuccess, onFailure);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.ModularDrumsDataController/VROSC.<>c__DisplayClass33_0
#include "VROSC/ModularDrumsDataController_--c__DisplayClass33_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VROSC.ModularDrumsDataController <>4__this
[[deprecated("Use field access instead!")]] ::VROSC::ModularDrumsDataController*& VROSC::ModularDrumsDataController::$$c__DisplayClass33_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::$$c__DisplayClass33_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::VROSC::ModularDrumsDataController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action onSuccess
[[deprecated("Use field access instead!")]] ::System::Action*& VROSC::ModularDrumsDataController::$$c__DisplayClass33_0::dyn_onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::$$c__DisplayClass33_0::dyn_onSuccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onSuccess"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.ModularDrumsDataController/VROSC.<>c__DisplayClass33_0.<LoadData>b__0
void VROSC::ModularDrumsDataController::$$c__DisplayClass33_0::$LoadData$b__0(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::ModularDrumsDataController::$$c__DisplayClass33_0::<LoadData>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LoadData>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VROSC.EmpadDataModel
#include "VROSC/EmpadDataModel.hpp"
// Including type: VROSC.TransformDataModel
#include "VROSC/TransformDataModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Id
[[deprecated("Use field access instead!")]] int& VROSC::EmpadDataModel::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EmpadDataModel::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 GroupId
[[deprecated("Use field access instead!")]] int& VROSC::EmpadDataModel::dyn_GroupId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EmpadDataModel::dyn_GroupId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GroupId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SampleId
[[deprecated("Use field access instead!")]] int& VROSC::EmpadDataModel::dyn_SampleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EmpadDataModel::dyn_SampleId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SampleId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SelectedIndex
[[deprecated("Use field access instead!")]] int& VROSC::EmpadDataModel::dyn_SelectedIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EmpadDataModel::dyn_SelectedIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SelectedIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MidiNote
[[deprecated("Use field access instead!")]] int& VROSC::EmpadDataModel::dyn_MidiNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EmpadDataModel::dyn_MidiNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MidiNote"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsPressureSensitive
[[deprecated("Use field access instead!")]] bool& VROSC::EmpadDataModel::dyn_IsPressureSensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EmpadDataModel::dyn_IsPressureSensitive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsPressureSensitive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsSpawner
[[deprecated("Use field access instead!")]] bool& VROSC::EmpadDataModel::dyn_IsSpawner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EmpadDataModel::dyn_IsSpawner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsSpawner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Pitch
[[deprecated("Use field access instead!")]] int& VROSC::EmpadDataModel::dyn_Pitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EmpadDataModel::dyn_Pitch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Pitch"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Size
[[deprecated("Use field access instead!")]] float& VROSC::EmpadDataModel::dyn_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EmpadDataModel::dyn_Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Size"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] Position
[[deprecated("Use field access instead!")]] ::ArrayW<float>& VROSC::EmpadDataModel::dyn_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EmpadDataModel::dyn_Position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Position"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single[] Rotation
[[deprecated("Use field access instead!")]] ::ArrayW<float>& VROSC::EmpadDataModel::dyn_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EmpadDataModel::dyn_Rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Rotation"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VROSC.TransformDataModel TransformData
[[deprecated("Use field access instead!")]] ::VROSC::TransformDataModel*& VROSC::EmpadDataModel::dyn_TransformData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EmpadDataModel::dyn_TransformData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TransformData"))->offset;
  return *reinterpret_cast<::VROSC::TransformDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VROSC.EmpadDataModel.Upgrade
void VROSC::EmpadDataModel::Upgrade(int savedVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::VROSC::EmpadDataModel::Upgrade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Upgrade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(savedVersion)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, savedVersion);
}
