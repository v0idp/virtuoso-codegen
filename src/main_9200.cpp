// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRMeshSubsystemDescriptor
#include "UnityEngine/XR/XRMeshSubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRMeshSubsystem
#include "UnityEngine/XR/XRMeshSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Provider.XRStats
#include "UnityEngine/XR/Provider/XRStats.hpp"
// Including type: UnityEngine.IntegratedSubsystem
#include "UnityEngine/IntegratedSubsystem.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Provider.XRStats.TryGetStat
bool UnityEngine::XR::Provider::XRStats::TryGetStat(::UnityEngine::IntegratedSubsystem* xrSubsystem, ::StringW tag, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Provider::XRStats::TryGetStat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Provider", "XRStats", "TryGetStat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xrSubsystem), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xrSubsystem, tag, byref(value));
}
// Autogenerated method: UnityEngine.XR.Provider.XRStats.TryGetStat_Internal
bool UnityEngine::XR::Provider::XRStats::TryGetStat_Internal(::System::IntPtr ptr, ::StringW tag, ByRef<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Provider::XRStats::TryGetStat_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Provider", "XRStats", "TryGetStat_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, tag, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.AppBuiltIns
#include "Oculus/Voice/AppBuiltIns.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String builtInPrefix
::StringW Oculus::Voice::AppBuiltIns::_get_builtInPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::_get_builtInPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Voice", "AppBuiltIns", "builtInPrefix"));
}
// Autogenerated static field setter
// Set static field: static public System.String builtInPrefix
void Oculus::Voice::AppBuiltIns::_set_builtInPrefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::_set_builtInPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice", "AppBuiltIns", "builtInPrefix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String modelName
::StringW Oculus::Voice::AppBuiltIns::_get_modelName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::_get_modelName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Oculus.Voice", "AppBuiltIns", "modelName"));
}
// Autogenerated static field setter
// Set static field: static private System.String modelName
void Oculus::Voice::AppBuiltIns::_set_modelName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::_set_modelName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice", "AppBuiltIns", "modelName", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.Dictionary`2<System.String,System.String>> apps
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* Oculus::Voice::AppBuiltIns::_get_apps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::_get_apps");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>*>("Oculus.Voice", "AppBuiltIns", "apps")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Generic.Dictionary`2<System.String,System.Collections.Generic.Dictionary`2<System.String,System.String>> apps
void Oculus::Voice::AppBuiltIns::_set_apps(::System::Collections::Generic::Dictionary_2<::StringW, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::_set_apps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Oculus.Voice", "AppBuiltIns", "apps", value));
}
// Autogenerated method: Oculus.Voice.AppBuiltIns.get_appNames
::ArrayW<::StringW> Oculus::Voice::AppBuiltIns::get_appNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::get_appNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Voice", "AppBuiltIns", "get_appNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppBuiltIns..cctor
void Oculus::Voice::AppBuiltIns::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppBuiltIns::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Oculus.Voice", "AppBuiltIns", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.AppVoiceExperience
#include "Oculus/Voice/AppVoiceExperience.hpp"
// Including type: Facebook.WitAi.Configuration.WitRuntimeConfiguration
#include "Facebook/WitAi/Configuration/WitRuntimeConfiguration.hpp"
// Including type: Oculus.Voice.Interfaces.IPlatformVoiceService
#include "Oculus/Voice/Interfaces/IPlatformVoiceService.hpp"
// Including type: Facebook.WitAi.IVoiceService
#include "Facebook/WitAi/IVoiceService.hpp"
// Including type: Facebook.WitAi.Interfaces.ITranscriptionProvider
#include "Facebook/WitAi/Interfaces/ITranscriptionProvider.hpp"
// Including type: Facebook.WitAi.Configuration.WitRequestOptions
#include "Facebook/WitAi/Configuration/WitRequestOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Facebook.WitAi.Configuration.WitRuntimeConfiguration witRuntimeConfiguration
[[deprecated("Use field access instead!")]] ::Facebook::WitAi::Configuration::WitRuntimeConfiguration*& Oculus::Voice::AppVoiceExperience::dyn_witRuntimeConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::dyn_witRuntimeConfiguration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "witRuntimeConfiguration"))->offset;
  return *reinterpret_cast<::Facebook::WitAi::Configuration::WitRuntimeConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Voice.Interfaces.IPlatformVoiceService platformService
[[deprecated("Use field access instead!")]] ::Oculus::Voice::Interfaces::IPlatformVoiceService*& Oculus::Voice::AppVoiceExperience::dyn_platformService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::dyn_platformService");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platformService"))->offset;
  return *reinterpret_cast<::Oculus::Voice::Interfaces::IPlatformVoiceService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Facebook.WitAi.IVoiceService voiceServiceImpl
[[deprecated("Use field access instead!")]] ::Facebook::WitAi::IVoiceService*& Oculus::Voice::AppVoiceExperience::dyn_voiceServiceImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::dyn_voiceServiceImpl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceServiceImpl"))->offset;
  return *reinterpret_cast<::Facebook::WitAi::IVoiceService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_RuntimeConfiguration
::Facebook::WitAi::Configuration::WitRuntimeConfiguration* Oculus::Voice::AppVoiceExperience::get_RuntimeConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_RuntimeConfiguration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::AppVoiceExperience*), 31));
  return ::il2cpp_utils::RunMethodRethrow<::Facebook::WitAi::Configuration::WitRuntimeConfiguration*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.set_RuntimeConfiguration
void Oculus::Voice::AppVoiceExperience::set_RuntimeConfiguration(::Facebook::WitAi::Configuration::WitRuntimeConfiguration* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::set_RuntimeConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RuntimeConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_HasPlatformIntegrations
bool Oculus::Voice::AppVoiceExperience::get_HasPlatformIntegrations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_HasPlatformIntegrations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasPlatformIntegrations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.Start
void Oculus::Voice::AppVoiceExperience::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.InitVoiceSDK
void Oculus::Voice::AppVoiceExperience::InitVoiceSDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::InitVoiceSDK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitVoiceSDK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.RevertToWitUnity
void Oculus::Voice::AppVoiceExperience::RevertToWitUnity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::RevertToWitUnity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RevertToWitUnity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.OnEnable
void Oculus::Voice::AppVoiceExperience::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_Active
bool Oculus::Voice::AppVoiceExperience::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 18));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_IsRequestActive
bool Oculus::Voice::AppVoiceExperience::get_IsRequestActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_IsRequestActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 19));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_TranscriptionProvider
::Facebook::WitAi::Interfaces::ITranscriptionProvider* Oculus::Voice::AppVoiceExperience::get_TranscriptionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::Facebook::WitAi::Interfaces::ITranscriptionProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.set_TranscriptionProvider
void Oculus::Voice::AppVoiceExperience::set_TranscriptionProvider(::Facebook::WitAi::Interfaces::ITranscriptionProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::set_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_MicActive
bool Oculus::Voice::AppVoiceExperience::get_MicActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_MicActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.get_ShouldSendMicData
bool Oculus::Voice::AppVoiceExperience::get_ShouldSendMicData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::get_ShouldSendMicData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.Activate
void Oculus::Voice::AppVoiceExperience::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.Activate
void Oculus::Voice::AppVoiceExperience::Activate(::Facebook::WitAi::Configuration::WitRequestOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, options);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.ActivateImmediately
void Oculus::Voice::AppVoiceExperience::ActivateImmediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::ActivateImmediately");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.ActivateImmediately
void Oculus::Voice::AppVoiceExperience::ActivateImmediately(::Facebook::WitAi::Configuration::WitRequestOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::ActivateImmediately");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, options);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.Deactivate
void Oculus::Voice::AppVoiceExperience::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::Deactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.Activate
void Oculus::Voice::AppVoiceExperience::Activate(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Oculus.Voice.AppVoiceExperience.Activate
void Oculus::Voice::AppVoiceExperience::Activate(::StringW text, ::Facebook::WitAi::Configuration::WitRequestOptions* requestOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::AppVoiceExperience::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Facebook::WitAi::VoiceService*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, requestOptions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Interfaces.IPlatformVoiceService
#include "Oculus/Voice/Interfaces/IPlatformVoiceService.hpp"
// Including type: Facebook.WitAi.Configuration.WitRuntimeConfiguration
#include "Facebook/WitAi/Configuration/WitRuntimeConfiguration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Voice.Interfaces.IPlatformVoiceService.get_PlatformSupportsWit
bool Oculus::Voice::Interfaces::IPlatformVoiceService::get_PlatformSupportsWit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Interfaces::IPlatformVoiceService::get_PlatformSupportsWit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Interfaces::IPlatformVoiceService*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Interfaces.IPlatformVoiceService.SetRuntimeConfiguration
void Oculus::Voice::Interfaces::IPlatformVoiceService::SetRuntimeConfiguration(::Facebook::WitAi::Configuration::WitRuntimeConfiguration* configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Interfaces::IPlatformVoiceService::SetRuntimeConfiguration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Interfaces::IPlatformVoiceService*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, configuration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKBinding
#include "Oculus/Voice/Bindings/Android/VoiceSDKBinding.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
// Including type: Facebook.WitAi.Configuration.WitRequestOptions
#include "Facebook/WitAi/Configuration/WitRequestOptions.hpp"
// Including type: Facebook.WitAi.Configuration.WitRuntimeConfiguration
#include "Facebook/WitAi/Configuration/WitRuntimeConfiguration.hpp"
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding
#include "Oculus/Voice/Bindings/Android/VoiceSDKListenerBinding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.get_Active
bool Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_Active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.get_IsRequestActive
bool Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_IsRequestActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_IsRequestActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRequestActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.get_MicActive
bool Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_MicActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_MicActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MicActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.get_PlatformSupportsWit
bool Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_PlatformSupportsWit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::get_PlatformSupportsWit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlatformSupportsWit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.Activate
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.Activate
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate(::StringW text, ::Facebook::WitAi::Configuration::WitRequestOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, options);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.Activate
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.Activate
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate(::Facebook::WitAi::Configuration::WitRequestOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, options);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.ActivateImmediately
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::ActivateImmediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::ActivateImmediately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateImmediately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.ActivateImmediately
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::ActivateImmediately(::Facebook::WitAi::Configuration::WitRequestOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::ActivateImmediately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateImmediately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, options);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.Deactivate
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::Deactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.SetRuntimeConfiguration
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::SetRuntimeConfiguration(::Facebook::WitAi::Configuration::WitRuntimeConfiguration* configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::SetRuntimeConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRuntimeConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, configuration);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKBinding.SetListener
void Oculus::Voice::Bindings::Android::VoiceSDKBinding::SetListener(::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKBinding::SetListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKConfigBinding
#include "Oculus/Voice/Bindings/Android/VoiceSDKConfigBinding.hpp"
// Including type: Facebook.WitAi.Configuration.WitRuntimeConfiguration
#include "Facebook/WitAi/Configuration/WitRuntimeConfiguration.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Facebook.WitAi.Configuration.WitRuntimeConfiguration configuration
[[deprecated("Use field access instead!")]] ::Facebook::WitAi::Configuration::WitRuntimeConfiguration*& Oculus::Voice::Bindings::Android::VoiceSDKConfigBinding::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKConfigBinding::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::Facebook::WitAi::Configuration::WitRuntimeConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKConfigBinding.ToJavaObject
::UnityEngine::AndroidJavaObject* Oculus::Voice::Bindings::Android::VoiceSDKConfigBinding::ToJavaObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKConfigBinding::ToJavaObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJavaObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AndroidJavaObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKImpl
#include "Oculus/Voice/Bindings/Android/VoiceSDKImpl.hpp"
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKBinding
#include "Oculus/Voice/Bindings/Android/VoiceSDKBinding.hpp"
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding
#include "Oculus/Voice/Bindings/Android/VoiceSDKListenerBinding.hpp"
// Including type: Facebook.WitAi.Interfaces.ITranscriptionProvider
#include "Facebook/WitAi/Interfaces/ITranscriptionProvider.hpp"
// Including type: Facebook.WitAi.Events.VoiceEvents
#include "Facebook/WitAi/Events/VoiceEvents.hpp"
// Including type: Facebook.WitAi.Configuration.WitRuntimeConfiguration
#include "Facebook/WitAi/Configuration/WitRuntimeConfiguration.hpp"
// Including type: Facebook.WitAi.Configuration.WitRequestOptions
#include "Facebook/WitAi/Configuration/WitRequestOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding eventBinding
[[deprecated("Use field access instead!")]] ::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding*& Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn_eventBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn_eventBinding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventBinding"))->offset;
  return *reinterpret_cast<::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Facebook.WitAi.Interfaces.ITranscriptionProvider <TranscriptionProvider>k__BackingField
[[deprecated("Use field access instead!")]] ::Facebook::WitAi::Interfaces::ITranscriptionProvider*& Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn_$TranscriptionProvider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::dyn_$TranscriptionProvider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TranscriptionProvider>k__BackingField"))->offset;
  return *reinterpret_cast<::Facebook::WitAi::Interfaces::ITranscriptionProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_PlatformSupportsWit
bool Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_PlatformSupportsWit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_PlatformSupportsWit");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_Active
bool Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_Active");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_IsRequestActive
bool Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_IsRequestActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_IsRequestActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_MicActive
bool Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_MicActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_MicActive");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_VoiceEvents
::Facebook::WitAi::Events::VoiceEvents* Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_VoiceEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_VoiceEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Facebook::WitAi::Events::VoiceEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.set_VoiceEvents
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::set_VoiceEvents(::Facebook::WitAi::Events::VoiceEvents* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::set_VoiceEvents");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.get_TranscriptionProvider
::Facebook::WitAi::Interfaces::ITranscriptionProvider* Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_TranscriptionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::get_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Facebook::WitAi::Interfaces::ITranscriptionProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.set_TranscriptionProvider
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::set_TranscriptionProvider(::Facebook::WitAi::Interfaces::ITranscriptionProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::set_TranscriptionProvider");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.SetRuntimeConfiguration
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::SetRuntimeConfiguration(::Facebook::WitAi::Configuration::WitRuntimeConfiguration* configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::SetRuntimeConfiguration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, configuration);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.Activate
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.Activate
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate(::StringW text, ::Facebook::WitAi::Configuration::WitRequestOptions* requestOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, requestOptions);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.Activate
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.Activate
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate(::Facebook::WitAi::Configuration::WitRequestOptions* requestOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::Activate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestOptions);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.ActivateImmediately
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::ActivateImmediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::ActivateImmediately");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.ActivateImmediately
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::ActivateImmediately(::Facebook::WitAi::Configuration::WitRequestOptions* requestOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::ActivateImmediately");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requestOptions);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKImpl.Deactivate
void Oculus::Voice::Bindings::Android::VoiceSDKImpl::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKImpl::Deactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Oculus::Voice::Bindings::Android::VoiceSDKImpl*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding
#include "Oculus/Voice/Bindings/Android/VoiceSDKListenerBinding.hpp"
// Including type: Facebook.WitAi.Events.VoiceEvents
#include "Facebook/WitAi/Events/VoiceEvents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Facebook.WitAi.Events.VoiceEvents voiceEvents
[[deprecated("Use field access instead!")]] ::Facebook::WitAi::Events::VoiceEvents*& Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::dyn_voiceEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::dyn_voiceEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceEvents"))->offset;
  return *reinterpret_cast<::Facebook::WitAi::Events::VoiceEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.get_VoiceEvents
::Facebook::WitAi::Events::VoiceEvents* Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::get_VoiceEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::get_VoiceEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VoiceEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Facebook::WitAi::Events::VoiceEvents*, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onResponse
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onResponse(::StringW response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(response)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onError
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onError(::StringW error, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error, message);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onMicLevelChanged
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMicLevelChanged(float level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMicLevelChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onMicLevelChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onRequestCreated
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onRequestCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onRequestCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onRequestCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onStartListening
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStartListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStartListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onStartListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onStoppedListening
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListening() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListening");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onStoppedListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onStoppedListeningDueToInactivity
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListeningDueToInactivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListeningDueToInactivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onStoppedListeningDueToInactivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onStoppedListeningDueToTimeout
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListeningDueToTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListeningDueToTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onStoppedListeningDueToTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onStoppedListeningDueToDeactivation
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListeningDueToDeactivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onStoppedListeningDueToDeactivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onStoppedListeningDueToDeactivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onMicDataSent
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMicDataSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMicDataSent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onMicDataSent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onMinimumWakeThresholdHit
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMinimumWakeThresholdHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onMinimumWakeThresholdHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onMinimumWakeThresholdHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onPartialTranscription
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onPartialTranscription(::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onPartialTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onPartialTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transcription)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription);
}
// Autogenerated method: Oculus.Voice.Bindings.Android.VoiceSDKListenerBinding.onFullTranscription
void Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onFullTranscription(::StringW transcription) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Oculus::Voice::Bindings::Android::VoiceSDKListenerBinding::onFullTranscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onFullTranscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transcription)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transcription);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OggVorbis.NativeBridge
#include "OggVorbis/NativeBridge.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String PLUGIN_NAME
::StringW OggVorbis::NativeBridge::_get_PLUGIN_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::_get_PLUGIN_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("OggVorbis", "NativeBridge", "PLUGIN_NAME"));
}
// Autogenerated static field setter
// Set static field: static private System.String PLUGIN_NAME
void OggVorbis::NativeBridge::_set_PLUGIN_NAME(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::_set_PLUGIN_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeBridge", "PLUGIN_NAME", value));
}
// Autogenerated method: OggVorbis.NativeBridge.WriteAllPcmDataToFile
int OggVorbis::NativeBridge::WriteAllPcmDataToFile(::StringW filePath, ::ArrayW<float> samples, int samplesLength, int16_t channels, int frequency, float base_quality, int samplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::WriteAllPcmDataToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeBridge", "WriteAllPcmDataToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(samples), ::il2cpp_utils::ExtractType(samplesLength), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(base_quality), ::il2cpp_utils::ExtractType(samplesToRead)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, samples, samplesLength, channels, frequency, base_quality, samplesToRead);
}
// Autogenerated method: OggVorbis.NativeBridge.WriteAllPcmDataToMemory
int OggVorbis::NativeBridge::WriteAllPcmDataToMemory(ByRef<::System::IntPtr> bytesPtr, ByRef<int> bytesLength, ::ArrayW<float> samples, int samplesLength, int16_t channels, int frequency, float base_quality, int samplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::WriteAllPcmDataToMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeBridge", "WriteAllPcmDataToMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(samples), ::il2cpp_utils::ExtractType(samplesLength), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(base_quality), ::il2cpp_utils::ExtractType(samplesToRead)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(bytesPtr), byref(bytesLength), samples, samplesLength, channels, frequency, base_quality, samplesToRead);
}
// Autogenerated method: OggVorbis.NativeBridge.FreeMemoryArrayForWriteAllPcmData
int OggVorbis::NativeBridge::FreeMemoryArrayForWriteAllPcmData(::System::IntPtr bytesNativeArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::FreeMemoryArrayForWriteAllPcmData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeBridge", "FreeMemoryArrayForWriteAllPcmData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytesNativeArray)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytesNativeArray);
}
// Autogenerated method: OggVorbis.NativeBridge.ReadAllPcmDataFromFile
int OggVorbis::NativeBridge::ReadAllPcmDataFromFile(::StringW filePath, ByRef<::System::IntPtr> samples, ByRef<int> samplesLength, ByRef<int16_t> channels, ByRef<int> frequency, int maxSamplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::ReadAllPcmDataFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeBridge", "ReadAllPcmDataFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int16_t&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(maxSamplesToRead)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, byref(samples), byref(samplesLength), byref(channels), byref(frequency), maxSamplesToRead);
}
// Autogenerated method: OggVorbis.NativeBridge.ReadAllPcmDataFromMemory
int OggVorbis::NativeBridge::ReadAllPcmDataFromMemory(::ArrayW<uint8_t> memoryArray, int memoryArrayLength, ByRef<::System::IntPtr> samples, ByRef<int> samplesLength, ByRef<int16_t> channels, ByRef<int> frequency, int maxSamplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::ReadAllPcmDataFromMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeBridge", "ReadAllPcmDataFromMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memoryArray), ::il2cpp_utils::ExtractType(memoryArrayLength), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int16_t&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(maxSamplesToRead)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, memoryArray, memoryArrayLength, byref(samples), byref(samplesLength), byref(channels), byref(frequency), maxSamplesToRead);
}
// Autogenerated method: OggVorbis.NativeBridge.FreeSamplesArrayNativeMemory
int OggVorbis::NativeBridge::FreeSamplesArrayNativeMemory(ByRef<::System::IntPtr> samples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::FreeSamplesArrayNativeMemory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeBridge", "FreeSamplesArrayNativeMemory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samples)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(samples));
}
// Autogenerated method: OggVorbis.NativeBridge.OpenReadFileStream
::System::IntPtr OggVorbis::NativeBridge::OpenReadFileStream(::StringW filePath, ByRef<int16_t> channels, ByRef<int> frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::OpenReadFileStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeBridge", "OpenReadFileStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractIndependentType<int16_t&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, byref(channels), byref(frequency));
}
// Autogenerated method: OggVorbis.NativeBridge.ReadFromFileStream
int OggVorbis::NativeBridge::ReadFromFileStream(::System::IntPtr state, ::ArrayW<float> samplesToFill, int maxSamplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::ReadFromFileStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeBridge", "ReadFromFileStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(samplesToFill), ::il2cpp_utils::ExtractType(maxSamplesToRead)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state, samplesToFill, maxSamplesToRead);
}
// Autogenerated method: OggVorbis.NativeBridge.CloseFileStream
int OggVorbis::NativeBridge::CloseFileStream(::System::IntPtr state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeBridge::CloseFileStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeBridge", "CloseFileStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OggVorbis.NativeErrorCode
#include "OggVorbis/NativeErrorCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_FILEPATH_PARAMETER
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_INVALID_FILEPATH_PARAMETER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_INVALID_FILEPATH_PARAMETER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_INVALID_FILEPATH_PARAMETER"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_FILEPATH_PARAMETER
void OggVorbis::NativeErrorCode::_set_ERROR_INVALID_FILEPATH_PARAMETER(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_INVALID_FILEPATH_PARAMETER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_INVALID_FILEPATH_PARAMETER", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_CANNOT_OPEN_FILE_FOR_WRITE
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_CANNOT_OPEN_FILE_FOR_WRITE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_CANNOT_OPEN_FILE_FOR_WRITE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_CANNOT_OPEN_FILE_FOR_WRITE"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_CANNOT_OPEN_FILE_FOR_WRITE
void OggVorbis::NativeErrorCode::_set_ERROR_CANNOT_OPEN_FILE_FOR_WRITE(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_CANNOT_OPEN_FILE_FOR_WRITE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_CANNOT_OPEN_FILE_FOR_WRITE", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_CANNOT_OPEN_FILE_FOR_READ
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_CANNOT_OPEN_FILE_FOR_READ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_CANNOT_OPEN_FILE_FOR_READ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_CANNOT_OPEN_FILE_FOR_READ"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_CANNOT_OPEN_FILE_FOR_READ
void OggVorbis::NativeErrorCode::_set_ERROR_CANNOT_OPEN_FILE_FOR_READ(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_CANNOT_OPEN_FILE_FOR_READ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_CANNOT_OPEN_FILE_FOR_READ", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_INPUT_FILESTREAM_IS_NOT_OGG_STREAM
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_INPUT_FILESTREAM_IS_NOT_OGG_STREAM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_INPUT_FILESTREAM_IS_NOT_OGG_STREAM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_INPUT_FILESTREAM_IS_NOT_OGG_STREAM"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_INPUT_FILESTREAM_IS_NOT_OGG_STREAM
void OggVorbis::NativeErrorCode::_set_ERROR_INPUT_FILESTREAM_IS_NOT_OGG_STREAM(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_INPUT_FILESTREAM_IS_NOT_OGG_STREAM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_INPUT_FILESTREAM_IS_NOT_OGG_STREAM", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_READING_OGG_STREAM
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_READING_OGG_STREAM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_READING_OGG_STREAM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_READING_OGG_STREAM"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_READING_OGG_STREAM
void OggVorbis::NativeErrorCode::_set_ERROR_READING_OGG_STREAM(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_READING_OGG_STREAM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_READING_OGG_STREAM", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_SAMPLES_PARAMETER
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_INVALID_SAMPLES_PARAMETER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_INVALID_SAMPLES_PARAMETER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_INVALID_SAMPLES_PARAMETER"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_SAMPLES_PARAMETER
void OggVorbis::NativeErrorCode::_set_ERROR_INVALID_SAMPLES_PARAMETER(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_INVALID_SAMPLES_PARAMETER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_INVALID_SAMPLES_PARAMETER", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_SAMPLESLENGTH_PARAMETER
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_INVALID_SAMPLESLENGTH_PARAMETER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_INVALID_SAMPLESLENGTH_PARAMETER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_INVALID_SAMPLESLENGTH_PARAMETER"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_SAMPLESLENGTH_PARAMETER
void OggVorbis::NativeErrorCode::_set_ERROR_INVALID_SAMPLESLENGTH_PARAMETER(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_INVALID_SAMPLESLENGTH_PARAMETER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_INVALID_SAMPLESLENGTH_PARAMETER", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_CHANNELS_PARAMETER
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_INVALID_CHANNELS_PARAMETER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_INVALID_CHANNELS_PARAMETER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_INVALID_CHANNELS_PARAMETER"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_CHANNELS_PARAMETER
void OggVorbis::NativeErrorCode::_set_ERROR_INVALID_CHANNELS_PARAMETER(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_INVALID_CHANNELS_PARAMETER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_INVALID_CHANNELS_PARAMETER", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_FREQUENCY_PARAMETER
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_INVALID_FREQUENCY_PARAMETER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_INVALID_FREQUENCY_PARAMETER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_INVALID_FREQUENCY_PARAMETER"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_FREQUENCY_PARAMETER
void OggVorbis::NativeErrorCode::_set_ERROR_INVALID_FREQUENCY_PARAMETER(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_INVALID_FREQUENCY_PARAMETER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_INVALID_FREQUENCY_PARAMETER", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_BASE_QUALITY_PARAMETER
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_INVALID_BASE_QUALITY_PARAMETER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_INVALID_BASE_QUALITY_PARAMETER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_INVALID_BASE_QUALITY_PARAMETER"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_BASE_QUALITY_PARAMETER
void OggVorbis::NativeErrorCode::_set_ERROR_INVALID_BASE_QUALITY_PARAMETER(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_INVALID_BASE_QUALITY_PARAMETER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_INVALID_BASE_QUALITY_PARAMETER", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_MALLOC_RETURNED_NULL
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_MALLOC_RETURNED_NULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_MALLOC_RETURNED_NULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_MALLOC_RETURNED_NULL"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_MALLOC_RETURNED_NULL
void OggVorbis::NativeErrorCode::_set_ERROR_MALLOC_RETURNED_NULL(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_MALLOC_RETURNED_NULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_MALLOC_RETURNED_NULL", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_BYTES_MEMORY_ARRAY_NULL
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_BYTES_MEMORY_ARRAY_NULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_BYTES_MEMORY_ARRAY_NULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_BYTES_MEMORY_ARRAY_NULL"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_BYTES_MEMORY_ARRAY_NULL
void OggVorbis::NativeErrorCode::_set_ERROR_BYTES_MEMORY_ARRAY_NULL(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_BYTES_MEMORY_ARRAY_NULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_BYTES_MEMORY_ARRAY_NULL", value));
}
// Autogenerated static field getter
// Get static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_WRITE_CALLBACK_PARAMETER
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorCode::_get_ERROR_INVALID_WRITE_CALLBACK_PARAMETER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_get_ERROR_INVALID_WRITE_CALLBACK_PARAMETER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::OggVorbis::NativeErrorCode>("OggVorbis", "NativeErrorCode", "ERROR_INVALID_WRITE_CALLBACK_PARAMETER"));
}
// Autogenerated static field setter
// Set static field: static public OggVorbis.NativeErrorCode ERROR_INVALID_WRITE_CALLBACK_PARAMETER
void OggVorbis::NativeErrorCode::_set_ERROR_INVALID_WRITE_CALLBACK_PARAMETER(::OggVorbis::NativeErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::_set_ERROR_INVALID_WRITE_CALLBACK_PARAMETER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OggVorbis", "NativeErrorCode", "ERROR_INVALID_WRITE_CALLBACK_PARAMETER", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& OggVorbis::NativeErrorCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OggVorbis.NativeErrorException
#include "OggVorbis/NativeErrorException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly OggVorbis.NativeErrorCode <NativeErrorCode>k__BackingField
[[deprecated("Use field access instead!")]] ::OggVorbis::NativeErrorCode& OggVorbis::NativeErrorException::dyn_$NativeErrorCode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorException::dyn_$NativeErrorCode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NativeErrorCode>k__BackingField"))->offset;
  return *reinterpret_cast<::OggVorbis::NativeErrorCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OggVorbis.NativeErrorException.get_NativeErrorCode
::OggVorbis::NativeErrorCode OggVorbis::NativeErrorException::get_NativeErrorCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorException::get_NativeErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NativeErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::OggVorbis::NativeErrorCode, false>(this, ___internal__method);
}
// Autogenerated method: OggVorbis.NativeErrorException.ThrowExceptionIfNecessary
void OggVorbis::NativeErrorException::ThrowExceptionIfNecessary(int returnValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorException::ThrowExceptionIfNecessary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "NativeErrorException", "ThrowExceptionIfNecessary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(returnValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, returnValue);
}
// Autogenerated method: OggVorbis.NativeErrorException.ToString
::StringW OggVorbis::NativeErrorException::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::NativeErrorException::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Exception*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OggVorbis.VorbisPlugin
#include "OggVorbis/VorbisPlugin.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OggVorbis.VorbisPlugin.Save
void OggVorbis::VorbisPlugin::Save(::StringW filePath, ::UnityEngine::AudioClip* audioClip, float quality, int samplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::VorbisPlugin::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "VorbisPlugin", "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(audioClip), ::il2cpp_utils::ExtractType(quality), ::il2cpp_utils::ExtractType(samplesToRead)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, audioClip, quality, samplesToRead);
}
// Autogenerated method: OggVorbis.VorbisPlugin.Save
void OggVorbis::VorbisPlugin::Save(::StringW filePath, ::ArrayW<float> samples, int channels, int frequency, float quality, int samplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::VorbisPlugin::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "VorbisPlugin", "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(samples), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frequency), ::il2cpp_utils::ExtractType(quality), ::il2cpp_utils::ExtractType(samplesToRead)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, samples, channels, frequency, quality, samplesToRead);
}
// Autogenerated method: OggVorbis.VorbisPlugin.GetOggVorbis
::ArrayW<uint8_t> OggVorbis::VorbisPlugin::GetOggVorbis(::UnityEngine::AudioClip* audioClip, float quality, int samplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::VorbisPlugin::GetOggVorbis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "VorbisPlugin", "GetOggVorbis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClip), ::il2cpp_utils::ExtractType(quality), ::il2cpp_utils::ExtractType(samplesToRead)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioClip, quality, samplesToRead);
}
// Autogenerated method: OggVorbis.VorbisPlugin.Load
::UnityEngine::AudioClip* OggVorbis::VorbisPlugin::Load(::StringW filePath, int maxSamplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::VorbisPlugin::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "VorbisPlugin", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(maxSamplesToRead)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, maxSamplesToRead);
}
// Autogenerated method: OggVorbis.VorbisPlugin.ToAudioClip
::UnityEngine::AudioClip* OggVorbis::VorbisPlugin::ToAudioClip(::ArrayW<uint8_t> bytes, ::StringW audioClipName, int maxSamplesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::OggVorbis::VorbisPlugin::ToAudioClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OggVorbis", "VorbisPlugin", "ToAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(audioClipName), ::il2cpp_utils::ExtractType(maxSamplesToRead)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, audioClipName, maxSamplesToRead);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/XrApi
#include "GlobalNamespace/OVRManager_XrApi.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/XrApi Unknown
::GlobalNamespace::OVRManager_XrApi GlobalNamespace::OVRManager_XrApi::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XrApi>("", "OVRManager/XrApi", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XrApi Unknown
void GlobalNamespace::OVRManager_XrApi::_set_Unknown(::GlobalNamespace::OVRManager_XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XrApi", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XrApi CAPI
::GlobalNamespace::OVRManager_XrApi GlobalNamespace::OVRManager_XrApi::_get_CAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_get_CAPI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XrApi>("", "OVRManager/XrApi", "CAPI"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XrApi CAPI
void GlobalNamespace::OVRManager_XrApi::_set_CAPI(::GlobalNamespace::OVRManager_XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_set_CAPI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XrApi", "CAPI", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XrApi VRAPI
::GlobalNamespace::OVRManager_XrApi GlobalNamespace::OVRManager_XrApi::_get_VRAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_get_VRAPI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XrApi>("", "OVRManager/XrApi", "VRAPI"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XrApi VRAPI
void GlobalNamespace::OVRManager_XrApi::_set_VRAPI(::GlobalNamespace::OVRManager_XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_set_VRAPI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XrApi", "VRAPI", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XrApi OpenXR
::GlobalNamespace::OVRManager_XrApi GlobalNamespace::OVRManager_XrApi::_get_OpenXR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_get_OpenXR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XrApi>("", "OVRManager/XrApi", "OpenXR"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XrApi OpenXR
void GlobalNamespace::OVRManager_XrApi::_set_OpenXR(::GlobalNamespace::OVRManager_XrApi value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::_set_OpenXR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XrApi", "OpenXR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_XrApi::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XrApi::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/TrackingOrigin
#include "GlobalNamespace/OVRManager_TrackingOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/TrackingOrigin EyeLevel
::GlobalNamespace::OVRManager_TrackingOrigin GlobalNamespace::OVRManager_TrackingOrigin::_get_EyeLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::_get_EyeLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TrackingOrigin>("", "OVRManager/TrackingOrigin", "EyeLevel"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TrackingOrigin EyeLevel
void GlobalNamespace::OVRManager_TrackingOrigin::_set_EyeLevel(::GlobalNamespace::OVRManager_TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::_set_EyeLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TrackingOrigin", "EyeLevel", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TrackingOrigin FloorLevel
::GlobalNamespace::OVRManager_TrackingOrigin GlobalNamespace::OVRManager_TrackingOrigin::_get_FloorLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::_get_FloorLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TrackingOrigin>("", "OVRManager/TrackingOrigin", "FloorLevel"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TrackingOrigin FloorLevel
void GlobalNamespace::OVRManager_TrackingOrigin::_set_FloorLevel(::GlobalNamespace::OVRManager_TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::_set_FloorLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TrackingOrigin", "FloorLevel", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TrackingOrigin Stage
::GlobalNamespace::OVRManager_TrackingOrigin GlobalNamespace::OVRManager_TrackingOrigin::_get_Stage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::_get_Stage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TrackingOrigin>("", "OVRManager/TrackingOrigin", "Stage"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TrackingOrigin Stage
void GlobalNamespace::OVRManager_TrackingOrigin::_set_Stage(::GlobalNamespace::OVRManager_TrackingOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::_set_Stage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TrackingOrigin", "Stage", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_TrackingOrigin::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TrackingOrigin::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/EyeTextureFormat
#include "GlobalNamespace/OVRManager_EyeTextureFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/EyeTextureFormat Default
::GlobalNamespace::OVRManager_EyeTextureFormat GlobalNamespace::OVRManager_EyeTextureFormat::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_EyeTextureFormat>("", "OVRManager/EyeTextureFormat", "Default"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/EyeTextureFormat Default
void GlobalNamespace::OVRManager_EyeTextureFormat::_set_Default(::GlobalNamespace::OVRManager_EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/EyeTextureFormat", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/EyeTextureFormat R16G16B16A16_FP
::GlobalNamespace::OVRManager_EyeTextureFormat GlobalNamespace::OVRManager_EyeTextureFormat::_get_R16G16B16A16_FP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::_get_R16G16B16A16_FP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_EyeTextureFormat>("", "OVRManager/EyeTextureFormat", "R16G16B16A16_FP"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/EyeTextureFormat R16G16B16A16_FP
void GlobalNamespace::OVRManager_EyeTextureFormat::_set_R16G16B16A16_FP(::GlobalNamespace::OVRManager_EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::_set_R16G16B16A16_FP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/EyeTextureFormat", "R16G16B16A16_FP", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/EyeTextureFormat R11G11B10_FP
::GlobalNamespace::OVRManager_EyeTextureFormat GlobalNamespace::OVRManager_EyeTextureFormat::_get_R11G11B10_FP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::_get_R11G11B10_FP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_EyeTextureFormat>("", "OVRManager/EyeTextureFormat", "R11G11B10_FP"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/EyeTextureFormat R11G11B10_FP
void GlobalNamespace::OVRManager_EyeTextureFormat::_set_R11G11B10_FP(::GlobalNamespace::OVRManager_EyeTextureFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::_set_R11G11B10_FP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/EyeTextureFormat", "R11G11B10_FP", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_EyeTextureFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_EyeTextureFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/FixedFoveatedRenderingLevel
#include "GlobalNamespace/OVRManager_FixedFoveatedRenderingLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel Off
::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel Off
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Off(::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel Low
::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel Low
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Low(::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel Medium
::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel Medium
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Medium(::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel High
::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel High
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_High(::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "High", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/FixedFoveatedRenderingLevel HighTop
::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_HighTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_get_HighTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel>("", "OVRManager/FixedFoveatedRenderingLevel", "HighTop"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/FixedFoveatedRenderingLevel HighTop
void GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_HighTop(::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::_set_HighTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/FixedFoveatedRenderingLevel", "HighTop", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_FixedFoveatedRenderingLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/TiledMultiResLevel
#include "GlobalNamespace/OVRManager_TiledMultiResLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel Off
::GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel Off
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_Off(::GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSLow
::GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSLow"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSLow
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSLow(::GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSLow", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSMedium
::GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSMedium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSMedium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSMedium"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSMedium
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSMedium(::GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSMedium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSMedium", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSHigh
::GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSHigh"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSHigh
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSHigh(::GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSHigh", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/TiledMultiResLevel LMSHighTop
::GlobalNamespace::OVRManager_TiledMultiResLevel GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSHighTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_get_LMSHighTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_TiledMultiResLevel>("", "OVRManager/TiledMultiResLevel", "LMSHighTop"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/TiledMultiResLevel LMSHighTop
void GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSHighTop(::GlobalNamespace::OVRManager_TiledMultiResLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::_set_LMSHighTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/TiledMultiResLevel", "LMSHighTop", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_TiledMultiResLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_TiledMultiResLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/SystemHeadsetType
#include "GlobalNamespace/OVRManager_SystemHeadsetType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType None
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType None
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_None(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Oculus_Quest
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Oculus_Quest"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Oculus_Quest
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Quest(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Oculus_Quest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Oculus_Quest_2
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Quest_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Quest_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Oculus_Quest_2"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Oculus_Quest_2
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Quest_2(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Quest_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Oculus_Quest_2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_10
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_10"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_10
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_10(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_10", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_11
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_11"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_11
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_11(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_11", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_12
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_12"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_12
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_12(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_12", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_13
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_13"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_13
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_13(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_13", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Placeholder_14
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Placeholder_14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Placeholder_14"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Placeholder_14
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_14(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Placeholder_14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Placeholder_14", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_DK1
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_DK1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_DK1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_DK1"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_DK1
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_DK1(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_DK1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_DK1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_DK2
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_DK2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_DK2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_DK2"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_DK2
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_DK2(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_DK2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_DK2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_CV1
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_CV1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_CV1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_CV1"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_CV1
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_CV1(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_CV1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_CV1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_CB
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_CB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_CB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_CB"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_CB
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_CB(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_CB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_CB", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Rift_S
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Rift_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Rift_S"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Rift_S
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_S(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Rift_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Rift_S", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Oculus_Link_Quest
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Link_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Link_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Oculus_Link_Quest"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Oculus_Link_Quest
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Link_Quest(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Link_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Oculus_Link_Quest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType Oculus_Link_Quest_2
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Link_Quest_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_Oculus_Link_Quest_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "Oculus_Link_Quest_2"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType Oculus_Link_Quest_2
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Link_Quest_2(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_Oculus_Link_Quest_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "Oculus_Link_Quest_2", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4103
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4103() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4103");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4103"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4103
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4103(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4103");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4103", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4104
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4104() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4104");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4104"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4104
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4104(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4104");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4104", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4105
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4105() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4105");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4105"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4105
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4105(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4105");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4105", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4106
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4106() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4106");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4106"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4106
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4106(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4106");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4106", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4107
::GlobalNamespace::OVRManager_SystemHeadsetType GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4107() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_get_PC_Placeholder_4107");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_SystemHeadsetType>("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4107"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/SystemHeadsetType PC_Placeholder_4107
void GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4107(::GlobalNamespace::OVRManager_SystemHeadsetType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::_set_PC_Placeholder_4107");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/SystemHeadsetType", "PC_Placeholder_4107", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_SystemHeadsetType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_SystemHeadsetType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/XRDevice
#include "GlobalNamespace/OVRManager_XRDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/XRDevice Unknown
::GlobalNamespace::OVRManager_XRDevice GlobalNamespace::OVRManager_XRDevice::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XRDevice>("", "OVRManager/XRDevice", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XRDevice Unknown
void GlobalNamespace::OVRManager_XRDevice::_set_Unknown(::GlobalNamespace::OVRManager_XRDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XRDevice", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XRDevice Oculus
::GlobalNamespace::OVRManager_XRDevice GlobalNamespace::OVRManager_XRDevice::_get_Oculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::_get_Oculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XRDevice>("", "OVRManager/XRDevice", "Oculus"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XRDevice Oculus
void GlobalNamespace::OVRManager_XRDevice::_set_Oculus(::GlobalNamespace::OVRManager_XRDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::_set_Oculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XRDevice", "Oculus", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/XRDevice OpenVR
::GlobalNamespace::OVRManager_XRDevice GlobalNamespace::OVRManager_XRDevice::_get_OpenVR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::_get_OpenVR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_XRDevice>("", "OVRManager/XRDevice", "OpenVR"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/XRDevice OpenVR
void GlobalNamespace::OVRManager_XRDevice::_set_OpenVR(::GlobalNamespace::OVRManager_XRDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::_set_OpenVR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/XRDevice", "OpenVR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_XRDevice::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_XRDevice::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/ColorSpace
#include "GlobalNamespace/OVRManager_ColorSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Unknown
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Unknown
void GlobalNamespace::OVRManager_ColorSpace::_set_Unknown(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Unmanaged
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Unmanaged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Unmanaged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Unmanaged"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Unmanaged
void GlobalNamespace::OVRManager_ColorSpace::_set_Unmanaged(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Unmanaged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Unmanaged", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Rec_2020
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Rec_2020() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Rec_2020");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Rec_2020"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Rec_2020
void GlobalNamespace::OVRManager_ColorSpace::_set_Rec_2020(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Rec_2020");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Rec_2020", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Rec_709
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Rec_709() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Rec_709");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Rec_709"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Rec_709
void GlobalNamespace::OVRManager_ColorSpace::_set_Rec_709(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Rec_709");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Rec_709", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Rift_CV1
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Rift_CV1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Rift_CV1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Rift_CV1"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Rift_CV1
void GlobalNamespace::OVRManager_ColorSpace::_set_Rift_CV1(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Rift_CV1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Rift_CV1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Rift_S
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Rift_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Rift_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Rift_S"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Rift_S
void GlobalNamespace::OVRManager_ColorSpace::_set_Rift_S(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Rift_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Rift_S", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Quest
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Quest"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Quest
void GlobalNamespace::OVRManager_ColorSpace::_set_Quest(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Quest", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace P3
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_P3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_P3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "P3"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace P3
void GlobalNamespace::OVRManager_ColorSpace::_set_P3(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_P3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "P3", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/ColorSpace Adobe_RGB
::GlobalNamespace::OVRManager_ColorSpace GlobalNamespace::OVRManager_ColorSpace::_get_Adobe_RGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_get_Adobe_RGB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_ColorSpace>("", "OVRManager/ColorSpace", "Adobe_RGB"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/ColorSpace Adobe_RGB
void GlobalNamespace::OVRManager_ColorSpace::_set_Adobe_RGB(::GlobalNamespace::OVRManager_ColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::_set_Adobe_RGB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/ColorSpace", "Adobe_RGB", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_ColorSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_ColorSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/CompositionMethod
#include "GlobalNamespace/OVRManager_CompositionMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/CompositionMethod External
::GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRManager_CompositionMethod::_get_External() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CompositionMethod::_get_External");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_CompositionMethod>("", "OVRManager/CompositionMethod", "External"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CompositionMethod External
void GlobalNamespace::OVRManager_CompositionMethod::_set_External(::GlobalNamespace::OVRManager_CompositionMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CompositionMethod::_set_External");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CompositionMethod", "External", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/CompositionMethod Direct
::GlobalNamespace::OVRManager_CompositionMethod GlobalNamespace::OVRManager_CompositionMethod::_get_Direct() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CompositionMethod::_get_Direct");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_CompositionMethod>("", "OVRManager/CompositionMethod", "Direct"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CompositionMethod Direct
void GlobalNamespace::OVRManager_CompositionMethod::_set_Direct(::GlobalNamespace::OVRManager_CompositionMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CompositionMethod::_set_Direct");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CompositionMethod", "Direct", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_CompositionMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CompositionMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/CameraDevice
#include "GlobalNamespace/OVRManager_CameraDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/CameraDevice WebCamera0
::GlobalNamespace::OVRManager_CameraDevice GlobalNamespace::OVRManager_CameraDevice::_get_WebCamera0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::_get_WebCamera0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_CameraDevice>("", "OVRManager/CameraDevice", "WebCamera0"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CameraDevice WebCamera0
void GlobalNamespace::OVRManager_CameraDevice::_set_WebCamera0(::GlobalNamespace::OVRManager_CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::_set_WebCamera0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CameraDevice", "WebCamera0", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/CameraDevice WebCamera1
::GlobalNamespace::OVRManager_CameraDevice GlobalNamespace::OVRManager_CameraDevice::_get_WebCamera1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::_get_WebCamera1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_CameraDevice>("", "OVRManager/CameraDevice", "WebCamera1"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CameraDevice WebCamera1
void GlobalNamespace::OVRManager_CameraDevice::_set_WebCamera1(::GlobalNamespace::OVRManager_CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::_set_WebCamera1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CameraDevice", "WebCamera1", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/CameraDevice ZEDCamera
::GlobalNamespace::OVRManager_CameraDevice GlobalNamespace::OVRManager_CameraDevice::_get_ZEDCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::_get_ZEDCamera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_CameraDevice>("", "OVRManager/CameraDevice", "ZEDCamera"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/CameraDevice ZEDCamera
void GlobalNamespace::OVRManager_CameraDevice::_set_ZEDCamera(::GlobalNamespace::OVRManager_CameraDevice value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::_set_ZEDCamera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/CameraDevice", "ZEDCamera", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_CameraDevice::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_CameraDevice::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/DepthQuality
#include "GlobalNamespace/OVRManager_DepthQuality.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/DepthQuality Low
::GlobalNamespace::OVRManager_DepthQuality GlobalNamespace::OVRManager_DepthQuality::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_DepthQuality>("", "OVRManager/DepthQuality", "Low"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/DepthQuality Low
void GlobalNamespace::OVRManager_DepthQuality::_set_Low(::GlobalNamespace::OVRManager_DepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/DepthQuality", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/DepthQuality Medium
::GlobalNamespace::OVRManager_DepthQuality GlobalNamespace::OVRManager_DepthQuality::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_DepthQuality>("", "OVRManager/DepthQuality", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/DepthQuality Medium
void GlobalNamespace::OVRManager_DepthQuality::_set_Medium(::GlobalNamespace::OVRManager_DepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/DepthQuality", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/DepthQuality High
::GlobalNamespace::OVRManager_DepthQuality GlobalNamespace::OVRManager_DepthQuality::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_DepthQuality>("", "OVRManager/DepthQuality", "High"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/DepthQuality High
void GlobalNamespace::OVRManager_DepthQuality::_set_High(::GlobalNamespace::OVRManager_DepthQuality value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/DepthQuality", "High", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_DepthQuality::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_DepthQuality::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/VirtualGreenScreenType
#include "GlobalNamespace/OVRManager_VirtualGreenScreenType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/VirtualGreenScreenType Off
::GlobalNamespace::OVRManager_VirtualGreenScreenType GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_VirtualGreenScreenType>("", "OVRManager/VirtualGreenScreenType", "Off"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/VirtualGreenScreenType Off
void GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_Off(::GlobalNamespace::OVRManager_VirtualGreenScreenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/VirtualGreenScreenType", "Off", value));
}
// [ObsoleteAttribute] Offset: 0x697748
// Autogenerated static field getter
// Get static field: static public OVRManager/VirtualGreenScreenType OuterBoundary
::GlobalNamespace::OVRManager_VirtualGreenScreenType GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_OuterBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_OuterBoundary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_VirtualGreenScreenType>("", "OVRManager/VirtualGreenScreenType", "OuterBoundary"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/VirtualGreenScreenType OuterBoundary
void GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_OuterBoundary(::GlobalNamespace::OVRManager_VirtualGreenScreenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_OuterBoundary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/VirtualGreenScreenType", "OuterBoundary", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/VirtualGreenScreenType PlayArea
::GlobalNamespace::OVRManager_VirtualGreenScreenType GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_PlayArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::_get_PlayArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_VirtualGreenScreenType>("", "OVRManager/VirtualGreenScreenType", "PlayArea"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/VirtualGreenScreenType PlayArea
void GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_PlayArea(::GlobalNamespace::OVRManager_VirtualGreenScreenType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::_set_PlayArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/VirtualGreenScreenType", "PlayArea", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_VirtualGreenScreenType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_VirtualGreenScreenType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/MrcActivationMode
#include "GlobalNamespace/OVRManager_MrcActivationMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcActivationMode Automatic
::GlobalNamespace::OVRManager_MrcActivationMode GlobalNamespace::OVRManager_MrcActivationMode::_get_Automatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcActivationMode::_get_Automatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_MrcActivationMode>("", "OVRManager/MrcActivationMode", "Automatic"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcActivationMode Automatic
void GlobalNamespace::OVRManager_MrcActivationMode::_set_Automatic(::GlobalNamespace::OVRManager_MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcActivationMode::_set_Automatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcActivationMode", "Automatic", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcActivationMode Disabled
::GlobalNamespace::OVRManager_MrcActivationMode GlobalNamespace::OVRManager_MrcActivationMode::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcActivationMode::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_MrcActivationMode>("", "OVRManager/MrcActivationMode", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcActivationMode Disabled
void GlobalNamespace::OVRManager_MrcActivationMode::_set_Disabled(::GlobalNamespace::OVRManager_MrcActivationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcActivationMode::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcActivationMode", "Disabled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_MrcActivationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcActivationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/MrcCameraType
#include "GlobalNamespace/OVRManager_MrcCameraType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcCameraType Normal
::GlobalNamespace::OVRManager_MrcCameraType GlobalNamespace::OVRManager_MrcCameraType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_MrcCameraType>("", "OVRManager/MrcCameraType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcCameraType Normal
void GlobalNamespace::OVRManager_MrcCameraType::_set_Normal(::GlobalNamespace::OVRManager_MrcCameraType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcCameraType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcCameraType Foreground
::GlobalNamespace::OVRManager_MrcCameraType GlobalNamespace::OVRManager_MrcCameraType::_get_Foreground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::_get_Foreground");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_MrcCameraType>("", "OVRManager/MrcCameraType", "Foreground"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcCameraType Foreground
void GlobalNamespace::OVRManager_MrcCameraType::_set_Foreground(::GlobalNamespace::OVRManager_MrcCameraType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::_set_Foreground");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcCameraType", "Foreground", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/MrcCameraType Background
::GlobalNamespace::OVRManager_MrcCameraType GlobalNamespace::OVRManager_MrcCameraType::_get_Background() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::_get_Background");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_MrcCameraType>("", "OVRManager/MrcCameraType", "Background"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/MrcCameraType Background
void GlobalNamespace::OVRManager_MrcCameraType::_set_Background(::GlobalNamespace::OVRManager_MrcCameraType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::_set_Background");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/MrcCameraType", "Background", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_MrcCameraType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_MrcCameraType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVRManager/InstantiateMrcCameraDelegate
#include "GlobalNamespace/OVRManager_InstantiateMrcCameraDelegate.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: OVRManager/MrcCameraType
#include "GlobalNamespace/OVRManager_MrcCameraType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVRManager/InstantiateMrcCameraDelegate.Invoke
::UnityEngine::GameObject* GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::Invoke(::UnityEngine::GameObject* mainCameraGameObject, ::GlobalNamespace::OVRManager_MrcCameraType cameraType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, mainCameraGameObject, cameraType);
}
// Autogenerated method: OVRManager/InstantiateMrcCameraDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::BeginInvoke(::UnityEngine::GameObject* mainCameraGameObject, ::GlobalNamespace::OVRManager_MrcCameraType cameraType, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, mainCameraGameObject, cameraType, callback, object);
}
// Autogenerated method: OVRManager/InstantiateMrcCameraDelegate.EndInvoke
::UnityEngine::GameObject* GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OVRManager_InstantiateMrcCameraDelegate*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/PassthroughInitializationState
#include "GlobalNamespace/OVRManager_PassthroughInitializationState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVRManager/PassthroughInitializationState Unspecified
::GlobalNamespace::OVRManager_PassthroughInitializationState GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Unspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Unspecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_PassthroughInitializationState>("", "OVRManager/PassthroughInitializationState", "Unspecified"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/PassthroughInitializationState Unspecified
void GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Unspecified(::GlobalNamespace::OVRManager_PassthroughInitializationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Unspecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/PassthroughInitializationState", "Unspecified", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/PassthroughInitializationState Pending
::GlobalNamespace::OVRManager_PassthroughInitializationState GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Pending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Pending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_PassthroughInitializationState>("", "OVRManager/PassthroughInitializationState", "Pending"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/PassthroughInitializationState Pending
void GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Pending(::GlobalNamespace::OVRManager_PassthroughInitializationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Pending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/PassthroughInitializationState", "Pending", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/PassthroughInitializationState Initialized
::GlobalNamespace::OVRManager_PassthroughInitializationState GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_PassthroughInitializationState>("", "OVRManager/PassthroughInitializationState", "Initialized"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/PassthroughInitializationState Initialized
void GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Initialized(::GlobalNamespace::OVRManager_PassthroughInitializationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/PassthroughInitializationState", "Initialized", value));
}
// Autogenerated static field getter
// Get static field: static public OVRManager/PassthroughInitializationState Failed
::GlobalNamespace::OVRManager_PassthroughInitializationState GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_PassthroughInitializationState>("", "OVRManager/PassthroughInitializationState", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public OVRManager/PassthroughInitializationState Failed
void GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Failed(::GlobalNamespace::OVRManager_PassthroughInitializationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OVRManager/PassthroughInitializationState", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OVRManager_PassthroughInitializationState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_PassthroughInitializationState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVRManager/<>c
#include "GlobalNamespace/OVRManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly OVRManager/<>c <>9
::GlobalNamespace::OVRManager_$$c* GlobalNamespace::OVRManager_$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::OVRManager_$$c*>("", "OVRManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly OVRManager/<>c <>9
void GlobalNamespace::OVRManager_$$c::_set_$$9(::GlobalNamespace::OVRManager_$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Single,System.String> <>9__345_0
::System::Func_2<float, ::StringW>* GlobalNamespace::OVRManager_$$c::_get_$$9__345_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::_get_$$9__345_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<float, ::StringW>*>("", "OVRManager/<>c", "<>9__345_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Single,System.String> <>9__345_0
void GlobalNamespace::OVRManager_$$c::_set_$$9__345_0(::System::Func_2<float, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::_set_$$9__345_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRManager/<>c", "<>9__345_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Camera> <>9__359_0
::System::Comparison_1<::UnityEngine::Camera*>* GlobalNamespace::OVRManager_$$c::_get_$$9__359_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::_get_$$9__359_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::Camera*>*>("", "OVRManager/<>c", "<>9__359_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Camera> <>9__359_0
void GlobalNamespace::OVRManager_$$c::_set_$$9__359_0(::System::Comparison_1<::UnityEngine::Camera*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::_set_$$9__359_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "OVRManager/<>c", "<>9__359_0", value)));
}
// Autogenerated method: OVRManager/<>c..cctor
void GlobalNamespace::OVRManager_$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OVRManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: OVRManager/<>c.<InitOVRManager>b__345_0
::StringW GlobalNamespace::OVRManager_$$c::$InitOVRManager$b__345_0(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::<InitOVRManager>b__345_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitOVRManager>b__345_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, f);
}
// Autogenerated method: OVRManager/<>c.<FindMainCamera>b__359_0
int GlobalNamespace::OVRManager_$$c::$FindMainCamera$b__359_0(::UnityEngine::Camera* c0, ::UnityEngine::Camera* c1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OVRManager_$$c::<FindMainCamera>b__359_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FindMainCamera>b__359_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c0), ::il2cpp_utils::ExtractType(c1)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, c0, c1);
}
