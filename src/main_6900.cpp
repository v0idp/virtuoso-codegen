// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ProxyElement
#include "System/Net/Configuration/ProxyElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ProxyElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ProxyElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::ProxyElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.HttpWebRequestElement
#include "System/Net/Configuration/HttpWebRequestElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.HttpWebRequestElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::HttpWebRequestElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::HttpWebRequestElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.Ipv6Element
#include "System/Net/Configuration/Ipv6Element.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.Ipv6Element.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::Ipv6Element::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::Ipv6Element::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.NetSectionGroup
#include "System/Net/Configuration/NetSectionGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.SettingsSection
#include "System/Net/Configuration/SettingsSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.SettingsSection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::SettingsSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SettingsSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.PerformanceCountersElement
#include "System/Net/Configuration/PerformanceCountersElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.PerformanceCountersElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::PerformanceCountersElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::PerformanceCountersElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ServicePointManagerElement
#include "System/Net/Configuration/ServicePointManagerElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ServicePointManagerElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ServicePointManagerElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::ServicePointManagerElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.SocketElement
#include "System/Net/Configuration/SocketElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.SocketElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::SocketElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SocketElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebProxyScriptElement
#include "System/Net/Configuration/WebProxyScriptElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.WebProxyScriptElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::WebProxyScriptElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::WebProxyScriptElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebRequestModulesSection
#include "System/Net/Configuration/WebRequestModulesSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.WebRequestModulesSection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::WebRequestModulesSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::WebRequestModulesSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebRequestModuleElementCollection
#include "System/Net/Configuration/WebRequestModuleElementCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.DiagnosticsConfigurationHandler
#include "System/Diagnostics/DiagnosticsConfigurationHandler.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.DiagnosticsConfigurationHandler.Create
::Il2CppObject* System::Diagnostics::DiagnosticsConfigurationHandler::Create(::Il2CppObject* parent, ::Il2CppObject* configContext, ::System::Xml::XmlNode* section) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DiagnosticsConfigurationHandler::Create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::DiagnosticsConfigurationHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, parent, configContext, section);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.BlockType
#include "System/IO/Compression/BlockType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.BlockType Uncompressed
::System::IO::Compression::BlockType System::IO::Compression::BlockType::_get_Uncompressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::BlockType::_get_Uncompressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::BlockType>("System.IO.Compression", "BlockType", "Uncompressed"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.BlockType Uncompressed
void System::IO::Compression::BlockType::_set_Uncompressed(::System::IO::Compression::BlockType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::BlockType::_set_Uncompressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "BlockType", "Uncompressed", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.BlockType Static
::System::IO::Compression::BlockType System::IO::Compression::BlockType::_get_Static() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::BlockType::_get_Static");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::BlockType>("System.IO.Compression", "BlockType", "Static"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.BlockType Static
void System::IO::Compression::BlockType::_set_Static(::System::IO::Compression::BlockType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::BlockType::_set_Static");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "BlockType", "Static", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.BlockType Dynamic
::System::IO::Compression::BlockType System::IO::Compression::BlockType::_get_Dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::BlockType::_get_Dynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::BlockType>("System.IO.Compression", "BlockType", "Dynamic"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.BlockType Dynamic
void System::IO::Compression::BlockType::_set_Dynamic(::System::IO::Compression::BlockType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::BlockType::_set_Dynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "BlockType", "Dynamic", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::IO::Compression::BlockType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::BlockType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.CopyEncoder
#include "System/IO/Compression/CopyEncoder.hpp"
// Including type: System.IO.Compression.DeflateInput
#include "System/IO/Compression/DeflateInput.hpp"
// Including type: System.IO.Compression.OutputBuffer
#include "System/IO/Compression/OutputBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.CopyEncoder.GetBlock
void System::IO::Compression::CopyEncoder::GetBlock(::System::IO::Compression::DeflateInput* input, ::System::IO::Compression::OutputBuffer* output, bool isFinal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CopyEncoder::GetBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(isFinal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output, isFinal);
}
// Autogenerated method: System.IO.Compression.CopyEncoder.WriteLenNLen
void System::IO::Compression::CopyEncoder::WriteLenNLen(uint16_t len, ::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CopyEncoder::WriteLenNLen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLenNLen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, len, output);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.DeflateInput
#include "System/IO/Compression/DeflateInput.hpp"
// Including type: System.IO.Compression.DeflateInput/System.IO.Compression.InputState
#include "System/IO/Compression/DeflateInput_InputState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <Buffer>k__BackingField
[[deprecated]] ::ArrayW<uint8_t>& System::IO::Compression::DeflateInput::dyn_$Buffer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::dyn_$Buffer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Buffer>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Count>k__BackingField
[[deprecated]] int& System::IO::Compression::DeflateInput::dyn_$Count$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::dyn_$Count$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Count>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <StartIndex>k__BackingField
[[deprecated]] int& System::IO::Compression::DeflateInput::dyn_$StartIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::dyn_$StartIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StartIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.DeflateInput.get_Buffer
::ArrayW<uint8_t> System::IO::Compression::DeflateInput::get_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::get_Buffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Buffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateInput.set_Buffer
void System::IO::Compression::DeflateInput::set_Buffer(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::set_Buffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Buffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.DeflateInput.get_Count
int System::IO::Compression::DeflateInput::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateInput.set_Count
void System::IO::Compression::DeflateInput::set_Count(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::set_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.DeflateInput.get_StartIndex
int System::IO::Compression::DeflateInput::get_StartIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::get_StartIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateInput.set_StartIndex
void System::IO::Compression::DeflateInput::set_StartIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::set_StartIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.DeflateInput.ConsumeBytes
void System::IO::Compression::DeflateInput::ConsumeBytes(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::ConsumeBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConsumeBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n);
}
// Autogenerated method: System.IO.Compression.DeflateInput.DumpState
::System::IO::Compression::DeflateInput::InputState System::IO::Compression::DeflateInput::DumpState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::DumpState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DumpState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::DeflateInput::InputState, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateInput.RestoreState
void System::IO::Compression::DeflateInput::RestoreState(::System::IO::Compression::DeflateInput::InputState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::RestoreState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestoreState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.DeflateInput/System.IO.Compression.InputState
#include "System/IO/Compression/DeflateInput_InputState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _count
[[deprecated]] int& System::IO::Compression::DeflateInput::InputState::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::InputState::dyn__count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _startIndex
[[deprecated]] int& System::IO::Compression::DeflateInput::InputState::dyn__startIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::InputState::dyn__startIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.DeflateInput/System.IO.Compression.InputState..ctor
// ABORTED elsewhere.  System::IO::Compression::DeflateInput::InputState::InputState(int count, int startIndex)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Compression.DeflateManagedStream
#include "System/IO/Compression/DeflateManagedStream.hpp"
// Including type: System.IO.Compression.DeflateManagedStream/System.IO.Compression.<ReadAsyncCore>d__40
#include "System/IO/Compression/DeflateManagedStream_-ReadAsyncCore-d__40.hpp"
// Including type: System.IO.Compression.DeflateManagedStream/System.IO.Compression.<WriteAsyncCore>d__47
#include "System/IO/Compression/DeflateManagedStream_-WriteAsyncCore-d__47.hpp"
// Including type: System.IO.Compression.InflaterManaged
#include "System/IO/Compression/InflaterManaged.hpp"
// Including type: System.IO.Compression.DeflaterManaged
#include "System/IO/Compression/DeflaterManaged.hpp"
// Including type: System.IO.Compression.IFileFormatWriter
#include "System/IO/Compression/IFileFormatWriter.hpp"
// Including type: System.IO.Compression.IFileFormatReader
#include "System/IO/Compression/IFileFormatReader.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _stream
[[deprecated]] ::System::IO::Stream*& System::IO::Compression::DeflateManagedStream::dyn__stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.CompressionMode _mode
[[deprecated]] ::System::IO::Compression::CompressionMode& System::IO::Compression::DeflateManagedStream::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::System::IO::Compression::CompressionMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _leaveOpen
[[deprecated]] bool& System::IO::Compression::DeflateManagedStream::dyn__leaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__leaveOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaveOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.InflaterManaged _inflater
[[deprecated]] ::System::IO::Compression::InflaterManaged*& System::IO::Compression::DeflateManagedStream::dyn__inflater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__inflater");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inflater"))->offset;
  return *reinterpret_cast<::System::IO::Compression::InflaterManaged**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.DeflaterManaged _deflater
[[deprecated]] ::System::IO::Compression::DeflaterManaged*& System::IO::Compression::DeflateManagedStream::dyn__deflater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__deflater");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deflater"))->offset;
  return *reinterpret_cast<::System::IO::Compression::DeflaterManaged**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
[[deprecated]] ::ArrayW<uint8_t>& System::IO::Compression::DeflateManagedStream::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _asyncOperations
[[deprecated]] int& System::IO::Compression::DeflateManagedStream::dyn__asyncOperations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__asyncOperations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncOperations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.IFileFormatWriter _formatWriter
[[deprecated]] ::System::IO::Compression::IFileFormatWriter*& System::IO::Compression::DeflateManagedStream::dyn__formatWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__formatWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_formatWriter"))->offset;
  return *reinterpret_cast<::System::IO::Compression::IFileFormatWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _wroteHeader
[[deprecated]] bool& System::IO::Compression::DeflateManagedStream::dyn__wroteHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__wroteHeader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wroteHeader"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _wroteBytes
[[deprecated]] bool& System::IO::Compression::DeflateManagedStream::dyn__wroteBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__wroteBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wroteBytes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.InitializeInflater
void System::IO::Compression::DeflateManagedStream::InitializeInflater(::System::IO::Stream* stream, bool leaveOpen, ::System::IO::Compression::IFileFormatReader* reader, ::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::InitializeInflater");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeInflater", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(leaveOpen), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, leaveOpen, reader, method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.ValidateParameters
void System::IO::Compression::DeflateManagedStream::ValidateParameters(::ArrayW<uint8_t> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::ValidateParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.EnsureNotDisposed
void System::IO::Compression::DeflateManagedStream::EnsureNotDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::EnsureNotDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureNotDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.ThrowStreamClosedException
void System::IO::Compression::DeflateManagedStream::ThrowStreamClosedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::ThrowStreamClosedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "DeflateManagedStream", "ThrowStreamClosedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.EnsureDecompressionMode
void System::IO::Compression::DeflateManagedStream::EnsureDecompressionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::EnsureDecompressionMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureDecompressionMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.ThrowCannotReadFromDeflateManagedStreamException
void System::IO::Compression::DeflateManagedStream::ThrowCannotReadFromDeflateManagedStreamException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::ThrowCannotReadFromDeflateManagedStreamException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "DeflateManagedStream", "ThrowCannotReadFromDeflateManagedStreamException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.EnsureCompressionMode
void System::IO::Compression::DeflateManagedStream::EnsureCompressionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::EnsureCompressionMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCompressionMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.ThrowCannotWriteToDeflateManagedStreamException
void System::IO::Compression::DeflateManagedStream::ThrowCannotWriteToDeflateManagedStreamException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::ThrowCannotWriteToDeflateManagedStreamException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "DeflateManagedStream", "ThrowCannotWriteToDeflateManagedStreamException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.ReadAsyncCore
::System::Threading::Tasks::Task_1<int>* System::IO::Compression::DeflateManagedStream::ReadAsyncCore(::System::Threading::Tasks::Task_1<int>* readTask, ::ArrayW<uint8_t> array, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::ReadAsyncCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsyncCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readTask), ::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, readTask, array, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.WriteDeflaterOutput
void System::IO::Compression::DeflateManagedStream::WriteDeflaterOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::WriteDeflaterOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDeflaterOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.DoMaintenance
void System::IO::Compression::DeflateManagedStream::DoMaintenance(::ArrayW<uint8_t> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::DoMaintenance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoMaintenance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.PurgeBuffers
void System::IO::Compression::DeflateManagedStream::PurgeBuffers(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::PurgeBuffers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PurgeBuffers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.WriteAsyncCore
::System::Threading::Tasks::Task* System::IO::Compression::DeflateManagedStream::WriteAsyncCore(::ArrayW<uint8_t> array, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::WriteAsyncCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsyncCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, array, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.<>n__0
::System::Threading::Tasks::Task* System::IO::Compression::DeflateManagedStream::$$n__0(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::<>n__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>n__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.get_CanRead
bool System::IO::Compression::DeflateManagedStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.get_CanWrite
bool System::IO::Compression::DeflateManagedStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.get_CanSeek
bool System::IO::Compression::DeflateManagedStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.get_Length
int64_t System::IO::Compression::DeflateManagedStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.get_Position
int64_t System::IO::Compression::DeflateManagedStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.set_Position
void System::IO::Compression::DeflateManagedStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.Flush
void System::IO::Compression::DeflateManagedStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.FlushAsync
::System::Threading::Tasks::Task* System::IO::Compression::DeflateManagedStream::FlushAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::FlushAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.Seek
int64_t System::IO::Compression::DeflateManagedStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.SetLength
void System::IO::Compression::DeflateManagedStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.Read
int System::IO::Compression::DeflateManagedStream::Read(::ArrayW<uint8_t> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.BeginRead
::System::IAsyncResult* System::IO::Compression::DeflateManagedStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.EndRead
int System::IO::Compression::DeflateManagedStream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::EndRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.ReadAsync
::System::Threading::Tasks::Task_1<int>* System::IO::Compression::DeflateManagedStream::ReadAsync(::ArrayW<uint8_t> array, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, array, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.Write
void System::IO::Compression::DeflateManagedStream::Write(::ArrayW<uint8_t> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.Dispose
void System::IO::Compression::DeflateManagedStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.WriteAsync
::System::Threading::Tasks::Task* System::IO::Compression::DeflateManagedStream::WriteAsync(::ArrayW<uint8_t> array, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, array, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.BeginWrite
::System::IAsyncResult* System::IO::Compression::DeflateManagedStream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.EndWrite
void System::IO::Compression::DeflateManagedStream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.DeflateManagedStream/System.IO.Compression.<ReadAsyncCore>d__40
#include "System/IO/Compression/DeflateManagedStream_-ReadAsyncCore-d__40.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated]] int& System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Int32> <>t__builder
[[deprecated]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>& System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.Task`1<System.Int32> readTask
[[deprecated]] ::System::Threading::Tasks::Task_1<int>*& System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_readTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_readTask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.Compression.DeflateManagedStream <>4__this
[[deprecated]] ::System::IO::Compression::DeflateManagedStream*& System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::IO::Compression::DeflateManagedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated]] ::System::Threading::CancellationToken& System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] array
[[deprecated]] ::ArrayW<uint8_t>& System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_array");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "array"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 offset
[[deprecated]] int& System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
[[deprecated]] int& System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Int32> <>u__1
[[deprecated]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter& System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream/System.IO.Compression.<ReadAsyncCore>d__40.MoveNext
void System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream/System.IO.Compression.<ReadAsyncCore>d__40.SetStateMachine
void System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.DeflateManagedStream/System.IO.Compression.<WriteAsyncCore>d__47
#include "System/IO/Compression/DeflateManagedStream_-WriteAsyncCore-d__47.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated]] int& System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.Compression.DeflateManagedStream <>4__this
[[deprecated]] ::System::IO::Compression::DeflateManagedStream*& System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::IO::Compression::DeflateManagedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] array
[[deprecated]] ::ArrayW<uint8_t>& System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_array");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "array"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 offset
[[deprecated]] int& System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
[[deprecated]] int& System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated]] ::System::Threading::CancellationToken& System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
[[deprecated]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream/System.IO.Compression.<WriteAsyncCore>d__47.MoveNext
void System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream/System.IO.Compression.<WriteAsyncCore>d__47.SetStateMachine
void System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.DeflaterManaged
#include "System/IO/Compression/DeflaterManaged.hpp"
// Including type: System.IO.Compression.FastEncoder
#include "System/IO/Compression/FastEncoder.hpp"
// Including type: System.IO.Compression.CopyEncoder
#include "System/IO/Compression/CopyEncoder.hpp"
// Including type: System.IO.Compression.DeflateInput
#include "System/IO/Compression/DeflateInput.hpp"
// Including type: System.IO.Compression.OutputBuffer
#include "System/IO/Compression/OutputBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.FastEncoder _deflateEncoder
[[deprecated]] ::System::IO::Compression::FastEncoder*& System::IO::Compression::DeflaterManaged::dyn__deflateEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::dyn__deflateEncoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deflateEncoder"))->offset;
  return *reinterpret_cast<::System::IO::Compression::FastEncoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.CopyEncoder _copyEncoder
[[deprecated]] ::System::IO::Compression::CopyEncoder*& System::IO::Compression::DeflaterManaged::dyn__copyEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::dyn__copyEncoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_copyEncoder"))->offset;
  return *reinterpret_cast<::System::IO::Compression::CopyEncoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.DeflateInput _input
[[deprecated]] ::System::IO::Compression::DeflateInput*& System::IO::Compression::DeflaterManaged::dyn__input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::dyn__input");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_input"))->offset;
  return *reinterpret_cast<::System::IO::Compression::DeflateInput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.OutputBuffer _output
[[deprecated]] ::System::IO::Compression::OutputBuffer*& System::IO::Compression::DeflaterManaged::dyn__output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::dyn__output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_output"))->offset;
  return *reinterpret_cast<::System::IO::Compression::OutputBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState _processingState
[[deprecated]] ::System::IO::Compression::DeflaterManaged::DeflaterState& System::IO::Compression::DeflaterManaged::dyn__processingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::dyn__processingState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_processingState"))->offset;
  return *reinterpret_cast<::System::IO::Compression::DeflaterManaged::DeflaterState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.DeflateInput _inputFromHistory
[[deprecated]] ::System::IO::Compression::DeflateInput*& System::IO::Compression::DeflaterManaged::dyn__inputFromHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::dyn__inputFromHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputFromHistory"))->offset;
  return *reinterpret_cast<::System::IO::Compression::DeflateInput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.DeflaterManaged.NeedsInput
bool System::IO::Compression::DeflaterManaged::NeedsInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::NeedsInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NeedsInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflaterManaged.SetInput
void System::IO::Compression::DeflaterManaged::SetInput(::ArrayW<uint8_t> inputBuffer, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::SetInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputBuffer, startIndex, count);
}
// Autogenerated method: System.IO.Compression.DeflaterManaged.GetDeflateOutput
int System::IO::Compression::DeflaterManaged::GetDeflateOutput(::ArrayW<uint8_t> outputBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::GetDeflateOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDeflateOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outputBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, outputBuffer);
}
// Autogenerated method: System.IO.Compression.DeflaterManaged.Finish
bool System::IO::Compression::DeflaterManaged::Finish(::ArrayW<uint8_t> outputBuffer, ByRef<int> bytesRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, outputBuffer, byref(bytesRead));
}
// Autogenerated method: System.IO.Compression.DeflaterManaged.UseCompressed
bool System::IO::Compression::DeflaterManaged::UseCompressed(double ratio) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::UseCompressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseCompressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ratio)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ratio);
}
// Autogenerated method: System.IO.Compression.DeflaterManaged.FlushInputWindows
void System::IO::Compression::DeflaterManaged::FlushInputWindows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::FlushInputWindows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushInputWindows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflaterManaged.WriteFinal
void System::IO::Compression::DeflaterManaged::WriteFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::WriteFinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflaterManaged.Dispose
void System::IO::Compression::DeflaterManaged::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::DeflaterManaged*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState
#include "System/IO/Compression/DeflaterManaged.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState NotStarted
::System::IO::Compression::DeflaterManaged::DeflaterState System::IO::Compression::DeflaterManaged::DeflaterState::_get_NotStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_get_NotStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::DeflaterManaged::DeflaterState>("System.IO.Compression", "DeflaterManaged/DeflaterState", "NotStarted"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState NotStarted
void System::IO::Compression::DeflaterManaged::DeflaterState::_set_NotStarted(::System::IO::Compression::DeflaterManaged::DeflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_set_NotStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "DeflaterManaged/DeflaterState", "NotStarted", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState SlowDownForIncompressible1
::System::IO::Compression::DeflaterManaged::DeflaterState System::IO::Compression::DeflaterManaged::DeflaterState::_get_SlowDownForIncompressible1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_get_SlowDownForIncompressible1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::DeflaterManaged::DeflaterState>("System.IO.Compression", "DeflaterManaged/DeflaterState", "SlowDownForIncompressible1"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState SlowDownForIncompressible1
void System::IO::Compression::DeflaterManaged::DeflaterState::_set_SlowDownForIncompressible1(::System::IO::Compression::DeflaterManaged::DeflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_set_SlowDownForIncompressible1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "DeflaterManaged/DeflaterState", "SlowDownForIncompressible1", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState SlowDownForIncompressible2
::System::IO::Compression::DeflaterManaged::DeflaterState System::IO::Compression::DeflaterManaged::DeflaterState::_get_SlowDownForIncompressible2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_get_SlowDownForIncompressible2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::DeflaterManaged::DeflaterState>("System.IO.Compression", "DeflaterManaged/DeflaterState", "SlowDownForIncompressible2"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState SlowDownForIncompressible2
void System::IO::Compression::DeflaterManaged::DeflaterState::_set_SlowDownForIncompressible2(::System::IO::Compression::DeflaterManaged::DeflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_set_SlowDownForIncompressible2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "DeflaterManaged/DeflaterState", "SlowDownForIncompressible2", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState StartingSmallData
::System::IO::Compression::DeflaterManaged::DeflaterState System::IO::Compression::DeflaterManaged::DeflaterState::_get_StartingSmallData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_get_StartingSmallData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::DeflaterManaged::DeflaterState>("System.IO.Compression", "DeflaterManaged/DeflaterState", "StartingSmallData"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState StartingSmallData
void System::IO::Compression::DeflaterManaged::DeflaterState::_set_StartingSmallData(::System::IO::Compression::DeflaterManaged::DeflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_set_StartingSmallData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "DeflaterManaged/DeflaterState", "StartingSmallData", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState CompressThenCheck
::System::IO::Compression::DeflaterManaged::DeflaterState System::IO::Compression::DeflaterManaged::DeflaterState::_get_CompressThenCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_get_CompressThenCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::DeflaterManaged::DeflaterState>("System.IO.Compression", "DeflaterManaged/DeflaterState", "CompressThenCheck"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState CompressThenCheck
void System::IO::Compression::DeflaterManaged::DeflaterState::_set_CompressThenCheck(::System::IO::Compression::DeflaterManaged::DeflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_set_CompressThenCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "DeflaterManaged/DeflaterState", "CompressThenCheck", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState CheckingForIncompressible
::System::IO::Compression::DeflaterManaged::DeflaterState System::IO::Compression::DeflaterManaged::DeflaterState::_get_CheckingForIncompressible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_get_CheckingForIncompressible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::DeflaterManaged::DeflaterState>("System.IO.Compression", "DeflaterManaged/DeflaterState", "CheckingForIncompressible"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState CheckingForIncompressible
void System::IO::Compression::DeflaterManaged::DeflaterState::_set_CheckingForIncompressible(::System::IO::Compression::DeflaterManaged::DeflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_set_CheckingForIncompressible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "DeflaterManaged/DeflaterState", "CheckingForIncompressible", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState HandlingSmallData
::System::IO::Compression::DeflaterManaged::DeflaterState System::IO::Compression::DeflaterManaged::DeflaterState::_get_HandlingSmallData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_get_HandlingSmallData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::DeflaterManaged::DeflaterState>("System.IO.Compression", "DeflaterManaged/DeflaterState", "HandlingSmallData"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState HandlingSmallData
void System::IO::Compression::DeflaterManaged::DeflaterState::_set_HandlingSmallData(::System::IO::Compression::DeflaterManaged::DeflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_set_HandlingSmallData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "DeflaterManaged/DeflaterState", "HandlingSmallData", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::IO::Compression::DeflaterManaged::DeflaterState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.FastEncoder
#include "System/IO/Compression/FastEncoder.hpp"
// Including type: System.IO.Compression.FastEncoderWindow
#include "System/IO/Compression/FastEncoderWindow.hpp"
// Including type: System.IO.Compression.Match
#include "System/IO/Compression/Match.hpp"
// Including type: System.IO.Compression.DeflateInput
#include "System/IO/Compression/DeflateInput.hpp"
// Including type: System.IO.Compression.OutputBuffer
#include "System/IO/Compression/OutputBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.FastEncoderWindow _inputWindow
[[deprecated]] ::System::IO::Compression::FastEncoderWindow*& System::IO::Compression::FastEncoder::dyn__inputWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::dyn__inputWindow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputWindow"))->offset;
  return *reinterpret_cast<::System::IO::Compression::FastEncoderWindow**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.Match _currentMatch
[[deprecated]] ::System::IO::Compression::Match*& System::IO::Compression::FastEncoder::dyn__currentMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::dyn__currentMatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentMatch"))->offset;
  return *reinterpret_cast<::System::IO::Compression::Match**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _lastCompressionRatio
[[deprecated]] double& System::IO::Compression::FastEncoder::dyn__lastCompressionRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::dyn__lastCompressionRatio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastCompressionRatio"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.FastEncoder.get_BytesInHistory
int System::IO::Compression::FastEncoder::get_BytesInHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::get_BytesInHistory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BytesInHistory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoder.get_UnprocessedInput
::System::IO::Compression::DeflateInput* System::IO::Compression::FastEncoder::get_UnprocessedInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::get_UnprocessedInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnprocessedInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::DeflateInput*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoder.get_LastCompressionRatio
double System::IO::Compression::FastEncoder::get_LastCompressionRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::get_LastCompressionRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastCompressionRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoder.FlushInput
void System::IO::Compression::FastEncoder::FlushInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::FlushInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoder.GetBlock
void System::IO::Compression::FastEncoder::GetBlock(::System::IO::Compression::DeflateInput* input, ::System::IO::Compression::OutputBuffer* output, int maxBytesToCopy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::GetBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(maxBytesToCopy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output, maxBytesToCopy);
}
// Autogenerated method: System.IO.Compression.FastEncoder.GetCompressedData
void System::IO::Compression::FastEncoder::GetCompressedData(::System::IO::Compression::DeflateInput* input, ::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::GetCompressedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCompressedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: System.IO.Compression.FastEncoder.GetBlockHeader
void System::IO::Compression::FastEncoder::GetBlockHeader(::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::GetBlockHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: System.IO.Compression.FastEncoder.GetBlockFooter
void System::IO::Compression::FastEncoder::GetBlockFooter(::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::GetBlockFooter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockFooter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: System.IO.Compression.FastEncoder.GetCompressedOutput
void System::IO::Compression::FastEncoder::GetCompressedOutput(::System::IO::Compression::DeflateInput* input, ::System::IO::Compression::OutputBuffer* output, int maxBytesToCopy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::GetCompressedOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCompressedOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(maxBytesToCopy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output, maxBytesToCopy);
}
// Autogenerated method: System.IO.Compression.FastEncoder.GetCompressedOutput
void System::IO::Compression::FastEncoder::GetCompressedOutput(::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::GetCompressedOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCompressedOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: System.IO.Compression.FastEncoder.InputAvailable
bool System::IO::Compression::FastEncoder::InputAvailable(::System::IO::Compression::DeflateInput* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::InputAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InputAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.IO.Compression.FastEncoder.SafeToWriteTo
bool System::IO::Compression::FastEncoder::SafeToWriteTo(::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::SafeToWriteTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeToWriteTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, output);
}
// Autogenerated method: System.IO.Compression.FastEncoder.WriteEndOfBlock
void System::IO::Compression::FastEncoder::WriteEndOfBlock(::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::WriteEndOfBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndOfBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: System.IO.Compression.FastEncoder.WriteMatch
void System::IO::Compression::FastEncoder::WriteMatch(int matchLen, int matchPos, ::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::WriteMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "FastEncoder", "WriteMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matchLen), ::il2cpp_utils::ExtractType(matchPos), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matchLen, matchPos, output);
}
// Autogenerated method: System.IO.Compression.FastEncoder.WriteChar
void System::IO::Compression::FastEncoder::WriteChar(uint8_t b, ::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::WriteChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "FastEncoder", "WriteChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b, output);
}
// Autogenerated method: System.IO.Compression.FastEncoder.WriteDeflatePreamble
void System::IO::Compression::FastEncoder::WriteDeflatePreamble(::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::WriteDeflatePreamble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "FastEncoder", "WriteDeflatePreamble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, output);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.FastEncoderStatics
#include "System/IO/Compression/FastEncoderStatics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Byte[] FastEncoderTreeStructureData
::ArrayW<uint8_t> System::IO::Compression::FastEncoderStatics::_get_FastEncoderTreeStructureData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_get_FastEncoderTreeStructureData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.IO.Compression", "FastEncoderStatics", "FastEncoderTreeStructureData"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Byte[] FastEncoderTreeStructureData
void System::IO::Compression::FastEncoderStatics::_set_FastEncoderTreeStructureData(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_set_FastEncoderTreeStructureData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "FastEncoderStatics", "FastEncoderTreeStructureData", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Byte[] BFinalFastEncoderTreeStructureData
::ArrayW<uint8_t> System::IO::Compression::FastEncoderStatics::_get_BFinalFastEncoderTreeStructureData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_get_BFinalFastEncoderTreeStructureData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.IO.Compression", "FastEncoderStatics", "BFinalFastEncoderTreeStructureData"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Byte[] BFinalFastEncoderTreeStructureData
void System::IO::Compression::FastEncoderStatics::_set_BFinalFastEncoderTreeStructureData(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_set_BFinalFastEncoderTreeStructureData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "FastEncoderStatics", "BFinalFastEncoderTreeStructureData", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.UInt32[] FastEncoderLiteralCodeInfo
::ArrayW<uint> System::IO::Compression::FastEncoderStatics::_get_FastEncoderLiteralCodeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_get_FastEncoderLiteralCodeInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "FastEncoderStatics", "FastEncoderLiteralCodeInfo"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt32[] FastEncoderLiteralCodeInfo
void System::IO::Compression::FastEncoderStatics::_set_FastEncoderLiteralCodeInfo(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_set_FastEncoderLiteralCodeInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "FastEncoderStatics", "FastEncoderLiteralCodeInfo", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.UInt32[] FastEncoderDistanceCodeInfo
::ArrayW<uint> System::IO::Compression::FastEncoderStatics::_get_FastEncoderDistanceCodeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_get_FastEncoderDistanceCodeInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "FastEncoderStatics", "FastEncoderDistanceCodeInfo"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt32[] FastEncoderDistanceCodeInfo
void System::IO::Compression::FastEncoderStatics::_set_FastEncoderDistanceCodeInfo(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_set_FastEncoderDistanceCodeInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "FastEncoderStatics", "FastEncoderDistanceCodeInfo", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.UInt32[] BitMask
::ArrayW<uint> System::IO::Compression::FastEncoderStatics::_get_BitMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_get_BitMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "FastEncoderStatics", "BitMask"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt32[] BitMask
void System::IO::Compression::FastEncoderStatics::_set_BitMask(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_set_BitMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "FastEncoderStatics", "BitMask", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Byte[] ExtraLengthBits
::ArrayW<uint8_t> System::IO::Compression::FastEncoderStatics::_get_ExtraLengthBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_get_ExtraLengthBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.IO.Compression", "FastEncoderStatics", "ExtraLengthBits"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Byte[] ExtraLengthBits
void System::IO::Compression::FastEncoderStatics::_set_ExtraLengthBits(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_set_ExtraLengthBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "FastEncoderStatics", "ExtraLengthBits", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Byte[] ExtraDistanceBits
::ArrayW<uint8_t> System::IO::Compression::FastEncoderStatics::_get_ExtraDistanceBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_get_ExtraDistanceBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.IO.Compression", "FastEncoderStatics", "ExtraDistanceBits"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Byte[] ExtraDistanceBits
void System::IO::Compression::FastEncoderStatics::_set_ExtraDistanceBits(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_set_ExtraDistanceBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "FastEncoderStatics", "ExtraDistanceBits", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] s_distLookup
::ArrayW<uint8_t> System::IO::Compression::FastEncoderStatics::_get_s_distLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_get_s_distLookup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.IO.Compression", "FastEncoderStatics", "s_distLookup"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] s_distLookup
void System::IO::Compression::FastEncoderStatics::_set_s_distLookup(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_set_s_distLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "FastEncoderStatics", "s_distLookup", value));
}
// Autogenerated method: System.IO.Compression.FastEncoderStatics..cctor
void System::IO::Compression::FastEncoderStatics::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "FastEncoderStatics", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoderStatics.CreateDistanceLookup
::ArrayW<uint8_t> System::IO::Compression::FastEncoderStatics::CreateDistanceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::CreateDistanceLookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "FastEncoderStatics", "CreateDistanceLookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoderStatics.GetSlot
int System::IO::Compression::FastEncoderStatics::GetSlot(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::GetSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "FastEncoderStatics", "GetSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pos);
}
// Autogenerated method: System.IO.Compression.FastEncoderStatics.BitReverse
uint System::IO::Compression::FastEncoderStatics::BitReverse(uint code, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::BitReverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "FastEncoderStatics", "BitReverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.FastEncoderWindow
#include "System/IO/Compression/FastEncoderWindow.hpp"
// Including type: System.IO.Compression.DeflateInput
#include "System/IO/Compression/DeflateInput.hpp"
// Including type: System.IO.Compression.Match
#include "System/IO/Compression/Match.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _window
[[deprecated]] ::ArrayW<uint8_t>& System::IO::Compression::FastEncoderWindow::dyn__window() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::dyn__window");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_window"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bufPos
[[deprecated]] int& System::IO::Compression::FastEncoderWindow::dyn__bufPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::dyn__bufPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bufEnd
[[deprecated]] int& System::IO::Compression::FastEncoderWindow::dyn__bufEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::dyn__bufEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufEnd"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16[] _prev
[[deprecated]] ::ArrayW<uint16_t>& System::IO::Compression::FastEncoderWindow::dyn__prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::dyn__prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prev"))->offset;
  return *reinterpret_cast<::ArrayW<uint16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16[] _lookup
[[deprecated]] ::ArrayW<uint16_t>& System::IO::Compression::FastEncoderWindow::dyn__lookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::dyn__lookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lookup"))->offset;
  return *reinterpret_cast<::ArrayW<uint16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.get_BytesAvailable
int System::IO::Compression::FastEncoderWindow::get_BytesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::get_BytesAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BytesAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.get_UnprocessedInput
::System::IO::Compression::DeflateInput* System::IO::Compression::FastEncoderWindow::get_UnprocessedInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::get_UnprocessedInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnprocessedInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::DeflateInput*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.get_FreeWindowSpace
int System::IO::Compression::FastEncoderWindow::get_FreeWindowSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::get_FreeWindowSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FreeWindowSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.FlushWindow
void System::IO::Compression::FastEncoderWindow::FlushWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::FlushWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.ResetWindow
void System::IO::Compression::FastEncoderWindow::ResetWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::ResetWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.CopyBytes
void System::IO::Compression::FastEncoderWindow::CopyBytes(::ArrayW<uint8_t> inputBuffer, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::CopyBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputBuffer, startIndex, count);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.MoveWindows
void System::IO::Compression::FastEncoderWindow::MoveWindows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::MoveWindows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveWindows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.HashValue
uint System::IO::Compression::FastEncoderWindow::HashValue(uint hash, uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::HashValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, hash, b);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.InsertString
uint System::IO::Compression::FastEncoderWindow::InsertString(ByRef<uint> hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::InsertString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(hash));
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.InsertStrings
void System::IO::Compression::FastEncoderWindow::InsertStrings(ByRef<uint> hash, int matchLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::InsertStrings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertStrings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(matchLen)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(hash), matchLen);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.GetNextSymbolOrMatch
bool System::IO::Compression::FastEncoderWindow::GetNextSymbolOrMatch(::System::IO::Compression::Match* match) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::GetNextSymbolOrMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextSymbolOrMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(match)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, match);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.FindMatch
int System::IO::Compression::FastEncoderWindow::FindMatch(int search, ByRef<int> matchPos, int searchDepth, int niceLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::FindMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(search), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(searchDepth), ::il2cpp_utils::ExtractType(niceLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, search, byref(matchPos), searchDepth, niceLength);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.IFileFormatWriter
#include "System/IO/Compression/IFileFormatWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.IFileFormatWriter.GetHeader
::ArrayW<uint8_t> System::IO::Compression::IFileFormatWriter::GetHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::IFileFormatWriter::GetHeader");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::IFileFormatWriter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.IFileFormatWriter.UpdateWithBytesRead
void System::IO::Compression::IFileFormatWriter::UpdateWithBytesRead(::ArrayW<uint8_t> buffer, int offset, int bytesToCopy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::IFileFormatWriter::UpdateWithBytesRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::IFileFormatWriter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, bytesToCopy);
}
// Autogenerated method: System.IO.Compression.IFileFormatWriter.GetFooter
::ArrayW<uint8_t> System::IO::Compression::IFileFormatWriter::GetFooter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::IFileFormatWriter::GetFooter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::IFileFormatWriter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.IFileFormatReader
#include "System/IO/Compression/IFileFormatReader.hpp"
// Including type: System.IO.Compression.InputBuffer
#include "System/IO/Compression/InputBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.IFileFormatReader.ReadHeader
bool System::IO::Compression::IFileFormatReader::ReadHeader(::System::IO::Compression::InputBuffer* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::IFileFormatReader::ReadHeader");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::IFileFormatReader*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.IO.Compression.IFileFormatReader.ReadFooter
bool System::IO::Compression::IFileFormatReader::ReadFooter(::System::IO::Compression::InputBuffer* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::IFileFormatReader::ReadFooter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::IFileFormatReader*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.IO.Compression.IFileFormatReader.UpdateWithBytesRead
void System::IO::Compression::IFileFormatReader::UpdateWithBytesRead(::ArrayW<uint8_t> buffer, int offset, int bytesToCopy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::IFileFormatReader::UpdateWithBytesRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::IFileFormatReader*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, bytesToCopy);
}
// Autogenerated method: System.IO.Compression.IFileFormatReader.Validate
void System::IO::Compression::IFileFormatReader::Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::IFileFormatReader::Validate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::IFileFormatReader*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.HuffmanTree
#include "System/IO/Compression/HuffmanTree.hpp"
// Including type: System.IO.Compression.InputBuffer
#include "System/IO/Compression/InputBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.IO.Compression.HuffmanTree <StaticLiteralLengthTree>k__BackingField
::System::IO::Compression::HuffmanTree* System::IO::Compression::HuffmanTree::_get_$StaticLiteralLengthTree$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::_get_$StaticLiteralLengthTree$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::IO::Compression::HuffmanTree*>("System.IO.Compression", "HuffmanTree", "<StaticLiteralLengthTree>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IO.Compression.HuffmanTree <StaticLiteralLengthTree>k__BackingField
void System::IO::Compression::HuffmanTree::_set_$StaticLiteralLengthTree$k__BackingField(::System::IO::Compression::HuffmanTree* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::_set_$StaticLiteralLengthTree$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "HuffmanTree", "<StaticLiteralLengthTree>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IO.Compression.HuffmanTree <StaticDistanceTree>k__BackingField
::System::IO::Compression::HuffmanTree* System::IO::Compression::HuffmanTree::_get_$StaticDistanceTree$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::_get_$StaticDistanceTree$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::IO::Compression::HuffmanTree*>("System.IO.Compression", "HuffmanTree", "<StaticDistanceTree>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IO.Compression.HuffmanTree <StaticDistanceTree>k__BackingField
void System::IO::Compression::HuffmanTree::_set_$StaticDistanceTree$k__BackingField(::System::IO::Compression::HuffmanTree* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::_set_$StaticDistanceTree$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "HuffmanTree", "<StaticDistanceTree>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _tableBits
[[deprecated]] int& System::IO::Compression::HuffmanTree::dyn__tableBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::dyn__tableBits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableBits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int16[] _table
[[deprecated]] ::ArrayW<int16_t>& System::IO::Compression::HuffmanTree::dyn__table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::dyn__table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_table"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int16[] _left
[[deprecated]] ::ArrayW<int16_t>& System::IO::Compression::HuffmanTree::dyn__left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::dyn__left");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_left"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int16[] _right
[[deprecated]] ::ArrayW<int16_t>& System::IO::Compression::HuffmanTree::dyn__right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::dyn__right");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_right"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _codeLengthArray
[[deprecated]] ::ArrayW<uint8_t>& System::IO::Compression::HuffmanTree::dyn__codeLengthArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::dyn__codeLengthArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codeLengthArray"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _tableMask
[[deprecated]] int& System::IO::Compression::HuffmanTree::dyn__tableMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::dyn__tableMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.HuffmanTree.get_StaticLiteralLengthTree
::System::IO::Compression::HuffmanTree* System::IO::Compression::HuffmanTree::get_StaticLiteralLengthTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::get_StaticLiteralLengthTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "HuffmanTree", "get_StaticLiteralLengthTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::HuffmanTree*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.HuffmanTree.get_StaticDistanceTree
::System::IO::Compression::HuffmanTree* System::IO::Compression::HuffmanTree::get_StaticDistanceTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::get_StaticDistanceTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "HuffmanTree", "get_StaticDistanceTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::HuffmanTree*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.HuffmanTree..cctor
void System::IO::Compression::HuffmanTree::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "HuffmanTree", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.HuffmanTree.GetStaticLiteralTreeLength
::ArrayW<uint8_t> System::IO::Compression::HuffmanTree::GetStaticLiteralTreeLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::GetStaticLiteralTreeLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "HuffmanTree", "GetStaticLiteralTreeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.HuffmanTree.GetStaticDistanceTreeLength
::ArrayW<uint8_t> System::IO::Compression::HuffmanTree::GetStaticDistanceTreeLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::GetStaticDistanceTreeLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "HuffmanTree", "GetStaticDistanceTreeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.HuffmanTree.CalculateHuffmanCode
::ArrayW<uint> System::IO::Compression::HuffmanTree::CalculateHuffmanCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::CalculateHuffmanCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateHuffmanCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.HuffmanTree.CreateTable
void System::IO::Compression::HuffmanTree::CreateTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::CreateTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.HuffmanTree.GetNextSymbol
int System::IO::Compression::HuffmanTree::GetNextSymbol(::System::IO::Compression::InputBuffer* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::GetNextSymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextSymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.InflaterManaged
#include "System/IO/Compression/InflaterManaged.hpp"
// Including type: System.IO.Compression.OutputWindow
#include "System/IO/Compression/OutputWindow.hpp"
// Including type: System.IO.Compression.InputBuffer
#include "System/IO/Compression/InputBuffer.hpp"
// Including type: System.IO.Compression.HuffmanTree
#include "System/IO/Compression/HuffmanTree.hpp"
// Including type: System.IO.Compression.IFileFormatReader
#include "System/IO/Compression/IFileFormatReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] s_extraLengthBits
::ArrayW<uint8_t> System::IO::Compression::InflaterManaged::_get_s_extraLengthBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_get_s_extraLengthBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.IO.Compression", "InflaterManaged", "s_extraLengthBits"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] s_extraLengthBits
void System::IO::Compression::InflaterManaged::_set_s_extraLengthBits(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_set_s_extraLengthBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterManaged", "s_extraLengthBits", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] s_lengthBase
::ArrayW<int> System::IO::Compression::InflaterManaged::_get_s_lengthBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_get_s_lengthBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.IO.Compression", "InflaterManaged", "s_lengthBase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] s_lengthBase
void System::IO::Compression::InflaterManaged::_set_s_lengthBase(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_set_s_lengthBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterManaged", "s_lengthBase", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] s_distanceBasePosition
::ArrayW<int> System::IO::Compression::InflaterManaged::_get_s_distanceBasePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_get_s_distanceBasePosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.IO.Compression", "InflaterManaged", "s_distanceBasePosition"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] s_distanceBasePosition
void System::IO::Compression::InflaterManaged::_set_s_distanceBasePosition(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_set_s_distanceBasePosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterManaged", "s_distanceBasePosition", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] s_codeOrder
::ArrayW<uint8_t> System::IO::Compression::InflaterManaged::_get_s_codeOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_get_s_codeOrder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.IO.Compression", "InflaterManaged", "s_codeOrder"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] s_codeOrder
void System::IO::Compression::InflaterManaged::_set_s_codeOrder(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_set_s_codeOrder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterManaged", "s_codeOrder", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] s_staticDistanceTreeTable
::ArrayW<uint8_t> System::IO::Compression::InflaterManaged::_get_s_staticDistanceTreeTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_get_s_staticDistanceTreeTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.IO.Compression", "InflaterManaged", "s_staticDistanceTreeTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] s_staticDistanceTreeTable
void System::IO::Compression::InflaterManaged::_set_s_staticDistanceTreeTable(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_set_s_staticDistanceTreeTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterManaged", "s_staticDistanceTreeTable", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.OutputWindow _output
[[deprecated]] ::System::IO::Compression::OutputWindow*& System::IO::Compression::InflaterManaged::dyn__output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_output"))->offset;
  return *reinterpret_cast<::System::IO::Compression::OutputWindow**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.InputBuffer _input
[[deprecated]] ::System::IO::Compression::InputBuffer*& System::IO::Compression::InflaterManaged::dyn__input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__input");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_input"))->offset;
  return *reinterpret_cast<::System::IO::Compression::InputBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.HuffmanTree _literalLengthTree
[[deprecated]] ::System::IO::Compression::HuffmanTree*& System::IO::Compression::InflaterManaged::dyn__literalLengthTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__literalLengthTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_literalLengthTree"))->offset;
  return *reinterpret_cast<::System::IO::Compression::HuffmanTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.HuffmanTree _distanceTree
[[deprecated]] ::System::IO::Compression::HuffmanTree*& System::IO::Compression::InflaterManaged::dyn__distanceTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__distanceTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distanceTree"))->offset;
  return *reinterpret_cast<::System::IO::Compression::HuffmanTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.InflaterState _state
[[deprecated]] ::System::IO::Compression::InflaterState& System::IO::Compression::InflaterManaged::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::System::IO::Compression::InflaterState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasFormatReader
[[deprecated]] bool& System::IO::Compression::InflaterManaged::dyn__hasFormatReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__hasFormatReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasFormatReader"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bfinal
[[deprecated]] int& System::IO::Compression::InflaterManaged::dyn__bfinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__bfinal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bfinal"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.BlockType _blockType
[[deprecated]] ::System::IO::Compression::BlockType& System::IO::Compression::InflaterManaged::dyn__blockType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__blockType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blockType"))->offset;
  return *reinterpret_cast<::System::IO::Compression::BlockType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _blockLengthBuffer
[[deprecated]] ::ArrayW<uint8_t>& System::IO::Compression::InflaterManaged::dyn__blockLengthBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__blockLengthBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blockLengthBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _blockLength
[[deprecated]] int& System::IO::Compression::InflaterManaged::dyn__blockLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__blockLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blockLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _length
[[deprecated]] int& System::IO::Compression::InflaterManaged::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _distanceCode
[[deprecated]] int& System::IO::Compression::InflaterManaged::dyn__distanceCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__distanceCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distanceCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _extraBits
[[deprecated]] int& System::IO::Compression::InflaterManaged::dyn__extraBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__extraBits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_extraBits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _loopCounter
[[deprecated]] int& System::IO::Compression::InflaterManaged::dyn__loopCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__loopCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopCounter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _literalLengthCodeCount
[[deprecated]] int& System::IO::Compression::InflaterManaged::dyn__literalLengthCodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__literalLengthCodeCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_literalLengthCodeCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _distanceCodeCount
[[deprecated]] int& System::IO::Compression::InflaterManaged::dyn__distanceCodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__distanceCodeCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distanceCodeCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _codeLengthCodeCount
[[deprecated]] int& System::IO::Compression::InflaterManaged::dyn__codeLengthCodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__codeLengthCodeCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codeLengthCodeCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _codeArraySize
[[deprecated]] int& System::IO::Compression::InflaterManaged::dyn__codeArraySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__codeArraySize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codeArraySize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lengthCode
[[deprecated]] int& System::IO::Compression::InflaterManaged::dyn__lengthCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__lengthCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lengthCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _codeList
[[deprecated]] ::ArrayW<uint8_t>& System::IO::Compression::InflaterManaged::dyn__codeList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__codeList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codeList"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _codeLengthTreeCodeLength
[[deprecated]] ::ArrayW<uint8_t>& System::IO::Compression::InflaterManaged::dyn__codeLengthTreeCodeLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__codeLengthTreeCodeLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codeLengthTreeCodeLength"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _deflate64
[[deprecated]] bool& System::IO::Compression::InflaterManaged::dyn__deflate64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__deflate64");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deflate64"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.HuffmanTree _codeLengthTree
[[deprecated]] ::System::IO::Compression::HuffmanTree*& System::IO::Compression::InflaterManaged::dyn__codeLengthTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__codeLengthTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codeLengthTree"))->offset;
  return *reinterpret_cast<::System::IO::Compression::HuffmanTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.IFileFormatReader _formatReader
[[deprecated]] ::System::IO::Compression::IFileFormatReader*& System::IO::Compression::InflaterManaged::dyn__formatReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__formatReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_formatReader"))->offset;
  return *reinterpret_cast<::System::IO::Compression::IFileFormatReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.InflaterManaged..cctor
void System::IO::Compression::InflaterManaged::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "InflaterManaged", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.InflaterManaged.Reset
void System::IO::Compression::InflaterManaged::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.InflaterManaged.SetInput
void System::IO::Compression::InflaterManaged::SetInput(::ArrayW<uint8_t> inputBytes, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::SetInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBytes), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputBytes, offset, length);
}
// Autogenerated method: System.IO.Compression.InflaterManaged.Finished
bool System::IO::Compression::InflaterManaged::Finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::Finished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.InflaterManaged.Inflate
int System::IO::Compression::InflaterManaged::Inflate(::ArrayW<uint8_t> bytes, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::Inflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Inflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, offset, length);
}
// Autogenerated method: System.IO.Compression.InflaterManaged.Decode
bool System::IO::Compression::InflaterManaged::Decode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.InflaterManaged.DecodeUncompressedBlock
bool System::IO::Compression::InflaterManaged::DecodeUncompressedBlock(ByRef<bool> end_of_block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::DecodeUncompressedBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeUncompressedBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(end_of_block));
}
// Autogenerated method: System.IO.Compression.InflaterManaged.DecodeBlock
bool System::IO::Compression::InflaterManaged::DecodeBlock(ByRef<bool> end_of_block_code_seen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::DecodeBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(end_of_block_code_seen));
}
// Autogenerated method: System.IO.Compression.InflaterManaged.DecodeDynamicBlockHeader
bool System::IO::Compression::InflaterManaged::DecodeDynamicBlockHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::DecodeDynamicBlockHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeDynamicBlockHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.InflaterManaged.Dispose
void System::IO::Compression::InflaterManaged::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.InflaterState
#include "System/IO/Compression/InflaterState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingHeader
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingHeader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingHeader"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingHeader
void System::IO::Compression::InflaterState::_set_ReadingHeader(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingHeader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingHeader", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingBFinal
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingBFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingBFinal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingBFinal"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingBFinal
void System::IO::Compression::InflaterState::_set_ReadingBFinal(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingBFinal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingBFinal", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingBType
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingBType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingBType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingBType"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingBType
void System::IO::Compression::InflaterState::_set_ReadingBType(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingBType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingBType", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingNumLitCodes
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingNumLitCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingNumLitCodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingNumLitCodes"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingNumLitCodes
void System::IO::Compression::InflaterState::_set_ReadingNumLitCodes(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingNumLitCodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingNumLitCodes", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingNumDistCodes
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingNumDistCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingNumDistCodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingNumDistCodes"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingNumDistCodes
void System::IO::Compression::InflaterState::_set_ReadingNumDistCodes(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingNumDistCodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingNumDistCodes", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingNumCodeLengthCodes
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingNumCodeLengthCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingNumCodeLengthCodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingNumCodeLengthCodes"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingNumCodeLengthCodes
void System::IO::Compression::InflaterState::_set_ReadingNumCodeLengthCodes(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingNumCodeLengthCodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingNumCodeLengthCodes", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingCodeLengthCodes
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingCodeLengthCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingCodeLengthCodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingCodeLengthCodes"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingCodeLengthCodes
void System::IO::Compression::InflaterState::_set_ReadingCodeLengthCodes(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingCodeLengthCodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingCodeLengthCodes", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingTreeCodesBefore
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingTreeCodesBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingTreeCodesBefore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingTreeCodesBefore"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingTreeCodesBefore
void System::IO::Compression::InflaterState::_set_ReadingTreeCodesBefore(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingTreeCodesBefore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingTreeCodesBefore", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingTreeCodesAfter
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingTreeCodesAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingTreeCodesAfter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingTreeCodesAfter"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingTreeCodesAfter
void System::IO::Compression::InflaterState::_set_ReadingTreeCodesAfter(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingTreeCodesAfter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingTreeCodesAfter", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState DecodeTop
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_DecodeTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_DecodeTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "DecodeTop"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState DecodeTop
void System::IO::Compression::InflaterState::_set_DecodeTop(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_DecodeTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "DecodeTop", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState HaveInitialLength
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_HaveInitialLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_HaveInitialLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "HaveInitialLength"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState HaveInitialLength
void System::IO::Compression::InflaterState::_set_HaveInitialLength(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_HaveInitialLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "HaveInitialLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState HaveFullLength
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_HaveFullLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_HaveFullLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "HaveFullLength"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState HaveFullLength
void System::IO::Compression::InflaterState::_set_HaveFullLength(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_HaveFullLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "HaveFullLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState HaveDistCode
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_HaveDistCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_HaveDistCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "HaveDistCode"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState HaveDistCode
void System::IO::Compression::InflaterState::_set_HaveDistCode(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_HaveDistCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "HaveDistCode", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState UncompressedAligning
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_UncompressedAligning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_UncompressedAligning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "UncompressedAligning"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState UncompressedAligning
void System::IO::Compression::InflaterState::_set_UncompressedAligning(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_UncompressedAligning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "UncompressedAligning", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState UncompressedByte1
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_UncompressedByte1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_UncompressedByte1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "UncompressedByte1"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState UncompressedByte1
void System::IO::Compression::InflaterState::_set_UncompressedByte1(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_UncompressedByte1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "UncompressedByte1", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState UncompressedByte2
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_UncompressedByte2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_UncompressedByte2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "UncompressedByte2"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState UncompressedByte2
void System::IO::Compression::InflaterState::_set_UncompressedByte2(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_UncompressedByte2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "UncompressedByte2", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState UncompressedByte3
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_UncompressedByte3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_UncompressedByte3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "UncompressedByte3"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState UncompressedByte3
void System::IO::Compression::InflaterState::_set_UncompressedByte3(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_UncompressedByte3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "UncompressedByte3", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState UncompressedByte4
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_UncompressedByte4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_UncompressedByte4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "UncompressedByte4"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState UncompressedByte4
void System::IO::Compression::InflaterState::_set_UncompressedByte4(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_UncompressedByte4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "UncompressedByte4", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState DecodingUncompressed
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_DecodingUncompressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_DecodingUncompressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "DecodingUncompressed"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState DecodingUncompressed
void System::IO::Compression::InflaterState::_set_DecodingUncompressed(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_DecodingUncompressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "DecodingUncompressed", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState StartReadingFooter
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_StartReadingFooter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_StartReadingFooter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "StartReadingFooter"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState StartReadingFooter
void System::IO::Compression::InflaterState::_set_StartReadingFooter(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_StartReadingFooter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "StartReadingFooter", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingFooter
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingFooter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingFooter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingFooter"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingFooter
void System::IO::Compression::InflaterState::_set_ReadingFooter(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingFooter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingFooter", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState VerifyingFooter
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_VerifyingFooter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_VerifyingFooter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "VerifyingFooter"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState VerifyingFooter
void System::IO::Compression::InflaterState::_set_VerifyingFooter(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_VerifyingFooter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "VerifyingFooter", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState Done
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_Done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_Done");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "Done"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState Done
void System::IO::Compression::InflaterState::_set_Done(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_Done");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "Done", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::IO::Compression::InflaterState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.InputBuffer
#include "System/IO/Compression/InputBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
[[deprecated]] ::ArrayW<uint8_t>& System::IO::Compression::InputBuffer::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _start
[[deprecated]] int& System::IO::Compression::InputBuffer::dyn__start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::dyn__start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _end
[[deprecated]] int& System::IO::Compression::InputBuffer::dyn__end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::dyn__end");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_end"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _bitBuffer
[[deprecated]] uint& System::IO::Compression::InputBuffer::dyn__bitBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::dyn__bitBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bitBuffer"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bitsInBuffer
[[deprecated]] int& System::IO::Compression::InputBuffer::dyn__bitsInBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::dyn__bitsInBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bitsInBuffer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.InputBuffer.get_AvailableBits
int System::IO::Compression::InputBuffer::get_AvailableBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::get_AvailableBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AvailableBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.InputBuffer.get_AvailableBytes
int System::IO::Compression::InputBuffer::get_AvailableBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::get_AvailableBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AvailableBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.InputBuffer.EnsureBitsAvailable
bool System::IO::Compression::InputBuffer::EnsureBitsAvailable(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::EnsureBitsAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureBitsAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, count);
}
// Autogenerated method: System.IO.Compression.InputBuffer.TryLoad16Bits
uint System::IO::Compression::InputBuffer::TryLoad16Bits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::TryLoad16Bits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryLoad16Bits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.InputBuffer.GetBitMask
uint System::IO::Compression::InputBuffer::GetBitMask(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::GetBitMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBitMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, count);
}
// Autogenerated method: System.IO.Compression.InputBuffer.GetBits
int System::IO::Compression::InputBuffer::GetBits(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::GetBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, count);
}
// Autogenerated method: System.IO.Compression.InputBuffer.CopyTo
int System::IO::Compression::InputBuffer::CopyTo(::ArrayW<uint8_t> output, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, output, offset, length);
}
// Autogenerated method: System.IO.Compression.InputBuffer.NeedsInput
bool System::IO::Compression::InputBuffer::NeedsInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::NeedsInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NeedsInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.InputBuffer.SetInput
void System::IO::Compression::InputBuffer::SetInput(::ArrayW<uint8_t> buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::SetInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, length);
}
// Autogenerated method: System.IO.Compression.InputBuffer.SkipBits
void System::IO::Compression::InputBuffer::SkipBits(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::SkipBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n);
}
// Autogenerated method: System.IO.Compression.InputBuffer.SkipToByteBoundary
void System::IO::Compression::InputBuffer::SkipToByteBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::SkipToByteBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipToByteBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.Match
#include "System/IO/Compression/Match.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.MatchState <State>k__BackingField
[[deprecated]] ::System::IO::Compression::MatchState& System::IO::Compression::Match::dyn_$State$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::dyn_$State$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<State>k__BackingField"))->offset;
  return *reinterpret_cast<::System::IO::Compression::MatchState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Position>k__BackingField
[[deprecated]] int& System::IO::Compression::Match::dyn_$Position$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::dyn_$Position$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Position>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Length>k__BackingField
[[deprecated]] int& System::IO::Compression::Match::dyn_$Length$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::dyn_$Length$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Length>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte <Symbol>k__BackingField
[[deprecated]] uint8_t& System::IO::Compression::Match::dyn_$Symbol$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::dyn_$Symbol$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Symbol>k__BackingField"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.Match.get_State
::System::IO::Compression::MatchState System::IO::Compression::Match::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::MatchState, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Match.set_State
void System::IO::Compression::Match::set_State(::System::IO::Compression::MatchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.Match.get_Position
int System::IO::Compression::Match::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Match.set_Position
void System::IO::Compression::Match::set_Position(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::set_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.Match.get_Length
int System::IO::Compression::Match::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Match.set_Length
void System::IO::Compression::Match::set_Length(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::set_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.Match.get_Symbol
uint8_t System::IO::Compression::Match::get_Symbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::get_Symbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Symbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Match.set_Symbol
void System::IO::Compression::Match::set_Symbol(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::set_Symbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Symbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.MatchState
#include "System/IO/Compression/MatchState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.MatchState HasSymbol
::System::IO::Compression::MatchState System::IO::Compression::MatchState::_get_HasSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::MatchState::_get_HasSymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::MatchState>("System.IO.Compression", "MatchState", "HasSymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.MatchState HasSymbol
void System::IO::Compression::MatchState::_set_HasSymbol(::System::IO::Compression::MatchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::MatchState::_set_HasSymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "MatchState", "HasSymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.MatchState HasMatch
::System::IO::Compression::MatchState System::IO::Compression::MatchState::_get_HasMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::MatchState::_get_HasMatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::MatchState>("System.IO.Compression", "MatchState", "HasMatch"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.MatchState HasMatch
void System::IO::Compression::MatchState::_set_HasMatch(::System::IO::Compression::MatchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::MatchState::_set_HasMatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "MatchState", "HasMatch", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.MatchState HasSymbolAndMatch
::System::IO::Compression::MatchState System::IO::Compression::MatchState::_get_HasSymbolAndMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::MatchState::_get_HasSymbolAndMatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::MatchState>("System.IO.Compression", "MatchState", "HasSymbolAndMatch"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.MatchState HasSymbolAndMatch
void System::IO::Compression::MatchState::_set_HasSymbolAndMatch(::System::IO::Compression::MatchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::MatchState::_set_HasSymbolAndMatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "MatchState", "HasSymbolAndMatch", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::IO::Compression::MatchState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::MatchState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.OutputBuffer
#include "System/IO/Compression/OutputBuffer.hpp"
// Including type: System.IO.Compression.OutputBuffer/System.IO.Compression.BufferState
#include "System/IO/Compression/OutputBuffer_BufferState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _byteBuffer
[[deprecated]] ::ArrayW<uint8_t>& System::IO::Compression::OutputBuffer::dyn__byteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::dyn__byteBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_byteBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pos
[[deprecated]] int& System::IO::Compression::OutputBuffer::dyn__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::dyn__pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _bitBuf
[[deprecated]] uint& System::IO::Compression::OutputBuffer::dyn__bitBuf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::dyn__bitBuf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bitBuf"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bitCount
[[deprecated]] int& System::IO::Compression::OutputBuffer::dyn__bitCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::dyn__bitCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bitCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.get_BytesWritten
int System::IO::Compression::OutputBuffer::get_BytesWritten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::get_BytesWritten");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BytesWritten", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.get_FreeBytes
int System::IO::Compression::OutputBuffer::get_FreeBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::get_FreeBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FreeBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.get_BitsInBuffer
int System::IO::Compression::OutputBuffer::get_BitsInBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::get_BitsInBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BitsInBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.UpdateBuffer
void System::IO::Compression::OutputBuffer::UpdateBuffer(::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::UpdateBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.WriteUInt16
void System::IO::Compression::OutputBuffer::WriteUInt16(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::WriteUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.WriteBits
void System::IO::Compression::OutputBuffer::WriteBits(int n, uint bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::WriteBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(bits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n, bits);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.FlushBits
void System::IO::Compression::OutputBuffer::FlushBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::FlushBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.WriteBytes
void System::IO::Compression::OutputBuffer::WriteBytes(::ArrayW<uint8_t> byteArray, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::WriteBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteArray), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byteArray, offset, count);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.WriteBytesUnaligned
void System::IO::Compression::OutputBuffer::WriteBytesUnaligned(::ArrayW<uint8_t> byteArray, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::WriteBytesUnaligned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBytesUnaligned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteArray), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byteArray, offset, count);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.WriteByteUnaligned
void System::IO::Compression::OutputBuffer::WriteByteUnaligned(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::WriteByteUnaligned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByteUnaligned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, b);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.DumpState
::System::IO::Compression::OutputBuffer::BufferState System::IO::Compression::OutputBuffer::DumpState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::DumpState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DumpState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::OutputBuffer::BufferState, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.RestoreState
void System::IO::Compression::OutputBuffer::RestoreState(::System::IO::Compression::OutputBuffer::BufferState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::RestoreState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestoreState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.OutputBuffer/System.IO.Compression.BufferState
#include "System/IO/Compression/OutputBuffer_BufferState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _pos
[[deprecated]] int& System::IO::Compression::OutputBuffer::BufferState::dyn__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::BufferState::dyn__pos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.UInt32 _bitBuf
[[deprecated]] uint& System::IO::Compression::OutputBuffer::BufferState::dyn__bitBuf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::BufferState::dyn__bitBuf");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bitBuf"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _bitCount
[[deprecated]] int& System::IO::Compression::OutputBuffer::BufferState::dyn__bitCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::BufferState::dyn__bitCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bitCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.OutputBuffer/System.IO.Compression.BufferState..ctor
// ABORTED elsewhere.  System::IO::Compression::OutputBuffer::BufferState::BufferState(int pos, uint bitBuf, int bitCount)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.OutputWindow
#include "System/IO/Compression/OutputWindow.hpp"
// Including type: System.IO.Compression.InputBuffer
#include "System/IO/Compression/InputBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _window
[[deprecated]] ::ArrayW<uint8_t>& System::IO::Compression::OutputWindow::dyn__window() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputWindow::dyn__window");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_window"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _end
[[deprecated]] int& System::IO::Compression::OutputWindow::dyn__end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputWindow::dyn__end");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_end"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bytesUsed
[[deprecated]] int& System::IO::Compression::OutputWindow::dyn__bytesUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputWindow::dyn__bytesUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bytesUsed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.OutputWindow.get_FreeBytes
int System::IO::Compression::OutputWindow::get_FreeBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputWindow::get_FreeBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FreeBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.OutputWindow.get_AvailableBytes
int System::IO::Compression::OutputWindow::get_AvailableBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputWindow::get_AvailableBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AvailableBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.OutputWindow.Write
void System::IO::Compression::OutputWindow::Write(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputWindow::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, b);
}
// Autogenerated method: System.IO.Compression.OutputWindow.WriteLengthDistance
void System::IO::Compression::OutputWindow::WriteLengthDistance(int length, int distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputWindow::WriteLengthDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLengthDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, length, distance);
}
// Autogenerated method: System.IO.Compression.OutputWindow.CopyFrom
int System::IO::Compression::OutputWindow::CopyFrom(::System::IO::Compression::InputBuffer* input, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputWindow::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, input, length);
}
// Autogenerated method: System.IO.Compression.OutputWindow.CopyTo
int System::IO::Compression::OutputWindow::CopyTo(::ArrayW<uint8_t> output, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputWindow::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, output, offset, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper
#include "System/IO/Compression/PositionPreservingWriteOnlyStreamWrapper.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream _stream
[[deprecated]] ::System::IO::Stream*& System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::dyn__stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::dyn__stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _position
[[deprecated]] int64_t& System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.get_CanRead
bool System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.get_CanSeek
bool System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.get_CanWrite
bool System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.get_Position
int64_t System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.set_Position
void System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.get_ReadTimeout
int System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_ReadTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.set_ReadTimeout
void System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::set_ReadTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::set_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.get_WriteTimeout
int System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_WriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_WriteTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.get_Length
int64_t System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.Write
void System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.BeginWrite
::System::IAsyncResult* System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::BeginWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.EndWrite
void System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::EndWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.WriteByte
void System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::WriteByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.WriteAsync
::System::Threading::Tasks::Task* System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.Flush
void System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.FlushAsync
::System::Threading::Tasks::Task* System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::FlushAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::FlushAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.Close
void System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.Dispose
void System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.Seek
int64_t System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.SetLength
void System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.Read
int System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipArchive
#include "System/IO/Compression/ZipArchive.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.Compression.ZipArchiveEntry
#include "System/IO/Compression/ZipArchiveEntry.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _archiveStream
[[deprecated]] ::System::IO::Stream*& System::IO::Compression::ZipArchive::dyn__archiveStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__archiveStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_archiveStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipArchiveEntry _archiveStreamOwner
[[deprecated]] ::System::IO::Compression::ZipArchiveEntry*& System::IO::Compression::ZipArchive::dyn__archiveStreamOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__archiveStreamOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_archiveStreamOwner"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchiveEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.BinaryReader _archiveReader
[[deprecated]] ::System::IO::BinaryReader*& System::IO::Compression::ZipArchive::dyn__archiveReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__archiveReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_archiveReader"))->offset;
  return *reinterpret_cast<::System::IO::BinaryReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipArchiveMode _mode
[[deprecated]] ::System::IO::Compression::ZipArchiveMode& System::IO::Compression::ZipArchive::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchiveMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.IO.Compression.ZipArchiveEntry> _entries
[[deprecated]] ::System::Collections::Generic::List_1<::System::IO::Compression::ZipArchiveEntry*>*& System::IO::Compression::ZipArchive::dyn__entries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__entries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entries"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::IO::Compression::ZipArchiveEntry*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ObjectModel.ReadOnlyCollection`1<System.IO.Compression.ZipArchiveEntry> _entriesCollection
[[deprecated]] ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::IO::Compression::ZipArchiveEntry*>*& System::IO::Compression::ZipArchive::dyn__entriesCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__entriesCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entriesCollection"))->offset;
  return *reinterpret_cast<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::IO::Compression::ZipArchiveEntry*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.IO.Compression.ZipArchiveEntry> _entriesDictionary
[[deprecated]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::IO::Compression::ZipArchiveEntry*>*& System::IO::Compression::ZipArchive::dyn__entriesDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__entriesDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entriesDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::IO::Compression::ZipArchiveEntry*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _readEntries
[[deprecated]] bool& System::IO::Compression::ZipArchive::dyn__readEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__readEntries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readEntries"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _leaveOpen
[[deprecated]] bool& System::IO::Compression::ZipArchive::dyn__leaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__leaveOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaveOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _centralDirectoryStart
[[deprecated]] int64_t& System::IO::Compression::ZipArchive::dyn__centralDirectoryStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__centralDirectoryStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centralDirectoryStart"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDisposed
[[deprecated]] bool& System::IO::Compression::ZipArchive::dyn__isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__isDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _numberOfThisDisk
[[deprecated]] uint& System::IO::Compression::ZipArchive::dyn__numberOfThisDisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__numberOfThisDisk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfThisDisk"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _expectedNumberOfEntries
[[deprecated]] int64_t& System::IO::Compression::ZipArchive::dyn__expectedNumberOfEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__expectedNumberOfEntries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expectedNumberOfEntries"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _backingStream
[[deprecated]] ::System::IO::Stream*& System::IO::Compression::ZipArchive::dyn__backingStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__backingStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backingStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _archiveComment
[[deprecated]] ::ArrayW<uint8_t>& System::IO::Compression::ZipArchive::dyn__archiveComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__archiveComment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_archiveComment"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding _entryNameEncoding
[[deprecated]] ::System::Text::Encoding*& System::IO::Compression::ZipArchive::dyn__entryNameEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__entryNameEncoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entryNameEncoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.ZipArchive.get_Entries
::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::IO::Compression::ZipArchiveEntry*>* System::IO::Compression::ZipArchive::get_Entries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::get_Entries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::IO::Compression::ZipArchiveEntry*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.get_Mode
::System::IO::Compression::ZipArchiveMode System::IO::Compression::ZipArchive::get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::get_Mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchiveMode, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.get_ArchiveReader
::System::IO::BinaryReader* System::IO::Compression::ZipArchive::get_ArchiveReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::get_ArchiveReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArchiveReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::BinaryReader*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.get_ArchiveStream
::System::IO::Stream* System::IO::Compression::ZipArchive::get_ArchiveStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::get_ArchiveStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArchiveStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.get_NumberOfThisDisk
uint System::IO::Compression::ZipArchive::get_NumberOfThisDisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::get_NumberOfThisDisk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumberOfThisDisk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.get_EntryNameEncoding
::System::Text::Encoding* System::IO::Compression::ZipArchive::get_EntryNameEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::get_EntryNameEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EntryNameEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.set_EntryNameEncoding
void System::IO::Compression::ZipArchive::set_EntryNameEncoding(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::set_EntryNameEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EntryNameEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchive.CreateEntry
::System::IO::Compression::ZipArchiveEntry* System::IO::Compression::ZipArchive::CreateEntry(::StringW entryName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::CreateEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entryName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchiveEntry*, false>(this, ___internal__method, entryName);
}
// Autogenerated method: System.IO.Compression.ZipArchive.CreateEntry
::System::IO::Compression::ZipArchiveEntry* System::IO::Compression::ZipArchive::CreateEntry(::StringW entryName, ::System::IO::Compression::CompressionLevel compressionLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::CreateEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entryName), ::il2cpp_utils::ExtractType(compressionLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchiveEntry*, false>(this, ___internal__method, entryName, compressionLevel);
}
// Autogenerated method: System.IO.Compression.ZipArchive.Dispose
void System::IO::Compression::ZipArchive::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::ZipArchive*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.Compression.ZipArchive.Dispose
void System::IO::Compression::ZipArchive::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::ZipArchive*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.DoCreateEntry
::System::IO::Compression::ZipArchiveEntry* System::IO::Compression::ZipArchive::DoCreateEntry(::StringW entryName, ::System::Nullable_1<::System::IO::Compression::CompressionLevel> compressionLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::DoCreateEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoCreateEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entryName), ::il2cpp_utils::ExtractType(compressionLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchiveEntry*, false>(this, ___internal__method, entryName, compressionLevel);
}
// Autogenerated method: System.IO.Compression.ZipArchive.AcquireArchiveStream
void System::IO::Compression::ZipArchive::AcquireArchiveStream(::System::IO::Compression::ZipArchiveEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::AcquireArchiveStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcquireArchiveStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entry);
}
// Autogenerated method: System.IO.Compression.ZipArchive.AddEntry
void System::IO::Compression::ZipArchive::AddEntry(::System::IO::Compression::ZipArchiveEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::AddEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entry);
}
// Autogenerated method: System.IO.Compression.ZipArchive.ReleaseArchiveStream
void System::IO::Compression::ZipArchive::ReleaseArchiveStream(::System::IO::Compression::ZipArchiveEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::ReleaseArchiveStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseArchiveStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entry);
}
// Autogenerated method: System.IO.Compression.ZipArchive.RemoveEntry
void System::IO::Compression::ZipArchive::RemoveEntry(::System::IO::Compression::ZipArchiveEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::RemoveEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entry);
}
// Autogenerated method: System.IO.Compression.ZipArchive.ThrowIfDisposed
void System::IO::Compression::ZipArchive::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.CloseStreams
void System::IO::Compression::ZipArchive::CloseStreams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::CloseStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.EnsureCentralDirectoryRead
void System::IO::Compression::ZipArchive::EnsureCentralDirectoryRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::EnsureCentralDirectoryRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCentralDirectoryRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.Init
void System::IO::Compression::ZipArchive::Init(::System::IO::Stream* stream, ::System::IO::Compression::ZipArchiveMode mode, bool leaveOpen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(leaveOpen)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, mode, leaveOpen);
}
// Autogenerated method: System.IO.Compression.ZipArchive.ReadCentralDirectory
void System::IO::Compression::ZipArchive::ReadCentralDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::ReadCentralDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCentralDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.ReadEndOfCentralDirectory
void System::IO::Compression::ZipArchive::ReadEndOfCentralDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::ReadEndOfCentralDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadEndOfCentralDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.WriteFile
void System::IO::Compression::ZipArchive::WriteFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::WriteFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.WriteArchiveEpilogue
void System::IO::Compression::ZipArchive::WriteArchiveEpilogue(int64_t startOfCentralDirectory, int64_t sizeOfCentralDirectory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::WriteArchiveEpilogue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteArchiveEpilogue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startOfCentralDirectory), ::il2cpp_utils::ExtractType(sizeOfCentralDirectory)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startOfCentralDirectory, sizeOfCentralDirectory);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Compression.ZipArchiveEntry
#include "System/IO/Compression/ZipArchiveEntry.hpp"
// Including type: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream
#include "System/IO/Compression/ZipArchiveEntry_DirectToArchiveWriterStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c
#include "System/IO/Compression/ZipArchiveEntry_--c.hpp"
// Including type: System.IO.Compression.ZipArchive
#include "System/IO/Compression/ZipArchive.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.IO.Compression.CheckSumAndSizeWriteStream
#include "System/IO/Compression/CheckSumAndSizeWriteStream.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean s_allowLargeZipArchiveEntriesInUpdateMode
bool System::IO::Compression::ZipArchiveEntry::_get_s_allowLargeZipArchiveEntriesInUpdateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::_get_s_allowLargeZipArchiveEntriesInUpdateMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.IO.Compression", "ZipArchiveEntry", "s_allowLargeZipArchiveEntriesInUpdateMode"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean s_allowLargeZipArchiveEntriesInUpdateMode
void System::IO::Compression::ZipArchiveEntry::_set_s_allowLargeZipArchiveEntriesInUpdateMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::_set_s_allowLargeZipArchiveEntriesInUpdateMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry", "s_allowLargeZipArchiveEntriesInUpdateMode", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.IO.Compression.ZipVersionMadeByPlatform CurrentZipPlatform
::System::IO::Compression::ZipVersionMadeByPlatform System::IO::Compression::ZipArchiveEntry::_get_CurrentZipPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::_get_CurrentZipPlatform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionMadeByPlatform>("System.IO.Compression", "ZipArchiveEntry", "CurrentZipPlatform"));
}
// Autogenerated static field setter
// Set static field: static readonly System.IO.Compression.ZipVersionMadeByPlatform CurrentZipPlatform
void System::IO::Compression::ZipArchiveEntry::_set_CurrentZipPlatform(::System::IO::Compression::ZipVersionMadeByPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::_set_CurrentZipPlatform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry", "CurrentZipPlatform", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipArchive _archive
[[deprecated]] ::System::IO::Compression::ZipArchive*& System::IO::Compression::ZipArchiveEntry::dyn__archive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__archive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_archive"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchive**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _originallyInArchive
[[deprecated]] bool& System::IO::Compression::ZipArchiveEntry::dyn__originallyInArchive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__originallyInArchive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originallyInArchive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _diskNumberStart
[[deprecated]] int& System::IO::Compression::ZipArchiveEntry::dyn__diskNumberStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__diskNumberStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_diskNumberStart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.ZipVersionMadeByPlatform _versionMadeByPlatform
[[deprecated]] ::System::IO::Compression::ZipVersionMadeByPlatform& System::IO::Compression::ZipArchiveEntry::dyn__versionMadeByPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__versionMadeByPlatform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_versionMadeByPlatform"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipVersionMadeByPlatform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipVersionNeededValues _versionMadeBySpecification
[[deprecated]] ::System::IO::Compression::ZipVersionNeededValues& System::IO::Compression::ZipArchiveEntry::dyn__versionMadeBySpecification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__versionMadeBySpecification");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_versionMadeBySpecification"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipVersionNeededValues*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipVersionNeededValues _versionToExtract
[[deprecated]] ::System::IO::Compression::ZipVersionNeededValues& System::IO::Compression::ZipArchiveEntry::dyn__versionToExtract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__versionToExtract");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_versionToExtract"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipVersionNeededValues*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipArchiveEntry/System.IO.Compression.BitFlagValues _generalPurposeBitFlag
[[deprecated]] ::System::IO::Compression::ZipArchiveEntry::BitFlagValues& System::IO::Compression::ZipArchiveEntry::dyn__generalPurposeBitFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__generalPurposeBitFlag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_generalPurposeBitFlag"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchiveEntry::BitFlagValues*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues _storedCompressionMethod
[[deprecated]] ::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues& System::IO::Compression::ZipArchiveEntry::dyn__storedCompressionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__storedCompressionMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storedCompressionMethod"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTimeOffset _lastModified
[[deprecated]] ::System::DateTimeOffset& System::IO::Compression::ZipArchiveEntry::dyn__lastModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__lastModified");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastModified"))->offset;
  return *reinterpret_cast<::System::DateTimeOffset*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _compressedSize
[[deprecated]] int64_t& System::IO::Compression::ZipArchiveEntry::dyn__compressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__compressedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compressedSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _uncompressedSize
[[deprecated]] int64_t& System::IO::Compression::ZipArchiveEntry::dyn__uncompressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__uncompressedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uncompressedSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _offsetOfLocalHeader
[[deprecated]] int64_t& System::IO::Compression::ZipArchiveEntry::dyn__offsetOfLocalHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__offsetOfLocalHeader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offsetOfLocalHeader"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> _storedOffsetOfCompressedData
[[deprecated]] ::System::Nullable_1<int64_t>& System::IO::Compression::ZipArchiveEntry::dyn__storedOffsetOfCompressedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__storedOffsetOfCompressedData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storedOffsetOfCompressedData"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _crc32
[[deprecated]] uint& System::IO::Compression::ZipArchiveEntry::dyn__crc32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__crc32");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_crc32"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[][] _compressedBytes
[[deprecated]] ::ArrayW<::ArrayW<uint8_t>>& System::IO::Compression::ZipArchiveEntry::dyn__compressedBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__compressedBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compressedBytes"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<uint8_t>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.MemoryStream _storedUncompressedData
[[deprecated]] ::System::IO::MemoryStream*& System::IO::Compression::ZipArchiveEntry::dyn__storedUncompressedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__storedUncompressedData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storedUncompressedData"))->offset;
  return *reinterpret_cast<::System::IO::MemoryStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _currentlyOpenForWrite
[[deprecated]] bool& System::IO::Compression::ZipArchiveEntry::dyn__currentlyOpenForWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__currentlyOpenForWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentlyOpenForWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _everOpenedForWrite
[[deprecated]] bool& System::IO::Compression::ZipArchiveEntry::dyn__everOpenedForWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__everOpenedForWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_everOpenedForWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _outstandingWriteStream
[[deprecated]] ::System::IO::Stream*& System::IO::Compression::ZipArchiveEntry::dyn__outstandingWriteStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__outstandingWriteStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outstandingWriteStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _externalFileAttr
[[deprecated]] uint& System::IO::Compression::ZipArchiveEntry::dyn__externalFileAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__externalFileAttr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_externalFileAttr"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _storedEntryName
[[deprecated]] ::StringW& System::IO::Compression::ZipArchiveEntry::dyn__storedEntryName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__storedEntryName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storedEntryName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _storedEntryNameBytes
[[deprecated]] ::ArrayW<uint8_t>& System::IO::Compression::ZipArchiveEntry::dyn__storedEntryNameBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__storedEntryNameBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storedEntryNameBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.IO.Compression.ZipGenericExtraField> _cdUnknownExtraFields
[[deprecated]] ::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>*& System::IO::Compression::ZipArchiveEntry::dyn__cdUnknownExtraFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__cdUnknownExtraFields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cdUnknownExtraFields"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.IO.Compression.ZipGenericExtraField> _lhUnknownExtraFields
[[deprecated]] ::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>*& System::IO::Compression::ZipArchiveEntry::dyn__lhUnknownExtraFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__lhUnknownExtraFields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lhUnknownExtraFields"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _fileComment
[[deprecated]] ::ArrayW<uint8_t>& System::IO::Compression::ZipArchiveEntry::dyn__fileComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__fileComment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileComment"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.IO.Compression.CompressionLevel> _compressionLevel
[[deprecated]] ::System::Nullable_1<::System::IO::Compression::CompressionLevel>& System::IO::Compression::ZipArchiveEntry::dyn__compressionLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__compressionLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compressionLevel"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::IO::Compression::CompressionLevel>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_FullName
::StringW System::IO::Compression::ZipArchiveEntry::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_FullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.set_FullName
void System::IO::Compression::ZipArchiveEntry::set_FullName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::set_FullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_LastWriteTime
::System::DateTimeOffset System::IO::Compression::ZipArchiveEntry::get_LastWriteTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_LastWriteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastWriteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.set_LastWriteTime
void System::IO::Compression::ZipArchiveEntry::set_LastWriteTime(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::set_LastWriteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastWriteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_Length
int64_t System::IO::Compression::ZipArchiveEntry::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_Name
::StringW System::IO::Compression::ZipArchiveEntry::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_EverOpenedForWrite
bool System::IO::Compression::ZipArchiveEntry::get_EverOpenedForWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_EverOpenedForWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EverOpenedForWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_OffsetOfCompressedData
int64_t System::IO::Compression::ZipArchiveEntry::get_OffsetOfCompressedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_OffsetOfCompressedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OffsetOfCompressedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_UncompressedData
::System::IO::MemoryStream* System::IO::Compression::ZipArchiveEntry::get_UncompressedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_UncompressedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UncompressedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::MemoryStream*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_CompressionMethod
::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues System::IO::Compression::ZipArchiveEntry::get_CompressionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_CompressionMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompressionMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.set_CompressionMethod
void System::IO::Compression::ZipArchiveEntry::set_CompressionMethod(::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::set_CompressionMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CompressionMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry..cctor
void System::IO::Compression::ZipArchiveEntry::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipArchiveEntry", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.Delete
void System::IO::Compression::ZipArchiveEntry::Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.Open
::System::IO::Stream* System::IO::Compression::ZipArchiveEntry::Open() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.DecodeEntryName
::StringW System::IO::Compression::ZipArchiveEntry::DecodeEntryName(::ArrayW<uint8_t> entryNameBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DecodeEntryName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeEntryName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entryNameBytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, entryNameBytes);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.EncodeEntryName
::ArrayW<uint8_t> System::IO::Compression::ZipArchiveEntry::EncodeEntryName(::StringW entryName, ByRef<bool> isUTF8) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::EncodeEntryName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeEntryName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entryName), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, entryName, byref(isUTF8));
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.WriteAndFinishLocalEntry
void System::IO::Compression::ZipArchiveEntry::WriteAndFinishLocalEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::WriteAndFinishLocalEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAndFinishLocalEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.WriteCentralDirectoryFileHeader
void System::IO::Compression::ZipArchiveEntry::WriteCentralDirectoryFileHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::WriteCentralDirectoryFileHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCentralDirectoryFileHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.LoadLocalHeaderExtraFieldAndCompressedBytesIfNeeded
bool System::IO::Compression::ZipArchiveEntry::LoadLocalHeaderExtraFieldAndCompressedBytesIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::LoadLocalHeaderExtraFieldAndCompressedBytesIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadLocalHeaderExtraFieldAndCompressedBytesIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.ThrowIfNotOpenable
void System::IO::Compression::ZipArchiveEntry::ThrowIfNotOpenable(bool needToUncompress, bool needToLoadIntoMemory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::ThrowIfNotOpenable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfNotOpenable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(needToUncompress), ::il2cpp_utils::ExtractType(needToLoadIntoMemory)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, needToUncompress, needToLoadIntoMemory);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.GetDataCompressor
::System::IO::Compression::CheckSumAndSizeWriteStream* System::IO::Compression::ZipArchiveEntry::GetDataCompressor(::System::IO::Stream* backingStream, bool leaveBackingStreamOpen, ::System::EventHandler* onClose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::GetDataCompressor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataCompressor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(backingStream), ::il2cpp_utils::ExtractType(leaveBackingStreamOpen), ::il2cpp_utils::ExtractType(onClose)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::CheckSumAndSizeWriteStream*, false>(this, ___internal__method, backingStream, leaveBackingStreamOpen, onClose);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.GetDataDecompressor
::System::IO::Stream* System::IO::Compression::ZipArchiveEntry::GetDataDecompressor(::System::IO::Stream* compressedStreamToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::GetDataDecompressor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataDecompressor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compressedStreamToRead)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, compressedStreamToRead);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.OpenInReadMode
::System::IO::Stream* System::IO::Compression::ZipArchiveEntry::OpenInReadMode(bool checkOpenable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::OpenInReadMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenInReadMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(checkOpenable)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, checkOpenable);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.OpenInWriteMode
::System::IO::Stream* System::IO::Compression::ZipArchiveEntry::OpenInWriteMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::OpenInWriteMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenInWriteMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.OpenInUpdateMode
::System::IO::Stream* System::IO::Compression::ZipArchiveEntry::OpenInUpdateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::OpenInUpdateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenInUpdateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.IsOpenable
bool System::IO::Compression::ZipArchiveEntry::IsOpenable(bool needToUncompress, bool needToLoadIntoMemory, ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::IsOpenable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOpenable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(needToUncompress), ::il2cpp_utils::ExtractType(needToLoadIntoMemory), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, needToUncompress, needToLoadIntoMemory, byref(message));
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.SizesTooLarge
bool System::IO::Compression::ZipArchiveEntry::SizesTooLarge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::SizesTooLarge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SizesTooLarge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.WriteLocalFileHeader
bool System::IO::Compression::ZipArchiveEntry::WriteLocalFileHeader(bool isEmptyFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::WriteLocalFileHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLocalFileHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isEmptyFile)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, isEmptyFile);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.WriteLocalFileHeaderAndDataIfNeeded
void System::IO::Compression::ZipArchiveEntry::WriteLocalFileHeaderAndDataIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::WriteLocalFileHeaderAndDataIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLocalFileHeaderAndDataIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.WriteCrcAndSizesInLocalHeader
void System::IO::Compression::ZipArchiveEntry::WriteCrcAndSizesInLocalHeader(bool zip64HeaderUsed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::WriteCrcAndSizesInLocalHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCrcAndSizesInLocalHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(zip64HeaderUsed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, zip64HeaderUsed);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.WriteDataDescriptor
void System::IO::Compression::ZipArchiveEntry::WriteDataDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::WriteDataDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDataDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.UnloadStreams
void System::IO::Compression::ZipArchiveEntry::UnloadStreams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::UnloadStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnloadStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.CloseStreams
void System::IO::Compression::ZipArchiveEntry::CloseStreams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CloseStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.VersionToExtractAtLeast
void System::IO::Compression::ZipArchiveEntry::VersionToExtractAtLeast(::System::IO::Compression::ZipVersionNeededValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::VersionToExtractAtLeast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VersionToExtractAtLeast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.ThrowIfInvalidArchive
void System::IO::Compression::ZipArchiveEntry::ThrowIfInvalidArchive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::ThrowIfInvalidArchive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfInvalidArchive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.GetFileName_Windows
::StringW System::IO::Compression::ZipArchiveEntry::GetFileName_Windows(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::GetFileName_Windows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipArchiveEntry", "GetFileName_Windows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.GetFileName_Unix
::StringW System::IO::Compression::ZipArchiveEntry::GetFileName_Unix(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::GetFileName_Unix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipArchiveEntry", "GetFileName_Unix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.ParseFileName
::StringW System::IO::Compression::ZipArchiveEntry::ParseFileName(::StringW path, ::System::IO::Compression::ZipVersionMadeByPlatform madeByPlatform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::ParseFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipArchiveEntry", "ParseFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(madeByPlatform)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, madeByPlatform);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.ToString
::StringW System::IO::Compression::ZipArchiveEntry::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream
#include "System/IO/Compression/ZipArchiveEntry_DirectToArchiveWriterStream.hpp"
// Including type: System.IO.Compression.CheckSumAndSizeWriteStream
#include "System/IO/Compression/CheckSumAndSizeWriteStream.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int64 _position
[[deprecated]] int64_t& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.CheckSumAndSizeWriteStream _crcSizeStream
[[deprecated]] ::System::IO::Compression::CheckSumAndSizeWriteStream*& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__crcSizeStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__crcSizeStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_crcSizeStream"))->offset;
  return *reinterpret_cast<::System::IO::Compression::CheckSumAndSizeWriteStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _everWritten
[[deprecated]] bool& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__everWritten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__everWritten");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_everWritten"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDisposed
[[deprecated]] bool& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__isDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipArchiveEntry _entry
[[deprecated]] ::System::IO::Compression::ZipArchiveEntry*& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__entry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entry"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchiveEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _usedZip64inLH
[[deprecated]] bool& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__usedZip64inLH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__usedZip64inLH");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_usedZip64inLH"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canWrite
[[deprecated]] bool& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__canWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__canWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.ThrowIfDisposed
void System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.get_Length
int64_t System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.get_Position
int64_t System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.set_Position
void System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.get_CanRead
bool System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.get_CanSeek
bool System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.get_CanWrite
bool System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.Read
int System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.Seek
int64_t System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.SetLength
void System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.Write
void System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.Flush
void System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.Dispose
void System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.BitFlagValues
#include "System/IO/Compression/ZipArchiveEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.BitFlagValues DataDescriptor
::System::IO::Compression::ZipArchiveEntry::BitFlagValues System::IO::Compression::ZipArchiveEntry::BitFlagValues::_get_DataDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::BitFlagValues::_get_DataDescriptor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::BitFlagValues>("System.IO.Compression", "ZipArchiveEntry/BitFlagValues", "DataDescriptor"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.BitFlagValues DataDescriptor
void System::IO::Compression::ZipArchiveEntry::BitFlagValues::_set_DataDescriptor(::System::IO::Compression::ZipArchiveEntry::BitFlagValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::BitFlagValues::_set_DataDescriptor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/BitFlagValues", "DataDescriptor", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.BitFlagValues UnicodeFileName
::System::IO::Compression::ZipArchiveEntry::BitFlagValues System::IO::Compression::ZipArchiveEntry::BitFlagValues::_get_UnicodeFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::BitFlagValues::_get_UnicodeFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::BitFlagValues>("System.IO.Compression", "ZipArchiveEntry/BitFlagValues", "UnicodeFileName"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.BitFlagValues UnicodeFileName
void System::IO::Compression::ZipArchiveEntry::BitFlagValues::_set_UnicodeFileName(::System::IO::Compression::ZipArchiveEntry::BitFlagValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::BitFlagValues::_set_UnicodeFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/BitFlagValues", "UnicodeFileName", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 value__
[[deprecated]] uint16_t& System::IO::Compression::ZipArchiveEntry::BitFlagValues::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::BitFlagValues::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues
#include "System/IO/Compression/ZipArchiveEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues Stored
::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_Stored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_Stored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues>("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "Stored"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues Stored
void System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_Stored(::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_Stored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "Stored", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues Deflate
::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_Deflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_Deflate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues>("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "Deflate"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues Deflate
void System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_Deflate(::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_Deflate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "Deflate", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues Deflate64
::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_Deflate64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_Deflate64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues>("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "Deflate64"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues Deflate64
void System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_Deflate64(::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_Deflate64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "Deflate64", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues BZip2
::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_BZip2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_BZip2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues>("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "BZip2"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues BZip2
void System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_BZip2(::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_BZip2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "BZip2", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues LZMA
::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_LZMA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_LZMA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues>("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "LZMA"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues LZMA
void System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_LZMA(::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_LZMA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "LZMA", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 value__
[[deprecated]] uint16_t& System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c
#include "System/IO/Compression/ZipArchiveEntry_--c.hpp"
// Including type: System.Action`6
#include "System/Action_6.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c <>9
::System::IO::Compression::ZipArchiveEntry::$$c* System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::$$c*>("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c <>9
void System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9(::System::IO::Compression::ZipArchiveEntry::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`6<System.Int64,System.Int64,System.UInt32,System.IO.Stream,System.IO.Compression.ZipArchiveEntry,System.EventHandler> <>9__67_0
::System::Action_6<int64_t, int64_t, uint, ::System::IO::Stream*, ::System::IO::Compression::ZipArchiveEntry*, ::System::EventHandler*>* System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9__67_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9__67_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_6<int64_t, int64_t, uint, ::System::IO::Stream*, ::System::IO::Compression::ZipArchiveEntry*, ::System::EventHandler*>*>("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9__67_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`6<System.Int64,System.Int64,System.UInt32,System.IO.Stream,System.IO.Compression.ZipArchiveEntry,System.EventHandler> <>9__67_0
void System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9__67_0(::System::Action_6<int64_t, int64_t, uint, ::System::IO::Stream*, ::System::IO::Compression::ZipArchiveEntry*, ::System::EventHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9__67_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9__67_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.EventHandler <>9__70_0
::System::EventHandler* System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9__70_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9__70_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::EventHandler*>("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9__70_0")));
}
// Autogenerated static field setter
// Set static field: static public System.EventHandler <>9__70_0
void System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9__70_0(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9__70_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9__70_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.IO.Compression.ZipArchiveEntry> <>9__71_0
::System::Action_1<::System::IO::Compression::ZipArchiveEntry*>* System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9__71_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9__71_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::System::IO::Compression::ZipArchiveEntry*>*>("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9__71_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.IO.Compression.ZipArchiveEntry> <>9__71_0
void System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9__71_0(::System::Action_1<::System::IO::Compression::ZipArchiveEntry*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9__71_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9__71_0", value)));
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c..cctor
void System::IO::Compression::ZipArchiveEntry::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipArchiveEntry/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c.<GetDataCompressor>b__67_0
void System::IO::Compression::ZipArchiveEntry::$$c::$GetDataCompressor$b__67_0(int64_t initialPosition, int64_t currentPosition, uint checkSum, ::System::IO::Stream* backing, ::System::IO::Compression::ZipArchiveEntry* thisRef, ::System::EventHandler* closeHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::<GetDataCompressor>b__67_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetDataCompressor>b__67_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialPosition), ::il2cpp_utils::ExtractType(currentPosition), ::il2cpp_utils::ExtractType(checkSum), ::il2cpp_utils::ExtractType(backing), ::il2cpp_utils::ExtractType(thisRef), ::il2cpp_utils::ExtractType(closeHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initialPosition, currentPosition, checkSum, backing, thisRef, closeHandler);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c.<OpenInWriteMode>b__70_0
void System::IO::Compression::ZipArchiveEntry::$$c::$OpenInWriteMode$b__70_0(::Il2CppObject* o, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::<OpenInWriteMode>b__70_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OpenInWriteMode>b__70_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, e);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c.<OpenInUpdateMode>b__71_0
void System::IO::Compression::ZipArchiveEntry::$$c::$OpenInUpdateMode$b__71_0(::System::IO::Compression::ZipArchiveEntry* thisRef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::<OpenInUpdateMode>b__71_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OpenInUpdateMode>b__71_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisRef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, thisRef);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipArchiveMode
#include "System/IO/Compression/ZipArchiveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveMode Read
::System::IO::Compression::ZipArchiveMode System::IO::Compression::ZipArchiveMode::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveMode>("System.IO.Compression", "ZipArchiveMode", "Read"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveMode Read
void System::IO::Compression::ZipArchiveMode::_set_Read(::System::IO::Compression::ZipArchiveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveMode", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveMode Create
::System::IO::Compression::ZipArchiveMode System::IO::Compression::ZipArchiveMode::_get_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::_get_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveMode>("System.IO.Compression", "ZipArchiveMode", "Create"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveMode Create
void System::IO::Compression::ZipArchiveMode::_set_Create(::System::IO::Compression::ZipArchiveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::_set_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveMode", "Create", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveMode Update
::System::IO::Compression::ZipArchiveMode System::IO::Compression::ZipArchiveMode::_get_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::_get_Update");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveMode>("System.IO.Compression", "ZipArchiveMode", "Update"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveMode Update
void System::IO::Compression::ZipArchiveMode::_set_Update(::System::IO::Compression::ZipArchiveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::_set_Update");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveMode", "Update", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::IO::Compression::ZipArchiveMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipGenericExtraField
#include "System/IO/Compression/ZipGenericExtraField.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt16 _tag
[[deprecated]] uint16_t& System::IO::Compression::ZipGenericExtraField::dyn__tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::dyn__tag");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tag"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 _size
[[deprecated]] uint16_t& System::IO::Compression::ZipGenericExtraField::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::dyn__size");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _data
[[deprecated]] ::ArrayW<uint8_t>& System::IO::Compression::ZipGenericExtraField::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::dyn__data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.get_Tag
uint16_t System::IO::Compression::ZipGenericExtraField::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::get_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.get_Size
uint16_t System::IO::Compression::ZipGenericExtraField::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::get_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.get_Data
::ArrayW<uint8_t> System::IO::Compression::ZipGenericExtraField::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::get_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.WriteBlock
void System::IO::Compression::ZipGenericExtraField::WriteBlock(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::WriteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.TryReadBlock
bool System::IO::Compression::ZipGenericExtraField::TryReadBlock(::System::IO::BinaryReader* reader, int64_t endExtraField, ByRef<::System::IO::Compression::ZipGenericExtraField> field) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::TryReadBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipGenericExtraField", "TryReadBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(endExtraField), ::il2cpp_utils::ExtractIndependentType<::System::IO::Compression::ZipGenericExtraField&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, endExtraField, byref(field));
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.ParseExtraField
::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* System::IO::Compression::ZipGenericExtraField::ParseExtraField(::System::IO::Stream* extraFieldData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::ParseExtraField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipGenericExtraField", "ParseExtraField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraFieldData)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extraFieldData);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.TotalSize
int System::IO::Compression::ZipGenericExtraField::TotalSize(::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::TotalSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipGenericExtraField", "TotalSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fields);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.WriteAllBlocks
void System::IO::Compression::ZipGenericExtraField::WriteAllBlocks(::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* fields, ::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::WriteAllBlocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipGenericExtraField", "WriteAllBlocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fields), ::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fields, stream);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.Zip64ExtraField
#include "System/IO/Compression/Zip64ExtraField.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt16 _size
[[deprecated]] uint16_t& System::IO::Compression::Zip64ExtraField::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::dyn__size");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> _uncompressedSize
[[deprecated]] ::System::Nullable_1<int64_t>& System::IO::Compression::Zip64ExtraField::dyn__uncompressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::dyn__uncompressedSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uncompressedSize"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> _compressedSize
[[deprecated]] ::System::Nullable_1<int64_t>& System::IO::Compression::Zip64ExtraField::dyn__compressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::dyn__compressedSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compressedSize"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> _localHeaderOffset
[[deprecated]] ::System::Nullable_1<int64_t>& System::IO::Compression::Zip64ExtraField::dyn__localHeaderOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::dyn__localHeaderOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localHeaderOffset"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int32> _startDiskNumber
[[deprecated]] ::System::Nullable_1<int>& System::IO::Compression::Zip64ExtraField::dyn__startDiskNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::dyn__startDiskNumber");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startDiskNumber"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.get_TotalSize
uint16_t System::IO::Compression::Zip64ExtraField::get_TotalSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::get_TotalSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_TotalSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.get_UncompressedSize
::System::Nullable_1<int64_t> System::IO::Compression::Zip64ExtraField::get_UncompressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::get_UncompressedSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_UncompressedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.set_UncompressedSize
void System::IO::Compression::Zip64ExtraField::set_UncompressedSize(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::set_UncompressedSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_UncompressedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.get_CompressedSize
::System::Nullable_1<int64_t> System::IO::Compression::Zip64ExtraField::get_CompressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::get_CompressedSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CompressedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.set_CompressedSize
void System::IO::Compression::Zip64ExtraField::set_CompressedSize(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::set_CompressedSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_CompressedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.get_LocalHeaderOffset
::System::Nullable_1<int64_t> System::IO::Compression::Zip64ExtraField::get_LocalHeaderOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::get_LocalHeaderOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LocalHeaderOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.set_LocalHeaderOffset
void System::IO::Compression::Zip64ExtraField::set_LocalHeaderOffset(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::set_LocalHeaderOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_LocalHeaderOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.get_StartDiskNumber
::System::Nullable_1<int> System::IO::Compression::Zip64ExtraField::get_StartDiskNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::get_StartDiskNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_StartDiskNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.UpdateSize
void System::IO::Compression::Zip64ExtraField::UpdateSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::UpdateSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UpdateSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.GetJustZip64Block
::System::IO::Compression::Zip64ExtraField System::IO::Compression::Zip64ExtraField::GetJustZip64Block(::System::IO::Stream* extraFieldStream, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::GetJustZip64Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64ExtraField", "GetJustZip64Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraFieldStream), ::il2cpp_utils::ExtractType(readUncompressedSize), ::il2cpp_utils::ExtractType(readCompressedSize), ::il2cpp_utils::ExtractType(readLocalHeaderOffset), ::il2cpp_utils::ExtractType(readStartDiskNumber)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::Zip64ExtraField, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extraFieldStream, readUncompressedSize, readCompressedSize, readLocalHeaderOffset, readStartDiskNumber);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.TryGetZip64BlockFromGenericExtraField
bool System::IO::Compression::Zip64ExtraField::TryGetZip64BlockFromGenericExtraField(::System::IO::Compression::ZipGenericExtraField extraField, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber, ByRef<::System::IO::Compression::Zip64ExtraField> zip64Block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::TryGetZip64BlockFromGenericExtraField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64ExtraField", "TryGetZip64BlockFromGenericExtraField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraField), ::il2cpp_utils::ExtractType(readUncompressedSize), ::il2cpp_utils::ExtractType(readCompressedSize), ::il2cpp_utils::ExtractType(readLocalHeaderOffset), ::il2cpp_utils::ExtractType(readStartDiskNumber), ::il2cpp_utils::ExtractIndependentType<::System::IO::Compression::Zip64ExtraField&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extraField, readUncompressedSize, readCompressedSize, readLocalHeaderOffset, readStartDiskNumber, byref(zip64Block));
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.GetAndRemoveZip64Block
::System::IO::Compression::Zip64ExtraField System::IO::Compression::Zip64ExtraField::GetAndRemoveZip64Block(::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* extraFields, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::GetAndRemoveZip64Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64ExtraField", "GetAndRemoveZip64Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraFields), ::il2cpp_utils::ExtractType(readUncompressedSize), ::il2cpp_utils::ExtractType(readCompressedSize), ::il2cpp_utils::ExtractType(readLocalHeaderOffset), ::il2cpp_utils::ExtractType(readStartDiskNumber)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::Zip64ExtraField, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extraFields, readUncompressedSize, readCompressedSize, readLocalHeaderOffset, readStartDiskNumber);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.RemoveZip64Blocks
void System::IO::Compression::Zip64ExtraField::RemoveZip64Blocks(::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* extraFields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::RemoveZip64Blocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64ExtraField", "RemoveZip64Blocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraFields)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extraFields);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.WriteBlock
void System::IO::Compression::Zip64ExtraField::WriteBlock(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::WriteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.Zip64EndOfCentralDirectoryLocator
#include "System/IO/Compression/Zip64EndOfCentralDirectoryLocator.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 NumberOfDiskWithZip64EOCD
[[deprecated]] uint& System::IO::Compression::Zip64EndOfCentralDirectoryLocator::dyn_NumberOfDiskWithZip64EOCD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryLocator::dyn_NumberOfDiskWithZip64EOCD");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfDiskWithZip64EOCD"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 OffsetOfZip64EOCD
[[deprecated]] uint64_t& System::IO::Compression::Zip64EndOfCentralDirectoryLocator::dyn_OffsetOfZip64EOCD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryLocator::dyn_OffsetOfZip64EOCD");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OffsetOfZip64EOCD"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 TotalNumberOfDisks
[[deprecated]] uint& System::IO::Compression::Zip64EndOfCentralDirectoryLocator::dyn_TotalNumberOfDisks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryLocator::dyn_TotalNumberOfDisks");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalNumberOfDisks"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.Zip64EndOfCentralDirectoryLocator.TryReadBlock
bool System::IO::Compression::Zip64EndOfCentralDirectoryLocator::TryReadBlock(::System::IO::BinaryReader* reader, ByRef<::System::IO::Compression::Zip64EndOfCentralDirectoryLocator> zip64EOCDLocator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryLocator::TryReadBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64EndOfCentralDirectoryLocator", "TryReadBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractIndependentType<::System::IO::Compression::Zip64EndOfCentralDirectoryLocator&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, byref(zip64EOCDLocator));
}
// Autogenerated method: System.IO.Compression.Zip64EndOfCentralDirectoryLocator.WriteBlock
void System::IO::Compression::Zip64EndOfCentralDirectoryLocator::WriteBlock(::System::IO::Stream* stream, int64_t zip64EOCDRecordStart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryLocator::WriteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64EndOfCentralDirectoryLocator", "WriteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(zip64EOCDRecordStart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, zip64EOCDRecordStart);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.Zip64EndOfCentralDirectoryRecord
#include "System/IO/Compression/Zip64EndOfCentralDirectoryRecord.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt64 SizeOfThisRecord
[[deprecated]] uint64_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_SizeOfThisRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_SizeOfThisRecord");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SizeOfThisRecord"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 VersionMadeBy
[[deprecated]] uint16_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_VersionMadeBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_VersionMadeBy");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionMadeBy"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 VersionNeededToExtract
[[deprecated]] uint16_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_VersionNeededToExtract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_VersionNeededToExtract");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionNeededToExtract"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 NumberOfThisDisk
[[deprecated]] uint& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfThisDisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfThisDisk");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfThisDisk"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 NumberOfDiskWithStartOfCD
[[deprecated]] uint& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfDiskWithStartOfCD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfDiskWithStartOfCD");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfDiskWithStartOfCD"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 NumberOfEntriesOnThisDisk
[[deprecated]] uint64_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfEntriesOnThisDisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfEntriesOnThisDisk");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfEntriesOnThisDisk"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 NumberOfEntriesTotal
[[deprecated]] uint64_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfEntriesTotal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfEntriesTotal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfEntriesTotal"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 SizeOfCentralDirectory
[[deprecated]] uint64_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_SizeOfCentralDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_SizeOfCentralDirectory");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SizeOfCentralDirectory"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 OffsetOfCentralDirectory
[[deprecated]] uint64_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_OffsetOfCentralDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_OffsetOfCentralDirectory");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OffsetOfCentralDirectory"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.Zip64EndOfCentralDirectoryRecord.TryReadBlock
bool System::IO::Compression::Zip64EndOfCentralDirectoryRecord::TryReadBlock(::System::IO::BinaryReader* reader, ByRef<::System::IO::Compression::Zip64EndOfCentralDirectoryRecord> zip64EOCDRecord) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::TryReadBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64EndOfCentralDirectoryRecord", "TryReadBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractIndependentType<::System::IO::Compression::Zip64EndOfCentralDirectoryRecord&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, byref(zip64EOCDRecord));
}
// Autogenerated method: System.IO.Compression.Zip64EndOfCentralDirectoryRecord.WriteBlock
void System::IO::Compression::Zip64EndOfCentralDirectoryRecord::WriteBlock(::System::IO::Stream* stream, int64_t numberOfEntries, int64_t startOfCentralDirectory, int64_t sizeOfCentralDirectory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::WriteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64EndOfCentralDirectoryRecord", "WriteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(numberOfEntries), ::il2cpp_utils::ExtractType(startOfCentralDirectory), ::il2cpp_utils::ExtractType(sizeOfCentralDirectory)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, numberOfEntries, startOfCentralDirectory, sizeOfCentralDirectory);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipLocalFileHeader
#include "System/IO/Compression/ZipLocalFileHeader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.ZipLocalFileHeader.GetExtraFields
::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* System::IO::Compression::ZipLocalFileHeader::GetExtraFields(::System::IO::BinaryReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipLocalFileHeader::GetExtraFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipLocalFileHeader", "GetExtraFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: System.IO.Compression.ZipLocalFileHeader.TrySkipBlock
bool System::IO::Compression::ZipLocalFileHeader::TrySkipBlock(::System::IO::BinaryReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipLocalFileHeader::TrySkipBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipLocalFileHeader", "TrySkipBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipCentralDirectoryFileHeader
#include "System/IO/Compression/ZipCentralDirectoryFileHeader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte VersionMadeByCompatibility
[[deprecated]] uint8_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_VersionMadeByCompatibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_VersionMadeByCompatibility");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionMadeByCompatibility"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte VersionMadeBySpecification
[[deprecated]] uint8_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_VersionMadeBySpecification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_VersionMadeBySpecification");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionMadeBySpecification"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 VersionNeededToExtract
[[deprecated]] uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_VersionNeededToExtract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_VersionNeededToExtract");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionNeededToExtract"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 GeneralPurposeBitFlag
[[deprecated]] uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_GeneralPurposeBitFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_GeneralPurposeBitFlag");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GeneralPurposeBitFlag"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 CompressionMethod
[[deprecated]] uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_CompressionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_CompressionMethod");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CompressionMethod"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 LastModified
[[deprecated]] uint& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_LastModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_LastModified");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastModified"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Crc32
[[deprecated]] uint& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_Crc32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_Crc32");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Crc32"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 CompressedSize
[[deprecated]] int64_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_CompressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_CompressedSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CompressedSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 UncompressedSize
[[deprecated]] int64_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_UncompressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_UncompressedSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UncompressedSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 FilenameLength
[[deprecated]] uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_FilenameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_FilenameLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FilenameLength"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 ExtraFieldLength
[[deprecated]] uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_ExtraFieldLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_ExtraFieldLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtraFieldLength"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 FileCommentLength
[[deprecated]] uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_FileCommentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_FileCommentLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileCommentLength"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 DiskNumberStart
[[deprecated]] int& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_DiskNumberStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_DiskNumberStart");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DiskNumberStart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 InternalFileAttributes
[[deprecated]] uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_InternalFileAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_InternalFileAttributes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InternalFileAttributes"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 ExternalFileAttributes
[[deprecated]] uint& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_ExternalFileAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_ExternalFileAttributes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExternalFileAttributes"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 RelativeOffsetOfLocalHeader
[[deprecated]] int64_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_RelativeOffsetOfLocalHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_RelativeOffsetOfLocalHeader");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RelativeOffsetOfLocalHeader"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] Filename
[[deprecated]] ::ArrayW<uint8_t>& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_Filename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_Filename");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Filename"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] FileComment
[[deprecated]] ::ArrayW<uint8_t>& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_FileComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_FileComment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileComment"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.IO.Compression.ZipGenericExtraField> ExtraFields
[[deprecated]] ::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>*& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_ExtraFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_ExtraFields");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtraFields"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.ZipCentralDirectoryFileHeader.TryReadBlock
bool System::IO::Compression::ZipCentralDirectoryFileHeader::TryReadBlock(::System::IO::BinaryReader* reader, bool saveExtraFieldsAndComments, ByRef<::System::IO::Compression::ZipCentralDirectoryFileHeader> header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::TryReadBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipCentralDirectoryFileHeader", "TryReadBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(saveExtraFieldsAndComments), ::il2cpp_utils::ExtractIndependentType<::System::IO::Compression::ZipCentralDirectoryFileHeader&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, saveExtraFieldsAndComments, byref(header));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipEndOfCentralDirectoryBlock
#include "System/IO/Compression/ZipEndOfCentralDirectoryBlock.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Signature
[[deprecated]] uint& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_Signature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_Signature");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Signature"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 NumberOfThisDisk
[[deprecated]] uint16_t& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfThisDisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfThisDisk");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfThisDisk"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 NumberOfTheDiskWithTheStartOfTheCentralDirectory
[[deprecated]] uint16_t& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfTheDiskWithTheStartOfTheCentralDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfTheDiskWithTheStartOfTheCentralDirectory");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfTheDiskWithTheStartOfTheCentralDirectory"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 NumberOfEntriesInTheCentralDirectoryOnThisDisk
[[deprecated]] uint16_t& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfEntriesInTheCentralDirectoryOnThisDisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfEntriesInTheCentralDirectoryOnThisDisk");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfEntriesInTheCentralDirectoryOnThisDisk"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 NumberOfEntriesInTheCentralDirectory
[[deprecated]] uint16_t& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfEntriesInTheCentralDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfEntriesInTheCentralDirectory");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfEntriesInTheCentralDirectory"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 SizeOfCentralDirectory
[[deprecated]] uint& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_SizeOfCentralDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_SizeOfCentralDirectory");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SizeOfCentralDirectory"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 OffsetOfStartOfCentralDirectoryWithRespectToTheStartingDiskNumber
[[deprecated]] uint& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_OffsetOfStartOfCentralDirectoryWithRespectToTheStartingDiskNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_OffsetOfStartOfCentralDirectoryWithRespectToTheStartingDiskNumber");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OffsetOfStartOfCentralDirectoryWithRespectToTheStartingDiskNumber"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] ArchiveComment
[[deprecated]] ::ArrayW<uint8_t>& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_ArchiveComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_ArchiveComment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ArchiveComment"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.ZipEndOfCentralDirectoryBlock.WriteBlock
void System::IO::Compression::ZipEndOfCentralDirectoryBlock::WriteBlock(::System::IO::Stream* stream, int64_t numberOfEntries, int64_t startOfCentralDirectory, int64_t sizeOfCentralDirectory, ::ArrayW<uint8_t> archiveComment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::WriteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipEndOfCentralDirectoryBlock", "WriteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(numberOfEntries), ::il2cpp_utils::ExtractType(startOfCentralDirectory), ::il2cpp_utils::ExtractType(sizeOfCentralDirectory), ::il2cpp_utils::ExtractType(archiveComment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, numberOfEntries, startOfCentralDirectory, sizeOfCentralDirectory, archiveComment);
}
// Autogenerated method: System.IO.Compression.ZipEndOfCentralDirectoryBlock.TryReadBlock
bool System::IO::Compression::ZipEndOfCentralDirectoryBlock::TryReadBlock(::System::IO::BinaryReader* reader, ByRef<::System::IO::Compression::ZipEndOfCentralDirectoryBlock> eocdBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::TryReadBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipEndOfCentralDirectoryBlock", "TryReadBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractIndependentType<::System::IO::Compression::ZipEndOfCentralDirectoryBlock&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, byref(eocdBlock));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.WrappedStream
#include "System/IO/Compression/WrappedStream.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.IO.Compression.ZipArchiveEntry
#include "System/IO/Compression/ZipArchiveEntry.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream _baseStream
[[deprecated]] ::System::IO::Stream*& System::IO::Compression::WrappedStream::dyn__baseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::dyn__baseStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _closeBaseStream
[[deprecated]] bool& System::IO::Compression::WrappedStream::dyn__closeBaseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::dyn__closeBaseStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closeBaseStream"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`1<System.IO.Compression.ZipArchiveEntry> _onClosed
[[deprecated]] ::System::Action_1<::System::IO::Compression::ZipArchiveEntry*>*& System::IO::Compression::WrappedStream::dyn__onClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::dyn__onClosed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onClosed"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::IO::Compression::ZipArchiveEntry*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.ZipArchiveEntry _zipArchiveEntry
[[deprecated]] ::System::IO::Compression::ZipArchiveEntry*& System::IO::Compression::WrappedStream::dyn__zipArchiveEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::dyn__zipArchiveEntry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zipArchiveEntry"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchiveEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDisposed
[[deprecated]] bool& System::IO::Compression::WrappedStream::dyn__isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::dyn__isDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.WrappedStream.ThrowIfDisposed
void System::IO::Compression::WrappedStream::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.ThrowIfCantRead
void System::IO::Compression::WrappedStream::ThrowIfCantRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::ThrowIfCantRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfCantRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.ThrowIfCantWrite
void System::IO::Compression::WrappedStream::ThrowIfCantWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::ThrowIfCantWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfCantWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.ThrowIfCantSeek
void System::IO::Compression::WrappedStream::ThrowIfCantSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::ThrowIfCantSeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfCantSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.get_Length
int64_t System::IO::Compression::WrappedStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.get_Position
int64_t System::IO::Compression::WrappedStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.set_Position
void System::IO::Compression::WrappedStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.WrappedStream.get_CanRead
bool System::IO::Compression::WrappedStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.get_CanSeek
bool System::IO::Compression::WrappedStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.get_CanWrite
bool System::IO::Compression::WrappedStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.Read
int System::IO::Compression::WrappedStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.WrappedStream.Seek
int64_t System::IO::Compression::WrappedStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Compression.WrappedStream.SetLength
void System::IO::Compression::WrappedStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.WrappedStream.Write
void System::IO::Compression::WrappedStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.WrappedStream.Flush
void System::IO::Compression::WrappedStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.Dispose
void System::IO::Compression::WrappedStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.SubReadStream
#include "System/IO/Compression/SubReadStream.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 _startInSuperStream
[[deprecated]] int64_t& System::IO::Compression::SubReadStream::dyn__startInSuperStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::dyn__startInSuperStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startInSuperStream"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _positionInSuperStream
[[deprecated]] int64_t& System::IO::Compression::SubReadStream::dyn__positionInSuperStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::dyn__positionInSuperStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionInSuperStream"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 _endInSuperStream
[[deprecated]] int64_t& System::IO::Compression::SubReadStream::dyn__endInSuperStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::dyn__endInSuperStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endInSuperStream"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream _superStream
[[deprecated]] ::System::IO::Stream*& System::IO::Compression::SubReadStream::dyn__superStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::dyn__superStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_superStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canRead
[[deprecated]] bool& System::IO::Compression::SubReadStream::dyn__canRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::dyn__canRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canRead"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDisposed
[[deprecated]] bool& System::IO::Compression::SubReadStream::dyn__isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::dyn__isDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.SubReadStream.ThrowIfDisposed
void System::IO::Compression::SubReadStream::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.ThrowIfCantRead
void System::IO::Compression::SubReadStream::ThrowIfCantRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::ThrowIfCantRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfCantRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.get_Length
int64_t System::IO::Compression::SubReadStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.get_Position
int64_t System::IO::Compression::SubReadStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.set_Position
void System::IO::Compression::SubReadStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.SubReadStream.get_CanRead
bool System::IO::Compression::SubReadStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.get_CanSeek
bool System::IO::Compression::SubReadStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.get_CanWrite
bool System::IO::Compression::SubReadStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.Read
int System::IO::Compression::SubReadStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.SubReadStream.Seek
int64_t System::IO::Compression::SubReadStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Compression.SubReadStream.SetLength
void System::IO::Compression::SubReadStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.SubReadStream.Write
void System::IO::Compression::SubReadStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.SubReadStream.Flush
void System::IO::Compression::SubReadStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.Dispose
void System::IO::Compression::SubReadStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.CheckSumAndSizeWriteStream
#include "System/IO/Compression/CheckSumAndSizeWriteStream.hpp"
// Including type: System.IO.Compression.ZipArchiveEntry
#include "System/IO/Compression/ZipArchiveEntry.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.Action`6
#include "System/Action_6.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream _baseStream
[[deprecated]] ::System::IO::Stream*& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__baseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__baseStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream _baseBaseStream
[[deprecated]] ::System::IO::Stream*& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__baseBaseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__baseBaseStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseBaseStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _position
[[deprecated]] int64_t& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _checksum
[[deprecated]] uint& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__checksum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__checksum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_checksum"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _leaveOpenOnClose
[[deprecated]] bool& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__leaveOpenOnClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__leaveOpenOnClose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaveOpenOnClose"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canWrite
[[deprecated]] bool& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__canWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__canWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDisposed
[[deprecated]] bool& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__isDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _everWritten
[[deprecated]] bool& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__everWritten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__everWritten");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_everWritten"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _initialPosition
[[deprecated]] int64_t& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__initialPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__initialPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialPosition"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.ZipArchiveEntry _zipArchiveEntry
[[deprecated]] ::System::IO::Compression::ZipArchiveEntry*& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__zipArchiveEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__zipArchiveEntry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zipArchiveEntry"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchiveEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.EventHandler _onClose
[[deprecated]] ::System::EventHandler*& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__onClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__onClose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onClose"))->offset;
  return *reinterpret_cast<::System::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`6<System.Int64,System.Int64,System.UInt32,System.IO.Stream,System.IO.Compression.ZipArchiveEntry,System.EventHandler> _saveCrcAndSizes
[[deprecated]] ::System::Action_6<int64_t, int64_t, uint, ::System::IO::Stream*, ::System::IO::Compression::ZipArchiveEntry*, ::System::EventHandler*>*& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__saveCrcAndSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__saveCrcAndSizes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saveCrcAndSizes"))->offset;
  return *reinterpret_cast<::System::Action_6<int64_t, int64_t, uint, ::System::IO::Stream*, ::System::IO::Compression::ZipArchiveEntry*, ::System::EventHandler*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.ThrowIfDisposed
void System::IO::Compression::CheckSumAndSizeWriteStream::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.get_Length
int64_t System::IO::Compression::CheckSumAndSizeWriteStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.get_Position
int64_t System::IO::Compression::CheckSumAndSizeWriteStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.set_Position
void System::IO::Compression::CheckSumAndSizeWriteStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.get_CanRead
bool System::IO::Compression::CheckSumAndSizeWriteStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.get_CanSeek
bool System::IO::Compression::CheckSumAndSizeWriteStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.get_CanWrite
bool System::IO::Compression::CheckSumAndSizeWriteStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.Read
int System::IO::Compression::CheckSumAndSizeWriteStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.Seek
int64_t System::IO::Compression::CheckSumAndSizeWriteStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.SetLength
void System::IO::Compression::CheckSumAndSizeWriteStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.Write
void System::IO::Compression::CheckSumAndSizeWriteStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.Flush
void System::IO::Compression::CheckSumAndSizeWriteStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.Dispose
void System::IO::Compression::CheckSumAndSizeWriteStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipHelper
#include "System/IO/Compression/ZipHelper.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.DateTime s_invalidDateIndicator
::System::DateTime System::IO::Compression::ZipHelper::_get_s_invalidDateIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::_get_s_invalidDateIndicator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System.IO.Compression", "ZipHelper", "s_invalidDateIndicator"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.DateTime s_invalidDateIndicator
void System::IO::Compression::ZipHelper::_set_s_invalidDateIndicator(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::_set_s_invalidDateIndicator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipHelper", "s_invalidDateIndicator", value));
}
// Autogenerated method: System.IO.Compression.ZipHelper..cctor
void System::IO::Compression::ZipHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipHelper.RequiresUnicode
bool System::IO::Compression::ZipHelper::RequiresUnicode(::StringW test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::RequiresUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "RequiresUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, test);
}
// Autogenerated method: System.IO.Compression.ZipHelper.ReadBytes
void System::IO::Compression::ZipHelper::ReadBytes(::System::IO::Stream* stream, ::ArrayW<uint8_t> buffer, int bytesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::ReadBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "ReadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bytesToRead)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, buffer, bytesToRead);
}
// Autogenerated method: System.IO.Compression.ZipHelper.DosTimeToDateTime
::System::DateTime System::IO::Compression::ZipHelper::DosTimeToDateTime(uint dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::DosTimeToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "DosTimeToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime);
}
// Autogenerated method: System.IO.Compression.ZipHelper.DateTimeToDosTime
uint System::IO::Compression::ZipHelper::DateTimeToDosTime(::System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::DateTimeToDosTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "DateTimeToDosTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime);
}
// Autogenerated method: System.IO.Compression.ZipHelper.SeekBackwardsToSignature
bool System::IO::Compression::ZipHelper::SeekBackwardsToSignature(::System::IO::Stream* stream, uint signatureToFind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::SeekBackwardsToSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "SeekBackwardsToSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(signatureToFind)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, signatureToFind);
}
// Autogenerated method: System.IO.Compression.ZipHelper.AdvanceToPosition
void System::IO::Compression::ZipHelper::AdvanceToPosition(::System::IO::Stream* stream, int64_t position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::AdvanceToPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "AdvanceToPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, position);
}
// Autogenerated method: System.IO.Compression.ZipHelper.SeekBackwardsAndRead
bool System::IO::Compression::ZipHelper::SeekBackwardsAndRead(::System::IO::Stream* stream, ::ArrayW<uint8_t> buffer, ByRef<int> bufferPointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::SeekBackwardsAndRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "SeekBackwardsAndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, buffer, byref(bufferPointer));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipVersionNeededValues
#include "System/IO/Compression/ZipVersionNeededValues.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionNeededValues Default
::System::IO::Compression::ZipVersionNeededValues System::IO::Compression::ZipVersionNeededValues::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionNeededValues>("System.IO.Compression", "ZipVersionNeededValues", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionNeededValues Default
void System::IO::Compression::ZipVersionNeededValues::_set_Default(::System::IO::Compression::ZipVersionNeededValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionNeededValues", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionNeededValues ExplicitDirectory
::System::IO::Compression::ZipVersionNeededValues System::IO::Compression::ZipVersionNeededValues::_get_ExplicitDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_get_ExplicitDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionNeededValues>("System.IO.Compression", "ZipVersionNeededValues", "ExplicitDirectory"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionNeededValues ExplicitDirectory
void System::IO::Compression::ZipVersionNeededValues::_set_ExplicitDirectory(::System::IO::Compression::ZipVersionNeededValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_set_ExplicitDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionNeededValues", "ExplicitDirectory", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionNeededValues Deflate
::System::IO::Compression::ZipVersionNeededValues System::IO::Compression::ZipVersionNeededValues::_get_Deflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_get_Deflate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionNeededValues>("System.IO.Compression", "ZipVersionNeededValues", "Deflate"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionNeededValues Deflate
void System::IO::Compression::ZipVersionNeededValues::_set_Deflate(::System::IO::Compression::ZipVersionNeededValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_set_Deflate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionNeededValues", "Deflate", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionNeededValues Deflate64
::System::IO::Compression::ZipVersionNeededValues System::IO::Compression::ZipVersionNeededValues::_get_Deflate64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_get_Deflate64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionNeededValues>("System.IO.Compression", "ZipVersionNeededValues", "Deflate64"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionNeededValues Deflate64
void System::IO::Compression::ZipVersionNeededValues::_set_Deflate64(::System::IO::Compression::ZipVersionNeededValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_set_Deflate64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionNeededValues", "Deflate64", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionNeededValues Zip64
::System::IO::Compression::ZipVersionNeededValues System::IO::Compression::ZipVersionNeededValues::_get_Zip64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_get_Zip64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionNeededValues>("System.IO.Compression", "ZipVersionNeededValues", "Zip64"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionNeededValues Zip64
void System::IO::Compression::ZipVersionNeededValues::_set_Zip64(::System::IO::Compression::ZipVersionNeededValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_set_Zip64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionNeededValues", "Zip64", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 value__
[[deprecated]] uint16_t& System::IO::Compression::ZipVersionNeededValues::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipVersionMadeByPlatform
#include "System/IO/Compression/ZipVersionMadeByPlatform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionMadeByPlatform Windows
::System::IO::Compression::ZipVersionMadeByPlatform System::IO::Compression::ZipVersionMadeByPlatform::_get_Windows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionMadeByPlatform::_get_Windows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionMadeByPlatform>("System.IO.Compression", "ZipVersionMadeByPlatform", "Windows"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionMadeByPlatform Windows
void System::IO::Compression::ZipVersionMadeByPlatform::_set_Windows(::System::IO::Compression::ZipVersionMadeByPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionMadeByPlatform::_set_Windows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionMadeByPlatform", "Windows", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionMadeByPlatform Unix
::System::IO::Compression::ZipVersionMadeByPlatform System::IO::Compression::ZipVersionMadeByPlatform::_get_Unix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionMadeByPlatform::_get_Unix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionMadeByPlatform>("System.IO.Compression", "ZipVersionMadeByPlatform", "Unix"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionMadeByPlatform Unix
void System::IO::Compression::ZipVersionMadeByPlatform::_set_Unix(::System::IO::Compression::ZipVersionMadeByPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionMadeByPlatform::_set_Unix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionMadeByPlatform", "Unix", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated]] uint8_t& System::IO::Compression::ZipVersionMadeByPlatform::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionMadeByPlatform::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.Crc32Helper
#include "System/IO/Compression/Crc32Helper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_0
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_0
void System::IO::Compression::Crc32Helper::_set_s_crcTable_0(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_0", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_1
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_1
void System::IO::Compression::Crc32Helper::_set_s_crcTable_1(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_2
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_2
void System::IO::Compression::Crc32Helper::_set_s_crcTable_2(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_3
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_3
void System::IO::Compression::Crc32Helper::_set_s_crcTable_3(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_4
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_4"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_4
void System::IO::Compression::Crc32Helper::_set_s_crcTable_4(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_4", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_5
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_5"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_5
void System::IO::Compression::Crc32Helper::_set_s_crcTable_5(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_5", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_6
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_6"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_6
void System::IO::Compression::Crc32Helper::_set_s_crcTable_6(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_6", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_7
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_7"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_7
void System::IO::Compression::Crc32Helper::_set_s_crcTable_7(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_7", value));
}
// Autogenerated method: System.IO.Compression.Crc32Helper..cctor
void System::IO::Compression::Crc32Helper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Crc32Helper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.Crc32Helper.UpdateCrc32
uint System::IO::Compression::Crc32Helper::UpdateCrc32(uint crc32, ::ArrayW<uint8_t> buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::UpdateCrc32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Crc32Helper", "UpdateCrc32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(crc32), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, crc32, buffer, offset, length);
}
// Autogenerated method: System.IO.Compression.Crc32Helper.ManagedCrc32
uint System::IO::Compression::Crc32Helper::ManagedCrc32(uint crc32, ::ArrayW<uint8_t> buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::ManagedCrc32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Crc32Helper", "ManagedCrc32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(crc32), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, crc32, buffer, offset, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Buffers.ArrayPoolEventSource
#include "System/Buffers/ArrayPoolEventSource.hpp"
// Including type: System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason
#include "System/Buffers/ArrayPoolEventSource_BufferAllocatedReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Buffers.ArrayPoolEventSource Log
::System::Buffers::ArrayPoolEventSource* System::Buffers::ArrayPoolEventSource::_get_Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::_get_Log");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::ArrayPoolEventSource*>("System.Buffers", "ArrayPoolEventSource", "Log"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Buffers.ArrayPoolEventSource Log
void System::Buffers::ArrayPoolEventSource::_set_Log(::System::Buffers::ArrayPoolEventSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::_set_Log");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers", "ArrayPoolEventSource", "Log", value));
}
// Autogenerated method: System.Buffers.ArrayPoolEventSource.BufferRented
void System::Buffers::ArrayPoolEventSource::BufferRented(int bufferId, int bufferSize, int poolId, int bucketId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferRented");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BufferRented", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferId), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(poolId), ::il2cpp_utils::ExtractType(bucketId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferId, bufferSize, poolId, bucketId);
}
// Autogenerated method: System.Buffers.ArrayPoolEventSource.BufferAllocated
void System::Buffers::ArrayPoolEventSource::BufferAllocated(int bufferId, int bufferSize, int poolId, int bucketId, ::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BufferAllocated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferId), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(poolId), ::il2cpp_utils::ExtractType(bucketId), ::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferId, bufferSize, poolId, bucketId, reason);
}
// Autogenerated method: System.Buffers.ArrayPoolEventSource.BufferReturned
void System::Buffers::ArrayPoolEventSource::BufferReturned(int bufferId, int bufferSize, int poolId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferReturned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BufferReturned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferId), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(poolId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferId, bufferSize, poolId);
}
// Autogenerated method: System.Buffers.ArrayPoolEventSource..cctor
void System::Buffers::ArrayPoolEventSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "ArrayPoolEventSource", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason
#include "System/Buffers/ArrayPoolEventSource_BufferAllocatedReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason Pooled
::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_Pooled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_Pooled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason>("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "Pooled"));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason Pooled
void System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_Pooled(::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_Pooled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "Pooled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason OverMaximumSize
::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_OverMaximumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_OverMaximumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason>("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "OverMaximumSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason OverMaximumSize
void System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_OverMaximumSize(::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_OverMaximumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "OverMaximumSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason PoolExhausted
::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_PoolExhausted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_PoolExhausted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason>("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "PoolExhausted"));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason PoolExhausted
void System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_PoolExhausted(::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_PoolExhausted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "PoolExhausted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Buffers.Utilities
#include "System/Buffers/Utilities.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Buffers.Utilities.SelectBucketIndex
int System::Buffers::Utilities::SelectBucketIndex(int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Utilities::SelectBucketIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "Utilities", "SelectBucketIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bufferSize);
}
// Autogenerated method: System.Buffers.Utilities.GetMaxSizeForBucket
int System::Buffers::Utilities::GetMaxSizeForBucket(int binIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Utilities::GetMaxSizeForBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "Utilities", "GetMaxSizeForBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipFile
#include "System/IO/Compression/ZipFile.hpp"
// Including type: System.IO.Compression.ZipArchive
#include "System/IO/Compression/ZipArchive.hpp"
// Including type: System.IO.Compression.ZipArchiveMode
#include "System/IO/Compression/ZipArchiveMode.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.IO.DirectoryInfo
#include "System/IO/DirectoryInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.ZipFile.Open
::System::IO::Compression::ZipArchive* System::IO::Compression::ZipFile::Open(::StringW archiveFileName, ::System::IO::Compression::ZipArchiveMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveFileName), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchive*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveFileName, mode);
}
// Autogenerated method: System.IO.Compression.ZipFile.Open
::System::IO::Compression::ZipArchive* System::IO::Compression::ZipFile::Open(::StringW archiveFileName, ::System::IO::Compression::ZipArchiveMode mode, ::System::Text::Encoding* entryNameEncoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveFileName), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(entryNameEncoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchive*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveFileName, mode, entryNameEncoding);
}
// Autogenerated method: System.IO.Compression.ZipFile.CreateFromDirectory
void System::IO::Compression::ZipFile::CreateFromDirectory(::StringW sourceDirectoryName, ::StringW destinationArchiveFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::CreateFromDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "CreateFromDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceDirectoryName), ::il2cpp_utils::ExtractType(destinationArchiveFileName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceDirectoryName, destinationArchiveFileName);
}
// Autogenerated method: System.IO.Compression.ZipFile.ExtractToDirectory
void System::IO::Compression::ZipFile::ExtractToDirectory(::StringW sourceArchiveFileName, ::StringW destinationDirectoryName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::ExtractToDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "ExtractToDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceArchiveFileName), ::il2cpp_utils::ExtractType(destinationDirectoryName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceArchiveFileName, destinationDirectoryName);
}
// Autogenerated method: System.IO.Compression.ZipFile.ExtractToDirectory
void System::IO::Compression::ZipFile::ExtractToDirectory(::StringW sourceArchiveFileName, ::StringW destinationDirectoryName, ::System::Text::Encoding* entryNameEncoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::ExtractToDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "ExtractToDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceArchiveFileName), ::il2cpp_utils::ExtractType(destinationDirectoryName), ::il2cpp_utils::ExtractType(entryNameEncoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceArchiveFileName, destinationDirectoryName, entryNameEncoding);
}
// Autogenerated method: System.IO.Compression.ZipFile.ExtractToDirectory
void System::IO::Compression::ZipFile::ExtractToDirectory(::StringW sourceArchiveFileName, ::StringW destinationDirectoryName, ::System::Text::Encoding* entryNameEncoding, bool overwrite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::ExtractToDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "ExtractToDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceArchiveFileName), ::il2cpp_utils::ExtractType(destinationDirectoryName), ::il2cpp_utils::ExtractType(entryNameEncoding), ::il2cpp_utils::ExtractType(overwrite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceArchiveFileName, destinationDirectoryName, entryNameEncoding, overwrite);
}
// Autogenerated method: System.IO.Compression.ZipFile.DoCreateFromDirectory
void System::IO::Compression::ZipFile::DoCreateFromDirectory(::StringW sourceDirectoryName, ::StringW destinationArchiveFileName, ::System::Nullable_1<::System::IO::Compression::CompressionLevel> compressionLevel, bool includeBaseDirectory, ::System::Text::Encoding* entryNameEncoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::DoCreateFromDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "DoCreateFromDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceDirectoryName), ::il2cpp_utils::ExtractType(destinationArchiveFileName), ::il2cpp_utils::ExtractType(compressionLevel), ::il2cpp_utils::ExtractType(includeBaseDirectory), ::il2cpp_utils::ExtractType(entryNameEncoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceDirectoryName, destinationArchiveFileName, compressionLevel, includeBaseDirectory, entryNameEncoding);
}
// Autogenerated method: System.IO.Compression.ZipFile.EntryFromPath
::StringW System::IO::Compression::ZipFile::EntryFromPath(::StringW entry, int offset, int length, ByRef<::ArrayW<::Il2CppChar>> buffer, bool appendPathSeparator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::EntryFromPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "EntryFromPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(appendPathSeparator)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, entry, offset, length, byref(buffer), appendPathSeparator);
}
// Autogenerated method: System.IO.Compression.ZipFile.EnsureCapacity
void System::IO::Compression::ZipFile::EnsureCapacity(ByRef<::ArrayW<::Il2CppChar>> buffer, int min) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::EnsureCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "EnsureCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(min)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(buffer), min);
}
// Autogenerated method: System.IO.Compression.ZipFile.IsDirEmpty
bool System::IO::Compression::ZipFile::IsDirEmpty(::System::IO::DirectoryInfo* possiblyEmptyDir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::IsDirEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "IsDirEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(possiblyEmptyDir)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, possiblyEmptyDir);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipFileExtensions
#include "System/IO/Compression/ZipFileExtensions.hpp"
// Including type: System.IO.Compression.ZipArchive
#include "System/IO/Compression/ZipArchive.hpp"
// Including type: System.IO.Compression.ZipArchiveEntry
#include "System/IO/Compression/ZipArchiveEntry.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.ZipFileExtensions.ExtractToDirectory
void System::IO::Compression::ZipFileExtensions::ExtractToDirectory(::System::IO::Compression::ZipArchive* source, ::StringW destinationDirectoryName, bool overwrite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFileExtensions::ExtractToDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFileExtensions", "ExtractToDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destinationDirectoryName), ::il2cpp_utils::ExtractType(overwrite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, destinationDirectoryName, overwrite);
}
// Autogenerated method: System.IO.Compression.ZipFileExtensions.DoCreateEntryFromFile
::System::IO::Compression::ZipArchiveEntry* System::IO::Compression::ZipFileExtensions::DoCreateEntryFromFile(::System::IO::Compression::ZipArchive* destination, ::StringW sourceFileName, ::StringW entryName, ::System::Nullable_1<::System::IO::Compression::CompressionLevel> compressionLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFileExtensions::DoCreateEntryFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFileExtensions", "DoCreateEntryFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(sourceFileName), ::il2cpp_utils::ExtractType(entryName), ::il2cpp_utils::ExtractType(compressionLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchiveEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, destination, sourceFileName, entryName, compressionLevel);
}
// Autogenerated method: System.IO.Compression.ZipFileExtensions.ExtractToFile
void System::IO::Compression::ZipFileExtensions::ExtractToFile(::System::IO::Compression::ZipArchiveEntry* source, ::StringW destinationFileName, bool overwrite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFileExtensions::ExtractToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFileExtensions", "ExtractToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destinationFileName), ::il2cpp_utils::ExtractType(overwrite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, destinationFileName, overwrite);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Numerics.BigInteger
#include "System/Numerics/BigInteger.hpp"
// Including type: System.Numerics.BigInteger/System.Numerics.GetBytesMode
#include "System/Numerics/BigInteger_GetBytesMode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Numerics.BigInteger s_bnMinInt
::System::Numerics::BigInteger System::Numerics::BigInteger::_get_s_bnMinInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_get_s_bnMinInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Numerics::BigInteger>("System.Numerics", "BigInteger", "s_bnMinInt"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Numerics.BigInteger s_bnMinInt
void System::Numerics::BigInteger::_set_s_bnMinInt(::System::Numerics::BigInteger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_set_s_bnMinInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger", "s_bnMinInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Numerics.BigInteger s_bnOneInt
::System::Numerics::BigInteger System::Numerics::BigInteger::_get_s_bnOneInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_get_s_bnOneInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Numerics::BigInteger>("System.Numerics", "BigInteger", "s_bnOneInt"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Numerics.BigInteger s_bnOneInt
void System::Numerics::BigInteger::_set_s_bnOneInt(::System::Numerics::BigInteger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_set_s_bnOneInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger", "s_bnOneInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Numerics.BigInteger s_bnZeroInt
::System::Numerics::BigInteger System::Numerics::BigInteger::_get_s_bnZeroInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_get_s_bnZeroInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Numerics::BigInteger>("System.Numerics", "BigInteger", "s_bnZeroInt"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Numerics.BigInteger s_bnZeroInt
void System::Numerics::BigInteger::_set_s_bnZeroInt(::System::Numerics::BigInteger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_set_s_bnZeroInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger", "s_bnZeroInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Numerics.BigInteger s_bnMinusOneInt
::System::Numerics::BigInteger System::Numerics::BigInteger::_get_s_bnMinusOneInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_get_s_bnMinusOneInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Numerics::BigInteger>("System.Numerics", "BigInteger", "s_bnMinusOneInt"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Numerics.BigInteger s_bnMinusOneInt
void System::Numerics::BigInteger::_set_s_bnMinusOneInt(::System::Numerics::BigInteger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_set_s_bnMinusOneInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger", "s_bnMinusOneInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] s_success
::ArrayW<uint8_t> System::Numerics::BigInteger::_get_s_success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_get_s_success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Numerics", "BigInteger", "s_success"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] s_success
void System::Numerics::BigInteger::_set_s_success(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_set_s_success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger", "s_success", value));
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _sign
[[deprecated]] int& System::Numerics::BigInteger::dyn__sign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::dyn__sign");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sign"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.UInt32[] _bits
[[deprecated]] ::ArrayW<uint>& System::Numerics::BigInteger::dyn__bits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::dyn__bits");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bits"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Numerics.BigInteger.get_Zero
::System::Numerics::BigInteger System::Numerics::BigInteger::get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::get_Zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "get_Zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.get_IsZero
bool System::Numerics::BigInteger::get_IsZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::get_IsZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(::System::ReadOnlySpan_1<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
// ABORTED elsewhere.  System::Numerics::BigInteger::BigInteger(int n, ::ArrayW<uint> rgu)
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(::ArrayW<uint> value, bool negative) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(negative)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, negative);
}
// Autogenerated method: System.Numerics.BigInteger..cctor
void System::Numerics::BigInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.Parse
::System::Numerics::BigInteger System::Numerics::BigInteger::Parse(::StringW value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Numerics.BigInteger.Parse
::System::Numerics::BigInteger System::Numerics::BigInteger::Parse(::StringW value, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, style, provider);
}
// Autogenerated method: System.Numerics.BigInteger.Equals
bool System::Numerics::BigInteger::Equals(int64_t other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Numerics.BigInteger.Equals
bool System::Numerics::BigInteger::Equals(::System::Numerics::BigInteger other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Numerics::BigInteger), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Numerics.BigInteger.CompareTo
int System::Numerics::BigInteger::CompareTo(int64_t other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::CompareTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Numerics.BigInteger.CompareTo
int System::Numerics::BigInteger::CompareTo(::System::Numerics::BigInteger other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Numerics::BigInteger), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Numerics.BigInteger.CompareTo
int System::Numerics::BigInteger::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Numerics::BigInteger), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Numerics.BigInteger.ToByteArray
::ArrayW<uint8_t> System::Numerics::BigInteger::ToByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::ToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.TryGetBytes
::ArrayW<uint8_t> System::Numerics::BigInteger::TryGetBytes(::System::Numerics::BigInteger::GetBytesMode mode, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::TryGetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(bytesWritten)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, mode, destination, byref(bytesWritten));
}
// Autogenerated method: System.Numerics.BigInteger.ToString
::StringW System::Numerics::BigInteger::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Numerics.BigInteger.ToString
::StringW System::Numerics::BigInteger::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Numerics::BigInteger), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: System.Numerics.BigInteger.Add
::System::Numerics::BigInteger System::Numerics::BigInteger::Add(::ArrayW<uint> leftBits, int leftSign, ::ArrayW<uint> rightBits, int rightSign) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftBits), ::il2cpp_utils::ExtractType(leftSign), ::il2cpp_utils::ExtractType(rightBits), ::il2cpp_utils::ExtractType(rightSign)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leftBits, leftSign, rightBits, rightSign);
}
// Autogenerated method: System.Numerics.BigInteger.Subtract
::System::Numerics::BigInteger System::Numerics::BigInteger::Subtract(::ArrayW<uint> leftBits, int leftSign, ::ArrayW<uint> rightBits, int rightSign) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftBits), ::il2cpp_utils::ExtractType(leftSign), ::il2cpp_utils::ExtractType(rightBits), ::il2cpp_utils::ExtractType(rightSign)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leftBits, leftSign, rightBits, rightSign);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator uint8_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator int8_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator int16_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator uint16_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator uint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator int64_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator uint64_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator ::System::Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.GetDiffLength
int System::Numerics::BigInteger::GetDiffLength(::ArrayW<uint> rgu1, ::ArrayW<uint> rgu2, int cu) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::GetDiffLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "GetDiffLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgu1), ::il2cpp_utils::ExtractType(rgu2), ::il2cpp_utils::ExtractType(cu)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgu1, rgu2, cu);
}
// Autogenerated method: System.Numerics.BigInteger.GetHashCode
int System::Numerics::BigInteger::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.Equals
bool System::Numerics::BigInteger::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Numerics.BigInteger.ToString
::StringW System::Numerics::BigInteger::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Subtraction
::System::Numerics::BigInteger System::Numerics::operator-(const ::System::Numerics::BigInteger& left, const ::System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_UnaryNegation
::System::Numerics::BigInteger System::Numerics::operator-(const ::System::Numerics::BigInteger& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_UnaryNegation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_UnaryNegation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger.op_Addition
::System::Numerics::BigInteger System::Numerics::operator+(const ::System::Numerics::BigInteger& left, const ::System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_Multiply
::System::Numerics::BigInteger System::Numerics::operator*(const ::System::Numerics::BigInteger& left, const ::System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_LessThanOrEqual
bool System::Numerics::operator <=(const ::System::Numerics::BigInteger& left, const ::System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_Inequality
bool System::Numerics::operator !=(const ::System::Numerics::BigInteger& left, const ::System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_LessThan
bool System::Numerics::operator <(const ::System::Numerics::BigInteger& left, const int64_t& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_LessThanOrEqual
bool System::Numerics::operator <=(const ::System::Numerics::BigInteger& left, const int64_t& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_Equality
bool System::Numerics::operator ==(const ::System::Numerics::BigInteger& left, const int64_t& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_Inequality
bool System::Numerics::operator !=(const ::System::Numerics::BigInteger& left, const int64_t& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_LessThan
bool System::Numerics::operator <(const int64_t& left, const ::System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_LessThanOrEqual
bool System::Numerics::operator <=(const int64_t& left, const ::System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Numerics.BigInteger/System.Numerics.GetBytesMode
#include "System/Numerics/BigInteger_GetBytesMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode AllocateArray
::System::Numerics::BigInteger::GetBytesMode System::Numerics::BigInteger::GetBytesMode::_get_AllocateArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::GetBytesMode::_get_AllocateArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Numerics::BigInteger::GetBytesMode>("System.Numerics", "BigInteger/GetBytesMode", "AllocateArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode AllocateArray
void System::Numerics::BigInteger::GetBytesMode::_set_AllocateArray(::System::Numerics::BigInteger::GetBytesMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::GetBytesMode::_set_AllocateArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger/GetBytesMode", "AllocateArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode Count
::System::Numerics::BigInteger::GetBytesMode System::Numerics::BigInteger::GetBytesMode::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::GetBytesMode::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Numerics::BigInteger::GetBytesMode>("System.Numerics", "BigInteger/GetBytesMode", "Count"));
}
// Autogenerated static field setter
// Set static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode Count
void System::Numerics::BigInteger::GetBytesMode::_set_Count(::System::Numerics::BigInteger::GetBytesMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::GetBytesMode::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger/GetBytesMode", "Count", value));
}
// Autogenerated static field getter
// Get static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode Span
::System::Numerics::BigInteger::GetBytesMode System::Numerics::BigInteger::GetBytesMode::_get_Span() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::GetBytesMode::_get_Span");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Numerics::BigInteger::GetBytesMode>("System.Numerics", "BigInteger/GetBytesMode", "Span"));
}
// Autogenerated static field setter
// Set static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode Span
void System::Numerics::BigInteger::GetBytesMode::_set_Span(::System::Numerics::BigInteger::GetBytesMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::GetBytesMode::_set_Span");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger/GetBytesMode", "Span", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Numerics::BigInteger::GetBytesMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::GetBytesMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Numerics.BigIntegerCalculator
#include "System/Numerics/BigIntegerCalculator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 ReducerThreshold
int System::Numerics::BigIntegerCalculator::_get_ReducerThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::_get_ReducerThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Numerics", "BigIntegerCalculator", "ReducerThreshold"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ReducerThreshold
void System::Numerics::BigIntegerCalculator::_set_ReducerThreshold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::_set_ReducerThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigIntegerCalculator", "ReducerThreshold", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SquareThreshold
int System::Numerics::BigIntegerCalculator::_get_SquareThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::_get_SquareThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Numerics", "BigIntegerCalculator", "SquareThreshold"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SquareThreshold
void System::Numerics::BigIntegerCalculator::_set_SquareThreshold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::_set_SquareThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigIntegerCalculator", "SquareThreshold", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 AllocationThreshold
int System::Numerics::BigIntegerCalculator::_get_AllocationThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::_get_AllocationThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Numerics", "BigIntegerCalculator", "AllocationThreshold"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 AllocationThreshold
void System::Numerics::BigIntegerCalculator::_set_AllocationThreshold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::_set_AllocationThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigIntegerCalculator", "AllocationThreshold", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MultiplyThreshold
int System::Numerics::BigIntegerCalculator::_get_MultiplyThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::_get_MultiplyThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Numerics", "BigIntegerCalculator", "MultiplyThreshold"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MultiplyThreshold
void System::Numerics::BigIntegerCalculator::_set_MultiplyThreshold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::_set_MultiplyThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigIntegerCalculator", "MultiplyThreshold", value));
}
// Autogenerated method: System.Numerics.BigIntegerCalculator..cctor
void System::Numerics::BigIntegerCalculator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Add
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Add(::ArrayW<uint> left, uint right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Add
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Add(::ArrayW<uint> left, ::ArrayW<uint> right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Add
void System::Numerics::BigIntegerCalculator::Add(uint* left, int leftLength, uint* right, int rightLength, uint* bits, int bitsLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(leftLength), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(rightLength), ::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(bitsLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, leftLength, right, rightLength, bits, bitsLength);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.AddSelf
void System::Numerics::BigIntegerCalculator::AddSelf(uint* left, int leftLength, uint* right, int rightLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::AddSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "AddSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(leftLength), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(rightLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, leftLength, right, rightLength);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Subtract
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Subtract(::ArrayW<uint> left, uint right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Subtract
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Subtract(::ArrayW<uint> left, ::ArrayW<uint> right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Subtract
void System::Numerics::BigIntegerCalculator::Subtract(uint* left, int leftLength, uint* right, int rightLength, uint* bits, int bitsLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(leftLength), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(rightLength), ::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(bitsLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, leftLength, right, rightLength, bits, bitsLength);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Compare
int System::Numerics::BigIntegerCalculator::Compare(::ArrayW<uint> left, ::ArrayW<uint> right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Square
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Square(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Square");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Square", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Square
void System::Numerics::BigIntegerCalculator::Square(uint* value, int valueLength, uint* bits, int bitsLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Square");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Square", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(valueLength), ::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(bitsLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, valueLength, bits, bitsLength);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Multiply
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Multiply(::ArrayW<uint> left, uint right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Multiply
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Multiply(::ArrayW<uint> left, ::ArrayW<uint> right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Multiply
void System::Numerics::BigIntegerCalculator::Multiply(uint* left, int leftLength, uint* right, int rightLength, uint* bits, int bitsLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(leftLength), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(rightLength), ::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(bitsLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, leftLength, right, rightLength, bits, bitsLength);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.SubtractCore
void System::Numerics::BigIntegerCalculator::SubtractCore(uint* left, int leftLength, uint* right, int rightLength, uint* core, int coreLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::SubtractCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "SubtractCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(leftLength), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(rightLength), ::il2cpp_utils::ExtractType(core), ::il2cpp_utils::ExtractType(coreLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, leftLength, right, rightLength, core, coreLength);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Numerics.BigNumber
#include "System/Numerics/BigNumber.hpp"
// Including type: System.Numerics.BigNumber/System.Numerics.BigNumberBuffer
#include "System/Numerics/BigNumber_BigNumberBuffer.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.ArgumentException
#include "System/ArgumentException.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Numerics.BigInteger
#include "System/Numerics/BigInteger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Numerics.BigNumber.TryValidateParseStyleInteger
bool System::Numerics::BigNumber::TryValidateParseStyleInteger(::System::Globalization::NumberStyles style, ByRef<::System::ArgumentException*> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::TryValidateParseStyleInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "TryValidateParseStyleInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractIndependentType<::System::ArgumentException*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, style, byref(e));
}
// Autogenerated method: System.Numerics.BigNumber.TryParseBigInteger
bool System::Numerics::BigNumber::TryParseBigInteger(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info, ByRef<::System::Numerics::BigInteger> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::TryParseBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "TryParseBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<::System::Numerics::BigInteger&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, style, info, byref(result));
}
// Autogenerated method: System.Numerics.BigNumber.ParseBigInteger
::System::Numerics::BigInteger System::Numerics::BigNumber::ParseBigInteger(::StringW value, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::ParseBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "ParseBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, style, info);
}
// Autogenerated method: System.Numerics.BigNumber.AsReadOnlySpan
::System::ReadOnlySpan_1<::Il2CppChar> System::Numerics::BigNumber::AsReadOnlySpan(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::AsReadOnlySpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "AsReadOnlySpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Numerics.BigNumber.ParseBigInteger
::System::Numerics::BigInteger System::Numerics::BigNumber::ParseBigInteger(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::ParseBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "ParseBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, style, info);
}
// Autogenerated method: System.Numerics.BigNumber.HexNumberToBigInteger
bool System::Numerics::BigNumber::HexNumberToBigInteger(ByRef<::System::Numerics::BigNumber::BigNumberBuffer> number, ByRef<::System::Numerics::BigInteger> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::HexNumberToBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "HexNumberToBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(value));
}
// Autogenerated method: System.Numerics.BigNumber.NumberToBigInteger
bool System::Numerics::BigNumber::NumberToBigInteger(ByRef<::System::Numerics::BigNumber::BigNumberBuffer> number, ByRef<::System::Numerics::BigInteger> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::NumberToBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "NumberToBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(value));
}
// Autogenerated method: System.Numerics.BigNumber.ParseFormatSpecifier
::Il2CppChar System::Numerics::BigNumber::ParseFormatSpecifier(::StringW format, ByRef<int> digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::ParseFormatSpecifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "ParseFormatSpecifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, byref(digits));
}
// Autogenerated method: System.Numerics.BigNumber.FormatBigIntegerToHexString
::StringW System::Numerics::BigNumber::FormatBigIntegerToHexString(::System::Numerics::BigInteger value, ::Il2CppChar format, int digits, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::FormatBigIntegerToHexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "FormatBigIntegerToHexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, digits, info);
}
// Autogenerated method: System.Numerics.BigNumber.FormatBigInteger
::StringW System::Numerics::BigNumber::FormatBigInteger(::System::Numerics::BigInteger value, ::StringW format, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::FormatBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "FormatBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Numerics.BigNumber/System.Numerics.BigNumberBuffer
#include "System/Numerics/BigNumber_BigNumberBuffer.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Text.StringBuilder digits
[[deprecated]] ::System::Text::StringBuilder*& System::Numerics::BigNumber::BigNumberBuffer::dyn_digits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::BigNumberBuffer::dyn_digits");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "digits"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 precision
[[deprecated]] int& System::Numerics::BigNumber::BigNumberBuffer::dyn_precision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::BigNumberBuffer::dyn_precision");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "precision"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 scale
[[deprecated]] int& System::Numerics::BigNumber::BigNumberBuffer::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::BigNumberBuffer::dyn_scale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean sign
[[deprecated]] bool& System::Numerics::BigNumber::BigNumberBuffer::dyn_sign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::BigNumberBuffer::dyn_sign");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sign"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Numerics.BigNumber/System.Numerics.BigNumberBuffer.Create
::System::Numerics::BigNumber::BigNumberBuffer System::Numerics::BigNumber::BigNumberBuffer::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::BigNumberBuffer::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber/BigNumberBuffer", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigNumber::BigNumberBuffer, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Numerics.NumericsHelpers
#include "System/Numerics/NumericsHelpers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Numerics.NumericsHelpers.GetDoubleParts
void System::Numerics::NumericsHelpers::GetDoubleParts(double dbl, ByRef<int> sign, ByRef<int> exp, ByRef<uint64_t> man, ByRef<bool> fFinite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::NumericsHelpers::GetDoubleParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "GetDoubleParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dbl), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<uint64_t&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dbl, byref(sign), byref(exp), byref(man), byref(fFinite));
}
// Autogenerated method: System.Numerics.NumericsHelpers.GetDoubleFromParts
double System::Numerics::NumericsHelpers::GetDoubleFromParts(int sign, int exp, uint64_t man) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::NumericsHelpers::GetDoubleFromParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "GetDoubleFromParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sign), ::il2cpp_utils::ExtractType(exp), ::il2cpp_utils::ExtractType(man)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sign, exp, man);
}
// Autogenerated method: System.Numerics.NumericsHelpers.DangerousMakeTwosComplement
void System::Numerics::NumericsHelpers::DangerousMakeTwosComplement(::ArrayW<uint> d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::NumericsHelpers::DangerousMakeTwosComplement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "DangerousMakeTwosComplement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Numerics.NumericsHelpers.MakeUlong
uint64_t System::Numerics::NumericsHelpers::MakeUlong(uint uHi, uint uLo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::NumericsHelpers::MakeUlong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "MakeUlong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uHi), ::il2cpp_utils::ExtractType(uLo)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uHi, uLo);
}
// Autogenerated method: System.Numerics.NumericsHelpers.Abs
uint System::Numerics::NumericsHelpers::Abs(int a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::NumericsHelpers::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a);
}
// Autogenerated method: System.Numerics.NumericsHelpers.CombineHash
uint System::Numerics::NumericsHelpers::CombineHash(uint u1, uint u2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::NumericsHelpers::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u1), ::il2cpp_utils::ExtractType(u2)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, u1, u2);
}
// Autogenerated method: System.Numerics.NumericsHelpers.CombineHash
int System::Numerics::NumericsHelpers::CombineHash(int n1, int n2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::NumericsHelpers::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n1), ::il2cpp_utils::ExtractType(n2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n1, n2);
}
// Autogenerated method: System.Numerics.NumericsHelpers.CbitHighZero
int System::Numerics::NumericsHelpers::CbitHighZero(uint u) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::NumericsHelpers::CbitHighZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "CbitHighZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, u);
}
// Autogenerated method: System.Numerics.NumericsHelpers.CbitHighZero
int System::Numerics::NumericsHelpers::CbitHighZero(uint64_t uu) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::NumericsHelpers::CbitHighZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "CbitHighZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uu)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uu);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.FormatProvider
#include "System/Globalization/FormatProvider.hpp"
// Including type: System.Globalization.FormatProvider/System.Globalization.Number
#include "System/Globalization/FormatProvider_Number.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Globalization.FormatProvider.FormatBigInteger
::StringW System::Globalization::FormatProvider::FormatBigInteger(int precision, int scale, bool sign, ::StringW format, ::System::Globalization::NumberFormatInfo* numberFormatInfo, ::ArrayW<::Il2CppChar> digits, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::FormatBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider", "FormatBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(precision), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(sign), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(numberFormatInfo), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, precision, scale, sign, format, numberFormatInfo, digits, startIndex);
}
// Autogenerated method: System.Globalization.FormatProvider.TryStringToBigInteger
bool System::Globalization::FormatProvider::TryStringToBigInteger(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* numberFormatInfo, ::System::Text::StringBuilder* receiver, ByRef<int> precision, ByRef<int> scale, ByRef<bool> sign) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::TryStringToBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider", "TryStringToBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(numberFormatInfo), ::il2cpp_utils::ExtractType(receiver), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, styles, numberFormatInfo, receiver, byref(precision), byref(scale), byref(sign));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.FormatProvider/System.Globalization.Number
#include "System/Globalization/FormatProvider_Number.hpp"
// Including type: System.Globalization.FormatProvider/System.Globalization.Number/System.Globalization.NumberBuffer
#include "System/Globalization/FormatProvider_Number_NumberBuffer.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] s_posCurrencyFormats
::ArrayW<::StringW> System::Globalization::FormatProvider::Number::_get_s_posCurrencyFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_get_s_posCurrencyFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Globalization", "FormatProvider/Number", "s_posCurrencyFormats"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] s_posCurrencyFormats
void System::Globalization::FormatProvider::Number::_set_s_posCurrencyFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_set_s_posCurrencyFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FormatProvider/Number", "s_posCurrencyFormats", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] s_negCurrencyFormats
::ArrayW<::StringW> System::Globalization::FormatProvider::Number::_get_s_negCurrencyFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_get_s_negCurrencyFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Globalization", "FormatProvider/Number", "s_negCurrencyFormats"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] s_negCurrencyFormats
void System::Globalization::FormatProvider::Number::_set_s_negCurrencyFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_set_s_negCurrencyFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FormatProvider/Number", "s_negCurrencyFormats", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] s_posPercentFormats
::ArrayW<::StringW> System::Globalization::FormatProvider::Number::_get_s_posPercentFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_get_s_posPercentFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Globalization", "FormatProvider/Number", "s_posPercentFormats"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] s_posPercentFormats
void System::Globalization::FormatProvider::Number::_set_s_posPercentFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_set_s_posPercentFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FormatProvider/Number", "s_posPercentFormats", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] s_negPercentFormats
::ArrayW<::StringW> System::Globalization::FormatProvider::Number::_get_s_negPercentFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_get_s_negPercentFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Globalization", "FormatProvider/Number", "s_negPercentFormats"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] s_negPercentFormats
void System::Globalization::FormatProvider::Number::_set_s_negPercentFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_set_s_negPercentFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FormatProvider/Number", "s_negPercentFormats", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] s_negNumberFormats
::ArrayW<::StringW> System::Globalization::FormatProvider::Number::_get_s_negNumberFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_get_s_negNumberFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Globalization", "FormatProvider/Number", "s_negNumberFormats"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] s_negNumberFormats
void System::Globalization::FormatProvider::Number::_set_s_negNumberFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_set_s_negNumberFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FormatProvider/Number", "s_negNumberFormats", value));
}
// Autogenerated static field getter
// Get static field: static private System.String s_posNumberFormat
::StringW System::Globalization::FormatProvider::Number::_get_s_posNumberFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_get_s_posNumberFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "FormatProvider/Number", "s_posNumberFormat"));
}
// Autogenerated static field setter
// Set static field: static private System.String s_posNumberFormat
void System::Globalization::FormatProvider::Number::_set_s_posNumberFormat(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_set_s_posNumberFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FormatProvider/Number", "s_posNumberFormat", value));
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number..cctor
void System::Globalization::FormatProvider::Number::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.IsWhite
bool System::Globalization::FormatProvider::Number::IsWhite(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::IsWhite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "IsWhite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.MatchChars
::Il2CppChar* System::Globalization::FormatProvider::Number::MatchChars(::Il2CppChar* p, ::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::MatchChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "MatchChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, str);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.MatchChars
::Il2CppChar* System::Globalization::FormatProvider::Number::MatchChars(::Il2CppChar* p, ::Il2CppChar* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::MatchChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "MatchChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, str);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.ParseNumber
bool System::Globalization::FormatProvider::Number::ParseNumber(ByRef<::Il2CppChar*> str, ::System::Globalization::NumberStyles options, ByRef<::System::Globalization::FormatProvider::Number::NumberBuffer> number, ::System::Text::StringBuilder* sb, ::System::Globalization::NumberFormatInfo* numfmt, bool parseDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::ParseNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "ParseNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(numfmt), ::il2cpp_utils::ExtractType(parseDecimal)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), options, byref(number), sb, numfmt, parseDecimal);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.TrailingZeros
bool System::Globalization::FormatProvider::Number::TrailingZeros(::System::ReadOnlySpan_1<::Il2CppChar> s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::TrailingZeros");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "TrailingZeros", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.TryStringToNumber
bool System::Globalization::FormatProvider::Number::TryStringToNumber(::System::ReadOnlySpan_1<::Il2CppChar> str, ::System::Globalization::NumberStyles options, ByRef<::System::Globalization::FormatProvider::Number::NumberBuffer> number, ::System::Text::StringBuilder* sb, ::System::Globalization::NumberFormatInfo* numfmt, bool parseDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::TryStringToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "TryStringToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(numfmt), ::il2cpp_utils::ExtractType(parseDecimal)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, options, byref(number), sb, numfmt, parseDecimal);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.Int32ToDecChars
void System::Globalization::FormatProvider::Number::Int32ToDecChars(::Il2CppChar* buffer, ByRef<int> index, uint value, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::Int32ToDecChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "Int32ToDecChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, byref(index), value, digits);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.ParseFormatSpecifier
::Il2CppChar System::Globalization::FormatProvider::Number::ParseFormatSpecifier(::StringW format, ByRef<int> digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::ParseFormatSpecifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "ParseFormatSpecifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, byref(digits));
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.NumberToString
::StringW System::Globalization::FormatProvider::Number::NumberToString(::System::Globalization::FormatProvider::Number::NumberBuffer number, ::Il2CppChar format, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info, bool isDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::NumberToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "NumberToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(isDecimal)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, number, format, nMaxDigits, info, isDecimal);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatCurrency
void System::Globalization::FormatProvider::Number::FormatCurrency(::System::Text::StringBuilder* sb, ::System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::FormatCurrency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatCurrency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, number, nMinDigits, nMaxDigits, info);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.wcslen
int System::Globalization::FormatProvider::Number::wcslen(::Il2CppChar* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::wcslen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "wcslen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatFixed
void System::Globalization::FormatProvider::Number::FormatFixed(::System::Text::StringBuilder* sb, ::System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info, ::ArrayW<int> groupDigits, ::StringW sDecimal, ::StringW sGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::FormatFixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatFixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(groupDigits), ::il2cpp_utils::ExtractType(sDecimal), ::il2cpp_utils::ExtractType(sGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, number, nMinDigits, nMaxDigits, info, groupDigits, sDecimal, sGroup);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatNumber
void System::Globalization::FormatProvider::Number::FormatNumber(::System::Text::StringBuilder* sb, ::System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::FormatNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, number, nMinDigits, nMaxDigits, info);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatScientific
void System::Globalization::FormatProvider::Number::FormatScientific(::System::Text::StringBuilder* sb, ::System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info, ::Il2CppChar expChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::FormatScientific");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatScientific", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(expChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, number, nMinDigits, nMaxDigits, info, expChar);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatExponent
void System::Globalization::FormatProvider::Number::FormatExponent(::System::Text::StringBuilder* sb, ::System::Globalization::NumberFormatInfo* info, int value, ::Il2CppChar expChar, int minDigits, bool positiveSign) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::FormatExponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatExponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(expChar), ::il2cpp_utils::ExtractType(minDigits), ::il2cpp_utils::ExtractType(positiveSign)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, info, value, expChar, minDigits, positiveSign);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatGeneral
void System::Globalization::FormatProvider::Number::FormatGeneral(::System::Text::StringBuilder* sb, ::System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info, ::Il2CppChar expChar, bool bSuppressScientific) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::FormatGeneral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatGeneral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(expChar), ::il2cpp_utils::ExtractType(bSuppressScientific)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, number, nMinDigits, nMaxDigits, info, expChar, bSuppressScientific);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatPercent
void System::Globalization::FormatProvider::Number::FormatPercent(::System::Text::StringBuilder* sb, ::System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::FormatPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, number, nMinDigits, nMaxDigits, info);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.RoundNumber
void System::Globalization::FormatProvider::Number::RoundNumber(ByRef<::System::Globalization::FormatProvider::Number::NumberBuffer> number, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::RoundNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "RoundNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), pos);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FindSection
int System::Globalization::FormatProvider::Number::FindSection(::StringW format, int section) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::FindSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FindSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(section)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, section);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.NumberToStringFormat
::StringW System::Globalization::FormatProvider::Number::NumberToStringFormat(::System::Globalization::FormatProvider::Number::NumberBuffer number, ::StringW format, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::NumberToStringFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "NumberToStringFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, number, format, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.FormatProvider/System.Globalization.Number/System.Globalization.NumberBuffer
#include "System/Globalization/FormatProvider_Number_NumberBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 precision
[[deprecated]] int& System::Globalization::FormatProvider::Number::NumberBuffer::dyn_precision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::NumberBuffer::dyn_precision");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "precision"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 scale
[[deprecated]] int& System::Globalization::FormatProvider::Number::NumberBuffer::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::NumberBuffer::dyn_scale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean sign
[[deprecated]] bool& System::Globalization::FormatProvider::Number::NumberBuffer::dyn_sign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::NumberBuffer::dyn_sign");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sign"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char* overrideDigits
[[deprecated]] ::Il2CppChar*& System::Globalization::FormatProvider::Number::NumberBuffer::dyn_overrideDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::NumberBuffer::dyn_overrideDigits");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideDigits"))->offset;
  return *reinterpret_cast<::Il2CppChar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number/System.Globalization.NumberBuffer.get_digits
::Il2CppChar* System::Globalization::FormatProvider::Number::NumberBuffer::get_digits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::NumberBuffer::get_digits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_digits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.DataContractAttribute
#include "System/Runtime/Serialization/DataContractAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean isReference
[[deprecated]] bool& System::Runtime::Serialization::DataContractAttribute::dyn_isReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataContractAttribute::dyn_isReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isReference"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Serialization.DataContractAttribute.get_IsReference
bool System::Runtime::Serialization::DataContractAttribute::get_IsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataContractAttribute::get_IsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.DataMemberAttribute
#include "System/Runtime/Serialization/DataMemberAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated]] ::StringW& System::Runtime::Serialization::DataMemberAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 order
[[deprecated]] int& System::Runtime::Serialization::DataMemberAttribute::dyn_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::dyn_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRequired
[[deprecated]] bool& System::Runtime::Serialization::DataMemberAttribute::dyn_isRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::dyn_isRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean emitDefaultValue
[[deprecated]] bool& System::Runtime::Serialization::DataMemberAttribute::dyn_emitDefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::dyn_emitDefaultValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emitDefaultValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_Name
::StringW System::Runtime::Serialization::DataMemberAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_Order
int System::Runtime::Serialization::DataMemberAttribute::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::get_Order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_IsRequired
bool System::Runtime::Serialization::DataMemberAttribute::get_IsRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::get_IsRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_EmitDefaultValue
bool System::Runtime::Serialization::DataMemberAttribute::get_EmitDefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::get_EmitDefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EmitDefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.EnumMemberAttribute
#include "System/Runtime/Serialization/EnumMemberAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String value
[[deprecated]] ::StringW& System::Runtime::Serialization::EnumMemberAttribute::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::EnumMemberAttribute::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Serialization.EnumMemberAttribute.get_Value
::StringW System::Runtime::Serialization::EnumMemberAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::EnumMemberAttribute::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.KnownTypeAttribute
#include "System/Runtime/Serialization/KnownTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated]] ::System::Type*& System::Runtime::Serialization::KnownTypeAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::KnownTypeAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.CSharp.CodeDomProvider
#include "Microsoft/CSharp/CodeDomProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.CSharp.CSharpCodeProvider
#include "Microsoft/CSharp/CSharpCodeProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.AstNode
#include "MS/Internal/Xml/XPath/AstNode.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MS.Internal.Xml.XPath.AstNode.get_Type
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.AstNode.get_ReturnType
::System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::AstNode::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Axis
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_get_Axis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Axis"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Axis
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Axis(::MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_set_Axis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Axis", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Operator
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Operator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_get_Operator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Operator"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Operator
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Operator(::MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_set_Operator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Operator", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Filter
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Filter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_get_Filter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Filter"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Filter
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Filter(::MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_set_Filter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Filter", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType ConstantOperand
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_ConstantOperand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_get_ConstantOperand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "ConstantOperand"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType ConstantOperand
void MS::Internal::Xml::XPath::AstNode::AstType::_set_ConstantOperand(::MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_set_ConstantOperand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "ConstantOperand", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Function
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Function() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_get_Function");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Function"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Function
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Function(::MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_set_Function");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Function", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Group
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_get_Group");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Group"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Group
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Group(::MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_set_Group");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Group", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Root
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_get_Root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Root"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Root
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Root(::MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_set_Root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Root", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Variable
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Variable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_get_Variable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Variable"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Variable
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Variable(::MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_set_Variable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Variable", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Error
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Error"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Error
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Error(::MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& MS::Internal::Xml::XPath::AstNode::AstType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Axis
#include "MS/Internal/Xml/XPath/Axis.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType axisType
[[deprecated]] ::MS::Internal::Xml::XPath::Axis::AxisType& MS::Internal::Xml::XPath::Axis::dyn_axisType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::dyn_axisType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axisType"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::Axis::AxisType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.AstNode input
[[deprecated]] ::MS::Internal::Xml::XPath::AstNode*& MS::Internal::Xml::XPath::Axis::dyn_input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::dyn_input");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "input"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::AstNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String prefix
[[deprecated]] ::StringW& MS::Internal::Xml::XPath::Axis::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated]] ::StringW& MS::Internal::Xml::XPath::Axis::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XPath.XPathNodeType nodeType
[[deprecated]] ::System::Xml::XPath::XPathNodeType& MS::Internal::Xml::XPath::Axis::dyn_nodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::dyn_nodeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeType"))->offset;
  return *reinterpret_cast<::System::Xml::XPath::XPathNodeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean abbrAxis
[[deprecated]] bool& MS::Internal::Xml::XPath::Axis::dyn_abbrAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::dyn_abbrAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "abbrAxis"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String urn
[[deprecated]] ::StringW& MS::Internal::Xml::XPath::Axis::dyn_urn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::dyn_urn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "urn"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_Input
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::Axis::get_Input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::get_Input");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Input", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.set_Input
void MS::Internal::Xml::XPath::Axis::set_Input(::MS::Internal::Xml::XPath::AstNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::set_Input");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Input", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_Prefix
::StringW MS::Internal::Xml::XPath::Axis::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_Name
::StringW MS::Internal::Xml::XPath::Axis::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_NodeType
::System::Xml::XPath::XPathNodeType MS::Internal::Xml::XPath::Axis::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::get_NodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNodeType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_TypeOfAxis
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::get_TypeOfAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::get_TypeOfAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeOfAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::Axis::AxisType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_AbbrAxis
bool MS::Internal::Xml::XPath::Axis::get_AbbrAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::get_AbbrAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbbrAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_Urn
::StringW MS::Internal::Xml::XPath::Axis::get_Urn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::get_Urn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Urn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.set_Urn
void MS::Internal::Xml::XPath::Axis::set_Urn(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::set_Urn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Urn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_Type
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Axis::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_ReturnType
::System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Axis::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType
#include "MS/Internal/Xml/XPath/Axis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Ancestor
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Ancestor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_Ancestor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Ancestor"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Ancestor
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Ancestor(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_Ancestor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Ancestor", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType AncestorOrSelf
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_AncestorOrSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_AncestorOrSelf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "AncestorOrSelf"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType AncestorOrSelf
void MS::Internal::Xml::XPath::Axis::AxisType::_set_AncestorOrSelf(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_AncestorOrSelf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "AncestorOrSelf", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Attribute
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Attribute
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Attribute(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Child
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Child() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_Child");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Child"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Child
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Child(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_Child");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Child", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Descendant
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Descendant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_Descendant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Descendant"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Descendant
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Descendant(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_Descendant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Descendant", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType DescendantOrSelf
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_DescendantOrSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_DescendantOrSelf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "DescendantOrSelf"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType DescendantOrSelf
void MS::Internal::Xml::XPath::Axis::AxisType::_set_DescendantOrSelf(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_DescendantOrSelf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "DescendantOrSelf", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Following
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Following() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_Following");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Following"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Following
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Following(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_Following");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Following", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType FollowingSibling
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_FollowingSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_FollowingSibling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "FollowingSibling"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType FollowingSibling
void MS::Internal::Xml::XPath::Axis::AxisType::_set_FollowingSibling(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_FollowingSibling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "FollowingSibling", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Namespace
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_Namespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Namespace"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Namespace
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Namespace(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_Namespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Namespace", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Parent
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_Parent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Parent"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Parent
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Parent(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_Parent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Parent", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Preceding
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Preceding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_Preceding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Preceding"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Preceding
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Preceding(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_Preceding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Preceding", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType PrecedingSibling
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_PrecedingSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_PrecedingSibling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "PrecedingSibling"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType PrecedingSibling
void MS::Internal::Xml::XPath::Axis::AxisType::_set_PrecedingSibling(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_PrecedingSibling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "PrecedingSibling", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Self
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Self() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_Self");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Self"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Self
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Self(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_Self");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Self", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType None
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "None"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType None
void MS::Internal::Xml::XPath::Axis::AxisType::_set_None(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& MS::Internal::Xml::XPath::Axis::AxisType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Filter
#include "MS/Internal/Xml/XPath/Filter.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.AstNode input
[[deprecated]] ::MS::Internal::Xml::XPath::AstNode*& MS::Internal::Xml::XPath::Filter::dyn_input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Filter::dyn_input");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "input"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::AstNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.AstNode condition
[[deprecated]] ::MS::Internal::Xml::XPath::AstNode*& MS::Internal::Xml::XPath::Filter::dyn_condition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Filter::dyn_condition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "condition"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::AstNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Filter.get_Type
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Filter::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Filter::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Filter.get_ReturnType
::System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Filter::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Filter::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Function
#include "MS/Internal/Xml/XPath/Function.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Xml.XPath.XPathResultType[] ReturnTypes
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::Function::_get_ReturnTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::_get_ReturnTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "Function", "ReturnTypes"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XPath.XPathResultType[] ReturnTypes
void MS::Internal::Xml::XPath::Function::_set_ReturnTypes(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::_set_ReturnTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function", "ReturnTypes", value));
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType functionType
[[deprecated]] ::MS::Internal::Xml::XPath::Function::FunctionType& MS::Internal::Xml::XPath::Function::dyn_functionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::dyn_functionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "functionType"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::Function::FunctionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList argumentList
[[deprecated]] ::System::Collections::ArrayList*& MS::Internal::Xml::XPath::Function::dyn_argumentList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::dyn_argumentList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "argumentList"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated]] ::StringW& MS::Internal::Xml::XPath::Function::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String prefix
[[deprecated]] ::StringW& MS::Internal::Xml::XPath::Function::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Function..cctor
void MS::Internal::Xml::XPath::Function::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "Function", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Function.get_Type
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Function::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Function.get_ReturnType
::System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Function::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType
#include "MS/Internal/Xml/XPath/Function.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncLast
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncLast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncLast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncLast"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncLast
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncLast(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncLast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncLast", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncPosition
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncPosition"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncPosition
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncPosition(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncPosition", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncCount
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncCount"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncCount
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncCount(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncCount", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncID
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncID"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncID
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncID(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncID", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncLocalName
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncLocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncLocalName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncLocalName"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncLocalName
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncLocalName(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncLocalName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncLocalName", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNameSpaceUri
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNameSpaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNameSpaceUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNameSpaceUri"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNameSpaceUri
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNameSpaceUri(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNameSpaceUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNameSpaceUri", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncName
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncName"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncName
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncName(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncName", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncString
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncString"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncString
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncString(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncString", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncBoolean
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncBoolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncBoolean"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncBoolean
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncBoolean(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncBoolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncBoolean", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNumber
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNumber"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNumber
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNumber(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNumber", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncTrue
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncTrue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncTrue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncTrue"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncTrue
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncTrue(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncTrue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncTrue", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncFalse
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncFalse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncFalse"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncFalse
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncFalse(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncFalse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncFalse", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNot
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNot"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNot
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNot(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNot", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncConcat
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncConcat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncConcat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncConcat"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncConcat
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncConcat(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncConcat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncConcat", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncStartsWith
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncStartsWith() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncStartsWith");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncStartsWith"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncStartsWith
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncStartsWith(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncStartsWith");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncStartsWith", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncContains
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncContains() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncContains");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncContains"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncContains
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncContains(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncContains");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncContains", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSubstringBefore
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSubstringBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSubstringBefore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSubstringBefore"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSubstringBefore
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSubstringBefore(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSubstringBefore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSubstringBefore", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSubstringAfter
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSubstringAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSubstringAfter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSubstringAfter"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSubstringAfter
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSubstringAfter(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSubstringAfter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSubstringAfter", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSubstring
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSubstring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSubstring");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSubstring"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSubstring
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSubstring(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSubstring");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSubstring", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncStringLength
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncStringLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncStringLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncStringLength"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncStringLength
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncStringLength(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncStringLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncStringLength", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNormalize
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNormalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNormalize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNormalize"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNormalize
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNormalize(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNormalize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNormalize", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncTranslate
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncTranslate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncTranslate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncTranslate"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncTranslate
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncTranslate(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncTranslate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncTranslate", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncLang
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncLang");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncLang"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncLang
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncLang(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncLang");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncLang", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSum
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSum"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSum
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSum(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSum", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncFloor
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncFloor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncFloor"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncFloor
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncFloor(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncFloor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncFloor", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncCeiling
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncCeiling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncCeiling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncCeiling"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncCeiling
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncCeiling(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncCeiling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncCeiling", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncRound
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncRound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncRound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncRound"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncRound
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncRound(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncRound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncRound", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncUserDefined
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncUserDefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncUserDefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncUserDefined"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncUserDefined
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncUserDefined(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncUserDefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncUserDefined", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& MS::Internal::Xml::XPath::Function::FunctionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Group
#include "MS/Internal/Xml/XPath/Group.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.AstNode groupNode
[[deprecated]] ::MS::Internal::Xml::XPath::AstNode*& MS::Internal::Xml::XPath::Group::dyn_groupNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Group::dyn_groupNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groupNode"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::AstNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Group.get_Type
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Group::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Group::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Group.get_ReturnType
::System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Group::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Group::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MS.Internal.Xml.XPath.Operand
#include "MS/Internal/Xml/XPath/Operand.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XPath.XPathResultType type
[[deprecated]] ::System::Xml::XPath::XPathResultType& MS::Internal::Xml::XPath::Operand::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operand::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Xml::XPath::XPathResultType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object val
[[deprecated]] ::Il2CppObject*& MS::Internal::Xml::XPath::Operand::dyn_val() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operand::dyn_val");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "val"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Operand.get_Type
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Operand::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operand::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Operand.get_ReturnType
::System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Operand::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operand::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Operator
#include "MS/Internal/Xml/XPath/Operator.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op[] invertOp
::ArrayW<::MS::Internal::Xml::XPath::Operator::Op> MS::Internal::Xml::XPath::Operator::_get_invertOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::_get_invertOp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::MS::Internal::Xml::XPath::Operator::Op>>("MS.Internal.Xml.XPath", "Operator", "invertOp"));
}
// Autogenerated static field setter
// Set static field: static private MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op[] invertOp
void MS::Internal::Xml::XPath::Operator::_set_invertOp(::ArrayW<::MS::Internal::Xml::XPath::Operator::Op> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::_set_invertOp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator", "invertOp", value));
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op opType
[[deprecated]] ::MS::Internal::Xml::XPath::Operator::Op& MS::Internal::Xml::XPath::Operator::dyn_opType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::dyn_opType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opType"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::Operator::Op*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.AstNode opnd1
[[deprecated]] ::MS::Internal::Xml::XPath::AstNode*& MS::Internal::Xml::XPath::Operator::dyn_opnd1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::dyn_opnd1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opnd1"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::AstNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.AstNode opnd2
[[deprecated]] ::MS::Internal::Xml::XPath::AstNode*& MS::Internal::Xml::XPath::Operator::dyn_opnd2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::dyn_opnd2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opnd2"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::AstNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Operator..cctor
void MS::Internal::Xml::XPath::Operator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "Operator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Operator.get_Type
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Operator::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Operator.get_ReturnType
::System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Operator::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op
#include "MS/Internal/Xml/XPath/Operator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op INVALID
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_INVALID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_INVALID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "INVALID"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op INVALID
void MS::Internal::Xml::XPath::Operator::Op::_set_INVALID(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_INVALID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "INVALID", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op OR
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_OR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_OR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "OR"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op OR
void MS::Internal::Xml::XPath::Operator::Op::_set_OR(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_OR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "OR", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op AND
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_AND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_AND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "AND"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op AND
void MS::Internal::Xml::XPath::Operator::Op::_set_AND(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_AND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "AND", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op EQ
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_EQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_EQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "EQ"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op EQ
void MS::Internal::Xml::XPath::Operator::Op::_set_EQ(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_EQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "EQ", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op NE
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_NE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_NE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "NE"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op NE
void MS::Internal::Xml::XPath::Operator::Op::_set_NE(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_NE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "NE", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op LT
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_LT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_LT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "LT"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op LT
void MS::Internal::Xml::XPath::Operator::Op::_set_LT(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_LT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "LT", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op LE
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_LE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_LE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "LE"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op LE
void MS::Internal::Xml::XPath::Operator::Op::_set_LE(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_LE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "LE", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op GT
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_GT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_GT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "GT"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op GT
void MS::Internal::Xml::XPath::Operator::Op::_set_GT(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_GT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "GT", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op GE
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_GE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_GE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "GE"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op GE
void MS::Internal::Xml::XPath::Operator::Op::_set_GE(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_GE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "GE", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op PLUS
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_PLUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_PLUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "PLUS"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op PLUS
void MS::Internal::Xml::XPath::Operator::Op::_set_PLUS(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_PLUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "PLUS", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MINUS
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_MINUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_MINUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "MINUS"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MINUS
void MS::Internal::Xml::XPath::Operator::Op::_set_MINUS(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_MINUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "MINUS", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MUL
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_MUL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_MUL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "MUL"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MUL
void MS::Internal::Xml::XPath::Operator::Op::_set_MUL(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_MUL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "MUL", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op DIV
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_DIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_DIV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "DIV"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op DIV
void MS::Internal::Xml::XPath::Operator::Op::_set_DIV(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_DIV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "DIV", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MOD
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_MOD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_MOD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "MOD"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MOD
void MS::Internal::Xml::XPath::Operator::Op::_set_MOD(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_MOD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "MOD", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op UNION
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_UNION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_UNION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "UNION"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op UNION
void MS::Internal::Xml::XPath::Operator::Op::_set_UNION(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_UNION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "UNION", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& MS::Internal::Xml::XPath::Operator::Op::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Root
#include "MS/Internal/Xml/XPath/Root.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MS.Internal.Xml.XPath.Root.get_Type
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Root::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Root::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Root.get_ReturnType
::System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Root::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Root::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Variable
#include "MS/Internal/Xml/XPath/Variable.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String localname
[[deprecated]] ::StringW& MS::Internal::Xml::XPath::Variable::dyn_localname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Variable::dyn_localname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localname"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String prefix
[[deprecated]] ::StringW& MS::Internal::Xml::XPath::Variable::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Variable::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Variable.get_Type
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Variable::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Variable::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Variable.get_ReturnType
::System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Variable::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Variable::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.XPathParser
#include "MS/Internal/Xml/XPath/XPathParser.hpp"
// Including type: MS.Internal.Xml.XPath.XPathParser/MS.Internal.Xml.XPath.ParamInfo
#include "MS/Internal/Xml/XPath/XPathParser_ParamInfo.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray1
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_temparray1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray1
void MS::Internal::Xml::XPath::XPathParser::_set_temparray1(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_temparray1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray2
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_temparray2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray2
void MS::Internal::Xml::XPath::XPathParser::_set_temparray2(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_temparray2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray3
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_temparray3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray3
void MS::Internal::Xml::XPath::XPathParser::_set_temparray3(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_temparray3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray4
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_temparray4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray4"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray4
void MS::Internal::Xml::XPath::XPathParser::_set_temparray4(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_temparray4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray4", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray5
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_temparray5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray5"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray5
void MS::Internal::Xml::XPath::XPathParser::_set_temparray5(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_temparray5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray5", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray6
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_temparray6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray6"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray6
void MS::Internal::Xml::XPath::XPathParser::_set_temparray6(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_temparray6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray6", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray7
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_temparray7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray7"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray7
void MS::Internal::Xml::XPath::XPathParser::_set_temparray7(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_temparray7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray7", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray8
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_temparray8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray8"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray8
void MS::Internal::Xml::XPath::XPathParser::_set_temparray8(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_temparray8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray8", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray9
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_temparray9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray9"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray9
void MS::Internal::Xml::XPath::XPathParser::_set_temparray9(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_temparray9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray9", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable functionTable
::System::Collections::Hashtable* MS::Internal::Xml::XPath::XPathParser::_get_functionTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_functionTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("MS.Internal.Xml.XPath", "XPathParser", "functionTable"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable functionTable
void MS::Internal::Xml::XPath::XPathParser::_set_functionTable(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_functionTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "functionTable", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable AxesTable
::System::Collections::Hashtable* MS::Internal::Xml::XPath::XPathParser::_get_AxesTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_AxesTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("MS.Internal.Xml.XPath", "XPathParser", "AxesTable"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable AxesTable
void MS::Internal::Xml::XPath::XPathParser::_set_AxesTable(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_AxesTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "AxesTable", value));
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.XPathScanner scanner
[[deprecated]] ::MS::Internal::Xml::XPath::XPathScanner*& MS::Internal::Xml::XPath::XPathParser::dyn_scanner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::dyn_scanner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scanner"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::XPathScanner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 parseDepth
[[deprecated]] int& MS::Internal::Xml::XPath::XPathParser::dyn_parseDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::dyn_parseDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parseDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser..cctor
void MS::Internal::Xml::XPath::XPathParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseXPathExpresion
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseXPathExpresion(::StringW xpathExpresion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseXPathExpresion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", "ParseXPathExpresion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xpathExpresion)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xpathExpresion);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseExpresion
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseExpresion(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseExpresion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseExpresion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseOrExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseOrExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseOrExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseOrExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseAndExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseAndExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseAndExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAndExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseEqualityExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseEqualityExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseEqualityExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseEqualityExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseRelationalExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseRelationalExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseRelationalExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseRelationalExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseAdditiveExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseAdditiveExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseAdditiveExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAdditiveExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseMultiplicativeExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseMultiplicativeExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseMultiplicativeExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseMultiplicativeExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseUnaryExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseUnaryExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseUnaryExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseUnaryExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseUnionExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseUnionExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseUnionExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseUnionExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.IsNodeType
bool MS::Internal::Xml::XPath::XPathParser::IsNodeType(::MS::Internal::Xml::XPath::XPathScanner* scaner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::IsNodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", "IsNodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scaner)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scaner);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParsePathExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParsePathExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParsePathExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePathExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseFilterExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseFilterExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseFilterExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseFilterExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParsePredicate
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParsePredicate(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParsePredicate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePredicate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseLocationPath
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseLocationPath(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseLocationPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseLocationPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseRelativeLocationPath
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseRelativeLocationPath(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseRelativeLocationPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseRelativeLocationPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.IsStep
bool MS::Internal::Xml::XPath::XPathParser::IsStep(::MS::Internal::Xml::XPath::XPathScanner::LexKind lexKind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::IsStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", "IsStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexKind)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexKind);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseStep
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseStep(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseNodeTest
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseNodeTest(::MS::Internal::Xml::XPath::AstNode* qyInput, ::MS::Internal::Xml::XPath::Axis::AxisType axisType, ::System::Xml::XPath::XPathNodeType nodeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseNodeTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNodeTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput), ::il2cpp_utils::ExtractType(axisType), ::il2cpp_utils::ExtractType(nodeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput, axisType, nodeType);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.IsPrimaryExpr
bool MS::Internal::Xml::XPath::XPathParser::IsPrimaryExpr(::MS::Internal::Xml::XPath::XPathScanner* scanner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::IsPrimaryExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", "IsPrimaryExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scanner)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scanner);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParsePrimaryExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParsePrimaryExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParsePrimaryExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePrimaryExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseMethod
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseMethod(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.CheckToken
void MS::Internal::Xml::XPath::XPathParser::CheckToken(::MS::Internal::Xml::XPath::XPathScanner::LexKind t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::CheckToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.PassToken
void MS::Internal::Xml::XPath::XPathParser::PassToken(::MS::Internal::Xml::XPath::XPathScanner::LexKind t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::PassToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PassToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.NextLex
void MS::Internal::Xml::XPath::XPathParser::NextLex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::NextLex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextLex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.TestOp
bool MS::Internal::Xml::XPath::XPathParser::TestOp(::StringW op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::TestOp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestOp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, op);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.CheckNodeSet
void MS::Internal::Xml::XPath::XPathParser::CheckNodeSet(::System::Xml::XPath::XPathResultType t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::CheckNodeSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckNodeSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.CreateFunctionTable
::System::Collections::Hashtable* MS::Internal::Xml::XPath::XPathParser::CreateFunctionTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::CreateFunctionTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", "CreateFunctionTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.CreateAxesTable
::System::Collections::Hashtable* MS::Internal::Xml::XPath::XPathParser::CreateAxesTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::CreateAxesTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", "CreateAxesTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.GetAxis
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::XPathParser::GetAxis(::MS::Internal::Xml::XPath::XPathScanner* scaner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::GetAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scaner)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::Axis::AxisType, false>(this, ___internal__method, scaner);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.XPathParser/MS.Internal.Xml.XPath.ParamInfo
#include "MS/Internal/Xml/XPath/XPathParser_ParamInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType ftype
[[deprecated]] ::MS::Internal::Xml::XPath::Function::FunctionType& MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_ftype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_ftype");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ftype"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::Function::FunctionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minargs
[[deprecated]] int& MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_minargs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_minargs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minargs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxargs
[[deprecated]] int& MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_maxargs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_maxargs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxargs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XPath.XPathResultType[] argTypes
[[deprecated]] ::ArrayW<::System::Xml::XPath::XPathResultType>& MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_argTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_argTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "argTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XPath::XPathResultType>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser/MS.Internal.Xml.XPath.ParamInfo.get_FType
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_FType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_FType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::Function::FunctionType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser/MS.Internal.Xml.XPath.ParamInfo.get_Minargs
int MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_Minargs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_Minargs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Minargs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser/MS.Internal.Xml.XPath.ParamInfo.get_Maxargs
int MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_Maxargs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_Maxargs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Maxargs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser/MS.Internal.Xml.XPath.ParamInfo.get_ArgTypes
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_ArgTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_ArgTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Xml::XPath::XPathResultType>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.XPathScanner
#include "MS/Internal/Xml/XPath/XPathScanner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String xpathExpr
[[deprecated]] ::StringW& MS::Internal::Xml::XPath::XPathScanner::dyn_xpathExpr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_xpathExpr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xpathExpr"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 xpathExprIndex
[[deprecated]] int& MS::Internal::Xml::XPath::XPathScanner::dyn_xpathExprIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_xpathExprIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xpathExprIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind kind
[[deprecated]] ::MS::Internal::Xml::XPath::XPathScanner::LexKind& MS::Internal::Xml::XPath::XPathScanner::dyn_kind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_kind");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kind"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::XPathScanner::LexKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char currentChar
[[deprecated]] ::Il2CppChar& MS::Internal::Xml::XPath::XPathScanner::dyn_currentChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_currentChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentChar"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated]] ::StringW& MS::Internal::Xml::XPath::XPathScanner::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String prefix
[[deprecated]] ::StringW& MS::Internal::Xml::XPath::XPathScanner::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String stringValue
[[deprecated]] ::StringW& MS::Internal::Xml::XPath::XPathScanner::dyn_stringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_stringValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double numberValue
[[deprecated]] double& MS::Internal::Xml::XPath::XPathScanner::dyn_numberValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_numberValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberValue"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean canBeFunction
[[deprecated]] bool& MS::Internal::Xml::XPath::XPathScanner::dyn_canBeFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_canBeFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canBeFunction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlCharType xmlCharType
[[deprecated]] ::System::Xml::XmlCharType& MS::Internal::Xml::XPath::XPathScanner::dyn_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_xmlCharType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlCharType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlCharType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_SourceText
::StringW MS::Internal::Xml::XPath::XPathScanner::get_SourceText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::get_SourceText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SourceText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_CurerntChar
::Il2CppChar MS::Internal::Xml::XPath::XPathScanner::get_CurerntChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::get_CurerntChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurerntChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_Kind
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::get_Kind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::get_Kind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Kind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::XPathScanner::LexKind, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_Name
::StringW MS::Internal::Xml::XPath::XPathScanner::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_Prefix
::StringW MS::Internal::Xml::XPath::XPathScanner::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_StringValue
::StringW MS::Internal::Xml::XPath::XPathScanner::get_StringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::get_StringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_NumberValue
double MS::Internal::Xml::XPath::XPathScanner::get_NumberValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::get_NumberValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumberValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_CanBeFunction
bool MS::Internal::Xml::XPath::XPathScanner::get_CanBeFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::get_CanBeFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanBeFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.NextChar
bool MS::Internal::Xml::XPath::XPathScanner::NextChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::NextChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.SkipSpace
void MS::Internal::Xml::XPath::XPathScanner::SkipSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::SkipSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.NextLex
bool MS::Internal::Xml::XPath::XPathScanner::NextLex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::NextLex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextLex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.ScanNumber
double MS::Internal::Xml::XPath::XPathScanner::ScanNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::ScanNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.ScanFraction
double MS::Internal::Xml::XPath::XPathScanner::ScanFraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::ScanFraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanFraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.ScanString
::StringW MS::Internal::Xml::XPath::XPathScanner::ScanString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::ScanString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.ScanName
::StringW MS::Internal::Xml::XPath::XPathScanner::ScanName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::ScanName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind
#include "MS/Internal/Xml/XPath/XPathScanner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Comma
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Comma() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Comma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Comma"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Comma
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Comma(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Comma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Comma", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Slash
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Slash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Slash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Slash"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Slash
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Slash(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Slash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Slash", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind At
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_At() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_At");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "At"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind At
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_At(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_At");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "At", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Dot
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Dot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Dot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Dot"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Dot
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Dot(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Dot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Dot", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind LParens
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_LParens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_LParens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "LParens"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind LParens
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_LParens(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_LParens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "LParens", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind RParens
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_RParens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_RParens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "RParens"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind RParens
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_RParens(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_RParens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "RParens", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind LBracket
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_LBracket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_LBracket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "LBracket"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind LBracket
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_LBracket(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_LBracket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "LBracket", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind RBracket
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_RBracket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_RBracket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "RBracket"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind RBracket
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_RBracket(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_RBracket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "RBracket", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Star
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Star() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Star");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Star"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Star
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Star(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Star");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Star", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Plus
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Plus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Plus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Plus"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Plus
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Plus(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Plus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Plus", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Minus
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Minus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Minus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Minus"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Minus
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Minus(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Minus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Minus", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Eq
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Eq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Eq");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Eq"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Eq
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Eq(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Eq");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Eq", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Lt
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Lt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Lt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Lt"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Lt
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Lt(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Lt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Lt", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Gt
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Gt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Gt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Gt"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Gt
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Gt(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Gt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Gt", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Bang
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Bang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Bang");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Bang"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Bang
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Bang(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Bang");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Bang", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Dollar
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Dollar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Dollar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Dollar"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Dollar
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Dollar(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Dollar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Dollar", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Apos
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Apos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Apos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Apos"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Apos
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Apos(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Apos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Apos", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Quote
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Quote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Quote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Quote"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Quote
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Quote(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Quote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Quote", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Union
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Union() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Union");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Union"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Union
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Union(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Union");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Union", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Ne
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Ne() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Ne");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Ne"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Ne
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Ne(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Ne");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Ne", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Le
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Le() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Le");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Le"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Le
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Le(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Le");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Le", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Ge
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Ge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Ge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Ge"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Ge
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Ge(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Ge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Ge", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind And
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_And() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_And");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "And"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind And
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_And(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_And");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "And", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Or
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Or() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Or");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Or"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Or
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Or(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Or");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Or", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind DotDot
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_DotDot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_DotDot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "DotDot"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind DotDot
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_DotDot(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_DotDot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "DotDot", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind SlashSlash
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_SlashSlash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_SlashSlash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "SlashSlash"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind SlashSlash
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_SlashSlash(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_SlashSlash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "SlashSlash", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Name
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Name"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Name
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Name(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind String
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "String"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind String
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_String(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "String", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Number
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Number");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Number"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Number
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Number(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Number", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Axe
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Axe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Axe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Axe"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Axe
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Axe(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Axe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Axe", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Eof
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Eof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Eof");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Eof"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Eof
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Eof(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Eof");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Eof", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& MS::Internal::Xml::XPath::XPathScanner::LexKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
