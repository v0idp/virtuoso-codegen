// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.SocketFlags
#include "System/Net/Sockets/SocketFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags None
::System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags None
void System::Net::Sockets::SocketFlags::_set_None(::System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags OutOfBand
::System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_OutOfBand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_get_OutOfBand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "OutOfBand"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags OutOfBand
void System::Net::Sockets::SocketFlags::_set_OutOfBand(::System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_set_OutOfBand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "OutOfBand", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags Peek
::System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_get_Peek");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "Peek"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags Peek
void System::Net::Sockets::SocketFlags::_set_Peek(::System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_set_Peek");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "Peek", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags DontRoute
::System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_DontRoute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_get_DontRoute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "DontRoute"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags DontRoute
void System::Net::Sockets::SocketFlags::_set_DontRoute(::System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_set_DontRoute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "DontRoute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags MaxIOVectorLength
::System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_MaxIOVectorLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_get_MaxIOVectorLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "MaxIOVectorLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags MaxIOVectorLength
void System::Net::Sockets::SocketFlags::_set_MaxIOVectorLength(::System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_set_MaxIOVectorLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "MaxIOVectorLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags Truncated
::System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_Truncated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_get_Truncated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "Truncated"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags Truncated
void System::Net::Sockets::SocketFlags::_set_Truncated(::System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_set_Truncated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "Truncated", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags ControlDataTruncated
::System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_ControlDataTruncated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_get_ControlDataTruncated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "ControlDataTruncated"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags ControlDataTruncated
void System::Net::Sockets::SocketFlags::_set_ControlDataTruncated(::System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_set_ControlDataTruncated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "ControlDataTruncated", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags Broadcast
::System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_Broadcast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_get_Broadcast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "Broadcast"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags Broadcast
void System::Net::Sockets::SocketFlags::_set_Broadcast(::System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_set_Broadcast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "Broadcast", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags Multicast
::System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_Multicast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_get_Multicast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "Multicast"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags Multicast
void System::Net::Sockets::SocketFlags::_set_Multicast(::System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_set_Multicast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "Multicast", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags Partial
::System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_Partial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_get_Partial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "Partial"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags Partial
void System::Net::Sockets::SocketFlags::_set_Partial(::System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::_set_Partial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "Partial", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Sockets::SocketFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.SocketOptionLevel
#include "System/Net/Sockets/SocketOptionLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionLevel Socket
::System::Net::Sockets::SocketOptionLevel System::Net::Sockets::SocketOptionLevel::_get_Socket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionLevel::_get_Socket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionLevel>("System.Net.Sockets", "SocketOptionLevel", "Socket"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionLevel Socket
void System::Net::Sockets::SocketOptionLevel::_set_Socket(::System::Net::Sockets::SocketOptionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionLevel::_set_Socket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionLevel", "Socket", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionLevel IP
::System::Net::Sockets::SocketOptionLevel System::Net::Sockets::SocketOptionLevel::_get_IP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionLevel::_get_IP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionLevel>("System.Net.Sockets", "SocketOptionLevel", "IP"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionLevel IP
void System::Net::Sockets::SocketOptionLevel::_set_IP(::System::Net::Sockets::SocketOptionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionLevel::_set_IP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionLevel", "IP", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionLevel IPv6
::System::Net::Sockets::SocketOptionLevel System::Net::Sockets::SocketOptionLevel::_get_IPv6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionLevel::_get_IPv6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionLevel>("System.Net.Sockets", "SocketOptionLevel", "IPv6"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionLevel IPv6
void System::Net::Sockets::SocketOptionLevel::_set_IPv6(::System::Net::Sockets::SocketOptionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionLevel::_set_IPv6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionLevel", "IPv6", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionLevel Tcp
::System::Net::Sockets::SocketOptionLevel System::Net::Sockets::SocketOptionLevel::_get_Tcp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionLevel::_get_Tcp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionLevel>("System.Net.Sockets", "SocketOptionLevel", "Tcp"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionLevel Tcp
void System::Net::Sockets::SocketOptionLevel::_set_Tcp(::System::Net::Sockets::SocketOptionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionLevel::_set_Tcp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionLevel", "Tcp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionLevel Udp
::System::Net::Sockets::SocketOptionLevel System::Net::Sockets::SocketOptionLevel::_get_Udp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionLevel::_get_Udp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionLevel>("System.Net.Sockets", "SocketOptionLevel", "Udp"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionLevel Udp
void System::Net::Sockets::SocketOptionLevel::_set_Udp(::System::Net::Sockets::SocketOptionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionLevel::_set_Udp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionLevel", "Udp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Sockets::SocketOptionLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.SocketOptionName
#include "System/Net/Sockets/SocketOptionName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName Debug
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_Debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_Debug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "Debug"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName Debug
void System::Net::Sockets::SocketOptionName::_set_Debug(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_Debug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "Debug", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName AcceptConnection
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_AcceptConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_AcceptConnection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "AcceptConnection"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName AcceptConnection
void System::Net::Sockets::SocketOptionName::_set_AcceptConnection(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_AcceptConnection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "AcceptConnection", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName ReuseAddress
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_ReuseAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_ReuseAddress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "ReuseAddress"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName ReuseAddress
void System::Net::Sockets::SocketOptionName::_set_ReuseAddress(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_ReuseAddress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "ReuseAddress", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName KeepAlive
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_KeepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_KeepAlive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "KeepAlive"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName KeepAlive
void System::Net::Sockets::SocketOptionName::_set_KeepAlive(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_KeepAlive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "KeepAlive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName DontRoute
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_DontRoute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_DontRoute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "DontRoute"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName DontRoute
void System::Net::Sockets::SocketOptionName::_set_DontRoute(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_DontRoute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "DontRoute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName Broadcast
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_Broadcast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_Broadcast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "Broadcast"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName Broadcast
void System::Net::Sockets::SocketOptionName::_set_Broadcast(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_Broadcast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "Broadcast", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName UseLoopback
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_UseLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_UseLoopback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "UseLoopback"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName UseLoopback
void System::Net::Sockets::SocketOptionName::_set_UseLoopback(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_UseLoopback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "UseLoopback", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName Linger
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_Linger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_Linger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "Linger"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName Linger
void System::Net::Sockets::SocketOptionName::_set_Linger(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_Linger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "Linger", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName OutOfBandInline
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_OutOfBandInline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_OutOfBandInline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "OutOfBandInline"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName OutOfBandInline
void System::Net::Sockets::SocketOptionName::_set_OutOfBandInline(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_OutOfBandInline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "OutOfBandInline", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName DontLinger
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_DontLinger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_DontLinger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "DontLinger"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName DontLinger
void System::Net::Sockets::SocketOptionName::_set_DontLinger(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_DontLinger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "DontLinger", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName ExclusiveAddressUse
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_ExclusiveAddressUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_ExclusiveAddressUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "ExclusiveAddressUse"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName ExclusiveAddressUse
void System::Net::Sockets::SocketOptionName::_set_ExclusiveAddressUse(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_ExclusiveAddressUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "ExclusiveAddressUse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName SendBuffer
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_SendBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_SendBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "SendBuffer"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName SendBuffer
void System::Net::Sockets::SocketOptionName::_set_SendBuffer(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_SendBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "SendBuffer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName ReceiveBuffer
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_ReceiveBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_ReceiveBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "ReceiveBuffer"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName ReceiveBuffer
void System::Net::Sockets::SocketOptionName::_set_ReceiveBuffer(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_ReceiveBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "ReceiveBuffer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName SendLowWater
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_SendLowWater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_SendLowWater");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "SendLowWater"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName SendLowWater
void System::Net::Sockets::SocketOptionName::_set_SendLowWater(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_SendLowWater");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "SendLowWater", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName ReceiveLowWater
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_ReceiveLowWater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_ReceiveLowWater");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "ReceiveLowWater"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName ReceiveLowWater
void System::Net::Sockets::SocketOptionName::_set_ReceiveLowWater(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_ReceiveLowWater");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "ReceiveLowWater", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName SendTimeout
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_SendTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_SendTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "SendTimeout"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName SendTimeout
void System::Net::Sockets::SocketOptionName::_set_SendTimeout(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_SendTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "SendTimeout", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName ReceiveTimeout
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_ReceiveTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_ReceiveTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "ReceiveTimeout"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName ReceiveTimeout
void System::Net::Sockets::SocketOptionName::_set_ReceiveTimeout(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_ReceiveTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "ReceiveTimeout", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName Error
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName Error
void System::Net::Sockets::SocketOptionName::_set_Error(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName Type
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "Type"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName Type
void System::Net::Sockets::SocketOptionName::_set_Type(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "Type", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName ReuseUnicastPort
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_ReuseUnicastPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_ReuseUnicastPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "ReuseUnicastPort"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName ReuseUnicastPort
void System::Net::Sockets::SocketOptionName::_set_ReuseUnicastPort(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_ReuseUnicastPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "ReuseUnicastPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName MaxConnections
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_MaxConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_MaxConnections");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "MaxConnections"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName MaxConnections
void System::Net::Sockets::SocketOptionName::_set_MaxConnections(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_MaxConnections");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "MaxConnections", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName IPOptions
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_IPOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_IPOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "IPOptions"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName IPOptions
void System::Net::Sockets::SocketOptionName::_set_IPOptions(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_IPOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "IPOptions", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName HeaderIncluded
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_HeaderIncluded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_HeaderIncluded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "HeaderIncluded"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName HeaderIncluded
void System::Net::Sockets::SocketOptionName::_set_HeaderIncluded(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_HeaderIncluded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "HeaderIncluded", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName TypeOfService
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_TypeOfService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_TypeOfService");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "TypeOfService"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName TypeOfService
void System::Net::Sockets::SocketOptionName::_set_TypeOfService(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_TypeOfService");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "TypeOfService", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName IpTimeToLive
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_IpTimeToLive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_IpTimeToLive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "IpTimeToLive"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName IpTimeToLive
void System::Net::Sockets::SocketOptionName::_set_IpTimeToLive(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_IpTimeToLive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "IpTimeToLive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName MulticastInterface
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_MulticastInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_MulticastInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "MulticastInterface"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName MulticastInterface
void System::Net::Sockets::SocketOptionName::_set_MulticastInterface(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_MulticastInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "MulticastInterface", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName MulticastTimeToLive
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_MulticastTimeToLive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_MulticastTimeToLive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "MulticastTimeToLive"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName MulticastTimeToLive
void System::Net::Sockets::SocketOptionName::_set_MulticastTimeToLive(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_MulticastTimeToLive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "MulticastTimeToLive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName MulticastLoopback
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_MulticastLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_MulticastLoopback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "MulticastLoopback"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName MulticastLoopback
void System::Net::Sockets::SocketOptionName::_set_MulticastLoopback(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_MulticastLoopback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "MulticastLoopback", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName AddMembership
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_AddMembership() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_AddMembership");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "AddMembership"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName AddMembership
void System::Net::Sockets::SocketOptionName::_set_AddMembership(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_AddMembership");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "AddMembership", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName DropMembership
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_DropMembership() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_DropMembership");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "DropMembership"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName DropMembership
void System::Net::Sockets::SocketOptionName::_set_DropMembership(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_DropMembership");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "DropMembership", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName DontFragment
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_DontFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_DontFragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "DontFragment"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName DontFragment
void System::Net::Sockets::SocketOptionName::_set_DontFragment(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_DontFragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "DontFragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName AddSourceMembership
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_AddSourceMembership() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_AddSourceMembership");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "AddSourceMembership"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName AddSourceMembership
void System::Net::Sockets::SocketOptionName::_set_AddSourceMembership(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_AddSourceMembership");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "AddSourceMembership", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName DropSourceMembership
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_DropSourceMembership() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_DropSourceMembership");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "DropSourceMembership"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName DropSourceMembership
void System::Net::Sockets::SocketOptionName::_set_DropSourceMembership(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_DropSourceMembership");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "DropSourceMembership", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName BlockSource
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_BlockSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_BlockSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "BlockSource"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName BlockSource
void System::Net::Sockets::SocketOptionName::_set_BlockSource(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_BlockSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "BlockSource", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName UnblockSource
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_UnblockSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_UnblockSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "UnblockSource"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName UnblockSource
void System::Net::Sockets::SocketOptionName::_set_UnblockSource(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_UnblockSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "UnblockSource", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName PacketInformation
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_PacketInformation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_PacketInformation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "PacketInformation"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName PacketInformation
void System::Net::Sockets::SocketOptionName::_set_PacketInformation(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_PacketInformation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "PacketInformation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName HopLimit
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_HopLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_HopLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "HopLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName HopLimit
void System::Net::Sockets::SocketOptionName::_set_HopLimit(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_HopLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "HopLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName IPProtectionLevel
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_IPProtectionLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_IPProtectionLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "IPProtectionLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName IPProtectionLevel
void System::Net::Sockets::SocketOptionName::_set_IPProtectionLevel(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_IPProtectionLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "IPProtectionLevel", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName IPv6Only
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_IPv6Only() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_IPv6Only");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "IPv6Only"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName IPv6Only
void System::Net::Sockets::SocketOptionName::_set_IPv6Only(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_IPv6Only");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "IPv6Only", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName NoDelay
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_NoDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_NoDelay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "NoDelay"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName NoDelay
void System::Net::Sockets::SocketOptionName::_set_NoDelay(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_NoDelay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "NoDelay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName BsdUrgent
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_BsdUrgent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_BsdUrgent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "BsdUrgent"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName BsdUrgent
void System::Net::Sockets::SocketOptionName::_set_BsdUrgent(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_BsdUrgent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "BsdUrgent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName Expedited
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_Expedited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_Expedited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "Expedited"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName Expedited
void System::Net::Sockets::SocketOptionName::_set_Expedited(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_Expedited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "Expedited", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName NoChecksum
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_NoChecksum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_NoChecksum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "NoChecksum"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName NoChecksum
void System::Net::Sockets::SocketOptionName::_set_NoChecksum(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_NoChecksum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "NoChecksum", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName ChecksumCoverage
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_ChecksumCoverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_ChecksumCoverage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "ChecksumCoverage"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName ChecksumCoverage
void System::Net::Sockets::SocketOptionName::_set_ChecksumCoverage(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_ChecksumCoverage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "ChecksumCoverage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName UpdateAcceptContext
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_UpdateAcceptContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_UpdateAcceptContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "UpdateAcceptContext"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName UpdateAcceptContext
void System::Net::Sockets::SocketOptionName::_set_UpdateAcceptContext(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_UpdateAcceptContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "UpdateAcceptContext", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName UpdateConnectContext
::System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_UpdateConnectContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_get_UpdateConnectContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "UpdateConnectContext"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName UpdateConnectContext
void System::Net::Sockets::SocketOptionName::_set_UpdateConnectContext(::System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::_set_UpdateConnectContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "UpdateConnectContext", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Sockets::SocketOptionName::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOptionName::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.SocketShutdown
#include "System/Net/Sockets/SocketShutdown.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketShutdown Receive
::System::Net::Sockets::SocketShutdown System::Net::Sockets::SocketShutdown::_get_Receive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketShutdown::_get_Receive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketShutdown>("System.Net.Sockets", "SocketShutdown", "Receive"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketShutdown Receive
void System::Net::Sockets::SocketShutdown::_set_Receive(::System::Net::Sockets::SocketShutdown value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketShutdown::_set_Receive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketShutdown", "Receive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketShutdown Send
::System::Net::Sockets::SocketShutdown System::Net::Sockets::SocketShutdown::_get_Send() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketShutdown::_get_Send");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketShutdown>("System.Net.Sockets", "SocketShutdown", "Send"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketShutdown Send
void System::Net::Sockets::SocketShutdown::_set_Send(::System::Net::Sockets::SocketShutdown value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketShutdown::_set_Send");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketShutdown", "Send", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketShutdown Both
::System::Net::Sockets::SocketShutdown System::Net::Sockets::SocketShutdown::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketShutdown::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketShutdown>("System.Net.Sockets", "SocketShutdown", "Both"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketShutdown Both
void System::Net::Sockets::SocketShutdown::_set_Both(::System::Net::Sockets::SocketShutdown value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketShutdown::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketShutdown", "Both", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Sockets::SocketShutdown::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketShutdown::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.SocketType
#include "System/Net/Sockets/SocketType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketType Stream
::System::Net::Sockets::SocketType System::Net::Sockets::SocketType::_get_Stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketType::_get_Stream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketType>("System.Net.Sockets", "SocketType", "Stream"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketType Stream
void System::Net::Sockets::SocketType::_set_Stream(::System::Net::Sockets::SocketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketType::_set_Stream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketType", "Stream", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketType Dgram
::System::Net::Sockets::SocketType System::Net::Sockets::SocketType::_get_Dgram() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketType::_get_Dgram");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketType>("System.Net.Sockets", "SocketType", "Dgram"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketType Dgram
void System::Net::Sockets::SocketType::_set_Dgram(::System::Net::Sockets::SocketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketType::_set_Dgram");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketType", "Dgram", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketType Raw
::System::Net::Sockets::SocketType System::Net::Sockets::SocketType::_get_Raw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketType::_get_Raw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketType>("System.Net.Sockets", "SocketType", "Raw"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketType Raw
void System::Net::Sockets::SocketType::_set_Raw(::System::Net::Sockets::SocketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketType::_set_Raw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketType", "Raw", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketType Rdm
::System::Net::Sockets::SocketType System::Net::Sockets::SocketType::_get_Rdm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketType::_get_Rdm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketType>("System.Net.Sockets", "SocketType", "Rdm"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketType Rdm
void System::Net::Sockets::SocketType::_set_Rdm(::System::Net::Sockets::SocketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketType::_set_Rdm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketType", "Rdm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketType Seqpacket
::System::Net::Sockets::SocketType System::Net::Sockets::SocketType::_get_Seqpacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketType::_get_Seqpacket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketType>("System.Net.Sockets", "SocketType", "Seqpacket"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketType Seqpacket
void System::Net::Sockets::SocketType::_set_Seqpacket(::System::Net::Sockets::SocketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketType::_set_Seqpacket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketType", "Seqpacket", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketType Unknown
::System::Net::Sockets::SocketType System::Net::Sockets::SocketType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketType>("System.Net.Sockets", "SocketType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketType Unknown
void System::Net::Sockets::SocketType::_set_Unknown(::System::Net::Sockets::SocketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketType", "Unknown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Sockets::SocketType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Sockets.TcpClient
#include "System/Net/Sockets/TcpClient.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Net.Sockets.NetworkStream
#include "System/Net/Sockets/NetworkStream.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.Socket m_ClientSocket
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::Socket*& System::Net::Sockets::TcpClient::dyn_m_ClientSocket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpClient::dyn_m_ClientSocket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClientSocket"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::Socket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Active
[[deprecated("Use field access instead!")]] bool& System::Net::Sockets::TcpClient::dyn_m_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpClient::dyn_m_Active");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Active"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.NetworkStream m_DataStream
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::NetworkStream*& System::Net::Sockets::TcpClient::dyn_m_DataStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpClient::dyn_m_DataStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DataStream"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::NetworkStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.AddressFamily m_Family
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::AddressFamily& System::Net::Sockets::TcpClient::dyn_m_Family() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpClient::dyn_m_Family");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Family"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::AddressFamily*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CleanedUp
[[deprecated("Use field access instead!")]] bool& System::Net::Sockets::TcpClient::dyn_m_CleanedUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpClient::dyn_m_CleanedUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CleanedUp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Sockets.TcpClient.get_Client
::System::Net::Sockets::Socket* System::Net::Sockets::TcpClient::get_Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpClient::get_Client");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Client", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Sockets::Socket*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpClient.set_Client
void System::Net::Sockets::TcpClient::set_Client(::System::Net::Sockets::Socket* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpClient::set_Client");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Client", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.TcpClient.get_Connected
bool System::Net::Sockets::TcpClient::get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpClient::get_Connected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Connected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpClient.BeginConnect
::System::IAsyncResult* System::Net::Sockets::TcpClient::BeginConnect(::StringW host, int port, ::System::AsyncCallback* requestCallback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpClient::BeginConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(requestCallback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, host, port, requestCallback, state);
}
// Autogenerated method: System.Net.Sockets.TcpClient.EndConnect
void System::Net::Sockets::TcpClient::EndConnect(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpClient::EndConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Sockets.TcpClient.GetStream
::System::Net::Sockets::NetworkStream* System::Net::Sockets::TcpClient::GetStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpClient::GetStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Sockets::NetworkStream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpClient.Close
void System::Net::Sockets::TcpClient::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpClient::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpClient.Dispose
void System::Net::Sockets::TcpClient::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpClient::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Sockets::TcpClient*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Sockets.TcpClient.Dispose
void System::Net::Sockets::TcpClient::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpClient::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Sockets::TcpClient*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpClient.initialize
void System::Net::Sockets::TcpClient::initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpClient::initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpClient.Finalize
void System::Net::Sockets::TcpClient::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpClient::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Sockets.TcpListener
#include "System/Net/Sockets/TcpListener.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Net.EndPoint
#include "System/Net/EndPoint.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Net.Sockets.TcpClient
#include "System/Net/Sockets/TcpClient.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.IPEndPoint m_ServerSocketEP
[[deprecated("Use field access instead!")]] ::System::Net::IPEndPoint*& System::Net::Sockets::TcpListener::dyn_m_ServerSocketEP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpListener::dyn_m_ServerSocketEP");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ServerSocketEP"))->offset;
  return *reinterpret_cast<::System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.Socket m_ServerSocket
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::Socket*& System::Net::Sockets::TcpListener::dyn_m_ServerSocket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpListener::dyn_m_ServerSocket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ServerSocket"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::Socket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Active
[[deprecated("Use field access instead!")]] bool& System::Net::Sockets::TcpListener::dyn_m_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpListener::dyn_m_Active");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Active"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ExclusiveAddressUse
[[deprecated("Use field access instead!")]] bool& System::Net::Sockets::TcpListener::dyn_m_ExclusiveAddressUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpListener::dyn_m_ExclusiveAddressUse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ExclusiveAddressUse"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Sockets.TcpListener.get_LocalEndpoint
::System::Net::EndPoint* System::Net::Sockets::TcpListener::get_LocalEndpoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpListener::get_LocalEndpoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalEndpoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::EndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpListener.Start
void System::Net::Sockets::TcpListener::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpListener::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpListener.Start
void System::Net::Sockets::TcpListener::Start(int backlog) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpListener::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(backlog)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, backlog);
}
// Autogenerated method: System.Net.Sockets.TcpListener.Stop
void System::Net::Sockets::TcpListener::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpListener::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpListener.BeginAcceptTcpClient
::System::IAsyncResult* System::Net::Sockets::TcpListener::BeginAcceptTcpClient(::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpListener::BeginAcceptTcpClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginAcceptTcpClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.Sockets.TcpListener.EndAcceptTcpClient
::System::Net::Sockets::TcpClient* System::Net::Sockets::TcpListener::EndAcceptTcpClient(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::TcpListener::EndAcceptTcpClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndAcceptTcpClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Sockets::TcpClient*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.UdpClient
#include "System/Net/Sockets/UdpClient.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxUDPSize
int System::Net::Sockets::UdpClient::_get_MaxUDPSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::_get_MaxUDPSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net.Sockets", "UdpClient", "MaxUDPSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxUDPSize
void System::Net::Sockets::UdpClient::_set_MaxUDPSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::_set_MaxUDPSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "UdpClient", "MaxUDPSize", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.Socket m_ClientSocket
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::Socket*& System::Net::Sockets::UdpClient::dyn_m_ClientSocket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::dyn_m_ClientSocket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClientSocket"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::Socket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Active
[[deprecated("Use field access instead!")]] bool& System::Net::Sockets::UdpClient::dyn_m_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::dyn_m_Active");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Active"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_Buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::Sockets::UdpClient::dyn_m_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::dyn_m_Buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.AddressFamily m_Family
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::AddressFamily& System::Net::Sockets::UdpClient::dyn_m_Family() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::dyn_m_Family");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Family"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::AddressFamily*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CleanedUp
[[deprecated("Use field access instead!")]] bool& System::Net::Sockets::UdpClient::dyn_m_CleanedUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::dyn_m_CleanedUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CleanedUp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsBroadcast
[[deprecated("Use field access instead!")]] bool& System::Net::Sockets::UdpClient::dyn_m_IsBroadcast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::dyn_m_IsBroadcast");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsBroadcast"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Sockets.UdpClient.get_Client
::System::Net::Sockets::Socket* System::Net::Sockets::UdpClient::get_Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::get_Client");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Client", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Sockets::Socket*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.UdpClient.set_Client
void System::Net::Sockets::UdpClient::set_Client(::System::Net::Sockets::Socket* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::set_Client");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Client", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.UdpClient.Close
void System::Net::Sockets::UdpClient::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.UdpClient.FreeResources
void System::Net::Sockets::UdpClient::FreeResources() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::FreeResources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeResources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.UdpClient.Dispose
void System::Net::Sockets::UdpClient::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Sockets::UdpClient*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.UdpClient.Dispose
void System::Net::Sockets::UdpClient::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Sockets::UdpClient*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Sockets.UdpClient.Connect
void System::Net::Sockets::UdpClient::Connect(::System::Net::IPAddress* addr, int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(addr), ::il2cpp_utils::ExtractType(port)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, addr, port);
}
// Autogenerated method: System.Net.Sockets.UdpClient.Connect
void System::Net::Sockets::UdpClient::Connect(::System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, endPoint);
}
// Autogenerated method: System.Net.Sockets.UdpClient.CheckForBroadcast
void System::Net::Sockets::UdpClient::CheckForBroadcast(::System::Net::IPAddress* ipAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::CheckForBroadcast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForBroadcast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ipAddress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ipAddress);
}
// Autogenerated method: System.Net.Sockets.UdpClient.Send
int System::Net::Sockets::UdpClient::Send(::ArrayW<uint8_t> dgram, int bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::Send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dgram), ::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, dgram, bytes);
}
// Autogenerated method: System.Net.Sockets.UdpClient.Receive
::ArrayW<uint8_t> System::Net::Sockets::UdpClient::Receive(ByRef<::System::Net::IPEndPoint*> remoteEP) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::Receive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Receive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEP)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, byref(remoteEP));
}
// Autogenerated method: System.Net.Sockets.UdpClient.createClientSocket
void System::Net::Sockets::UdpClient::createClientSocket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::UdpClient::createClientSocket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createClientSocket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.SafeSocketHandle
#include "System/Net/Sockets/SafeSocketHandle.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Diagnostics.StackTrace
#include "System/Diagnostics/StackTrace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 SOCKET_CLOSED
int System::Net::Sockets::SafeSocketHandle::_get_SOCKET_CLOSED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SafeSocketHandle::_get_SOCKET_CLOSED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net.Sockets", "SafeSocketHandle", "SOCKET_CLOSED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SOCKET_CLOSED
void System::Net::Sockets::SafeSocketHandle::_set_SOCKET_CLOSED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SafeSocketHandle::_set_SOCKET_CLOSED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SafeSocketHandle", "SOCKET_CLOSED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ABORT_RETRIES
int System::Net::Sockets::SafeSocketHandle::_get_ABORT_RETRIES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SafeSocketHandle::_get_ABORT_RETRIES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net.Sockets", "SafeSocketHandle", "ABORT_RETRIES"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ABORT_RETRIES
void System::Net::Sockets::SafeSocketHandle::_set_ABORT_RETRIES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SafeSocketHandle::_set_ABORT_RETRIES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SafeSocketHandle", "ABORT_RETRIES", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean THROW_ON_ABORT_RETRIES
bool System::Net::Sockets::SafeSocketHandle::_get_THROW_ON_ABORT_RETRIES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SafeSocketHandle::_get_THROW_ON_ABORT_RETRIES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net.Sockets", "SafeSocketHandle", "THROW_ON_ABORT_RETRIES"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean THROW_ON_ABORT_RETRIES
void System::Net::Sockets::SafeSocketHandle::_set_THROW_ON_ABORT_RETRIES(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SafeSocketHandle::_set_THROW_ON_ABORT_RETRIES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SafeSocketHandle", "THROW_ON_ABORT_RETRIES", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Threading.Thread> blocking_threads
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Threading::Thread*>*& System::Net::Sockets::SafeSocketHandle::dyn_blocking_threads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SafeSocketHandle::dyn_blocking_threads");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blocking_threads"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Threading::Thread*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Threading.Thread,System.Diagnostics.StackTrace> threads_stacktraces
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Threading::Thread*, ::System::Diagnostics::StackTrace*>*& System::Net::Sockets::SafeSocketHandle::dyn_threads_stacktraces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SafeSocketHandle::dyn_threads_stacktraces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threads_stacktraces"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Threading::Thread*, ::System::Diagnostics::StackTrace*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean in_cleanup
[[deprecated("Use field access instead!")]] bool& System::Net::Sockets::SafeSocketHandle::dyn_in_cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SafeSocketHandle::dyn_in_cleanup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "in_cleanup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Sockets.SafeSocketHandle..cctor
void System::Net::Sockets::SafeSocketHandle::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SafeSocketHandle::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "SafeSocketHandle", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SafeSocketHandle.RegisterForBlockingSyscall
void System::Net::Sockets::SafeSocketHandle::RegisterForBlockingSyscall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SafeSocketHandle::RegisterForBlockingSyscall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterForBlockingSyscall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SafeSocketHandle.UnRegisterForBlockingSyscall
void System::Net::Sockets::SafeSocketHandle::UnRegisterForBlockingSyscall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SafeSocketHandle::UnRegisterForBlockingSyscall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnRegisterForBlockingSyscall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SafeSocketHandle.ReleaseHandle
bool System::Net::Sockets::SafeSocketHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SafeSocketHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Runtime::InteropServices::SafeHandle*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.SocketAsyncEventArgs
#include "System/Net/Sockets/SocketAsyncEventArgs.hpp"
// Including type: System.Net.EndPoint
#include "System/Net/EndPoint.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.EventHandler`1
#include "System/EventHandler_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Net::Sockets::SocketAsyncEventArgs::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncEventArgs::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 in_progress
[[deprecated("Use field access instead!")]] int& System::Net::Sockets::SocketAsyncEventArgs::dyn_in_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncEventArgs::dyn_in_progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "in_progress"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Net.EndPoint remote_ep
[[deprecated("Use field access instead!")]] ::System::Net::EndPoint*& System::Net::Sockets::SocketAsyncEventArgs::dyn_remote_ep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncEventArgs::dyn_remote_ep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remote_ep"))->offset;
  return *reinterpret_cast<::System::Net::EndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Net.Sockets.Socket current_socket
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::Socket*& System::Net::Sockets::SocketAsyncEventArgs::dyn_current_socket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncEventArgs::dyn_current_socket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current_socket"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::Socket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.Socket <AcceptSocket>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::Socket*& System::Net::Sockets::SocketAsyncEventArgs::dyn_$AcceptSocket$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncEventArgs::dyn_$AcceptSocket$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AcceptSocket>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::Socket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <BytesTransferred>k__BackingField
[[deprecated("Use field access instead!")]] int& System::Net::Sockets::SocketAsyncEventArgs::dyn_$BytesTransferred$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncEventArgs::dyn_$BytesTransferred$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BytesTransferred>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Sockets.SocketError <SocketError>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::SocketError& System::Net::Sockets::SocketAsyncEventArgs::dyn_$SocketError$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncEventArgs::dyn_$SocketError$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SocketError>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::SocketError*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler`1<System.Net.Sockets.SocketAsyncEventArgs> Completed
[[deprecated("Use field access instead!")]] ::System::EventHandler_1<::System::Net::Sockets::SocketAsyncEventArgs*>*& System::Net::Sockets::SocketAsyncEventArgs::dyn_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncEventArgs::dyn_Completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Completed"))->offset;
  return *reinterpret_cast<::System::EventHandler_1<::System::Net::Sockets::SocketAsyncEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.get_AcceptSocket
::System::Net::Sockets::Socket* System::Net::Sockets::SocketAsyncEventArgs::get_AcceptSocket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncEventArgs::get_AcceptSocket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AcceptSocket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Sockets::Socket*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.set_AcceptSocket
void System::Net::Sockets::SocketAsyncEventArgs::set_AcceptSocket(::System::Net::Sockets::Socket* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncEventArgs::set_AcceptSocket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AcceptSocket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.set_BytesTransferred
void System::Net::Sockets::SocketAsyncEventArgs::set_BytesTransferred(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncEventArgs::set_BytesTransferred");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BytesTransferred", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.set_SocketError
void System::Net::Sockets::SocketAsyncEventArgs::set_SocketError(::System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncEventArgs::set_SocketError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SocketError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.Dispose
void System::Net::Sockets::SocketAsyncEventArgs::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncEventArgs::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.Dispose
void System::Net::Sockets::SocketAsyncEventArgs::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncEventArgs::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Sockets::SocketAsyncEventArgs*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.Complete
void System::Net::Sockets::SocketAsyncEventArgs::Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncEventArgs::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.OnCompleted
void System::Net::Sockets::SocketAsyncEventArgs::OnCompleted(::System::Net::Sockets::SocketAsyncEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncEventArgs::OnCompleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Sockets::SocketAsyncEventArgs*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Sockets.SocketAsyncResult
#include "System/Net/Sockets/SocketAsyncResult.hpp"
// Including type: System.Net.Sockets.SocketAsyncResult/System.Net.Sockets.<>c
#include "System/Net/Sockets/SocketAsyncResult_--c.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Net.EndPoint
#include "System/Net/EndPoint.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Net.Sockets.SocketError
#include "System/Net/Sockets/SocketError.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Net.Sockets.Socket socket
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::Socket*& System::Net::Sockets::SocketAsyncResult::dyn_socket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::dyn_socket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "socket"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::Socket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Sockets.SocketOperation operation
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::SocketOperation& System::Net::Sockets::SocketAsyncResult::dyn_operation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::dyn_operation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "operation"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::SocketOperation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Exception DelayedException
[[deprecated("Use field access instead!")]] ::System::Exception*& System::Net::Sockets::SocketAsyncResult::dyn_DelayedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::dyn_DelayedException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DelayedException"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.EndPoint EndPoint
[[deprecated("Use field access instead!")]] ::System::Net::EndPoint*& System::Net::Sockets::SocketAsyncResult::dyn_EndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::dyn_EndPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EndPoint"))->offset;
  return *reinterpret_cast<::System::Net::EndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] Buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Net::Sockets::SocketAsyncResult::dyn_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::dyn_Buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Offset
[[deprecated("Use field access instead!")]] int& System::Net::Sockets::SocketAsyncResult::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::dyn_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Size
[[deprecated("Use field access instead!")]] int& System::Net::Sockets::SocketAsyncResult::dyn_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::dyn_Size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Sockets.SocketFlags SockFlags
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::SocketFlags& System::Net::Sockets::SocketAsyncResult::dyn_SockFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::dyn_SockFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SockFlags"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::SocketFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Sockets.Socket AcceptSocket
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::Socket*& System::Net::Sockets::SocketAsyncResult::dyn_AcceptSocket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::dyn_AcceptSocket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AcceptSocket"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::Socket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPAddress[] Addresses
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Net::IPAddress*>& System::Net::Sockets::SocketAsyncResult::dyn_Addresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::dyn_Addresses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Addresses"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Net::IPAddress*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Port
[[deprecated("Use field access instead!")]] int& System::Net::Sockets::SocketAsyncResult::dyn_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::dyn_Port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.IList`1<System.ArraySegment`1<System.Byte>> Buffers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::System::ArraySegment_1<uint8_t>>*& System::Net::Sockets::SocketAsyncResult::dyn_Buffers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::dyn_Buffers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buffers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::System::ArraySegment_1<uint8_t>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ReuseSocket
[[deprecated("Use field access instead!")]] bool& System::Net::Sockets::SocketAsyncResult::dyn_ReuseSocket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::dyn_ReuseSocket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReuseSocket"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 CurrentAddress
[[deprecated("Use field access instead!")]] int& System::Net::Sockets::SocketAsyncResult::dyn_CurrentAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::dyn_CurrentAddress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentAddress"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Sockets.Socket AcceptedSocket
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::Socket*& System::Net::Sockets::SocketAsyncResult::dyn_AcceptedSocket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::dyn_AcceptedSocket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AcceptedSocket"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::Socket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Total
[[deprecated("Use field access instead!")]] int& System::Net::Sockets::SocketAsyncResult::dyn_Total() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::dyn_Total");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Total"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 error
[[deprecated("Use field access instead!")]] int& System::Net::Sockets::SocketAsyncResult::dyn_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::dyn_error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "error"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 EndCalled
[[deprecated("Use field access instead!")]] int& System::Net::Sockets::SocketAsyncResult::dyn_EndCalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::dyn_EndCalled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EndCalled"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.get_Handle
::System::IntPtr System::Net::Sockets::SocketAsyncResult::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.get_ErrorCode
::System::Net::Sockets::SocketError System::Net::Sockets::SocketAsyncResult::get_ErrorCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::get_ErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Sockets::SocketError, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.CheckIfThrowDelayedException
void System::Net::Sockets::SocketAsyncResult::CheckIfThrowDelayedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::CheckIfThrowDelayedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfThrowDelayedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.Complete
void System::Net::Sockets::SocketAsyncResult::Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.Complete
void System::Net::Sockets::SocketAsyncResult::Complete(bool synch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(synch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, synch);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.Complete
void System::Net::Sockets::SocketAsyncResult::Complete(int total) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(total)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, total);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.Complete
void System::Net::Sockets::SocketAsyncResult::Complete(::System::Exception* e, bool synch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(synch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, synch);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.Complete
void System::Net::Sockets::SocketAsyncResult::Complete(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.Complete
void System::Net::Sockets::SocketAsyncResult::Complete(::System::Net::Sockets::Socket* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.Complete
void System::Net::Sockets::SocketAsyncResult::Complete(::System::Net::Sockets::Socket* s, int total) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(total)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, total);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.CompleteDisposed
void System::Net::Sockets::SocketAsyncResult::CompleteDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::CompleteDisposed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IOAsyncResult*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Sockets.SocketAsyncResult/System.Net.Sockets.<>c
#include "System/Net/Sockets/SocketAsyncResult_--c.hpp"
// Including type: System.Threading.WaitCallback
#include "System/Threading/WaitCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Sockets.SocketAsyncResult/System.Net.Sockets.<>c <>9
::System::Net::Sockets::SocketAsyncResult::$$c* System::Net::Sockets::SocketAsyncResult::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketAsyncResult::$$c*>("System.Net.Sockets", "SocketAsyncResult/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Sockets.SocketAsyncResult/System.Net.Sockets.<>c <>9
void System::Net::Sockets::SocketAsyncResult::$$c::_set_$$9(::System::Net::Sockets::SocketAsyncResult::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketAsyncResult/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.WaitCallback <>9__27_0
::System::Threading::WaitCallback* System::Net::Sockets::SocketAsyncResult::$$c::_get_$$9__27_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::$$c::_get_$$9__27_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Threading::WaitCallback*>("System.Net.Sockets", "SocketAsyncResult/<>c", "<>9__27_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.WaitCallback <>9__27_0
void System::Net::Sockets::SocketAsyncResult::$$c::_set_$$9__27_0(::System::Threading::WaitCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::$$c::_set_$$9__27_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketAsyncResult/<>c", "<>9__27_0", value)));
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult/System.Net.Sockets.<>c..cctor
void System::Net::Sockets::SocketAsyncResult::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "SocketAsyncResult/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult/System.Net.Sockets.<>c.<Complete>b__27_0
void System::Net::Sockets::SocketAsyncResult::$$c::$Complete$b__27_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketAsyncResult::$$c::<Complete>b__27_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Complete>b__27_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.SocketOperation
#include "System/Net/Sockets/SocketOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation Accept
::System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_Accept() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_get_Accept");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "Accept"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation Accept
void System::Net::Sockets::SocketOperation::_set_Accept(::System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_set_Accept");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "Accept", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation Connect
::System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_get_Connect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "Connect"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation Connect
void System::Net::Sockets::SocketOperation::_set_Connect(::System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_set_Connect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "Connect", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation Receive
::System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_Receive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_get_Receive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "Receive"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation Receive
void System::Net::Sockets::SocketOperation::_set_Receive(::System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_set_Receive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "Receive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation ReceiveFrom
::System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_ReceiveFrom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_get_ReceiveFrom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "ReceiveFrom"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation ReceiveFrom
void System::Net::Sockets::SocketOperation::_set_ReceiveFrom(::System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_set_ReceiveFrom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "ReceiveFrom", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation Send
::System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_Send() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_get_Send");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "Send"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation Send
void System::Net::Sockets::SocketOperation::_set_Send(::System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_set_Send");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "Send", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation SendTo
::System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_SendTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_get_SendTo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "SendTo"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation SendTo
void System::Net::Sockets::SocketOperation::_set_SendTo(::System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_set_SendTo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "SendTo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation RecvJustCallback
::System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_RecvJustCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_get_RecvJustCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "RecvJustCallback"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation RecvJustCallback
void System::Net::Sockets::SocketOperation::_set_RecvJustCallback(::System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_set_RecvJustCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "RecvJustCallback", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation SendJustCallback
::System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_SendJustCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_get_SendJustCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "SendJustCallback"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation SendJustCallback
void System::Net::Sockets::SocketOperation::_set_SendJustCallback(::System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_set_SendJustCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "SendJustCallback", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation Disconnect
::System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_get_Disconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "Disconnect"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation Disconnect
void System::Net::Sockets::SocketOperation::_set_Disconnect(::System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_set_Disconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "Disconnect", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation AcceptReceive
::System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_AcceptReceive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_get_AcceptReceive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "AcceptReceive"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation AcceptReceive
void System::Net::Sockets::SocketOperation::_set_AcceptReceive(::System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_set_AcceptReceive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "AcceptReceive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation ReceiveGeneric
::System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_ReceiveGeneric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_get_ReceiveGeneric");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "ReceiveGeneric"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation ReceiveGeneric
void System::Net::Sockets::SocketOperation::_set_ReceiveGeneric(::System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_set_ReceiveGeneric");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "ReceiveGeneric", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation SendGeneric
::System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_SendGeneric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_get_SendGeneric");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "SendGeneric"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation SendGeneric
void System::Net::Sockets::SocketOperation::_set_SendGeneric(::System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::_set_SendGeneric");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "SendGeneric", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Sockets::SocketOperation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketOperation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.SocketTaskExtensions
#include "System/Net/Sockets/SocketTaskExtensions.hpp"
// Including type: System.Net.Sockets.SocketTaskExtensions/System.Net.Sockets.<>c
#include "System/Net/Sockets/SocketTaskExtensions_--c.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Net.EndPoint
#include "System/Net/EndPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Sockets.SocketTaskExtensions.ConnectAsync
::System::Threading::Tasks::Task* System::Net::Sockets::SocketTaskExtensions::ConnectAsync(::System::Net::Sockets::Socket* socket, ::System::Net::EndPoint* remoteEP) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketTaskExtensions::ConnectAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "SocketTaskExtensions", "ConnectAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(remoteEP)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, socket, remoteEP);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Sockets.SocketTaskExtensions/System.Net.Sockets.<>c
#include "System/Net/Sockets/SocketTaskExtensions_--c.hpp"
// Including type: System.Func`4
#include "System/Func_4.hpp"
// Including type: System.Net.EndPoint
#include "System/Net/EndPoint.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Sockets.SocketTaskExtensions/System.Net.Sockets.<>c <>9
::System::Net::Sockets::SocketTaskExtensions::$$c* System::Net::Sockets::SocketTaskExtensions::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketTaskExtensions::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Net::Sockets::SocketTaskExtensions::$$c*>("System.Net.Sockets", "SocketTaskExtensions/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Sockets.SocketTaskExtensions/System.Net.Sockets.<>c <>9
void System::Net::Sockets::SocketTaskExtensions::$$c::_set_$$9(::System::Net::Sockets::SocketTaskExtensions::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketTaskExtensions::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketTaskExtensions/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`4<System.Net.EndPoint,System.AsyncCallback,System.Object,System.IAsyncResult> <>9__2_0
::System::Func_4<::System::Net::EndPoint*, ::System::AsyncCallback*, ::Il2CppObject*, ::System::IAsyncResult*>* System::Net::Sockets::SocketTaskExtensions::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketTaskExtensions::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_4<::System::Net::EndPoint*, ::System::AsyncCallback*, ::Il2CppObject*, ::System::IAsyncResult*>*>("System.Net.Sockets", "SocketTaskExtensions/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`4<System.Net.EndPoint,System.AsyncCallback,System.Object,System.IAsyncResult> <>9__2_0
void System::Net::Sockets::SocketTaskExtensions::$$c::_set_$$9__2_0(::System::Func_4<::System::Net::EndPoint*, ::System::AsyncCallback*, ::Il2CppObject*, ::System::IAsyncResult*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketTaskExtensions::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketTaskExtensions/<>c", "<>9__2_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.IAsyncResult> <>9__2_1
::System::Action_1<::System::IAsyncResult*>* System::Net::Sockets::SocketTaskExtensions::$$c::_get_$$9__2_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketTaskExtensions::$$c::_get_$$9__2_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::System::IAsyncResult*>*>("System.Net.Sockets", "SocketTaskExtensions/<>c", "<>9__2_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.IAsyncResult> <>9__2_1
void System::Net::Sockets::SocketTaskExtensions::$$c::_set_$$9__2_1(::System::Action_1<::System::IAsyncResult*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketTaskExtensions::$$c::_set_$$9__2_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketTaskExtensions/<>c", "<>9__2_1", value)));
}
// Autogenerated method: System.Net.Sockets.SocketTaskExtensions/System.Net.Sockets.<>c..cctor
void System::Net::Sockets::SocketTaskExtensions::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketTaskExtensions::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "SocketTaskExtensions/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketTaskExtensions/System.Net.Sockets.<>c.<ConnectAsync>b__2_0
::System::IAsyncResult* System::Net::Sockets::SocketTaskExtensions::$$c::$ConnectAsync$b__2_0(::System::Net::EndPoint* targetEndPoint, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketTaskExtensions::$$c::<ConnectAsync>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ConnectAsync>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetEndPoint), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, targetEndPoint, callback, state);
}
// Autogenerated method: System.Net.Sockets.SocketTaskExtensions/System.Net.Sockets.<>c.<ConnectAsync>b__2_1
void System::Net::Sockets::SocketTaskExtensions::$$c::$ConnectAsync$b__2_1(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Sockets::SocketTaskExtensions::$$c::<ConnectAsync>b__2_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ConnectAsync>b__2_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Security.AuthenticatedStream
#include "System/Net/Security/AuthenticatedStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _InnerStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Net::Security::AuthenticatedStream::dyn__InnerStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticatedStream::dyn__InnerStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_InnerStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _LeaveStreamOpen
[[deprecated("Use field access instead!")]] bool& System::Net::Security::AuthenticatedStream::dyn__LeaveStreamOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticatedStream::dyn__LeaveStreamOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_LeaveStreamOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Security.AuthenticatedStream.get_InnerStream
::System::IO::Stream* System::Net::Security::AuthenticatedStream::get_InnerStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticatedStream::get_InnerStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.AuthenticatedStream.get_IsAuthenticated
bool System::Net::Security::AuthenticatedStream::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticatedStream::get_IsAuthenticated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::AuthenticatedStream*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.AuthenticatedStream.Dispose
void System::Net::Security::AuthenticatedStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticatedStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Security.AuthenticationLevel
#include "System/Net/Security/AuthenticationLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Security.AuthenticationLevel None
::System::Net::Security::AuthenticationLevel System::Net::Security::AuthenticationLevel::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticationLevel::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::AuthenticationLevel>("System.Net.Security", "AuthenticationLevel", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.AuthenticationLevel None
void System::Net::Security::AuthenticationLevel::_set_None(::System::Net::Security::AuthenticationLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticationLevel::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "AuthenticationLevel", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.AuthenticationLevel MutualAuthRequested
::System::Net::Security::AuthenticationLevel System::Net::Security::AuthenticationLevel::_get_MutualAuthRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticationLevel::_get_MutualAuthRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::AuthenticationLevel>("System.Net.Security", "AuthenticationLevel", "MutualAuthRequested"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.AuthenticationLevel MutualAuthRequested
void System::Net::Security::AuthenticationLevel::_set_MutualAuthRequested(::System::Net::Security::AuthenticationLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticationLevel::_set_MutualAuthRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "AuthenticationLevel", "MutualAuthRequested", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.AuthenticationLevel MutualAuthRequired
::System::Net::Security::AuthenticationLevel System::Net::Security::AuthenticationLevel::_get_MutualAuthRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticationLevel::_get_MutualAuthRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::AuthenticationLevel>("System.Net.Security", "AuthenticationLevel", "MutualAuthRequired"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.AuthenticationLevel MutualAuthRequired
void System::Net::Security::AuthenticationLevel::_set_MutualAuthRequired(::System::Net::Security::AuthenticationLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticationLevel::_set_MutualAuthRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "AuthenticationLevel", "MutualAuthRequired", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Security::AuthenticationLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::AuthenticationLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Security.RemoteCertificateValidationCallback.Invoke
bool System::Net::Security::RemoteCertificateValidationCallback::Invoke(::Il2CppObject* sender, ::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::System::Security::Cryptography::X509Certificates::X509Chain* chain, ::System::Net::Security::SslPolicyErrors sslPolicyErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::RemoteCertificateValidationCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::RemoteCertificateValidationCallback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sender, certificate, chain, sslPolicyErrors);
}
// Autogenerated method: System.Net.Security.RemoteCertificateValidationCallback.BeginInvoke
::System::IAsyncResult* System::Net::Security::RemoteCertificateValidationCallback::BeginInvoke(::Il2CppObject* sender, ::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::System::Security::Cryptography::X509Certificates::X509Chain* chain, ::System::Net::Security::SslPolicyErrors sslPolicyErrors, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::RemoteCertificateValidationCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::RemoteCertificateValidationCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, certificate, chain, sslPolicyErrors, callback, object);
}
// Autogenerated method: System.Net.Security.RemoteCertificateValidationCallback.EndInvoke
bool System::Net::Security::RemoteCertificateValidationCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::RemoteCertificateValidationCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::RemoteCertificateValidationCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SslPolicyErrors None
::System::Net::Security::SslPolicyErrors System::Net::Security::SslPolicyErrors::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SslPolicyErrors>("System.Net.Security", "SslPolicyErrors", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SslPolicyErrors None
void System::Net::Security::SslPolicyErrors::_set_None(::System::Net::Security::SslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SslPolicyErrors", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateNotAvailable
::System::Net::Security::SslPolicyErrors System::Net::Security::SslPolicyErrors::_get_RemoteCertificateNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_get_RemoteCertificateNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SslPolicyErrors>("System.Net.Security", "SslPolicyErrors", "RemoteCertificateNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateNotAvailable
void System::Net::Security::SslPolicyErrors::_set_RemoteCertificateNotAvailable(::System::Net::Security::SslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_set_RemoteCertificateNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SslPolicyErrors", "RemoteCertificateNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateNameMismatch
::System::Net::Security::SslPolicyErrors System::Net::Security::SslPolicyErrors::_get_RemoteCertificateNameMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_get_RemoteCertificateNameMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SslPolicyErrors>("System.Net.Security", "SslPolicyErrors", "RemoteCertificateNameMismatch"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateNameMismatch
void System::Net::Security::SslPolicyErrors::_set_RemoteCertificateNameMismatch(::System::Net::Security::SslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_set_RemoteCertificateNameMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SslPolicyErrors", "RemoteCertificateNameMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateChainErrors
::System::Net::Security::SslPolicyErrors System::Net::Security::SslPolicyErrors::_get_RemoteCertificateChainErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_get_RemoteCertificateChainErrors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Security::SslPolicyErrors>("System.Net.Security", "SslPolicyErrors", "RemoteCertificateChainErrors"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateChainErrors
void System::Net::Security::SslPolicyErrors::_set_RemoteCertificateChainErrors(::System::Net::Security::SslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::_set_RemoteCertificateChainErrors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SslPolicyErrors", "RemoteCertificateChainErrors", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Security::SslPolicyErrors::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslPolicyErrors::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Security.LocalCertSelectionCallback
#include "System/Net/Security/LocalCertSelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Security.LocalCertSelectionCallback.Invoke
::System::Security::Cryptography::X509Certificates::X509Certificate* System::Net::Security::LocalCertSelectionCallback::Invoke(::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::ArrayW<::StringW> acceptableIssuers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::LocalCertSelectionCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::LocalCertSelectionCallback*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers);
}
// Autogenerated method: System.Net.Security.LocalCertSelectionCallback.BeginInvoke
::System::IAsyncResult* System::Net::Security::LocalCertSelectionCallback::BeginInvoke(::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::ArrayW<::StringW> acceptableIssuers, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::LocalCertSelectionCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::LocalCertSelectionCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers, callback, object);
}
// Autogenerated method: System.Net.Security.LocalCertSelectionCallback.EndInvoke
::System::Security::Cryptography::X509Certificates::X509Certificate* System::Net::Security::LocalCertSelectionCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::LocalCertSelectionCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::LocalCertSelectionCallback*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: Mono.Security.Interface.IMonoSslStream
#include "Mono/Security/Interface/IMonoSslStream.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.MonoTlsProvider provider
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoTlsProvider*& System::Net::Security::SslStream::dyn_provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::dyn_provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "provider"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoTlsProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.IMonoSslStream impl
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::IMonoSslStream*& System::Net::Security::SslStream::dyn_impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::dyn_impl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "impl"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::IMonoSslStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Security.SslStream.get_Impl
::Mono::Security::Interface::IMonoSslStream* System::Net::Security::SslStream::get_Impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_Impl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Impl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::IMonoSslStream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.CreateMonoSslStream
::Mono::Security::Interface::IMonoSslStream* System::Net::Security::SslStream::CreateMonoSslStream(::System::IO::Stream* innerStream, bool leaveInnerStreamOpen, ::Mono::Security::Interface::MonoTlsProvider* provider, ::Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::CreateMonoSslStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "SslStream", "CreateMonoSslStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerStream), ::il2cpp_utils::ExtractType(leaveInnerStreamOpen), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::IMonoSslStream*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, innerStream, leaveInnerStreamOpen, provider, settings);
}
// Autogenerated method: System.Net.Security.SslStream.CheckDisposed
void System::Net::Security::SslStream::CheckDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::CheckDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_IsAuthenticated
bool System::Net::Security::SslStream::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_IsAuthenticated");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::AuthenticatedStream*), 32));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_CanSeek
bool System::Net::Security::SslStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_CanRead
bool System::Net::Security::SslStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_CanWrite
bool System::Net::Security::SslStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_ReadTimeout
int System::Net::Security::SslStream::get_ReadTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.set_ReadTimeout
void System::Net::Security::SslStream::set_ReadTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::set_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Security.SslStream.get_WriteTimeout
int System::Net::Security::SslStream::get_WriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_WriteTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_Length
int64_t System::Net::Security::SslStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_Position
int64_t System::Net::Security::SslStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.set_Position
void System::Net::Security::SslStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Security.SslStream.SetLength
void System::Net::Security::SslStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Security.SslStream.Seek
int64_t System::Net::Security::SslStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.Net.Security.SslStream.FlushAsync
::System::Threading::Tasks::Task* System::Net::Security::SslStream::FlushAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::FlushAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: System.Net.Security.SslStream.Flush
void System::Net::Security::SslStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.Dispose
void System::Net::Security::SslStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::Security::AuthenticatedStream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Security.SslStream.Read
int System::Net::Security::SslStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Net.Security.SslStream.Write
void System::Net::Security::SslStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Net.Security.SslStream.BeginRead
::System::IAsyncResult* System::Net::Security::SslStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: System.Net.Security.SslStream.EndRead
int System::Net::Security::SslStream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::EndRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Security.SslStream.BeginWrite
::System::IAsyncResult* System::Net::Security::SslStream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: System.Net.Security.SslStream.EndWrite
void System::Net::Security::SslStream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Security::SslStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.IPGlobalProperties
#include "System/Net/NetworkInformation/IPGlobalProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean <PlatformNeedsLibCWorkaround>k__BackingField
bool System::Net::NetworkInformation::IPGlobalProperties::_get_$PlatformNeedsLibCWorkaround$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPGlobalProperties::_get_$PlatformNeedsLibCWorkaround$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("System.Net.NetworkInformation", "IPGlobalProperties", "<PlatformNeedsLibCWorkaround>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean <PlatformNeedsLibCWorkaround>k__BackingField
void System::Net::NetworkInformation::IPGlobalProperties::_set_$PlatformNeedsLibCWorkaround$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPGlobalProperties::_set_$PlatformNeedsLibCWorkaround$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "IPGlobalProperties", "<PlatformNeedsLibCWorkaround>k__BackingField", value));
}
// Autogenerated method: System.Net.NetworkInformation.IPGlobalProperties.get_PlatformNeedsLibCWorkaround
bool System::Net::NetworkInformation::IPGlobalProperties::get_PlatformNeedsLibCWorkaround() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPGlobalProperties::get_PlatformNeedsLibCWorkaround");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "IPGlobalProperties", "get_PlatformNeedsLibCWorkaround", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.IPGlobalProperties.get_DomainName
::StringW System::Net::NetworkInformation::IPGlobalProperties::get_DomainName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPGlobalProperties::get_DomainName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::NetworkInformation::IPGlobalProperties*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties
::System::Net::NetworkInformation::IPGlobalProperties* System::Net::NetworkInformation::IPGlobalProperties::GetIPGlobalProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPGlobalProperties::GetIPGlobalProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "IPGlobalProperties", "GetIPGlobalProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::IPGlobalProperties*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.IPGlobalProperties.InternalGetIPGlobalProperties
::System::Net::NetworkInformation::IPGlobalProperties* System::Net::NetworkInformation::IPGlobalProperties::InternalGetIPGlobalProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::IPGlobalProperties::InternalGetIPGlobalProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "IPGlobalProperties", "InternalGetIPGlobalProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::IPGlobalProperties*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.NetworkInformationException
#include "System/Net/NetworkInformation/NetworkInformationException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.NetworkInterfaceComponent
#include "System/Net/NetworkInformation/NetworkInterfaceComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceComponent IPv4
::System::Net::NetworkInformation::NetworkInterfaceComponent System::Net::NetworkInformation::NetworkInterfaceComponent::_get_IPv4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceComponent::_get_IPv4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceComponent>("System.Net.NetworkInformation", "NetworkInterfaceComponent", "IPv4"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceComponent IPv4
void System::Net::NetworkInformation::NetworkInterfaceComponent::_set_IPv4(::System::Net::NetworkInformation::NetworkInterfaceComponent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceComponent::_set_IPv4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceComponent", "IPv4", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceComponent IPv6
::System::Net::NetworkInformation::NetworkInterfaceComponent System::Net::NetworkInformation::NetworkInterfaceComponent::_get_IPv6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceComponent::_get_IPv6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetworkInterfaceComponent>("System.Net.NetworkInformation", "NetworkInterfaceComponent", "IPv6"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceComponent IPv6
void System::Net::NetworkInformation::NetworkInterfaceComponent::_set_IPv6(::System::Net::NetworkInformation::NetworkInterfaceComponent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceComponent::_set_IPv6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceComponent", "IPv6", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::NetworkInformation::NetworkInterfaceComponent::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetworkInterfaceComponent::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.NetBiosNodeType
#include "System/Net/NetworkInformation/NetBiosNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetBiosNodeType Unknown
::System::Net::NetworkInformation::NetBiosNodeType System::Net::NetworkInformation::NetBiosNodeType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetBiosNodeType>("System.Net.NetworkInformation", "NetBiosNodeType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetBiosNodeType Unknown
void System::Net::NetworkInformation::NetBiosNodeType::_set_Unknown(::System::Net::NetworkInformation::NetBiosNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetBiosNodeType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetBiosNodeType Broadcast
::System::Net::NetworkInformation::NetBiosNodeType System::Net::NetworkInformation::NetBiosNodeType::_get_Broadcast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_get_Broadcast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetBiosNodeType>("System.Net.NetworkInformation", "NetBiosNodeType", "Broadcast"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetBiosNodeType Broadcast
void System::Net::NetworkInformation::NetBiosNodeType::_set_Broadcast(::System::Net::NetworkInformation::NetBiosNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_set_Broadcast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetBiosNodeType", "Broadcast", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetBiosNodeType Peer2Peer
::System::Net::NetworkInformation::NetBiosNodeType System::Net::NetworkInformation::NetBiosNodeType::_get_Peer2Peer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_get_Peer2Peer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetBiosNodeType>("System.Net.NetworkInformation", "NetBiosNodeType", "Peer2Peer"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetBiosNodeType Peer2Peer
void System::Net::NetworkInformation::NetBiosNodeType::_set_Peer2Peer(::System::Net::NetworkInformation::NetBiosNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_set_Peer2Peer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetBiosNodeType", "Peer2Peer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetBiosNodeType Mixed
::System::Net::NetworkInformation::NetBiosNodeType System::Net::NetworkInformation::NetBiosNodeType::_get_Mixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_get_Mixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetBiosNodeType>("System.Net.NetworkInformation", "NetBiosNodeType", "Mixed"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetBiosNodeType Mixed
void System::Net::NetworkInformation::NetBiosNodeType::_set_Mixed(::System::Net::NetworkInformation::NetBiosNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_set_Mixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetBiosNodeType", "Mixed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetBiosNodeType Hybrid
::System::Net::NetworkInformation::NetBiosNodeType System::Net::NetworkInformation::NetBiosNodeType::_get_Hybrid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_get_Hybrid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::NetBiosNodeType>("System.Net.NetworkInformation", "NetBiosNodeType", "Hybrid"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetBiosNodeType Hybrid
void System::Net::NetworkInformation::NetBiosNodeType::_set_Hybrid(::System::Net::NetworkInformation::NetBiosNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::_set_Hybrid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetBiosNodeType", "Hybrid", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::NetworkInformation::NetBiosNodeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::NetBiosNodeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.CommonUnixIPGlobalProperties
#include "System/Net/NetworkInformation/CommonUnixIPGlobalProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.CommonUnixIPGlobalProperties.getdomainname
int System::Net::NetworkInformation::CommonUnixIPGlobalProperties::getdomainname(::ArrayW<uint8_t> name, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::CommonUnixIPGlobalProperties::getdomainname");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "CommonUnixIPGlobalProperties", "getdomainname", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, len);
}
// Autogenerated method: System.Net.NetworkInformation.CommonUnixIPGlobalProperties.get_DomainName
::StringW System::Net::NetworkInformation::CommonUnixIPGlobalProperties::get_DomainName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::CommonUnixIPGlobalProperties::get_DomainName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::NetworkInformation::IPGlobalProperties*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.UnixIPGlobalProperties
#include "System/Net/NetworkInformation/UnixIPGlobalProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.UnixNoLibCIPGlobalProperties
#include "System/Net/NetworkInformation/UnixNoLibCIPGlobalProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.UnixNoLibCIPGlobalProperties.get_DomainName
::StringW System::Net::NetworkInformation::UnixNoLibCIPGlobalProperties::get_DomainName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::UnixNoLibCIPGlobalProperties::get_DomainName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::NetworkInformation::CommonUnixIPGlobalProperties*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.MibIPGlobalProperties
#include "System/Net/NetworkInformation/MibIPGlobalProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] wsChars
::ArrayW<::Il2CppChar> System::Net::NetworkInformation::MibIPGlobalProperties::_get_wsChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MibIPGlobalProperties::_get_wsChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Net.NetworkInformation", "MibIPGlobalProperties", "wsChars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] wsChars
void System::Net::NetworkInformation::MibIPGlobalProperties::_set_wsChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MibIPGlobalProperties::_set_wsChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "MibIPGlobalProperties", "wsChars", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String StatisticsFile
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NetworkInformation::MibIPGlobalProperties::dyn_StatisticsFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MibIPGlobalProperties::dyn_StatisticsFile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StatisticsFile"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String StatisticsFileIPv6
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NetworkInformation::MibIPGlobalProperties::dyn_StatisticsFileIPv6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MibIPGlobalProperties::dyn_StatisticsFileIPv6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StatisticsFileIPv6"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String TcpFile
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NetworkInformation::MibIPGlobalProperties::dyn_TcpFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MibIPGlobalProperties::dyn_TcpFile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TcpFile"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Tcp6File
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NetworkInformation::MibIPGlobalProperties::dyn_Tcp6File() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MibIPGlobalProperties::dyn_Tcp6File");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tcp6File"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String UdpFile
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NetworkInformation::MibIPGlobalProperties::dyn_UdpFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MibIPGlobalProperties::dyn_UdpFile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UdpFile"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Udp6File
[[deprecated("Use field access instead!")]] ::StringW& System::Net::NetworkInformation::MibIPGlobalProperties::dyn_Udp6File() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MibIPGlobalProperties::dyn_Udp6File");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Udp6File"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.NetworkInformation.MibIPGlobalProperties..cctor
void System::Net::NetworkInformation::MibIPGlobalProperties::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::MibIPGlobalProperties::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "MibIPGlobalProperties", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.Win32IPGlobalProperties
#include "System/Net/NetworkInformation/Win32IPGlobalProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.Win32IPGlobalProperties.get_DomainName
::StringW System::Net::NetworkInformation::Win32IPGlobalProperties::get_DomainName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32IPGlobalProperties::get_DomainName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Net::NetworkInformation::IPGlobalProperties*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.Win32NetworkInterface
#include "System/Net/NetworkInformation/Win32NetworkInterface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Net.NetworkInformation.Win32_FIXED_INFO fixedInfo
::System::Net::NetworkInformation::Win32_FIXED_INFO System::Net::NetworkInformation::Win32NetworkInterface::_get_fixedInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface::_get_fixedInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::NetworkInformation::Win32_FIXED_INFO>("System.Net.NetworkInformation", "Win32NetworkInterface", "fixedInfo"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.NetworkInformation.Win32_FIXED_INFO fixedInfo
void System::Net::NetworkInformation::Win32NetworkInterface::_set_fixedInfo(::System::Net::NetworkInformation::Win32_FIXED_INFO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface::_set_fixedInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "Win32NetworkInterface", "fixedInfo", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean initialized
bool System::Net::NetworkInformation::Win32NetworkInterface::_get_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface::_get_initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net.NetworkInformation", "Win32NetworkInterface", "initialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean initialized
void System::Net::NetworkInformation::Win32NetworkInterface::_set_initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface::_set_initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "Win32NetworkInterface", "initialized", value));
}
// Autogenerated method: System.Net.NetworkInformation.Win32NetworkInterface.get_FixedInfo
::System::Net::NetworkInformation::Win32_FIXED_INFO System::Net::NetworkInformation::Win32NetworkInterface::get_FixedInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface::get_FixedInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "Win32NetworkInterface", "get_FixedInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::NetworkInformation::Win32_FIXED_INFO, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.Win32NetworkInterface.GetNetworkParams
int System::Net::NetworkInformation::Win32NetworkInterface::GetNetworkParams(::System::IntPtr ptr, ByRef<int> size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::NetworkInformation::Win32NetworkInterface::GetNetworkParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "Win32NetworkInterface", "GetNetworkParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, byref(size));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Configuration.DefaultProxySectionInternal
#include "System/Net/Configuration/DefaultProxySectionInternal.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object classSyncObject
::Il2CppObject* System::Net::Configuration::DefaultProxySectionInternal::_get_classSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySectionInternal::_get_classSyncObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Net.Configuration", "DefaultProxySectionInternal", "classSyncObject"));
}
// Autogenerated static field setter
// Set static field: static private System.Object classSyncObject
void System::Net::Configuration::DefaultProxySectionInternal::_set_classSyncObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySectionInternal::_set_classSyncObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "DefaultProxySectionInternal", "classSyncObject", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Net.IWebProxy webProxy
[[deprecated("Use field access instead!")]] ::System::Net::IWebProxy*& System::Net::Configuration::DefaultProxySectionInternal::dyn_webProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySectionInternal::dyn_webProxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "webProxy"))->offset;
  return *reinterpret_cast<::System::Net::IWebProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySectionInternal.get_ClassSyncObject
::Il2CppObject* System::Net::Configuration::DefaultProxySectionInternal::get_ClassSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySectionInternal::get_ClassSyncObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Configuration", "DefaultProxySectionInternal", "get_ClassSyncObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySectionInternal.get_WebProxy
::System::Net::IWebProxy* System::Net::Configuration::DefaultProxySectionInternal::get_WebProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySectionInternal::get_WebProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WebProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IWebProxy*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySectionInternal.GetDefaultProxy_UsingOldMonoCode
::System::Net::IWebProxy* System::Net::Configuration::DefaultProxySectionInternal::GetDefaultProxy_UsingOldMonoCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySectionInternal::GetDefaultProxy_UsingOldMonoCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Configuration", "DefaultProxySectionInternal", "GetDefaultProxy_UsingOldMonoCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IWebProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySectionInternal.GetSystemWebProxy
::System::Net::IWebProxy* System::Net::Configuration::DefaultProxySectionInternal::GetSystemWebProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySectionInternal::GetSystemWebProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Configuration", "DefaultProxySectionInternal", "GetSystemWebProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IWebProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySectionInternal.GetSection
::System::Net::Configuration::DefaultProxySectionInternal* System::Net::Configuration::DefaultProxySectionInternal::GetSection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySectionInternal::GetSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Configuration", "DefaultProxySectionInternal", "GetSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Configuration::DefaultProxySectionInternal*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.SettingsSectionInternal
#include "System/Net/Configuration/SettingsSectionInternal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Configuration.SettingsSectionInternal instance
::System::Net::Configuration::SettingsSectionInternal* System::Net::Configuration::SettingsSectionInternal::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SettingsSectionInternal::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Configuration::SettingsSectionInternal*>("System.Net.Configuration", "SettingsSectionInternal", "instance"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Configuration.SettingsSectionInternal instance
void System::Net::Configuration::SettingsSectionInternal::_set_instance(::System::Net::Configuration::SettingsSectionInternal* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SettingsSectionInternal::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "SettingsSectionInternal", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: readonly System.Boolean HttpListenerUnescapeRequestUrl
[[deprecated("Use field access instead!")]] bool& System::Net::Configuration::SettingsSectionInternal::dyn_HttpListenerUnescapeRequestUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SettingsSectionInternal::dyn_HttpListenerUnescapeRequestUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HttpListenerUnescapeRequestUrl"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Net.Sockets.IPProtectionLevel IPProtectionLevel
[[deprecated("Use field access instead!")]] ::System::Net::Sockets::IPProtectionLevel& System::Net::Configuration::SettingsSectionInternal::dyn_IPProtectionLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SettingsSectionInternal::dyn_IPProtectionLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IPProtectionLevel"))->offset;
  return *reinterpret_cast<::System::Net::Sockets::IPProtectionLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Configuration.SettingsSectionInternal.get_Section
::System::Net::Configuration::SettingsSectionInternal* System::Net::Configuration::SettingsSectionInternal::get_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SettingsSectionInternal::get_Section");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Configuration", "SettingsSectionInternal", "get_Section", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Configuration::SettingsSectionInternal*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Configuration.SettingsSectionInternal.get_Ipv6Enabled
bool System::Net::Configuration::SettingsSectionInternal::get_Ipv6Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SettingsSectionInternal::get_Ipv6Enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Ipv6Enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Configuration.SettingsSectionInternal..cctor
void System::Net::Configuration::SettingsSectionInternal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SettingsSectionInternal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Configuration", "SettingsSectionInternal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Cache.RequestCache
#include "System/Net/Cache/RequestCache.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Char[] LineSplits
::ArrayW<::Il2CppChar> System::Net::Cache::RequestCache::_get_LineSplits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCache::_get_LineSplits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Net.Cache", "RequestCache", "LineSplits"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] LineSplits
void System::Net::Cache::RequestCache::_set_LineSplits(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCache::_set_LineSplits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCache", "LineSplits", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _IsPrivateCache
[[deprecated("Use field access instead!")]] bool& System::Net::Cache::RequestCache::dyn__IsPrivateCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCache::dyn__IsPrivateCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_IsPrivateCache"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _CanWrite
[[deprecated("Use field access instead!")]] bool& System::Net::Cache::RequestCache::dyn__CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCache::dyn__CanWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_CanWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Cache.RequestCache..cctor
void System::Net::Cache::RequestCache::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCache::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Cache", "RequestCache", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Cache.RequestCacheValidator
#include "System/Net/Cache/RequestCacheValidator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Cache.RequestCacheValidator.CreateValidator
::Il2CppObject* System::Net::Cache::RequestCacheValidator::CreateValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheValidator::CreateValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Cache.RequestCacheBinding
#include "System/Net/Cache/RequestCacheBinding.hpp"
// Including type: System.Net.Cache.RequestCache
#include "System/Net/Cache/RequestCache.hpp"
// Including type: System.Net.Cache.RequestCacheValidator
#include "System/Net/Cache/RequestCacheValidator.hpp"
// Including type: System.Net.Cache.RequestCachePolicy
#include "System/Net/Cache/RequestCachePolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Cache.RequestCache m_RequestCache
[[deprecated("Use field access instead!")]] ::System::Net::Cache::RequestCache*& System::Net::Cache::RequestCacheBinding::dyn_m_RequestCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheBinding::dyn_m_RequestCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RequestCache"))->offset;
  return *reinterpret_cast<::System::Net::Cache::RequestCache**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Cache.RequestCacheValidator m_CacheValidator
[[deprecated("Use field access instead!")]] ::System::Net::Cache::RequestCacheValidator*& System::Net::Cache::RequestCacheBinding::dyn_m_CacheValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheBinding::dyn_m_CacheValidator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CacheValidator"))->offset;
  return *reinterpret_cast<::System::Net::Cache::RequestCacheValidator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Cache.RequestCachePolicy m_Policy
[[deprecated("Use field access instead!")]] ::System::Net::Cache::RequestCachePolicy*& System::Net::Cache::RequestCacheBinding::dyn_m_Policy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheBinding::dyn_m_Policy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Policy"))->offset;
  return *reinterpret_cast<::System::Net::Cache::RequestCachePolicy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Cache.RequestCacheBinding.get_Cache
::System::Net::Cache::RequestCache* System::Net::Cache::RequestCacheBinding::get_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheBinding::get_Cache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Cache::RequestCache*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Cache.RequestCacheBinding.get_Validator
::System::Net::Cache::RequestCacheValidator* System::Net::Cache::RequestCacheBinding::get_Validator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheBinding::get_Validator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Validator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Cache::RequestCacheValidator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Cache.RequestCacheLevel
#include "System/Net/Cache/RequestCacheLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel Default
::System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel Default
void System::Net::Cache::RequestCacheLevel::_set_Default(::System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel BypassCache
::System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_BypassCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_get_BypassCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "BypassCache"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel BypassCache
void System::Net::Cache::RequestCacheLevel::_set_BypassCache(::System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_set_BypassCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "BypassCache", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel CacheOnly
::System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_CacheOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_get_CacheOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "CacheOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel CacheOnly
void System::Net::Cache::RequestCacheLevel::_set_CacheOnly(::System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_set_CacheOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "CacheOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel CacheIfAvailable
::System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_CacheIfAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_get_CacheIfAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "CacheIfAvailable"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel CacheIfAvailable
void System::Net::Cache::RequestCacheLevel::_set_CacheIfAvailable(::System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_set_CacheIfAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "CacheIfAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel Revalidate
::System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_Revalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_get_Revalidate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "Revalidate"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel Revalidate
void System::Net::Cache::RequestCacheLevel::_set_Revalidate(::System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_set_Revalidate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "Revalidate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel Reload
::System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_Reload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_get_Reload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "Reload"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel Reload
void System::Net::Cache::RequestCacheLevel::_set_Reload(::System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_set_Reload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "Reload", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Cache.RequestCacheLevel NoCacheNoStore
::System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCacheLevel::_get_NoCacheNoStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_get_NoCacheNoStore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::Cache::RequestCacheLevel>("System.Net.Cache", "RequestCacheLevel", "NoCacheNoStore"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Cache.RequestCacheLevel NoCacheNoStore
void System::Net::Cache::RequestCacheLevel::_set_NoCacheNoStore(::System::Net::Cache::RequestCacheLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::_set_NoCacheNoStore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Cache", "RequestCacheLevel", "NoCacheNoStore", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::Cache::RequestCacheLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCacheLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Cache.RequestCachePolicy
#include "System/Net/Cache/RequestCachePolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Net.Cache.RequestCacheLevel m_Level
[[deprecated("Use field access instead!")]] ::System::Net::Cache::RequestCacheLevel& System::Net::Cache::RequestCachePolicy::dyn_m_Level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCachePolicy::dyn_m_Level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Level"))->offset;
  return *reinterpret_cast<::System::Net::Cache::RequestCacheLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Cache.RequestCachePolicy.get_Level
::System::Net::Cache::RequestCacheLevel System::Net::Cache::RequestCachePolicy::get_Level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Cache::RequestCachePolicy::get_Level");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Cache::RequestCacheLevel, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Cache.RequestCacheProtocol
#include "System/Net/Cache/RequestCacheProtocol.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.BypassElementCollection
#include "System/Net/Configuration/BypassElementCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ConnectionManagementElementCollection
#include "System/Net/Configuration/ConnectionManagementElementCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ConnectionManagementSection
#include "System/Net/Configuration/ConnectionManagementSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ConnectionManagementSection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ConnectionManagementSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::ConnectionManagementSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.DefaultProxySection
#include "System/Net/Configuration/DefaultProxySection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.DefaultProxySection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::DefaultProxySection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySection::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySection.Reset
void System::Net::Configuration::DefaultProxySection::Reset(::System::Configuration::ConfigurationElement* parentElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::DefaultProxySection::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentElement);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ProxyElement
#include "System/Net/Configuration/ProxyElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ProxyElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ProxyElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::ProxyElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.HttpWebRequestElement
#include "System/Net/Configuration/HttpWebRequestElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.HttpWebRequestElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::HttpWebRequestElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::HttpWebRequestElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.Ipv6Element
#include "System/Net/Configuration/Ipv6Element.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.Ipv6Element.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::Ipv6Element::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::Ipv6Element::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.NetSectionGroup
#include "System/Net/Configuration/NetSectionGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.SettingsSection
#include "System/Net/Configuration/SettingsSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.SettingsSection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::SettingsSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SettingsSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.PerformanceCountersElement
#include "System/Net/Configuration/PerformanceCountersElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.PerformanceCountersElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::PerformanceCountersElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::PerformanceCountersElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ServicePointManagerElement
#include "System/Net/Configuration/ServicePointManagerElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ServicePointManagerElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ServicePointManagerElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::ServicePointManagerElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.SocketElement
#include "System/Net/Configuration/SocketElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.SocketElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::SocketElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::SocketElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebProxyScriptElement
#include "System/Net/Configuration/WebProxyScriptElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.WebProxyScriptElement.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::WebProxyScriptElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::WebProxyScriptElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebRequestModulesSection
#include "System/Net/Configuration/WebRequestModulesSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.WebRequestModulesSection.get_Properties
::System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::WebRequestModulesSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Configuration::WebRequestModulesSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Configuration::ConfigurationElement*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebRequestModuleElementCollection
#include "System/Net/Configuration/WebRequestModuleElementCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.DiagnosticsConfigurationHandler
#include "System/Diagnostics/DiagnosticsConfigurationHandler.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.DiagnosticsConfigurationHandler.Create
::Il2CppObject* System::Diagnostics::DiagnosticsConfigurationHandler::Create(::Il2CppObject* parent, ::Il2CppObject* configContext, ::System::Xml::XmlNode* section) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DiagnosticsConfigurationHandler::Create");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Diagnostics::DiagnosticsConfigurationHandler*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, parent, configContext, section);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.ThrowStub
#include "Unity/ThrowStub__.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.ThrowStub.ThrowNotSupportedException
void Unity::ThrowStub__::ThrowNotSupportedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::ThrowStub__::ThrowNotSupportedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity", "ThrowStub", "ThrowNotSupportedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SR
#include "GlobalNamespace/SR____.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SR.Format
::StringW GlobalNamespace::SR____::Format(::StringW resourceFormat, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR____::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceFormat), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resourceFormat, p1);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.BlockType
#include "System/IO/Compression/BlockType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.BlockType Uncompressed
::System::IO::Compression::BlockType System::IO::Compression::BlockType::_get_Uncompressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::BlockType::_get_Uncompressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::BlockType>("System.IO.Compression", "BlockType", "Uncompressed"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.BlockType Uncompressed
void System::IO::Compression::BlockType::_set_Uncompressed(::System::IO::Compression::BlockType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::BlockType::_set_Uncompressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "BlockType", "Uncompressed", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.BlockType Static
::System::IO::Compression::BlockType System::IO::Compression::BlockType::_get_Static() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::BlockType::_get_Static");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::BlockType>("System.IO.Compression", "BlockType", "Static"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.BlockType Static
void System::IO::Compression::BlockType::_set_Static(::System::IO::Compression::BlockType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::BlockType::_set_Static");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "BlockType", "Static", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.BlockType Dynamic
::System::IO::Compression::BlockType System::IO::Compression::BlockType::_get_Dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::BlockType::_get_Dynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::BlockType>("System.IO.Compression", "BlockType", "Dynamic"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.BlockType Dynamic
void System::IO::Compression::BlockType::_set_Dynamic(::System::IO::Compression::BlockType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::BlockType::_set_Dynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "BlockType", "Dynamic", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::Compression::BlockType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::BlockType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.CopyEncoder
#include "System/IO/Compression/CopyEncoder.hpp"
// Including type: System.IO.Compression.DeflateInput
#include "System/IO/Compression/DeflateInput.hpp"
// Including type: System.IO.Compression.OutputBuffer
#include "System/IO/Compression/OutputBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.CopyEncoder.GetBlock
void System::IO::Compression::CopyEncoder::GetBlock(::System::IO::Compression::DeflateInput* input, ::System::IO::Compression::OutputBuffer* output, bool isFinal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CopyEncoder::GetBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(isFinal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output, isFinal);
}
// Autogenerated method: System.IO.Compression.CopyEncoder.WriteLenNLen
void System::IO::Compression::CopyEncoder::WriteLenNLen(uint16_t len, ::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CopyEncoder::WriteLenNLen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLenNLen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, len, output);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.DeflateInput
#include "System/IO/Compression/DeflateInput.hpp"
// Including type: System.IO.Compression.DeflateInput/System.IO.Compression.InputState
#include "System/IO/Compression/DeflateInput_InputState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <Buffer>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::DeflateInput::dyn_$Buffer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::dyn_$Buffer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Buffer>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Count>k__BackingField
[[deprecated("Use field access instead!")]] int& System::IO::Compression::DeflateInput::dyn_$Count$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::dyn_$Count$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Count>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <StartIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& System::IO::Compression::DeflateInput::dyn_$StartIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::dyn_$StartIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<StartIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.DeflateInput.get_Buffer
::ArrayW<uint8_t> System::IO::Compression::DeflateInput::get_Buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::get_Buffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Buffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateInput.set_Buffer
void System::IO::Compression::DeflateInput::set_Buffer(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::set_Buffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Buffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.DeflateInput.get_Count
int System::IO::Compression::DeflateInput::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateInput.set_Count
void System::IO::Compression::DeflateInput::set_Count(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::set_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.DeflateInput.get_StartIndex
int System::IO::Compression::DeflateInput::get_StartIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::get_StartIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateInput.set_StartIndex
void System::IO::Compression::DeflateInput::set_StartIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::set_StartIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.DeflateInput.ConsumeBytes
void System::IO::Compression::DeflateInput::ConsumeBytes(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::ConsumeBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConsumeBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n);
}
// Autogenerated method: System.IO.Compression.DeflateInput.DumpState
::System::IO::Compression::DeflateInput::InputState System::IO::Compression::DeflateInput::DumpState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::DumpState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DumpState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::DeflateInput::InputState, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateInput.RestoreState
void System::IO::Compression::DeflateInput::RestoreState(::System::IO::Compression::DeflateInput::InputState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::RestoreState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestoreState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.DeflateInput/System.IO.Compression.InputState
#include "System/IO/Compression/DeflateInput_InputState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _count
[[deprecated("Use field access instead!")]] int& System::IO::Compression::DeflateInput::InputState::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::InputState::dyn__count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _startIndex
[[deprecated("Use field access instead!")]] int& System::IO::Compression::DeflateInput::InputState::dyn__startIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateInput::InputState::dyn__startIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.DeflateInput/System.IO.Compression.InputState..ctor
// ABORTED elsewhere.  System::IO::Compression::DeflateInput::InputState::InputState(int count, int startIndex)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Compression.DeflateManagedStream
#include "System/IO/Compression/DeflateManagedStream.hpp"
// Including type: System.IO.Compression.DeflateManagedStream/System.IO.Compression.<ReadAsyncCore>d__40
#include "System/IO/Compression/DeflateManagedStream_-ReadAsyncCore-d__40.hpp"
// Including type: System.IO.Compression.DeflateManagedStream/System.IO.Compression.<WriteAsyncCore>d__47
#include "System/IO/Compression/DeflateManagedStream_-WriteAsyncCore-d__47.hpp"
// Including type: System.IO.Compression.InflaterManaged
#include "System/IO/Compression/InflaterManaged.hpp"
// Including type: System.IO.Compression.DeflaterManaged
#include "System/IO/Compression/DeflaterManaged.hpp"
// Including type: System.IO.Compression.IFileFormatWriter
#include "System/IO/Compression/IFileFormatWriter.hpp"
// Including type: System.IO.Compression.IFileFormatReader
#include "System/IO/Compression/IFileFormatReader.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::IO::Compression::DeflateManagedStream::dyn__stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.CompressionMode _mode
[[deprecated("Use field access instead!")]] ::System::IO::Compression::CompressionMode& System::IO::Compression::DeflateManagedStream::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::System::IO::Compression::CompressionMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _leaveOpen
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::DeflateManagedStream::dyn__leaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__leaveOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaveOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.InflaterManaged _inflater
[[deprecated("Use field access instead!")]] ::System::IO::Compression::InflaterManaged*& System::IO::Compression::DeflateManagedStream::dyn__inflater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__inflater");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inflater"))->offset;
  return *reinterpret_cast<::System::IO::Compression::InflaterManaged**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.DeflaterManaged _deflater
[[deprecated("Use field access instead!")]] ::System::IO::Compression::DeflaterManaged*& System::IO::Compression::DeflateManagedStream::dyn__deflater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__deflater");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deflater"))->offset;
  return *reinterpret_cast<::System::IO::Compression::DeflaterManaged**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::DeflateManagedStream::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _asyncOperations
[[deprecated("Use field access instead!")]] int& System::IO::Compression::DeflateManagedStream::dyn__asyncOperations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__asyncOperations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncOperations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.IFileFormatWriter _formatWriter
[[deprecated("Use field access instead!")]] ::System::IO::Compression::IFileFormatWriter*& System::IO::Compression::DeflateManagedStream::dyn__formatWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__formatWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_formatWriter"))->offset;
  return *reinterpret_cast<::System::IO::Compression::IFileFormatWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _wroteHeader
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::DeflateManagedStream::dyn__wroteHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__wroteHeader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wroteHeader"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _wroteBytes
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::DeflateManagedStream::dyn__wroteBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::dyn__wroteBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wroteBytes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.InitializeInflater
void System::IO::Compression::DeflateManagedStream::InitializeInflater(::System::IO::Stream* stream, bool leaveOpen, ::System::IO::Compression::IFileFormatReader* reader, ::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::InitializeInflater");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeInflater", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(leaveOpen), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, leaveOpen, reader, method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.ValidateParameters
void System::IO::Compression::DeflateManagedStream::ValidateParameters(::ArrayW<uint8_t> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::ValidateParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.EnsureNotDisposed
void System::IO::Compression::DeflateManagedStream::EnsureNotDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::EnsureNotDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureNotDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.ThrowStreamClosedException
void System::IO::Compression::DeflateManagedStream::ThrowStreamClosedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::ThrowStreamClosedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "DeflateManagedStream", "ThrowStreamClosedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.EnsureDecompressionMode
void System::IO::Compression::DeflateManagedStream::EnsureDecompressionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::EnsureDecompressionMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureDecompressionMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.ThrowCannotReadFromDeflateManagedStreamException
void System::IO::Compression::DeflateManagedStream::ThrowCannotReadFromDeflateManagedStreamException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::ThrowCannotReadFromDeflateManagedStreamException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "DeflateManagedStream", "ThrowCannotReadFromDeflateManagedStreamException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.EnsureCompressionMode
void System::IO::Compression::DeflateManagedStream::EnsureCompressionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::EnsureCompressionMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCompressionMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.ThrowCannotWriteToDeflateManagedStreamException
void System::IO::Compression::DeflateManagedStream::ThrowCannotWriteToDeflateManagedStreamException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::ThrowCannotWriteToDeflateManagedStreamException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "DeflateManagedStream", "ThrowCannotWriteToDeflateManagedStreamException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.ReadAsyncCore
::System::Threading::Tasks::Task_1<int>* System::IO::Compression::DeflateManagedStream::ReadAsyncCore(::System::Threading::Tasks::Task_1<int>* readTask, ::ArrayW<uint8_t> array, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::ReadAsyncCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsyncCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readTask), ::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, readTask, array, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.WriteDeflaterOutput
void System::IO::Compression::DeflateManagedStream::WriteDeflaterOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::WriteDeflaterOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDeflaterOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.DoMaintenance
void System::IO::Compression::DeflateManagedStream::DoMaintenance(::ArrayW<uint8_t> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::DoMaintenance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoMaintenance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.PurgeBuffers
void System::IO::Compression::DeflateManagedStream::PurgeBuffers(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::PurgeBuffers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PurgeBuffers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.WriteAsyncCore
::System::Threading::Tasks::Task* System::IO::Compression::DeflateManagedStream::WriteAsyncCore(::ArrayW<uint8_t> array, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::WriteAsyncCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsyncCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, array, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.<>n__0
::System::Threading::Tasks::Task* System::IO::Compression::DeflateManagedStream::$$n__0(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::<>n__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>n__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.get_CanRead
bool System::IO::Compression::DeflateManagedStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.get_CanWrite
bool System::IO::Compression::DeflateManagedStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.get_CanSeek
bool System::IO::Compression::DeflateManagedStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.get_Length
int64_t System::IO::Compression::DeflateManagedStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.get_Position
int64_t System::IO::Compression::DeflateManagedStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.set_Position
void System::IO::Compression::DeflateManagedStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.Flush
void System::IO::Compression::DeflateManagedStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.FlushAsync
::System::Threading::Tasks::Task* System::IO::Compression::DeflateManagedStream::FlushAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::FlushAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.Seek
int64_t System::IO::Compression::DeflateManagedStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.SetLength
void System::IO::Compression::DeflateManagedStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.Read
int System::IO::Compression::DeflateManagedStream::Read(::ArrayW<uint8_t> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.BeginRead
::System::IAsyncResult* System::IO::Compression::DeflateManagedStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.EndRead
int System::IO::Compression::DeflateManagedStream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::EndRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.ReadAsync
::System::Threading::Tasks::Task_1<int>* System::IO::Compression::DeflateManagedStream::ReadAsync(::ArrayW<uint8_t> array, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, array, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.Write
void System::IO::Compression::DeflateManagedStream::Write(::ArrayW<uint8_t> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.Dispose
void System::IO::Compression::DeflateManagedStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.WriteAsync
::System::Threading::Tasks::Task* System::IO::Compression::DeflateManagedStream::WriteAsync(::ArrayW<uint8_t> array, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, array, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.BeginWrite
::System::IAsyncResult* System::IO::Compression::DeflateManagedStream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream.EndWrite
void System::IO::Compression::DeflateManagedStream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.DeflateManagedStream/System.IO.Compression.<ReadAsyncCore>d__40
#include "System/IO/Compression/DeflateManagedStream_-ReadAsyncCore-d__40.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Int32> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>& System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.Task`1<System.Int32> readTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task_1<int>*& System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_readTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_readTask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.Compression.DeflateManagedStream <>4__this
[[deprecated("Use field access instead!")]] ::System::IO::Compression::DeflateManagedStream*& System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::IO::Compression::DeflateManagedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] array
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_array");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "array"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 offset
[[deprecated("Use field access instead!")]] int& System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
[[deprecated("Use field access instead!")]] int& System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Int32> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter& System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream/System.IO.Compression.<ReadAsyncCore>d__40.MoveNext
void System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream/System.IO.Compression.<ReadAsyncCore>d__40.SetStateMachine
void System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::Compression::DeflateManagedStream::$ReadAsyncCore$d__40), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.DeflateManagedStream/System.IO.Compression.<WriteAsyncCore>d__47
#include "System/IO/Compression/DeflateManagedStream_-WriteAsyncCore-d__47.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.Compression.DeflateManagedStream <>4__this
[[deprecated("Use field access instead!")]] ::System::IO::Compression::DeflateManagedStream*& System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::IO::Compression::DeflateManagedStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] array
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_array");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "array"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 offset
[[deprecated("Use field access instead!")]] int& System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
[[deprecated("Use field access instead!")]] int& System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream/System.IO.Compression.<WriteAsyncCore>d__47.MoveNext
void System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateManagedStream/System.IO.Compression.<WriteAsyncCore>d__47.SetStateMachine
void System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::IO::Compression::DeflateManagedStream::$WriteAsyncCore$d__47), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.DeflaterManaged
#include "System/IO/Compression/DeflaterManaged.hpp"
// Including type: System.IO.Compression.FastEncoder
#include "System/IO/Compression/FastEncoder.hpp"
// Including type: System.IO.Compression.CopyEncoder
#include "System/IO/Compression/CopyEncoder.hpp"
// Including type: System.IO.Compression.DeflateInput
#include "System/IO/Compression/DeflateInput.hpp"
// Including type: System.IO.Compression.OutputBuffer
#include "System/IO/Compression/OutputBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.FastEncoder _deflateEncoder
[[deprecated("Use field access instead!")]] ::System::IO::Compression::FastEncoder*& System::IO::Compression::DeflaterManaged::dyn__deflateEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::dyn__deflateEncoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deflateEncoder"))->offset;
  return *reinterpret_cast<::System::IO::Compression::FastEncoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.CopyEncoder _copyEncoder
[[deprecated("Use field access instead!")]] ::System::IO::Compression::CopyEncoder*& System::IO::Compression::DeflaterManaged::dyn__copyEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::dyn__copyEncoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_copyEncoder"))->offset;
  return *reinterpret_cast<::System::IO::Compression::CopyEncoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.DeflateInput _input
[[deprecated("Use field access instead!")]] ::System::IO::Compression::DeflateInput*& System::IO::Compression::DeflaterManaged::dyn__input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::dyn__input");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_input"))->offset;
  return *reinterpret_cast<::System::IO::Compression::DeflateInput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.OutputBuffer _output
[[deprecated("Use field access instead!")]] ::System::IO::Compression::OutputBuffer*& System::IO::Compression::DeflaterManaged::dyn__output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::dyn__output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_output"))->offset;
  return *reinterpret_cast<::System::IO::Compression::OutputBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState _processingState
[[deprecated("Use field access instead!")]] ::System::IO::Compression::DeflaterManaged::DeflaterState& System::IO::Compression::DeflaterManaged::dyn__processingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::dyn__processingState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_processingState"))->offset;
  return *reinterpret_cast<::System::IO::Compression::DeflaterManaged::DeflaterState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.DeflateInput _inputFromHistory
[[deprecated("Use field access instead!")]] ::System::IO::Compression::DeflateInput*& System::IO::Compression::DeflaterManaged::dyn__inputFromHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::dyn__inputFromHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputFromHistory"))->offset;
  return *reinterpret_cast<::System::IO::Compression::DeflateInput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.DeflaterManaged.NeedsInput
bool System::IO::Compression::DeflaterManaged::NeedsInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::NeedsInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NeedsInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflaterManaged.SetInput
void System::IO::Compression::DeflaterManaged::SetInput(::ArrayW<uint8_t> inputBuffer, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::SetInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputBuffer, startIndex, count);
}
// Autogenerated method: System.IO.Compression.DeflaterManaged.GetDeflateOutput
int System::IO::Compression::DeflaterManaged::GetDeflateOutput(::ArrayW<uint8_t> outputBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::GetDeflateOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDeflateOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outputBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, outputBuffer);
}
// Autogenerated method: System.IO.Compression.DeflaterManaged.Finish
bool System::IO::Compression::DeflaterManaged::Finish(::ArrayW<uint8_t> outputBuffer, ByRef<int> bytesRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, outputBuffer, byref(bytesRead));
}
// Autogenerated method: System.IO.Compression.DeflaterManaged.UseCompressed
bool System::IO::Compression::DeflaterManaged::UseCompressed(double ratio) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::UseCompressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseCompressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ratio)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ratio);
}
// Autogenerated method: System.IO.Compression.DeflaterManaged.FlushInputWindows
void System::IO::Compression::DeflaterManaged::FlushInputWindows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::FlushInputWindows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushInputWindows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflaterManaged.WriteFinal
void System::IO::Compression::DeflaterManaged::WriteFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::WriteFinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflaterManaged.Dispose
void System::IO::Compression::DeflaterManaged::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::DeflaterManaged*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState
#include "System/IO/Compression/DeflaterManaged.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState NotStarted
::System::IO::Compression::DeflaterManaged::DeflaterState System::IO::Compression::DeflaterManaged::DeflaterState::_get_NotStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_get_NotStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::DeflaterManaged::DeflaterState>("System.IO.Compression", "DeflaterManaged/DeflaterState", "NotStarted"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState NotStarted
void System::IO::Compression::DeflaterManaged::DeflaterState::_set_NotStarted(::System::IO::Compression::DeflaterManaged::DeflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_set_NotStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "DeflaterManaged/DeflaterState", "NotStarted", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState SlowDownForIncompressible1
::System::IO::Compression::DeflaterManaged::DeflaterState System::IO::Compression::DeflaterManaged::DeflaterState::_get_SlowDownForIncompressible1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_get_SlowDownForIncompressible1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::DeflaterManaged::DeflaterState>("System.IO.Compression", "DeflaterManaged/DeflaterState", "SlowDownForIncompressible1"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState SlowDownForIncompressible1
void System::IO::Compression::DeflaterManaged::DeflaterState::_set_SlowDownForIncompressible1(::System::IO::Compression::DeflaterManaged::DeflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_set_SlowDownForIncompressible1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "DeflaterManaged/DeflaterState", "SlowDownForIncompressible1", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState SlowDownForIncompressible2
::System::IO::Compression::DeflaterManaged::DeflaterState System::IO::Compression::DeflaterManaged::DeflaterState::_get_SlowDownForIncompressible2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_get_SlowDownForIncompressible2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::DeflaterManaged::DeflaterState>("System.IO.Compression", "DeflaterManaged/DeflaterState", "SlowDownForIncompressible2"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState SlowDownForIncompressible2
void System::IO::Compression::DeflaterManaged::DeflaterState::_set_SlowDownForIncompressible2(::System::IO::Compression::DeflaterManaged::DeflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_set_SlowDownForIncompressible2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "DeflaterManaged/DeflaterState", "SlowDownForIncompressible2", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState StartingSmallData
::System::IO::Compression::DeflaterManaged::DeflaterState System::IO::Compression::DeflaterManaged::DeflaterState::_get_StartingSmallData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_get_StartingSmallData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::DeflaterManaged::DeflaterState>("System.IO.Compression", "DeflaterManaged/DeflaterState", "StartingSmallData"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState StartingSmallData
void System::IO::Compression::DeflaterManaged::DeflaterState::_set_StartingSmallData(::System::IO::Compression::DeflaterManaged::DeflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_set_StartingSmallData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "DeflaterManaged/DeflaterState", "StartingSmallData", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState CompressThenCheck
::System::IO::Compression::DeflaterManaged::DeflaterState System::IO::Compression::DeflaterManaged::DeflaterState::_get_CompressThenCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_get_CompressThenCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::DeflaterManaged::DeflaterState>("System.IO.Compression", "DeflaterManaged/DeflaterState", "CompressThenCheck"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState CompressThenCheck
void System::IO::Compression::DeflaterManaged::DeflaterState::_set_CompressThenCheck(::System::IO::Compression::DeflaterManaged::DeflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_set_CompressThenCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "DeflaterManaged/DeflaterState", "CompressThenCheck", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState CheckingForIncompressible
::System::IO::Compression::DeflaterManaged::DeflaterState System::IO::Compression::DeflaterManaged::DeflaterState::_get_CheckingForIncompressible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_get_CheckingForIncompressible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::DeflaterManaged::DeflaterState>("System.IO.Compression", "DeflaterManaged/DeflaterState", "CheckingForIncompressible"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState CheckingForIncompressible
void System::IO::Compression::DeflaterManaged::DeflaterState::_set_CheckingForIncompressible(::System::IO::Compression::DeflaterManaged::DeflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_set_CheckingForIncompressible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "DeflaterManaged/DeflaterState", "CheckingForIncompressible", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState HandlingSmallData
::System::IO::Compression::DeflaterManaged::DeflaterState System::IO::Compression::DeflaterManaged::DeflaterState::_get_HandlingSmallData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_get_HandlingSmallData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::DeflaterManaged::DeflaterState>("System.IO.Compression", "DeflaterManaged/DeflaterState", "HandlingSmallData"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.DeflaterManaged/System.IO.Compression.DeflaterState HandlingSmallData
void System::IO::Compression::DeflaterManaged::DeflaterState::_set_HandlingSmallData(::System::IO::Compression::DeflaterManaged::DeflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::_set_HandlingSmallData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "DeflaterManaged/DeflaterState", "HandlingSmallData", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::Compression::DeflaterManaged::DeflaterState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflaterManaged::DeflaterState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.FastEncoder
#include "System/IO/Compression/FastEncoder.hpp"
// Including type: System.IO.Compression.FastEncoderWindow
#include "System/IO/Compression/FastEncoderWindow.hpp"
// Including type: System.IO.Compression.Match
#include "System/IO/Compression/Match.hpp"
// Including type: System.IO.Compression.DeflateInput
#include "System/IO/Compression/DeflateInput.hpp"
// Including type: System.IO.Compression.OutputBuffer
#include "System/IO/Compression/OutputBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.FastEncoderWindow _inputWindow
[[deprecated("Use field access instead!")]] ::System::IO::Compression::FastEncoderWindow*& System::IO::Compression::FastEncoder::dyn__inputWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::dyn__inputWindow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inputWindow"))->offset;
  return *reinterpret_cast<::System::IO::Compression::FastEncoderWindow**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.Match _currentMatch
[[deprecated("Use field access instead!")]] ::System::IO::Compression::Match*& System::IO::Compression::FastEncoder::dyn__currentMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::dyn__currentMatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentMatch"))->offset;
  return *reinterpret_cast<::System::IO::Compression::Match**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _lastCompressionRatio
[[deprecated("Use field access instead!")]] double& System::IO::Compression::FastEncoder::dyn__lastCompressionRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::dyn__lastCompressionRatio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastCompressionRatio"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.FastEncoder.get_BytesInHistory
int System::IO::Compression::FastEncoder::get_BytesInHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::get_BytesInHistory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BytesInHistory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoder.get_UnprocessedInput
::System::IO::Compression::DeflateInput* System::IO::Compression::FastEncoder::get_UnprocessedInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::get_UnprocessedInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnprocessedInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::DeflateInput*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoder.get_LastCompressionRatio
double System::IO::Compression::FastEncoder::get_LastCompressionRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::get_LastCompressionRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastCompressionRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoder.FlushInput
void System::IO::Compression::FastEncoder::FlushInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::FlushInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoder.GetBlock
void System::IO::Compression::FastEncoder::GetBlock(::System::IO::Compression::DeflateInput* input, ::System::IO::Compression::OutputBuffer* output, int maxBytesToCopy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::GetBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(maxBytesToCopy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output, maxBytesToCopy);
}
// Autogenerated method: System.IO.Compression.FastEncoder.GetCompressedData
void System::IO::Compression::FastEncoder::GetCompressedData(::System::IO::Compression::DeflateInput* input, ::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::GetCompressedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCompressedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: System.IO.Compression.FastEncoder.GetBlockHeader
void System::IO::Compression::FastEncoder::GetBlockHeader(::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::GetBlockHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: System.IO.Compression.FastEncoder.GetBlockFooter
void System::IO::Compression::FastEncoder::GetBlockFooter(::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::GetBlockFooter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlockFooter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: System.IO.Compression.FastEncoder.GetCompressedOutput
void System::IO::Compression::FastEncoder::GetCompressedOutput(::System::IO::Compression::DeflateInput* input, ::System::IO::Compression::OutputBuffer* output, int maxBytesToCopy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::GetCompressedOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCompressedOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(maxBytesToCopy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output, maxBytesToCopy);
}
// Autogenerated method: System.IO.Compression.FastEncoder.GetCompressedOutput
void System::IO::Compression::FastEncoder::GetCompressedOutput(::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::GetCompressedOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCompressedOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: System.IO.Compression.FastEncoder.InputAvailable
bool System::IO::Compression::FastEncoder::InputAvailable(::System::IO::Compression::DeflateInput* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::InputAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InputAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.IO.Compression.FastEncoder.SafeToWriteTo
bool System::IO::Compression::FastEncoder::SafeToWriteTo(::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::SafeToWriteTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeToWriteTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, output);
}
// Autogenerated method: System.IO.Compression.FastEncoder.WriteEndOfBlock
void System::IO::Compression::FastEncoder::WriteEndOfBlock(::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::WriteEndOfBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndOfBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: System.IO.Compression.FastEncoder.WriteMatch
void System::IO::Compression::FastEncoder::WriteMatch(int matchLen, int matchPos, ::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::WriteMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "FastEncoder", "WriteMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matchLen), ::il2cpp_utils::ExtractType(matchPos), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matchLen, matchPos, output);
}
// Autogenerated method: System.IO.Compression.FastEncoder.WriteChar
void System::IO::Compression::FastEncoder::WriteChar(uint8_t b, ::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::WriteChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "FastEncoder", "WriteChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b, output);
}
// Autogenerated method: System.IO.Compression.FastEncoder.WriteDeflatePreamble
void System::IO::Compression::FastEncoder::WriteDeflatePreamble(::System::IO::Compression::OutputBuffer* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoder::WriteDeflatePreamble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "FastEncoder", "WriteDeflatePreamble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, output);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.FastEncoderStatics
#include "System/IO/Compression/FastEncoderStatics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Byte[] FastEncoderTreeStructureData
::ArrayW<uint8_t> System::IO::Compression::FastEncoderStatics::_get_FastEncoderTreeStructureData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_get_FastEncoderTreeStructureData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.IO.Compression", "FastEncoderStatics", "FastEncoderTreeStructureData"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Byte[] FastEncoderTreeStructureData
void System::IO::Compression::FastEncoderStatics::_set_FastEncoderTreeStructureData(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_set_FastEncoderTreeStructureData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "FastEncoderStatics", "FastEncoderTreeStructureData", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Byte[] BFinalFastEncoderTreeStructureData
::ArrayW<uint8_t> System::IO::Compression::FastEncoderStatics::_get_BFinalFastEncoderTreeStructureData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_get_BFinalFastEncoderTreeStructureData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.IO.Compression", "FastEncoderStatics", "BFinalFastEncoderTreeStructureData"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Byte[] BFinalFastEncoderTreeStructureData
void System::IO::Compression::FastEncoderStatics::_set_BFinalFastEncoderTreeStructureData(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_set_BFinalFastEncoderTreeStructureData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "FastEncoderStatics", "BFinalFastEncoderTreeStructureData", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.UInt32[] FastEncoderLiteralCodeInfo
::ArrayW<uint> System::IO::Compression::FastEncoderStatics::_get_FastEncoderLiteralCodeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_get_FastEncoderLiteralCodeInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "FastEncoderStatics", "FastEncoderLiteralCodeInfo"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt32[] FastEncoderLiteralCodeInfo
void System::IO::Compression::FastEncoderStatics::_set_FastEncoderLiteralCodeInfo(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_set_FastEncoderLiteralCodeInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "FastEncoderStatics", "FastEncoderLiteralCodeInfo", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.UInt32[] FastEncoderDistanceCodeInfo
::ArrayW<uint> System::IO::Compression::FastEncoderStatics::_get_FastEncoderDistanceCodeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_get_FastEncoderDistanceCodeInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "FastEncoderStatics", "FastEncoderDistanceCodeInfo"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt32[] FastEncoderDistanceCodeInfo
void System::IO::Compression::FastEncoderStatics::_set_FastEncoderDistanceCodeInfo(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_set_FastEncoderDistanceCodeInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "FastEncoderStatics", "FastEncoderDistanceCodeInfo", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.UInt32[] BitMask
::ArrayW<uint> System::IO::Compression::FastEncoderStatics::_get_BitMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_get_BitMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "FastEncoderStatics", "BitMask"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt32[] BitMask
void System::IO::Compression::FastEncoderStatics::_set_BitMask(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_set_BitMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "FastEncoderStatics", "BitMask", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Byte[] ExtraLengthBits
::ArrayW<uint8_t> System::IO::Compression::FastEncoderStatics::_get_ExtraLengthBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_get_ExtraLengthBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.IO.Compression", "FastEncoderStatics", "ExtraLengthBits"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Byte[] ExtraLengthBits
void System::IO::Compression::FastEncoderStatics::_set_ExtraLengthBits(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_set_ExtraLengthBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "FastEncoderStatics", "ExtraLengthBits", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Byte[] ExtraDistanceBits
::ArrayW<uint8_t> System::IO::Compression::FastEncoderStatics::_get_ExtraDistanceBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_get_ExtraDistanceBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.IO.Compression", "FastEncoderStatics", "ExtraDistanceBits"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Byte[] ExtraDistanceBits
void System::IO::Compression::FastEncoderStatics::_set_ExtraDistanceBits(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_set_ExtraDistanceBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "FastEncoderStatics", "ExtraDistanceBits", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] s_distLookup
::ArrayW<uint8_t> System::IO::Compression::FastEncoderStatics::_get_s_distLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_get_s_distLookup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.IO.Compression", "FastEncoderStatics", "s_distLookup"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] s_distLookup
void System::IO::Compression::FastEncoderStatics::_set_s_distLookup(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::_set_s_distLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "FastEncoderStatics", "s_distLookup", value));
}
// Autogenerated method: System.IO.Compression.FastEncoderStatics..cctor
void System::IO::Compression::FastEncoderStatics::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "FastEncoderStatics", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoderStatics.CreateDistanceLookup
::ArrayW<uint8_t> System::IO::Compression::FastEncoderStatics::CreateDistanceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::CreateDistanceLookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "FastEncoderStatics", "CreateDistanceLookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoderStatics.GetSlot
int System::IO::Compression::FastEncoderStatics::GetSlot(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::GetSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "FastEncoderStatics", "GetSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pos);
}
// Autogenerated method: System.IO.Compression.FastEncoderStatics.BitReverse
uint System::IO::Compression::FastEncoderStatics::BitReverse(uint code, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderStatics::BitReverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "FastEncoderStatics", "BitReverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.FastEncoderWindow
#include "System/IO/Compression/FastEncoderWindow.hpp"
// Including type: System.IO.Compression.DeflateInput
#include "System/IO/Compression/DeflateInput.hpp"
// Including type: System.IO.Compression.Match
#include "System/IO/Compression/Match.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _window
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::FastEncoderWindow::dyn__window() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::dyn__window");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_window"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bufPos
[[deprecated("Use field access instead!")]] int& System::IO::Compression::FastEncoderWindow::dyn__bufPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::dyn__bufPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bufEnd
[[deprecated("Use field access instead!")]] int& System::IO::Compression::FastEncoderWindow::dyn__bufEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::dyn__bufEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bufEnd"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16[] _prev
[[deprecated("Use field access instead!")]] ::ArrayW<uint16_t>& System::IO::Compression::FastEncoderWindow::dyn__prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::dyn__prev");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prev"))->offset;
  return *reinterpret_cast<::ArrayW<uint16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16[] _lookup
[[deprecated("Use field access instead!")]] ::ArrayW<uint16_t>& System::IO::Compression::FastEncoderWindow::dyn__lookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::dyn__lookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lookup"))->offset;
  return *reinterpret_cast<::ArrayW<uint16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.get_BytesAvailable
int System::IO::Compression::FastEncoderWindow::get_BytesAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::get_BytesAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BytesAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.get_UnprocessedInput
::System::IO::Compression::DeflateInput* System::IO::Compression::FastEncoderWindow::get_UnprocessedInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::get_UnprocessedInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnprocessedInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::DeflateInput*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.get_FreeWindowSpace
int System::IO::Compression::FastEncoderWindow::get_FreeWindowSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::get_FreeWindowSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FreeWindowSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.FlushWindow
void System::IO::Compression::FastEncoderWindow::FlushWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::FlushWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.ResetWindow
void System::IO::Compression::FastEncoderWindow::ResetWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::ResetWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.CopyBytes
void System::IO::Compression::FastEncoderWindow::CopyBytes(::ArrayW<uint8_t> inputBuffer, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::CopyBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputBuffer, startIndex, count);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.MoveWindows
void System::IO::Compression::FastEncoderWindow::MoveWindows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::MoveWindows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveWindows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.HashValue
uint System::IO::Compression::FastEncoderWindow::HashValue(uint hash, uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::HashValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, hash, b);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.InsertString
uint System::IO::Compression::FastEncoderWindow::InsertString(ByRef<uint> hash) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::InsertString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(hash));
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.InsertStrings
void System::IO::Compression::FastEncoderWindow::InsertStrings(ByRef<uint> hash, int matchLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::InsertStrings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertStrings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(matchLen)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(hash), matchLen);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.GetNextSymbolOrMatch
bool System::IO::Compression::FastEncoderWindow::GetNextSymbolOrMatch(::System::IO::Compression::Match* match) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::GetNextSymbolOrMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextSymbolOrMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(match)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, match);
}
// Autogenerated method: System.IO.Compression.FastEncoderWindow.FindMatch
int System::IO::Compression::FastEncoderWindow::FindMatch(int search, ByRef<int> matchPos, int searchDepth, int niceLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::FastEncoderWindow::FindMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(search), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(searchDepth), ::il2cpp_utils::ExtractType(niceLength)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, search, byref(matchPos), searchDepth, niceLength);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.IFileFormatWriter
#include "System/IO/Compression/IFileFormatWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.IFileFormatWriter.GetHeader
::ArrayW<uint8_t> System::IO::Compression::IFileFormatWriter::GetHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::IFileFormatWriter::GetHeader");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::IFileFormatWriter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.IFileFormatWriter.UpdateWithBytesRead
void System::IO::Compression::IFileFormatWriter::UpdateWithBytesRead(::ArrayW<uint8_t> buffer, int offset, int bytesToCopy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::IFileFormatWriter::UpdateWithBytesRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::IFileFormatWriter*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, bytesToCopy);
}
// Autogenerated method: System.IO.Compression.IFileFormatWriter.GetFooter
::ArrayW<uint8_t> System::IO::Compression::IFileFormatWriter::GetFooter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::IFileFormatWriter::GetFooter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::IFileFormatWriter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.IFileFormatReader
#include "System/IO/Compression/IFileFormatReader.hpp"
// Including type: System.IO.Compression.InputBuffer
#include "System/IO/Compression/InputBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.IFileFormatReader.ReadHeader
bool System::IO::Compression::IFileFormatReader::ReadHeader(::System::IO::Compression::InputBuffer* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::IFileFormatReader::ReadHeader");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::IFileFormatReader*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.IO.Compression.IFileFormatReader.ReadFooter
bool System::IO::Compression::IFileFormatReader::ReadFooter(::System::IO::Compression::InputBuffer* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::IFileFormatReader::ReadFooter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::IFileFormatReader*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.IO.Compression.IFileFormatReader.UpdateWithBytesRead
void System::IO::Compression::IFileFormatReader::UpdateWithBytesRead(::ArrayW<uint8_t> buffer, int offset, int bytesToCopy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::IFileFormatReader::UpdateWithBytesRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::IFileFormatReader*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, bytesToCopy);
}
// Autogenerated method: System.IO.Compression.IFileFormatReader.Validate
void System::IO::Compression::IFileFormatReader::Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::IFileFormatReader::Validate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::IFileFormatReader*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.HuffmanTree
#include "System/IO/Compression/HuffmanTree.hpp"
// Including type: System.IO.Compression.InputBuffer
#include "System/IO/Compression/InputBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.IO.Compression.HuffmanTree <StaticLiteralLengthTree>k__BackingField
::System::IO::Compression::HuffmanTree* System::IO::Compression::HuffmanTree::_get_$StaticLiteralLengthTree$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::_get_$StaticLiteralLengthTree$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::IO::Compression::HuffmanTree*>("System.IO.Compression", "HuffmanTree", "<StaticLiteralLengthTree>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IO.Compression.HuffmanTree <StaticLiteralLengthTree>k__BackingField
void System::IO::Compression::HuffmanTree::_set_$StaticLiteralLengthTree$k__BackingField(::System::IO::Compression::HuffmanTree* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::_set_$StaticLiteralLengthTree$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "HuffmanTree", "<StaticLiteralLengthTree>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IO.Compression.HuffmanTree <StaticDistanceTree>k__BackingField
::System::IO::Compression::HuffmanTree* System::IO::Compression::HuffmanTree::_get_$StaticDistanceTree$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::_get_$StaticDistanceTree$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::IO::Compression::HuffmanTree*>("System.IO.Compression", "HuffmanTree", "<StaticDistanceTree>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IO.Compression.HuffmanTree <StaticDistanceTree>k__BackingField
void System::IO::Compression::HuffmanTree::_set_$StaticDistanceTree$k__BackingField(::System::IO::Compression::HuffmanTree* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::_set_$StaticDistanceTree$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "HuffmanTree", "<StaticDistanceTree>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _tableBits
[[deprecated("Use field access instead!")]] int& System::IO::Compression::HuffmanTree::dyn__tableBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::dyn__tableBits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableBits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int16[] _table
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& System::IO::Compression::HuffmanTree::dyn__table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::dyn__table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_table"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int16[] _left
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& System::IO::Compression::HuffmanTree::dyn__left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::dyn__left");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_left"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int16[] _right
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& System::IO::Compression::HuffmanTree::dyn__right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::dyn__right");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_right"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _codeLengthArray
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::HuffmanTree::dyn__codeLengthArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::dyn__codeLengthArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codeLengthArray"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _tableMask
[[deprecated("Use field access instead!")]] int& System::IO::Compression::HuffmanTree::dyn__tableMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::dyn__tableMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableMask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.HuffmanTree.get_StaticLiteralLengthTree
::System::IO::Compression::HuffmanTree* System::IO::Compression::HuffmanTree::get_StaticLiteralLengthTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::get_StaticLiteralLengthTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "HuffmanTree", "get_StaticLiteralLengthTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::HuffmanTree*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.HuffmanTree.get_StaticDistanceTree
::System::IO::Compression::HuffmanTree* System::IO::Compression::HuffmanTree::get_StaticDistanceTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::get_StaticDistanceTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "HuffmanTree", "get_StaticDistanceTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::HuffmanTree*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.HuffmanTree..cctor
void System::IO::Compression::HuffmanTree::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "HuffmanTree", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.HuffmanTree.GetStaticLiteralTreeLength
::ArrayW<uint8_t> System::IO::Compression::HuffmanTree::GetStaticLiteralTreeLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::GetStaticLiteralTreeLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "HuffmanTree", "GetStaticLiteralTreeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.HuffmanTree.GetStaticDistanceTreeLength
::ArrayW<uint8_t> System::IO::Compression::HuffmanTree::GetStaticDistanceTreeLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::GetStaticDistanceTreeLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "HuffmanTree", "GetStaticDistanceTreeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.HuffmanTree.CalculateHuffmanCode
::ArrayW<uint> System::IO::Compression::HuffmanTree::CalculateHuffmanCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::CalculateHuffmanCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateHuffmanCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.HuffmanTree.CreateTable
void System::IO::Compression::HuffmanTree::CreateTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::CreateTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.HuffmanTree.GetNextSymbol
int System::IO::Compression::HuffmanTree::GetNextSymbol(::System::IO::Compression::InputBuffer* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::HuffmanTree::GetNextSymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextSymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.InflaterManaged
#include "System/IO/Compression/InflaterManaged.hpp"
// Including type: System.IO.Compression.OutputWindow
#include "System/IO/Compression/OutputWindow.hpp"
// Including type: System.IO.Compression.InputBuffer
#include "System/IO/Compression/InputBuffer.hpp"
// Including type: System.IO.Compression.HuffmanTree
#include "System/IO/Compression/HuffmanTree.hpp"
// Including type: System.IO.Compression.IFileFormatReader
#include "System/IO/Compression/IFileFormatReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] s_extraLengthBits
::ArrayW<uint8_t> System::IO::Compression::InflaterManaged::_get_s_extraLengthBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_get_s_extraLengthBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.IO.Compression", "InflaterManaged", "s_extraLengthBits"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] s_extraLengthBits
void System::IO::Compression::InflaterManaged::_set_s_extraLengthBits(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_set_s_extraLengthBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterManaged", "s_extraLengthBits", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] s_lengthBase
::ArrayW<int> System::IO::Compression::InflaterManaged::_get_s_lengthBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_get_s_lengthBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.IO.Compression", "InflaterManaged", "s_lengthBase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] s_lengthBase
void System::IO::Compression::InflaterManaged::_set_s_lengthBase(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_set_s_lengthBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterManaged", "s_lengthBase", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] s_distanceBasePosition
::ArrayW<int> System::IO::Compression::InflaterManaged::_get_s_distanceBasePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_get_s_distanceBasePosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.IO.Compression", "InflaterManaged", "s_distanceBasePosition"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] s_distanceBasePosition
void System::IO::Compression::InflaterManaged::_set_s_distanceBasePosition(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_set_s_distanceBasePosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterManaged", "s_distanceBasePosition", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] s_codeOrder
::ArrayW<uint8_t> System::IO::Compression::InflaterManaged::_get_s_codeOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_get_s_codeOrder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.IO.Compression", "InflaterManaged", "s_codeOrder"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] s_codeOrder
void System::IO::Compression::InflaterManaged::_set_s_codeOrder(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_set_s_codeOrder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterManaged", "s_codeOrder", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] s_staticDistanceTreeTable
::ArrayW<uint8_t> System::IO::Compression::InflaterManaged::_get_s_staticDistanceTreeTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_get_s_staticDistanceTreeTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.IO.Compression", "InflaterManaged", "s_staticDistanceTreeTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] s_staticDistanceTreeTable
void System::IO::Compression::InflaterManaged::_set_s_staticDistanceTreeTable(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::_set_s_staticDistanceTreeTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterManaged", "s_staticDistanceTreeTable", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.OutputWindow _output
[[deprecated("Use field access instead!")]] ::System::IO::Compression::OutputWindow*& System::IO::Compression::InflaterManaged::dyn__output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_output"))->offset;
  return *reinterpret_cast<::System::IO::Compression::OutputWindow**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.InputBuffer _input
[[deprecated("Use field access instead!")]] ::System::IO::Compression::InputBuffer*& System::IO::Compression::InflaterManaged::dyn__input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__input");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_input"))->offset;
  return *reinterpret_cast<::System::IO::Compression::InputBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.HuffmanTree _literalLengthTree
[[deprecated("Use field access instead!")]] ::System::IO::Compression::HuffmanTree*& System::IO::Compression::InflaterManaged::dyn__literalLengthTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__literalLengthTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_literalLengthTree"))->offset;
  return *reinterpret_cast<::System::IO::Compression::HuffmanTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.HuffmanTree _distanceTree
[[deprecated("Use field access instead!")]] ::System::IO::Compression::HuffmanTree*& System::IO::Compression::InflaterManaged::dyn__distanceTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__distanceTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distanceTree"))->offset;
  return *reinterpret_cast<::System::IO::Compression::HuffmanTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.InflaterState _state
[[deprecated("Use field access instead!")]] ::System::IO::Compression::InflaterState& System::IO::Compression::InflaterManaged::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::System::IO::Compression::InflaterState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasFormatReader
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::InflaterManaged::dyn__hasFormatReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__hasFormatReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasFormatReader"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bfinal
[[deprecated("Use field access instead!")]] int& System::IO::Compression::InflaterManaged::dyn__bfinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__bfinal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bfinal"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.BlockType _blockType
[[deprecated("Use field access instead!")]] ::System::IO::Compression::BlockType& System::IO::Compression::InflaterManaged::dyn__blockType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__blockType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blockType"))->offset;
  return *reinterpret_cast<::System::IO::Compression::BlockType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _blockLengthBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::InflaterManaged::dyn__blockLengthBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__blockLengthBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blockLengthBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _blockLength
[[deprecated("Use field access instead!")]] int& System::IO::Compression::InflaterManaged::dyn__blockLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__blockLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blockLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _length
[[deprecated("Use field access instead!")]] int& System::IO::Compression::InflaterManaged::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _distanceCode
[[deprecated("Use field access instead!")]] int& System::IO::Compression::InflaterManaged::dyn__distanceCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__distanceCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distanceCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _extraBits
[[deprecated("Use field access instead!")]] int& System::IO::Compression::InflaterManaged::dyn__extraBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__extraBits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_extraBits"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _loopCounter
[[deprecated("Use field access instead!")]] int& System::IO::Compression::InflaterManaged::dyn__loopCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__loopCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loopCounter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _literalLengthCodeCount
[[deprecated("Use field access instead!")]] int& System::IO::Compression::InflaterManaged::dyn__literalLengthCodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__literalLengthCodeCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_literalLengthCodeCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _distanceCodeCount
[[deprecated("Use field access instead!")]] int& System::IO::Compression::InflaterManaged::dyn__distanceCodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__distanceCodeCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distanceCodeCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _codeLengthCodeCount
[[deprecated("Use field access instead!")]] int& System::IO::Compression::InflaterManaged::dyn__codeLengthCodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__codeLengthCodeCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codeLengthCodeCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _codeArraySize
[[deprecated("Use field access instead!")]] int& System::IO::Compression::InflaterManaged::dyn__codeArraySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__codeArraySize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codeArraySize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lengthCode
[[deprecated("Use field access instead!")]] int& System::IO::Compression::InflaterManaged::dyn__lengthCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__lengthCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lengthCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _codeList
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::InflaterManaged::dyn__codeList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__codeList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codeList"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _codeLengthTreeCodeLength
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::InflaterManaged::dyn__codeLengthTreeCodeLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__codeLengthTreeCodeLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codeLengthTreeCodeLength"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _deflate64
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::InflaterManaged::dyn__deflate64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__deflate64");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deflate64"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.HuffmanTree _codeLengthTree
[[deprecated("Use field access instead!")]] ::System::IO::Compression::HuffmanTree*& System::IO::Compression::InflaterManaged::dyn__codeLengthTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__codeLengthTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codeLengthTree"))->offset;
  return *reinterpret_cast<::System::IO::Compression::HuffmanTree**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.IFileFormatReader _formatReader
[[deprecated("Use field access instead!")]] ::System::IO::Compression::IFileFormatReader*& System::IO::Compression::InflaterManaged::dyn__formatReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::dyn__formatReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_formatReader"))->offset;
  return *reinterpret_cast<::System::IO::Compression::IFileFormatReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.InflaterManaged..cctor
void System::IO::Compression::InflaterManaged::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "InflaterManaged", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.InflaterManaged.Reset
void System::IO::Compression::InflaterManaged::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.InflaterManaged.SetInput
void System::IO::Compression::InflaterManaged::SetInput(::ArrayW<uint8_t> inputBytes, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::SetInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBytes), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputBytes, offset, length);
}
// Autogenerated method: System.IO.Compression.InflaterManaged.Finished
bool System::IO::Compression::InflaterManaged::Finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::Finished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.InflaterManaged.Inflate
int System::IO::Compression::InflaterManaged::Inflate(::ArrayW<uint8_t> bytes, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::Inflate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Inflate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, offset, length);
}
// Autogenerated method: System.IO.Compression.InflaterManaged.Decode
bool System::IO::Compression::InflaterManaged::Decode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.InflaterManaged.DecodeUncompressedBlock
bool System::IO::Compression::InflaterManaged::DecodeUncompressedBlock(ByRef<bool> end_of_block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::DecodeUncompressedBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeUncompressedBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(end_of_block));
}
// Autogenerated method: System.IO.Compression.InflaterManaged.DecodeBlock
bool System::IO::Compression::InflaterManaged::DecodeBlock(ByRef<bool> end_of_block_code_seen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::DecodeBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(end_of_block_code_seen));
}
// Autogenerated method: System.IO.Compression.InflaterManaged.DecodeDynamicBlockHeader
bool System::IO::Compression::InflaterManaged::DecodeDynamicBlockHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::DecodeDynamicBlockHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeDynamicBlockHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.InflaterManaged.Dispose
void System::IO::Compression::InflaterManaged::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterManaged::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.InflaterState
#include "System/IO/Compression/InflaterState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingHeader
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingHeader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingHeader"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingHeader
void System::IO::Compression::InflaterState::_set_ReadingHeader(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingHeader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingHeader", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingBFinal
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingBFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingBFinal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingBFinal"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingBFinal
void System::IO::Compression::InflaterState::_set_ReadingBFinal(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingBFinal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingBFinal", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingBType
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingBType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingBType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingBType"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingBType
void System::IO::Compression::InflaterState::_set_ReadingBType(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingBType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingBType", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingNumLitCodes
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingNumLitCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingNumLitCodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingNumLitCodes"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingNumLitCodes
void System::IO::Compression::InflaterState::_set_ReadingNumLitCodes(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingNumLitCodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingNumLitCodes", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingNumDistCodes
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingNumDistCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingNumDistCodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingNumDistCodes"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingNumDistCodes
void System::IO::Compression::InflaterState::_set_ReadingNumDistCodes(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingNumDistCodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingNumDistCodes", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingNumCodeLengthCodes
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingNumCodeLengthCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingNumCodeLengthCodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingNumCodeLengthCodes"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingNumCodeLengthCodes
void System::IO::Compression::InflaterState::_set_ReadingNumCodeLengthCodes(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingNumCodeLengthCodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingNumCodeLengthCodes", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingCodeLengthCodes
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingCodeLengthCodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingCodeLengthCodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingCodeLengthCodes"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingCodeLengthCodes
void System::IO::Compression::InflaterState::_set_ReadingCodeLengthCodes(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingCodeLengthCodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingCodeLengthCodes", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingTreeCodesBefore
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingTreeCodesBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingTreeCodesBefore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingTreeCodesBefore"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingTreeCodesBefore
void System::IO::Compression::InflaterState::_set_ReadingTreeCodesBefore(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingTreeCodesBefore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingTreeCodesBefore", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingTreeCodesAfter
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingTreeCodesAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingTreeCodesAfter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingTreeCodesAfter"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingTreeCodesAfter
void System::IO::Compression::InflaterState::_set_ReadingTreeCodesAfter(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingTreeCodesAfter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingTreeCodesAfter", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState DecodeTop
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_DecodeTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_DecodeTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "DecodeTop"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState DecodeTop
void System::IO::Compression::InflaterState::_set_DecodeTop(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_DecodeTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "DecodeTop", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState HaveInitialLength
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_HaveInitialLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_HaveInitialLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "HaveInitialLength"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState HaveInitialLength
void System::IO::Compression::InflaterState::_set_HaveInitialLength(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_HaveInitialLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "HaveInitialLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState HaveFullLength
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_HaveFullLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_HaveFullLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "HaveFullLength"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState HaveFullLength
void System::IO::Compression::InflaterState::_set_HaveFullLength(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_HaveFullLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "HaveFullLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState HaveDistCode
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_HaveDistCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_HaveDistCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "HaveDistCode"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState HaveDistCode
void System::IO::Compression::InflaterState::_set_HaveDistCode(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_HaveDistCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "HaveDistCode", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState UncompressedAligning
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_UncompressedAligning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_UncompressedAligning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "UncompressedAligning"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState UncompressedAligning
void System::IO::Compression::InflaterState::_set_UncompressedAligning(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_UncompressedAligning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "UncompressedAligning", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState UncompressedByte1
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_UncompressedByte1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_UncompressedByte1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "UncompressedByte1"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState UncompressedByte1
void System::IO::Compression::InflaterState::_set_UncompressedByte1(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_UncompressedByte1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "UncompressedByte1", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState UncompressedByte2
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_UncompressedByte2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_UncompressedByte2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "UncompressedByte2"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState UncompressedByte2
void System::IO::Compression::InflaterState::_set_UncompressedByte2(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_UncompressedByte2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "UncompressedByte2", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState UncompressedByte3
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_UncompressedByte3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_UncompressedByte3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "UncompressedByte3"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState UncompressedByte3
void System::IO::Compression::InflaterState::_set_UncompressedByte3(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_UncompressedByte3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "UncompressedByte3", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState UncompressedByte4
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_UncompressedByte4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_UncompressedByte4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "UncompressedByte4"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState UncompressedByte4
void System::IO::Compression::InflaterState::_set_UncompressedByte4(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_UncompressedByte4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "UncompressedByte4", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState DecodingUncompressed
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_DecodingUncompressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_DecodingUncompressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "DecodingUncompressed"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState DecodingUncompressed
void System::IO::Compression::InflaterState::_set_DecodingUncompressed(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_DecodingUncompressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "DecodingUncompressed", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState StartReadingFooter
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_StartReadingFooter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_StartReadingFooter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "StartReadingFooter"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState StartReadingFooter
void System::IO::Compression::InflaterState::_set_StartReadingFooter(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_StartReadingFooter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "StartReadingFooter", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState ReadingFooter
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_ReadingFooter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_ReadingFooter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "ReadingFooter"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState ReadingFooter
void System::IO::Compression::InflaterState::_set_ReadingFooter(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_ReadingFooter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "ReadingFooter", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState VerifyingFooter
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_VerifyingFooter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_VerifyingFooter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "VerifyingFooter"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState VerifyingFooter
void System::IO::Compression::InflaterState::_set_VerifyingFooter(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_VerifyingFooter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "VerifyingFooter", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.InflaterState Done
::System::IO::Compression::InflaterState System::IO::Compression::InflaterState::_get_Done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_get_Done");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::InflaterState>("System.IO.Compression", "InflaterState", "Done"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.InflaterState Done
void System::IO::Compression::InflaterState::_set_Done(::System::IO::Compression::InflaterState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::_set_Done");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "InflaterState", "Done", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::Compression::InflaterState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InflaterState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.InputBuffer
#include "System/IO/Compression/InputBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::InputBuffer::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _start
[[deprecated("Use field access instead!")]] int& System::IO::Compression::InputBuffer::dyn__start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::dyn__start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _end
[[deprecated("Use field access instead!")]] int& System::IO::Compression::InputBuffer::dyn__end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::dyn__end");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_end"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _bitBuffer
[[deprecated("Use field access instead!")]] uint& System::IO::Compression::InputBuffer::dyn__bitBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::dyn__bitBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bitBuffer"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bitsInBuffer
[[deprecated("Use field access instead!")]] int& System::IO::Compression::InputBuffer::dyn__bitsInBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::dyn__bitsInBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bitsInBuffer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.InputBuffer.get_AvailableBits
int System::IO::Compression::InputBuffer::get_AvailableBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::get_AvailableBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AvailableBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.InputBuffer.get_AvailableBytes
int System::IO::Compression::InputBuffer::get_AvailableBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::get_AvailableBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AvailableBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.InputBuffer.EnsureBitsAvailable
bool System::IO::Compression::InputBuffer::EnsureBitsAvailable(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::EnsureBitsAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureBitsAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, count);
}
// Autogenerated method: System.IO.Compression.InputBuffer.TryLoad16Bits
uint System::IO::Compression::InputBuffer::TryLoad16Bits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::TryLoad16Bits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryLoad16Bits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.InputBuffer.GetBitMask
uint System::IO::Compression::InputBuffer::GetBitMask(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::GetBitMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBitMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, count);
}
// Autogenerated method: System.IO.Compression.InputBuffer.GetBits
int System::IO::Compression::InputBuffer::GetBits(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::GetBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, count);
}
// Autogenerated method: System.IO.Compression.InputBuffer.CopyTo
int System::IO::Compression::InputBuffer::CopyTo(::ArrayW<uint8_t> output, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, output, offset, length);
}
// Autogenerated method: System.IO.Compression.InputBuffer.NeedsInput
bool System::IO::Compression::InputBuffer::NeedsInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::NeedsInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NeedsInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.InputBuffer.SetInput
void System::IO::Compression::InputBuffer::SetInput(::ArrayW<uint8_t> buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::SetInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, length);
}
// Autogenerated method: System.IO.Compression.InputBuffer.SkipBits
void System::IO::Compression::InputBuffer::SkipBits(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::SkipBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n);
}
// Autogenerated method: System.IO.Compression.InputBuffer.SkipToByteBoundary
void System::IO::Compression::InputBuffer::SkipToByteBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::InputBuffer::SkipToByteBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipToByteBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.Match
#include "System/IO/Compression/Match.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.MatchState <State>k__BackingField
[[deprecated("Use field access instead!")]] ::System::IO::Compression::MatchState& System::IO::Compression::Match::dyn_$State$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::dyn_$State$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<State>k__BackingField"))->offset;
  return *reinterpret_cast<::System::IO::Compression::MatchState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Position>k__BackingField
[[deprecated("Use field access instead!")]] int& System::IO::Compression::Match::dyn_$Position$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::dyn_$Position$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Position>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Length>k__BackingField
[[deprecated("Use field access instead!")]] int& System::IO::Compression::Match::dyn_$Length$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::dyn_$Length$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Length>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte <Symbol>k__BackingField
[[deprecated("Use field access instead!")]] uint8_t& System::IO::Compression::Match::dyn_$Symbol$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::dyn_$Symbol$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Symbol>k__BackingField"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.Match.get_State
::System::IO::Compression::MatchState System::IO::Compression::Match::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::MatchState, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Match.set_State
void System::IO::Compression::Match::set_State(::System::IO::Compression::MatchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.Match.get_Position
int System::IO::Compression::Match::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Match.set_Position
void System::IO::Compression::Match::set_Position(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::set_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.Match.get_Length
int System::IO::Compression::Match::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Match.set_Length
void System::IO::Compression::Match::set_Length(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::set_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.Match.get_Symbol
uint8_t System::IO::Compression::Match::get_Symbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::get_Symbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Symbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Match.set_Symbol
void System::IO::Compression::Match::set_Symbol(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Match::set_Symbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Symbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.MatchState
#include "System/IO/Compression/MatchState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.MatchState HasSymbol
::System::IO::Compression::MatchState System::IO::Compression::MatchState::_get_HasSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::MatchState::_get_HasSymbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::MatchState>("System.IO.Compression", "MatchState", "HasSymbol"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.MatchState HasSymbol
void System::IO::Compression::MatchState::_set_HasSymbol(::System::IO::Compression::MatchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::MatchState::_set_HasSymbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "MatchState", "HasSymbol", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.MatchState HasMatch
::System::IO::Compression::MatchState System::IO::Compression::MatchState::_get_HasMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::MatchState::_get_HasMatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::MatchState>("System.IO.Compression", "MatchState", "HasMatch"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.MatchState HasMatch
void System::IO::Compression::MatchState::_set_HasMatch(::System::IO::Compression::MatchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::MatchState::_set_HasMatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "MatchState", "HasMatch", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.MatchState HasSymbolAndMatch
::System::IO::Compression::MatchState System::IO::Compression::MatchState::_get_HasSymbolAndMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::MatchState::_get_HasSymbolAndMatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::MatchState>("System.IO.Compression", "MatchState", "HasSymbolAndMatch"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.MatchState HasSymbolAndMatch
void System::IO::Compression::MatchState::_set_HasSymbolAndMatch(::System::IO::Compression::MatchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::MatchState::_set_HasSymbolAndMatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "MatchState", "HasSymbolAndMatch", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::Compression::MatchState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::MatchState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.OutputBuffer
#include "System/IO/Compression/OutputBuffer.hpp"
// Including type: System.IO.Compression.OutputBuffer/System.IO.Compression.BufferState
#include "System/IO/Compression/OutputBuffer_BufferState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _byteBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::OutputBuffer::dyn__byteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::dyn__byteBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_byteBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pos
[[deprecated("Use field access instead!")]] int& System::IO::Compression::OutputBuffer::dyn__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::dyn__pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _bitBuf
[[deprecated("Use field access instead!")]] uint& System::IO::Compression::OutputBuffer::dyn__bitBuf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::dyn__bitBuf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bitBuf"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bitCount
[[deprecated("Use field access instead!")]] int& System::IO::Compression::OutputBuffer::dyn__bitCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::dyn__bitCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bitCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.get_BytesWritten
int System::IO::Compression::OutputBuffer::get_BytesWritten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::get_BytesWritten");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BytesWritten", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.get_FreeBytes
int System::IO::Compression::OutputBuffer::get_FreeBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::get_FreeBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FreeBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.get_BitsInBuffer
int System::IO::Compression::OutputBuffer::get_BitsInBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::get_BitsInBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BitsInBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.UpdateBuffer
void System::IO::Compression::OutputBuffer::UpdateBuffer(::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::UpdateBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.WriteUInt16
void System::IO::Compression::OutputBuffer::WriteUInt16(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::WriteUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.WriteBits
void System::IO::Compression::OutputBuffer::WriteBits(int n, uint bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::WriteBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(bits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n, bits);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.FlushBits
void System::IO::Compression::OutputBuffer::FlushBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::FlushBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.WriteBytes
void System::IO::Compression::OutputBuffer::WriteBytes(::ArrayW<uint8_t> byteArray, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::WriteBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteArray), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byteArray, offset, count);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.WriteBytesUnaligned
void System::IO::Compression::OutputBuffer::WriteBytesUnaligned(::ArrayW<uint8_t> byteArray, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::WriteBytesUnaligned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBytesUnaligned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteArray), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byteArray, offset, count);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.WriteByteUnaligned
void System::IO::Compression::OutputBuffer::WriteByteUnaligned(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::WriteByteUnaligned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByteUnaligned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, b);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.DumpState
::System::IO::Compression::OutputBuffer::BufferState System::IO::Compression::OutputBuffer::DumpState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::DumpState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DumpState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::OutputBuffer::BufferState, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.OutputBuffer.RestoreState
void System::IO::Compression::OutputBuffer::RestoreState(::System::IO::Compression::OutputBuffer::BufferState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::RestoreState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestoreState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.OutputBuffer/System.IO.Compression.BufferState
#include "System/IO/Compression/OutputBuffer_BufferState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _pos
[[deprecated("Use field access instead!")]] int& System::IO::Compression::OutputBuffer::BufferState::dyn__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::BufferState::dyn__pos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.UInt32 _bitBuf
[[deprecated("Use field access instead!")]] uint& System::IO::Compression::OutputBuffer::BufferState::dyn__bitBuf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::BufferState::dyn__bitBuf");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bitBuf"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _bitCount
[[deprecated("Use field access instead!")]] int& System::IO::Compression::OutputBuffer::BufferState::dyn__bitCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputBuffer::BufferState::dyn__bitCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bitCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.OutputBuffer/System.IO.Compression.BufferState..ctor
// ABORTED elsewhere.  System::IO::Compression::OutputBuffer::BufferState::BufferState(int pos, uint bitBuf, int bitCount)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.OutputWindow
#include "System/IO/Compression/OutputWindow.hpp"
// Including type: System.IO.Compression.InputBuffer
#include "System/IO/Compression/InputBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _window
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::OutputWindow::dyn__window() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputWindow::dyn__window");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_window"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _end
[[deprecated("Use field access instead!")]] int& System::IO::Compression::OutputWindow::dyn__end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputWindow::dyn__end");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_end"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bytesUsed
[[deprecated("Use field access instead!")]] int& System::IO::Compression::OutputWindow::dyn__bytesUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputWindow::dyn__bytesUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bytesUsed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.OutputWindow.get_FreeBytes
int System::IO::Compression::OutputWindow::get_FreeBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputWindow::get_FreeBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FreeBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.OutputWindow.get_AvailableBytes
int System::IO::Compression::OutputWindow::get_AvailableBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputWindow::get_AvailableBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AvailableBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.OutputWindow.Write
void System::IO::Compression::OutputWindow::Write(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputWindow::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, b);
}
// Autogenerated method: System.IO.Compression.OutputWindow.WriteLengthDistance
void System::IO::Compression::OutputWindow::WriteLengthDistance(int length, int distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputWindow::WriteLengthDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLengthDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, length, distance);
}
// Autogenerated method: System.IO.Compression.OutputWindow.CopyFrom
int System::IO::Compression::OutputWindow::CopyFrom(::System::IO::Compression::InputBuffer* input, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputWindow::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, input, length);
}
// Autogenerated method: System.IO.Compression.OutputWindow.CopyTo
int System::IO::Compression::OutputWindow::CopyTo(::ArrayW<uint8_t> output, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::OutputWindow::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, output, offset, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper
#include "System/IO/Compression/PositionPreservingWriteOnlyStreamWrapper.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream _stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::dyn__stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::dyn__stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _position
[[deprecated("Use field access instead!")]] int64_t& System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.get_CanRead
bool System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.get_CanSeek
bool System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.get_CanWrite
bool System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.get_Position
int64_t System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.set_Position
void System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.get_ReadTimeout
int System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_ReadTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.set_ReadTimeout
void System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::set_ReadTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::set_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.get_WriteTimeout
int System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_WriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_WriteTimeout");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.get_Length
int64_t System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.Write
void System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.BeginWrite
::System::IAsyncResult* System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::BeginWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.EndWrite
void System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::EndWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.WriteByte
void System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::WriteByte");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.WriteAsync
::System::Threading::Tasks::Task* System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::WriteAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.Flush
void System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.FlushAsync
::System::Threading::Tasks::Task* System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::FlushAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::FlushAsync");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.Close
void System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.Dispose
void System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.Seek
int64_t System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.SetLength
void System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper.Read
int System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::PositionPreservingWriteOnlyStreamWrapper::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipArchive
#include "System/IO/Compression/ZipArchive.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.Compression.ZipArchiveEntry
#include "System/IO/Compression/ZipArchiveEntry.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _archiveStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::IO::Compression::ZipArchive::dyn__archiveStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__archiveStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_archiveStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipArchiveEntry _archiveStreamOwner
[[deprecated("Use field access instead!")]] ::System::IO::Compression::ZipArchiveEntry*& System::IO::Compression::ZipArchive::dyn__archiveStreamOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__archiveStreamOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_archiveStreamOwner"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchiveEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.BinaryReader _archiveReader
[[deprecated("Use field access instead!")]] ::System::IO::BinaryReader*& System::IO::Compression::ZipArchive::dyn__archiveReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__archiveReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_archiveReader"))->offset;
  return *reinterpret_cast<::System::IO::BinaryReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipArchiveMode _mode
[[deprecated("Use field access instead!")]] ::System::IO::Compression::ZipArchiveMode& System::IO::Compression::ZipArchive::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchiveMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.IO.Compression.ZipArchiveEntry> _entries
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::IO::Compression::ZipArchiveEntry*>*& System::IO::Compression::ZipArchive::dyn__entries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__entries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entries"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::IO::Compression::ZipArchiveEntry*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ObjectModel.ReadOnlyCollection`1<System.IO.Compression.ZipArchiveEntry> _entriesCollection
[[deprecated("Use field access instead!")]] ::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::IO::Compression::ZipArchiveEntry*>*& System::IO::Compression::ZipArchive::dyn__entriesCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__entriesCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entriesCollection"))->offset;
  return *reinterpret_cast<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::IO::Compression::ZipArchiveEntry*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.IO.Compression.ZipArchiveEntry> _entriesDictionary
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::IO::Compression::ZipArchiveEntry*>*& System::IO::Compression::ZipArchive::dyn__entriesDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__entriesDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entriesDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::IO::Compression::ZipArchiveEntry*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _readEntries
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::ZipArchive::dyn__readEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__readEntries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readEntries"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _leaveOpen
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::ZipArchive::dyn__leaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__leaveOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaveOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _centralDirectoryStart
[[deprecated("Use field access instead!")]] int64_t& System::IO::Compression::ZipArchive::dyn__centralDirectoryStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__centralDirectoryStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centralDirectoryStart"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDisposed
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::ZipArchive::dyn__isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__isDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _numberOfThisDisk
[[deprecated("Use field access instead!")]] uint& System::IO::Compression::ZipArchive::dyn__numberOfThisDisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__numberOfThisDisk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfThisDisk"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _expectedNumberOfEntries
[[deprecated("Use field access instead!")]] int64_t& System::IO::Compression::ZipArchive::dyn__expectedNumberOfEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__expectedNumberOfEntries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expectedNumberOfEntries"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _backingStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::IO::Compression::ZipArchive::dyn__backingStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__backingStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backingStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _archiveComment
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::ZipArchive::dyn__archiveComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__archiveComment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_archiveComment"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding _entryNameEncoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::IO::Compression::ZipArchive::dyn__entryNameEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::dyn__entryNameEncoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entryNameEncoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.ZipArchive.get_Entries
::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::IO::Compression::ZipArchiveEntry*>* System::IO::Compression::ZipArchive::get_Entries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::get_Entries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::IO::Compression::ZipArchiveEntry*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.get_Mode
::System::IO::Compression::ZipArchiveMode System::IO::Compression::ZipArchive::get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::get_Mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchiveMode, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.get_ArchiveReader
::System::IO::BinaryReader* System::IO::Compression::ZipArchive::get_ArchiveReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::get_ArchiveReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArchiveReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::BinaryReader*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.get_ArchiveStream
::System::IO::Stream* System::IO::Compression::ZipArchive::get_ArchiveStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::get_ArchiveStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArchiveStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.get_NumberOfThisDisk
uint System::IO::Compression::ZipArchive::get_NumberOfThisDisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::get_NumberOfThisDisk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumberOfThisDisk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.get_EntryNameEncoding
::System::Text::Encoding* System::IO::Compression::ZipArchive::get_EntryNameEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::get_EntryNameEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EntryNameEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.set_EntryNameEncoding
void System::IO::Compression::ZipArchive::set_EntryNameEncoding(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::set_EntryNameEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EntryNameEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchive.CreateEntry
::System::IO::Compression::ZipArchiveEntry* System::IO::Compression::ZipArchive::CreateEntry(::StringW entryName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::CreateEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entryName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchiveEntry*, false>(this, ___internal__method, entryName);
}
// Autogenerated method: System.IO.Compression.ZipArchive.CreateEntry
::System::IO::Compression::ZipArchiveEntry* System::IO::Compression::ZipArchive::CreateEntry(::StringW entryName, ::System::IO::Compression::CompressionLevel compressionLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::CreateEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entryName), ::il2cpp_utils::ExtractType(compressionLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchiveEntry*, false>(this, ___internal__method, entryName, compressionLevel);
}
// Autogenerated method: System.IO.Compression.ZipArchive.Dispose
void System::IO::Compression::ZipArchive::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::ZipArchive*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.Compression.ZipArchive.Dispose
void System::IO::Compression::ZipArchive::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Compression::ZipArchive*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.DoCreateEntry
::System::IO::Compression::ZipArchiveEntry* System::IO::Compression::ZipArchive::DoCreateEntry(::StringW entryName, ::System::Nullable_1<::System::IO::Compression::CompressionLevel> compressionLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::DoCreateEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoCreateEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entryName), ::il2cpp_utils::ExtractType(compressionLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchiveEntry*, false>(this, ___internal__method, entryName, compressionLevel);
}
// Autogenerated method: System.IO.Compression.ZipArchive.AcquireArchiveStream
void System::IO::Compression::ZipArchive::AcquireArchiveStream(::System::IO::Compression::ZipArchiveEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::AcquireArchiveStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcquireArchiveStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entry);
}
// Autogenerated method: System.IO.Compression.ZipArchive.AddEntry
void System::IO::Compression::ZipArchive::AddEntry(::System::IO::Compression::ZipArchiveEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::AddEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entry);
}
// Autogenerated method: System.IO.Compression.ZipArchive.ReleaseArchiveStream
void System::IO::Compression::ZipArchive::ReleaseArchiveStream(::System::IO::Compression::ZipArchiveEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::ReleaseArchiveStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseArchiveStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entry);
}
// Autogenerated method: System.IO.Compression.ZipArchive.RemoveEntry
void System::IO::Compression::ZipArchive::RemoveEntry(::System::IO::Compression::ZipArchiveEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::RemoveEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, entry);
}
// Autogenerated method: System.IO.Compression.ZipArchive.ThrowIfDisposed
void System::IO::Compression::ZipArchive::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.CloseStreams
void System::IO::Compression::ZipArchive::CloseStreams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::CloseStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.EnsureCentralDirectoryRead
void System::IO::Compression::ZipArchive::EnsureCentralDirectoryRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::EnsureCentralDirectoryRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCentralDirectoryRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.Init
void System::IO::Compression::ZipArchive::Init(::System::IO::Stream* stream, ::System::IO::Compression::ZipArchiveMode mode, bool leaveOpen) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(leaveOpen)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, mode, leaveOpen);
}
// Autogenerated method: System.IO.Compression.ZipArchive.ReadCentralDirectory
void System::IO::Compression::ZipArchive::ReadCentralDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::ReadCentralDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCentralDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.ReadEndOfCentralDirectory
void System::IO::Compression::ZipArchive::ReadEndOfCentralDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::ReadEndOfCentralDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadEndOfCentralDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.WriteFile
void System::IO::Compression::ZipArchive::WriteFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::WriteFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchive.WriteArchiveEpilogue
void System::IO::Compression::ZipArchive::WriteArchiveEpilogue(int64_t startOfCentralDirectory, int64_t sizeOfCentralDirectory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchive::WriteArchiveEpilogue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteArchiveEpilogue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startOfCentralDirectory), ::il2cpp_utils::ExtractType(sizeOfCentralDirectory)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startOfCentralDirectory, sizeOfCentralDirectory);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Compression.ZipArchiveEntry
#include "System/IO/Compression/ZipArchiveEntry.hpp"
// Including type: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream
#include "System/IO/Compression/ZipArchiveEntry_DirectToArchiveWriterStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c
#include "System/IO/Compression/ZipArchiveEntry_--c.hpp"
// Including type: System.IO.Compression.ZipArchive
#include "System/IO/Compression/ZipArchive.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.IO.Compression.CheckSumAndSizeWriteStream
#include "System/IO/Compression/CheckSumAndSizeWriteStream.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean s_allowLargeZipArchiveEntriesInUpdateMode
bool System::IO::Compression::ZipArchiveEntry::_get_s_allowLargeZipArchiveEntriesInUpdateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::_get_s_allowLargeZipArchiveEntriesInUpdateMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.IO.Compression", "ZipArchiveEntry", "s_allowLargeZipArchiveEntriesInUpdateMode"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean s_allowLargeZipArchiveEntriesInUpdateMode
void System::IO::Compression::ZipArchiveEntry::_set_s_allowLargeZipArchiveEntriesInUpdateMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::_set_s_allowLargeZipArchiveEntriesInUpdateMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry", "s_allowLargeZipArchiveEntriesInUpdateMode", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.IO.Compression.ZipVersionMadeByPlatform CurrentZipPlatform
::System::IO::Compression::ZipVersionMadeByPlatform System::IO::Compression::ZipArchiveEntry::_get_CurrentZipPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::_get_CurrentZipPlatform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionMadeByPlatform>("System.IO.Compression", "ZipArchiveEntry", "CurrentZipPlatform"));
}
// Autogenerated static field setter
// Set static field: static readonly System.IO.Compression.ZipVersionMadeByPlatform CurrentZipPlatform
void System::IO::Compression::ZipArchiveEntry::_set_CurrentZipPlatform(::System::IO::Compression::ZipVersionMadeByPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::_set_CurrentZipPlatform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry", "CurrentZipPlatform", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipArchive _archive
[[deprecated("Use field access instead!")]] ::System::IO::Compression::ZipArchive*& System::IO::Compression::ZipArchiveEntry::dyn__archive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__archive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_archive"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchive**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _originallyInArchive
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::ZipArchiveEntry::dyn__originallyInArchive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__originallyInArchive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originallyInArchive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _diskNumberStart
[[deprecated("Use field access instead!")]] int& System::IO::Compression::ZipArchiveEntry::dyn__diskNumberStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__diskNumberStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_diskNumberStart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.ZipVersionMadeByPlatform _versionMadeByPlatform
[[deprecated("Use field access instead!")]] ::System::IO::Compression::ZipVersionMadeByPlatform& System::IO::Compression::ZipArchiveEntry::dyn__versionMadeByPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__versionMadeByPlatform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_versionMadeByPlatform"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipVersionMadeByPlatform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipVersionNeededValues _versionMadeBySpecification
[[deprecated("Use field access instead!")]] ::System::IO::Compression::ZipVersionNeededValues& System::IO::Compression::ZipArchiveEntry::dyn__versionMadeBySpecification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__versionMadeBySpecification");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_versionMadeBySpecification"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipVersionNeededValues*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipVersionNeededValues _versionToExtract
[[deprecated("Use field access instead!")]] ::System::IO::Compression::ZipVersionNeededValues& System::IO::Compression::ZipArchiveEntry::dyn__versionToExtract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__versionToExtract");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_versionToExtract"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipVersionNeededValues*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipArchiveEntry/System.IO.Compression.BitFlagValues _generalPurposeBitFlag
[[deprecated("Use field access instead!")]] ::System::IO::Compression::ZipArchiveEntry::BitFlagValues& System::IO::Compression::ZipArchiveEntry::dyn__generalPurposeBitFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__generalPurposeBitFlag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_generalPurposeBitFlag"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchiveEntry::BitFlagValues*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues _storedCompressionMethod
[[deprecated("Use field access instead!")]] ::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues& System::IO::Compression::ZipArchiveEntry::dyn__storedCompressionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__storedCompressionMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storedCompressionMethod"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTimeOffset _lastModified
[[deprecated("Use field access instead!")]] ::System::DateTimeOffset& System::IO::Compression::ZipArchiveEntry::dyn__lastModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__lastModified");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastModified"))->offset;
  return *reinterpret_cast<::System::DateTimeOffset*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _compressedSize
[[deprecated("Use field access instead!")]] int64_t& System::IO::Compression::ZipArchiveEntry::dyn__compressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__compressedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compressedSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _uncompressedSize
[[deprecated("Use field access instead!")]] int64_t& System::IO::Compression::ZipArchiveEntry::dyn__uncompressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__uncompressedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uncompressedSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _offsetOfLocalHeader
[[deprecated("Use field access instead!")]] int64_t& System::IO::Compression::ZipArchiveEntry::dyn__offsetOfLocalHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__offsetOfLocalHeader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offsetOfLocalHeader"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> _storedOffsetOfCompressedData
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& System::IO::Compression::ZipArchiveEntry::dyn__storedOffsetOfCompressedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__storedOffsetOfCompressedData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storedOffsetOfCompressedData"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _crc32
[[deprecated("Use field access instead!")]] uint& System::IO::Compression::ZipArchiveEntry::dyn__crc32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__crc32");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_crc32"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[][] _compressedBytes
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<uint8_t>>& System::IO::Compression::ZipArchiveEntry::dyn__compressedBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__compressedBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compressedBytes"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<uint8_t>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.MemoryStream _storedUncompressedData
[[deprecated("Use field access instead!")]] ::System::IO::MemoryStream*& System::IO::Compression::ZipArchiveEntry::dyn__storedUncompressedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__storedUncompressedData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storedUncompressedData"))->offset;
  return *reinterpret_cast<::System::IO::MemoryStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _currentlyOpenForWrite
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::ZipArchiveEntry::dyn__currentlyOpenForWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__currentlyOpenForWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentlyOpenForWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _everOpenedForWrite
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::ZipArchiveEntry::dyn__everOpenedForWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__everOpenedForWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_everOpenedForWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _outstandingWriteStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::IO::Compression::ZipArchiveEntry::dyn__outstandingWriteStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__outstandingWriteStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outstandingWriteStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _externalFileAttr
[[deprecated("Use field access instead!")]] uint& System::IO::Compression::ZipArchiveEntry::dyn__externalFileAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__externalFileAttr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_externalFileAttr"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _storedEntryName
[[deprecated("Use field access instead!")]] ::StringW& System::IO::Compression::ZipArchiveEntry::dyn__storedEntryName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__storedEntryName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storedEntryName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _storedEntryNameBytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::ZipArchiveEntry::dyn__storedEntryNameBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__storedEntryNameBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_storedEntryNameBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.IO.Compression.ZipGenericExtraField> _cdUnknownExtraFields
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>*& System::IO::Compression::ZipArchiveEntry::dyn__cdUnknownExtraFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__cdUnknownExtraFields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cdUnknownExtraFields"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.IO.Compression.ZipGenericExtraField> _lhUnknownExtraFields
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>*& System::IO::Compression::ZipArchiveEntry::dyn__lhUnknownExtraFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__lhUnknownExtraFields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lhUnknownExtraFields"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _fileComment
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::ZipArchiveEntry::dyn__fileComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__fileComment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileComment"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.IO.Compression.CompressionLevel> _compressionLevel
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::IO::Compression::CompressionLevel>& System::IO::Compression::ZipArchiveEntry::dyn__compressionLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::dyn__compressionLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compressionLevel"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::IO::Compression::CompressionLevel>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_FullName
::StringW System::IO::Compression::ZipArchiveEntry::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_FullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.set_FullName
void System::IO::Compression::ZipArchiveEntry::set_FullName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::set_FullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_LastWriteTime
::System::DateTimeOffset System::IO::Compression::ZipArchiveEntry::get_LastWriteTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_LastWriteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastWriteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.set_LastWriteTime
void System::IO::Compression::ZipArchiveEntry::set_LastWriteTime(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::set_LastWriteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastWriteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_Length
int64_t System::IO::Compression::ZipArchiveEntry::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_Name
::StringW System::IO::Compression::ZipArchiveEntry::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_EverOpenedForWrite
bool System::IO::Compression::ZipArchiveEntry::get_EverOpenedForWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_EverOpenedForWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EverOpenedForWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_OffsetOfCompressedData
int64_t System::IO::Compression::ZipArchiveEntry::get_OffsetOfCompressedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_OffsetOfCompressedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OffsetOfCompressedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_UncompressedData
::System::IO::MemoryStream* System::IO::Compression::ZipArchiveEntry::get_UncompressedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_UncompressedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UncompressedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::MemoryStream*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.get_CompressionMethod
::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues System::IO::Compression::ZipArchiveEntry::get_CompressionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::get_CompressionMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompressionMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.set_CompressionMethod
void System::IO::Compression::ZipArchiveEntry::set_CompressionMethod(::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::set_CompressionMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CompressionMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry..cctor
void System::IO::Compression::ZipArchiveEntry::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipArchiveEntry", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.Delete
void System::IO::Compression::ZipArchiveEntry::Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.Open
::System::IO::Stream* System::IO::Compression::ZipArchiveEntry::Open() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.DecodeEntryName
::StringW System::IO::Compression::ZipArchiveEntry::DecodeEntryName(::ArrayW<uint8_t> entryNameBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DecodeEntryName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeEntryName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entryNameBytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, entryNameBytes);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.EncodeEntryName
::ArrayW<uint8_t> System::IO::Compression::ZipArchiveEntry::EncodeEntryName(::StringW entryName, ByRef<bool> isUTF8) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::EncodeEntryName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeEntryName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entryName), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, entryName, byref(isUTF8));
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.WriteAndFinishLocalEntry
void System::IO::Compression::ZipArchiveEntry::WriteAndFinishLocalEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::WriteAndFinishLocalEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAndFinishLocalEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.WriteCentralDirectoryFileHeader
void System::IO::Compression::ZipArchiveEntry::WriteCentralDirectoryFileHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::WriteCentralDirectoryFileHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCentralDirectoryFileHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.LoadLocalHeaderExtraFieldAndCompressedBytesIfNeeded
bool System::IO::Compression::ZipArchiveEntry::LoadLocalHeaderExtraFieldAndCompressedBytesIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::LoadLocalHeaderExtraFieldAndCompressedBytesIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadLocalHeaderExtraFieldAndCompressedBytesIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.ThrowIfNotOpenable
void System::IO::Compression::ZipArchiveEntry::ThrowIfNotOpenable(bool needToUncompress, bool needToLoadIntoMemory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::ThrowIfNotOpenable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfNotOpenable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(needToUncompress), ::il2cpp_utils::ExtractType(needToLoadIntoMemory)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, needToUncompress, needToLoadIntoMemory);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.GetDataCompressor
::System::IO::Compression::CheckSumAndSizeWriteStream* System::IO::Compression::ZipArchiveEntry::GetDataCompressor(::System::IO::Stream* backingStream, bool leaveBackingStreamOpen, ::System::EventHandler* onClose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::GetDataCompressor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataCompressor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(backingStream), ::il2cpp_utils::ExtractType(leaveBackingStreamOpen), ::il2cpp_utils::ExtractType(onClose)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::CheckSumAndSizeWriteStream*, false>(this, ___internal__method, backingStream, leaveBackingStreamOpen, onClose);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.GetDataDecompressor
::System::IO::Stream* System::IO::Compression::ZipArchiveEntry::GetDataDecompressor(::System::IO::Stream* compressedStreamToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::GetDataDecompressor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataDecompressor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compressedStreamToRead)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, compressedStreamToRead);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.OpenInReadMode
::System::IO::Stream* System::IO::Compression::ZipArchiveEntry::OpenInReadMode(bool checkOpenable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::OpenInReadMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenInReadMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(checkOpenable)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, checkOpenable);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.OpenInWriteMode
::System::IO::Stream* System::IO::Compression::ZipArchiveEntry::OpenInWriteMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::OpenInWriteMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenInWriteMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.OpenInUpdateMode
::System::IO::Stream* System::IO::Compression::ZipArchiveEntry::OpenInUpdateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::OpenInUpdateMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenInUpdateMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.IsOpenable
bool System::IO::Compression::ZipArchiveEntry::IsOpenable(bool needToUncompress, bool needToLoadIntoMemory, ByRef<::StringW> message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::IsOpenable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOpenable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(needToUncompress), ::il2cpp_utils::ExtractType(needToLoadIntoMemory), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, needToUncompress, needToLoadIntoMemory, byref(message));
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.SizesTooLarge
bool System::IO::Compression::ZipArchiveEntry::SizesTooLarge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::SizesTooLarge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SizesTooLarge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.WriteLocalFileHeader
bool System::IO::Compression::ZipArchiveEntry::WriteLocalFileHeader(bool isEmptyFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::WriteLocalFileHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLocalFileHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isEmptyFile)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, isEmptyFile);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.WriteLocalFileHeaderAndDataIfNeeded
void System::IO::Compression::ZipArchiveEntry::WriteLocalFileHeaderAndDataIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::WriteLocalFileHeaderAndDataIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLocalFileHeaderAndDataIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.WriteCrcAndSizesInLocalHeader
void System::IO::Compression::ZipArchiveEntry::WriteCrcAndSizesInLocalHeader(bool zip64HeaderUsed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::WriteCrcAndSizesInLocalHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCrcAndSizesInLocalHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(zip64HeaderUsed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, zip64HeaderUsed);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.WriteDataDescriptor
void System::IO::Compression::ZipArchiveEntry::WriteDataDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::WriteDataDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDataDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.UnloadStreams
void System::IO::Compression::ZipArchiveEntry::UnloadStreams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::UnloadStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnloadStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.CloseStreams
void System::IO::Compression::ZipArchiveEntry::CloseStreams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CloseStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.VersionToExtractAtLeast
void System::IO::Compression::ZipArchiveEntry::VersionToExtractAtLeast(::System::IO::Compression::ZipVersionNeededValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::VersionToExtractAtLeast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VersionToExtractAtLeast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.ThrowIfInvalidArchive
void System::IO::Compression::ZipArchiveEntry::ThrowIfInvalidArchive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::ThrowIfInvalidArchive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfInvalidArchive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.GetFileName_Windows
::StringW System::IO::Compression::ZipArchiveEntry::GetFileName_Windows(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::GetFileName_Windows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipArchiveEntry", "GetFileName_Windows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.GetFileName_Unix
::StringW System::IO::Compression::ZipArchiveEntry::GetFileName_Unix(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::GetFileName_Unix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipArchiveEntry", "GetFileName_Unix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.ParseFileName
::StringW System::IO::Compression::ZipArchiveEntry::ParseFileName(::StringW path, ::System::IO::Compression::ZipVersionMadeByPlatform madeByPlatform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::ParseFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipArchiveEntry", "ParseFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(madeByPlatform)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, madeByPlatform);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry.ToString
::StringW System::IO::Compression::ZipArchiveEntry::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream
#include "System/IO/Compression/ZipArchiveEntry_DirectToArchiveWriterStream.hpp"
// Including type: System.IO.Compression.CheckSumAndSizeWriteStream
#include "System/IO/Compression/CheckSumAndSizeWriteStream.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int64 _position
[[deprecated("Use field access instead!")]] int64_t& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.CheckSumAndSizeWriteStream _crcSizeStream
[[deprecated("Use field access instead!")]] ::System::IO::Compression::CheckSumAndSizeWriteStream*& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__crcSizeStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__crcSizeStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_crcSizeStream"))->offset;
  return *reinterpret_cast<::System::IO::Compression::CheckSumAndSizeWriteStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _everWritten
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__everWritten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__everWritten");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_everWritten"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDisposed
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__isDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.ZipArchiveEntry _entry
[[deprecated("Use field access instead!")]] ::System::IO::Compression::ZipArchiveEntry*& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__entry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entry"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchiveEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _usedZip64inLH
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__usedZip64inLH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__usedZip64inLH");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_usedZip64inLH"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canWrite
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__canWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::dyn__canWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.ThrowIfDisposed
void System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.get_Length
int64_t System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.get_Position
int64_t System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.set_Position
void System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.get_CanRead
bool System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.get_CanSeek
bool System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.get_CanWrite
bool System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.Read
int System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.Seek
int64_t System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.SetLength
void System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.Write
void System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.Flush
void System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.DirectToArchiveWriterStream.Dispose
void System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::DirectToArchiveWriterStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.BitFlagValues
#include "System/IO/Compression/ZipArchiveEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.BitFlagValues DataDescriptor
::System::IO::Compression::ZipArchiveEntry::BitFlagValues System::IO::Compression::ZipArchiveEntry::BitFlagValues::_get_DataDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::BitFlagValues::_get_DataDescriptor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::BitFlagValues>("System.IO.Compression", "ZipArchiveEntry/BitFlagValues", "DataDescriptor"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.BitFlagValues DataDescriptor
void System::IO::Compression::ZipArchiveEntry::BitFlagValues::_set_DataDescriptor(::System::IO::Compression::ZipArchiveEntry::BitFlagValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::BitFlagValues::_set_DataDescriptor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/BitFlagValues", "DataDescriptor", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.BitFlagValues UnicodeFileName
::System::IO::Compression::ZipArchiveEntry::BitFlagValues System::IO::Compression::ZipArchiveEntry::BitFlagValues::_get_UnicodeFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::BitFlagValues::_get_UnicodeFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::BitFlagValues>("System.IO.Compression", "ZipArchiveEntry/BitFlagValues", "UnicodeFileName"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.BitFlagValues UnicodeFileName
void System::IO::Compression::ZipArchiveEntry::BitFlagValues::_set_UnicodeFileName(::System::IO::Compression::ZipArchiveEntry::BitFlagValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::BitFlagValues::_set_UnicodeFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/BitFlagValues", "UnicodeFileName", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 value__
[[deprecated("Use field access instead!")]] uint16_t& System::IO::Compression::ZipArchiveEntry::BitFlagValues::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::BitFlagValues::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues
#include "System/IO/Compression/ZipArchiveEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues Stored
::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_Stored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_Stored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues>("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "Stored"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues Stored
void System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_Stored(::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_Stored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "Stored", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues Deflate
::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_Deflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_Deflate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues>("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "Deflate"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues Deflate
void System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_Deflate(::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_Deflate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "Deflate", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues Deflate64
::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_Deflate64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_Deflate64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues>("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "Deflate64"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues Deflate64
void System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_Deflate64(::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_Deflate64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "Deflate64", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues BZip2
::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_BZip2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_BZip2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues>("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "BZip2"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues BZip2
void System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_BZip2(::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_BZip2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "BZip2", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues LZMA
::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_LZMA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_get_LZMA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues>("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "LZMA"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveEntry/System.IO.Compression.CompressionMethodValues LZMA
void System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_LZMA(::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::_set_LZMA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/CompressionMethodValues", "LZMA", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 value__
[[deprecated("Use field access instead!")]] uint16_t& System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::CompressionMethodValues::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c
#include "System/IO/Compression/ZipArchiveEntry_--c.hpp"
// Including type: System.Action`6
#include "System/Action_6.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c <>9
::System::IO::Compression::ZipArchiveEntry::$$c* System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveEntry::$$c*>("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c <>9
void System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9(::System::IO::Compression::ZipArchiveEntry::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`6<System.Int64,System.Int64,System.UInt32,System.IO.Stream,System.IO.Compression.ZipArchiveEntry,System.EventHandler> <>9__67_0
::System::Action_6<int64_t, int64_t, uint, ::System::IO::Stream*, ::System::IO::Compression::ZipArchiveEntry*, ::System::EventHandler*>* System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9__67_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9__67_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_6<int64_t, int64_t, uint, ::System::IO::Stream*, ::System::IO::Compression::ZipArchiveEntry*, ::System::EventHandler*>*>("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9__67_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`6<System.Int64,System.Int64,System.UInt32,System.IO.Stream,System.IO.Compression.ZipArchiveEntry,System.EventHandler> <>9__67_0
void System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9__67_0(::System::Action_6<int64_t, int64_t, uint, ::System::IO::Stream*, ::System::IO::Compression::ZipArchiveEntry*, ::System::EventHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9__67_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9__67_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.EventHandler <>9__70_0
::System::EventHandler* System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9__70_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9__70_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::EventHandler*>("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9__70_0")));
}
// Autogenerated static field setter
// Set static field: static public System.EventHandler <>9__70_0
void System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9__70_0(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9__70_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9__70_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.IO.Compression.ZipArchiveEntry> <>9__71_0
::System::Action_1<::System::IO::Compression::ZipArchiveEntry*>* System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9__71_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_get_$$9__71_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::System::IO::Compression::ZipArchiveEntry*>*>("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9__71_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.IO.Compression.ZipArchiveEntry> <>9__71_0
void System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9__71_0(::System::Action_1<::System::IO::Compression::ZipArchiveEntry*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::_set_$$9__71_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveEntry/<>c", "<>9__71_0", value)));
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c..cctor
void System::IO::Compression::ZipArchiveEntry::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipArchiveEntry/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c.<GetDataCompressor>b__67_0
void System::IO::Compression::ZipArchiveEntry::$$c::$GetDataCompressor$b__67_0(int64_t initialPosition, int64_t currentPosition, uint checkSum, ::System::IO::Stream* backing, ::System::IO::Compression::ZipArchiveEntry* thisRef, ::System::EventHandler* closeHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::<GetDataCompressor>b__67_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetDataCompressor>b__67_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initialPosition), ::il2cpp_utils::ExtractType(currentPosition), ::il2cpp_utils::ExtractType(checkSum), ::il2cpp_utils::ExtractType(backing), ::il2cpp_utils::ExtractType(thisRef), ::il2cpp_utils::ExtractType(closeHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initialPosition, currentPosition, checkSum, backing, thisRef, closeHandler);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c.<OpenInWriteMode>b__70_0
void System::IO::Compression::ZipArchiveEntry::$$c::$OpenInWriteMode$b__70_0(::Il2CppObject* o, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::<OpenInWriteMode>b__70_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OpenInWriteMode>b__70_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, o, e);
}
// Autogenerated method: System.IO.Compression.ZipArchiveEntry/System.IO.Compression.<>c.<OpenInUpdateMode>b__71_0
void System::IO::Compression::ZipArchiveEntry::$$c::$OpenInUpdateMode$b__71_0(::System::IO::Compression::ZipArchiveEntry* thisRef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveEntry::$$c::<OpenInUpdateMode>b__71_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OpenInUpdateMode>b__71_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisRef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, thisRef);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipArchiveMode
#include "System/IO/Compression/ZipArchiveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveMode Read
::System::IO::Compression::ZipArchiveMode System::IO::Compression::ZipArchiveMode::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveMode>("System.IO.Compression", "ZipArchiveMode", "Read"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveMode Read
void System::IO::Compression::ZipArchiveMode::_set_Read(::System::IO::Compression::ZipArchiveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveMode", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveMode Create
::System::IO::Compression::ZipArchiveMode System::IO::Compression::ZipArchiveMode::_get_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::_get_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveMode>("System.IO.Compression", "ZipArchiveMode", "Create"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveMode Create
void System::IO::Compression::ZipArchiveMode::_set_Create(::System::IO::Compression::ZipArchiveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::_set_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveMode", "Create", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipArchiveMode Update
::System::IO::Compression::ZipArchiveMode System::IO::Compression::ZipArchiveMode::_get_Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::_get_Update");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipArchiveMode>("System.IO.Compression", "ZipArchiveMode", "Update"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipArchiveMode Update
void System::IO::Compression::ZipArchiveMode::_set_Update(::System::IO::Compression::ZipArchiveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::_set_Update");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipArchiveMode", "Update", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::Compression::ZipArchiveMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipArchiveMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipGenericExtraField
#include "System/IO/Compression/ZipGenericExtraField.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt16 _tag
[[deprecated("Use field access instead!")]] uint16_t& System::IO::Compression::ZipGenericExtraField::dyn__tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::dyn__tag");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tag"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 _size
[[deprecated("Use field access instead!")]] uint16_t& System::IO::Compression::ZipGenericExtraField::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::dyn__size");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _data
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::ZipGenericExtraField::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::dyn__data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.get_Tag
uint16_t System::IO::Compression::ZipGenericExtraField::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::get_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.get_Size
uint16_t System::IO::Compression::ZipGenericExtraField::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::get_Size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.get_Data
::ArrayW<uint8_t> System::IO::Compression::ZipGenericExtraField::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::get_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.WriteBlock
void System::IO::Compression::ZipGenericExtraField::WriteBlock(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::WriteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.TryReadBlock
bool System::IO::Compression::ZipGenericExtraField::TryReadBlock(::System::IO::BinaryReader* reader, int64_t endExtraField, ByRef<::System::IO::Compression::ZipGenericExtraField> field) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::TryReadBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipGenericExtraField", "TryReadBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(endExtraField), ::il2cpp_utils::ExtractIndependentType<::System::IO::Compression::ZipGenericExtraField&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, endExtraField, byref(field));
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.ParseExtraField
::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* System::IO::Compression::ZipGenericExtraField::ParseExtraField(::System::IO::Stream* extraFieldData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::ParseExtraField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipGenericExtraField", "ParseExtraField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraFieldData)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extraFieldData);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.TotalSize
int System::IO::Compression::ZipGenericExtraField::TotalSize(::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::TotalSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipGenericExtraField", "TotalSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fields);
}
// Autogenerated method: System.IO.Compression.ZipGenericExtraField.WriteAllBlocks
void System::IO::Compression::ZipGenericExtraField::WriteAllBlocks(::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* fields, ::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipGenericExtraField::WriteAllBlocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipGenericExtraField", "WriteAllBlocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fields), ::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fields, stream);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.Zip64ExtraField
#include "System/IO/Compression/Zip64ExtraField.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt16 _size
[[deprecated("Use field access instead!")]] uint16_t& System::IO::Compression::Zip64ExtraField::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::dyn__size");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> _uncompressedSize
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& System::IO::Compression::Zip64ExtraField::dyn__uncompressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::dyn__uncompressedSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uncompressedSize"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> _compressedSize
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& System::IO::Compression::Zip64ExtraField::dyn__compressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::dyn__compressedSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compressedSize"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int64> _localHeaderOffset
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int64_t>& System::IO::Compression::Zip64ExtraField::dyn__localHeaderOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::dyn__localHeaderOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localHeaderOffset"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int64_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int32> _startDiskNumber
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& System::IO::Compression::Zip64ExtraField::dyn__startDiskNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::dyn__startDiskNumber");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startDiskNumber"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.get_TotalSize
uint16_t System::IO::Compression::Zip64ExtraField::get_TotalSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::get_TotalSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_TotalSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.get_UncompressedSize
::System::Nullable_1<int64_t> System::IO::Compression::Zip64ExtraField::get_UncompressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::get_UncompressedSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_UncompressedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.set_UncompressedSize
void System::IO::Compression::Zip64ExtraField::set_UncompressedSize(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::set_UncompressedSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_UncompressedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.get_CompressedSize
::System::Nullable_1<int64_t> System::IO::Compression::Zip64ExtraField::get_CompressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::get_CompressedSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CompressedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.set_CompressedSize
void System::IO::Compression::Zip64ExtraField::set_CompressedSize(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::set_CompressedSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_CompressedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.get_LocalHeaderOffset
::System::Nullable_1<int64_t> System::IO::Compression::Zip64ExtraField::get_LocalHeaderOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::get_LocalHeaderOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LocalHeaderOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.set_LocalHeaderOffset
void System::IO::Compression::Zip64ExtraField::set_LocalHeaderOffset(::System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::set_LocalHeaderOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_LocalHeaderOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.get_StartDiskNumber
::System::Nullable_1<int> System::IO::Compression::Zip64ExtraField::get_StartDiskNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::get_StartDiskNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_StartDiskNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<int>, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.UpdateSize
void System::IO::Compression::Zip64ExtraField::UpdateSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::UpdateSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UpdateSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.GetJustZip64Block
::System::IO::Compression::Zip64ExtraField System::IO::Compression::Zip64ExtraField::GetJustZip64Block(::System::IO::Stream* extraFieldStream, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::GetJustZip64Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64ExtraField", "GetJustZip64Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraFieldStream), ::il2cpp_utils::ExtractType(readUncompressedSize), ::il2cpp_utils::ExtractType(readCompressedSize), ::il2cpp_utils::ExtractType(readLocalHeaderOffset), ::il2cpp_utils::ExtractType(readStartDiskNumber)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::Zip64ExtraField, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extraFieldStream, readUncompressedSize, readCompressedSize, readLocalHeaderOffset, readStartDiskNumber);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.TryGetZip64BlockFromGenericExtraField
bool System::IO::Compression::Zip64ExtraField::TryGetZip64BlockFromGenericExtraField(::System::IO::Compression::ZipGenericExtraField extraField, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber, ByRef<::System::IO::Compression::Zip64ExtraField> zip64Block) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::TryGetZip64BlockFromGenericExtraField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64ExtraField", "TryGetZip64BlockFromGenericExtraField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraField), ::il2cpp_utils::ExtractType(readUncompressedSize), ::il2cpp_utils::ExtractType(readCompressedSize), ::il2cpp_utils::ExtractType(readLocalHeaderOffset), ::il2cpp_utils::ExtractType(readStartDiskNumber), ::il2cpp_utils::ExtractIndependentType<::System::IO::Compression::Zip64ExtraField&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extraField, readUncompressedSize, readCompressedSize, readLocalHeaderOffset, readStartDiskNumber, byref(zip64Block));
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.GetAndRemoveZip64Block
::System::IO::Compression::Zip64ExtraField System::IO::Compression::Zip64ExtraField::GetAndRemoveZip64Block(::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* extraFields, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::GetAndRemoveZip64Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64ExtraField", "GetAndRemoveZip64Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraFields), ::il2cpp_utils::ExtractType(readUncompressedSize), ::il2cpp_utils::ExtractType(readCompressedSize), ::il2cpp_utils::ExtractType(readLocalHeaderOffset), ::il2cpp_utils::ExtractType(readStartDiskNumber)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::Zip64ExtraField, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extraFields, readUncompressedSize, readCompressedSize, readLocalHeaderOffset, readStartDiskNumber);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.RemoveZip64Blocks
void System::IO::Compression::Zip64ExtraField::RemoveZip64Blocks(::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* extraFields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::RemoveZip64Blocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64ExtraField", "RemoveZip64Blocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraFields)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, extraFields);
}
// Autogenerated method: System.IO.Compression.Zip64ExtraField.WriteBlock
void System::IO::Compression::Zip64ExtraField::WriteBlock(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64ExtraField::WriteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.Zip64EndOfCentralDirectoryLocator
#include "System/IO/Compression/Zip64EndOfCentralDirectoryLocator.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 NumberOfDiskWithZip64EOCD
[[deprecated("Use field access instead!")]] uint& System::IO::Compression::Zip64EndOfCentralDirectoryLocator::dyn_NumberOfDiskWithZip64EOCD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryLocator::dyn_NumberOfDiskWithZip64EOCD");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfDiskWithZip64EOCD"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 OffsetOfZip64EOCD
[[deprecated("Use field access instead!")]] uint64_t& System::IO::Compression::Zip64EndOfCentralDirectoryLocator::dyn_OffsetOfZip64EOCD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryLocator::dyn_OffsetOfZip64EOCD");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OffsetOfZip64EOCD"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 TotalNumberOfDisks
[[deprecated("Use field access instead!")]] uint& System::IO::Compression::Zip64EndOfCentralDirectoryLocator::dyn_TotalNumberOfDisks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryLocator::dyn_TotalNumberOfDisks");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalNumberOfDisks"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.Zip64EndOfCentralDirectoryLocator.TryReadBlock
bool System::IO::Compression::Zip64EndOfCentralDirectoryLocator::TryReadBlock(::System::IO::BinaryReader* reader, ByRef<::System::IO::Compression::Zip64EndOfCentralDirectoryLocator> zip64EOCDLocator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryLocator::TryReadBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64EndOfCentralDirectoryLocator", "TryReadBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractIndependentType<::System::IO::Compression::Zip64EndOfCentralDirectoryLocator&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, byref(zip64EOCDLocator));
}
// Autogenerated method: System.IO.Compression.Zip64EndOfCentralDirectoryLocator.WriteBlock
void System::IO::Compression::Zip64EndOfCentralDirectoryLocator::WriteBlock(::System::IO::Stream* stream, int64_t zip64EOCDRecordStart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryLocator::WriteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64EndOfCentralDirectoryLocator", "WriteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(zip64EOCDRecordStart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, zip64EOCDRecordStart);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.Zip64EndOfCentralDirectoryRecord
#include "System/IO/Compression/Zip64EndOfCentralDirectoryRecord.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt64 SizeOfThisRecord
[[deprecated("Use field access instead!")]] uint64_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_SizeOfThisRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_SizeOfThisRecord");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SizeOfThisRecord"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 VersionMadeBy
[[deprecated("Use field access instead!")]] uint16_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_VersionMadeBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_VersionMadeBy");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionMadeBy"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 VersionNeededToExtract
[[deprecated("Use field access instead!")]] uint16_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_VersionNeededToExtract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_VersionNeededToExtract");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionNeededToExtract"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 NumberOfThisDisk
[[deprecated("Use field access instead!")]] uint& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfThisDisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfThisDisk");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfThisDisk"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 NumberOfDiskWithStartOfCD
[[deprecated("Use field access instead!")]] uint& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfDiskWithStartOfCD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfDiskWithStartOfCD");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfDiskWithStartOfCD"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 NumberOfEntriesOnThisDisk
[[deprecated("Use field access instead!")]] uint64_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfEntriesOnThisDisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfEntriesOnThisDisk");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfEntriesOnThisDisk"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 NumberOfEntriesTotal
[[deprecated("Use field access instead!")]] uint64_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfEntriesTotal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_NumberOfEntriesTotal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfEntriesTotal"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 SizeOfCentralDirectory
[[deprecated("Use field access instead!")]] uint64_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_SizeOfCentralDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_SizeOfCentralDirectory");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SizeOfCentralDirectory"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 OffsetOfCentralDirectory
[[deprecated("Use field access instead!")]] uint64_t& System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_OffsetOfCentralDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::dyn_OffsetOfCentralDirectory");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OffsetOfCentralDirectory"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.Zip64EndOfCentralDirectoryRecord.TryReadBlock
bool System::IO::Compression::Zip64EndOfCentralDirectoryRecord::TryReadBlock(::System::IO::BinaryReader* reader, ByRef<::System::IO::Compression::Zip64EndOfCentralDirectoryRecord> zip64EOCDRecord) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::TryReadBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64EndOfCentralDirectoryRecord", "TryReadBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractIndependentType<::System::IO::Compression::Zip64EndOfCentralDirectoryRecord&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, byref(zip64EOCDRecord));
}
// Autogenerated method: System.IO.Compression.Zip64EndOfCentralDirectoryRecord.WriteBlock
void System::IO::Compression::Zip64EndOfCentralDirectoryRecord::WriteBlock(::System::IO::Stream* stream, int64_t numberOfEntries, int64_t startOfCentralDirectory, int64_t sizeOfCentralDirectory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Zip64EndOfCentralDirectoryRecord::WriteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Zip64EndOfCentralDirectoryRecord", "WriteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(numberOfEntries), ::il2cpp_utils::ExtractType(startOfCentralDirectory), ::il2cpp_utils::ExtractType(sizeOfCentralDirectory)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, numberOfEntries, startOfCentralDirectory, sizeOfCentralDirectory);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipLocalFileHeader
#include "System/IO/Compression/ZipLocalFileHeader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.ZipLocalFileHeader.GetExtraFields
::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>* System::IO::Compression::ZipLocalFileHeader::GetExtraFields(::System::IO::BinaryReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipLocalFileHeader::GetExtraFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipLocalFileHeader", "GetExtraFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: System.IO.Compression.ZipLocalFileHeader.TrySkipBlock
bool System::IO::Compression::ZipLocalFileHeader::TrySkipBlock(::System::IO::BinaryReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipLocalFileHeader::TrySkipBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipLocalFileHeader", "TrySkipBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipCentralDirectoryFileHeader
#include "System/IO/Compression/ZipCentralDirectoryFileHeader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte VersionMadeByCompatibility
[[deprecated("Use field access instead!")]] uint8_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_VersionMadeByCompatibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_VersionMadeByCompatibility");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionMadeByCompatibility"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte VersionMadeBySpecification
[[deprecated("Use field access instead!")]] uint8_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_VersionMadeBySpecification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_VersionMadeBySpecification");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionMadeBySpecification"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 VersionNeededToExtract
[[deprecated("Use field access instead!")]] uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_VersionNeededToExtract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_VersionNeededToExtract");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VersionNeededToExtract"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 GeneralPurposeBitFlag
[[deprecated("Use field access instead!")]] uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_GeneralPurposeBitFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_GeneralPurposeBitFlag");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GeneralPurposeBitFlag"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 CompressionMethod
[[deprecated("Use field access instead!")]] uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_CompressionMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_CompressionMethod");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CompressionMethod"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 LastModified
[[deprecated("Use field access instead!")]] uint& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_LastModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_LastModified");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastModified"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Crc32
[[deprecated("Use field access instead!")]] uint& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_Crc32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_Crc32");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Crc32"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 CompressedSize
[[deprecated("Use field access instead!")]] int64_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_CompressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_CompressedSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CompressedSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 UncompressedSize
[[deprecated("Use field access instead!")]] int64_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_UncompressedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_UncompressedSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UncompressedSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 FilenameLength
[[deprecated("Use field access instead!")]] uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_FilenameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_FilenameLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FilenameLength"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 ExtraFieldLength
[[deprecated("Use field access instead!")]] uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_ExtraFieldLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_ExtraFieldLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtraFieldLength"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 FileCommentLength
[[deprecated("Use field access instead!")]] uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_FileCommentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_FileCommentLength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileCommentLength"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 DiskNumberStart
[[deprecated("Use field access instead!")]] int& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_DiskNumberStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_DiskNumberStart");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DiskNumberStart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 InternalFileAttributes
[[deprecated("Use field access instead!")]] uint16_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_InternalFileAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_InternalFileAttributes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InternalFileAttributes"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 ExternalFileAttributes
[[deprecated("Use field access instead!")]] uint& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_ExternalFileAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_ExternalFileAttributes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExternalFileAttributes"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 RelativeOffsetOfLocalHeader
[[deprecated("Use field access instead!")]] int64_t& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_RelativeOffsetOfLocalHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_RelativeOffsetOfLocalHeader");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RelativeOffsetOfLocalHeader"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] Filename
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_Filename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_Filename");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Filename"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] FileComment
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_FileComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_FileComment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileComment"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.IO.Compression.ZipGenericExtraField> ExtraFields
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>*& System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_ExtraFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::dyn_ExtraFields");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExtraFields"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::IO::Compression::ZipGenericExtraField>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.ZipCentralDirectoryFileHeader.TryReadBlock
bool System::IO::Compression::ZipCentralDirectoryFileHeader::TryReadBlock(::System::IO::BinaryReader* reader, bool saveExtraFieldsAndComments, ByRef<::System::IO::Compression::ZipCentralDirectoryFileHeader> header) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipCentralDirectoryFileHeader::TryReadBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipCentralDirectoryFileHeader", "TryReadBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(saveExtraFieldsAndComments), ::il2cpp_utils::ExtractIndependentType<::System::IO::Compression::ZipCentralDirectoryFileHeader&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, saveExtraFieldsAndComments, byref(header));
}
