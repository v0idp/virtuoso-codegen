// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackColorAttribute
#include "UnityEngine/Timeline/TrackColorAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_Color
[[deprecated]] ::UnityEngine::Color& UnityEngine::Timeline::TrackColorAttribute::dyn_m_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackColorAttribute::dyn_m_Color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TrackColorAttribute.get_color
::UnityEngine::Color UnityEngine::Timeline::TrackColorAttribute::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackColorAttribute::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AudioClipProperties
#include "UnityEngine/Timeline/AudioClipProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single volume
[[deprecated]] float& UnityEngine::Timeline::AudioClipProperties::dyn_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioClipProperties::dyn_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AudioMixerProperties
#include "UnityEngine/Timeline/AudioMixerProperties.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single volume
[[deprecated]] float& UnityEngine::Timeline::AudioMixerProperties::dyn_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioMixerProperties::dyn_volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stereoPan
[[deprecated]] float& UnityEngine::Timeline::AudioMixerProperties::dyn_stereoPan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioMixerProperties::dyn_stereoPan");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stereoPan"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single spatialBlend
[[deprecated]] float& UnityEngine::Timeline::AudioMixerProperties::dyn_spatialBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioMixerProperties::dyn_spatialBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spatialBlend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.AudioMixerProperties.PrepareFrame
void UnityEngine::Timeline::AudioMixerProperties::PrepareFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioMixerProperties::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AudioPlayableAsset
#include "UnityEngine/Timeline/AudioPlayableAsset.hpp"
// Including type: UnityEngine.Timeline.AudioPlayableAsset/UnityEngine.Timeline.<get_outputs>d__16
#include "UnityEngine/Timeline/AudioPlayableAsset_-get_outputs-d__16.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Timeline.AudioClipProperties
#include "UnityEngine/Timeline/AudioClipProperties.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip m_Clip
[[deprecated]] ::UnityEngine::AudioClip*& UnityEngine::Timeline::AudioPlayableAsset::dyn_m_Clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::dyn_m_Clip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Clip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Loop
[[deprecated]] bool& UnityEngine::Timeline::AudioPlayableAsset::dyn_m_Loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::dyn_m_Loop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Loop"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_bufferingTime
[[deprecated]] float& UnityEngine::Timeline::AudioPlayableAsset::dyn_m_bufferingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::dyn_m_bufferingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bufferingTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.AudioClipProperties m_ClipProperties
[[deprecated]] ::UnityEngine::Timeline::AudioClipProperties*& UnityEngine::Timeline::AudioPlayableAsset::dyn_m_ClipProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::dyn_m_ClipProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClipProperties"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::AudioClipProperties**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_bufferingTime
float UnityEngine::Timeline::AudioPlayableAsset::get_bufferingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::get_bufferingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bufferingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.set_bufferingTime
void UnityEngine::Timeline::AudioPlayableAsset::set_bufferingTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::set_bufferingTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bufferingTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_clip
::UnityEngine::AudioClip* UnityEngine::Timeline::AudioPlayableAsset::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.set_clip
void UnityEngine::Timeline::AudioPlayableAsset::set_clip(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::set_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_loop
bool UnityEngine::Timeline::AudioPlayableAsset::get_loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::get_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.set_loop
void UnityEngine::Timeline::AudioPlayableAsset::set_loop(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::set_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_clipCaps
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::AudioPlayableAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AudioPlayableAsset*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_duration
double UnityEngine::Timeline::AudioPlayableAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::get_duration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableAsset*), 7));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_outputs
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AudioPlayableAsset::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::get_outputs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableAsset*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.CreatePlayable
::UnityEngine::Playables::Playable UnityEngine::Timeline::AudioPlayableAsset::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableAsset*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.AudioPlayableAsset/UnityEngine.Timeline.<get_outputs>d__16
#include "UnityEngine/Timeline/AudioPlayableAsset_-get_outputs-d__16.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableBinding <>2__current
[[deprecated]] ::UnityEngine::Playables::PlayableBinding& UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableBinding*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated]] int& UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Timeline.AudioPlayableAsset <>4__this
[[deprecated]] ::UnityEngine::Timeline::AudioPlayableAsset*& UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::AudioPlayableAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/UnityEngine.Timeline.<get_outputs>d__16.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
::UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/UnityEngine.Timeline.<get_outputs>d__16.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/UnityEngine.Timeline.<get_outputs>d__16.System.IDisposable.Dispose
void UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/UnityEngine.Timeline.<get_outputs>d__16.MoveNext
bool UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/UnityEngine.Timeline.<get_outputs>d__16.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/UnityEngine.Timeline.<get_outputs>d__16.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/UnityEngine.Timeline.<get_outputs>d__16.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AudioTrack
#include "UnityEngine/Timeline/AudioTrack.hpp"
// Including type: UnityEngine.Timeline.AudioTrack/UnityEngine.Timeline.<get_outputs>d__4
#include "UnityEngine/Timeline/AudioTrack_-get_outputs-d__4.hpp"
// Including type: UnityEngine.Timeline.AudioMixerProperties
#include "UnityEngine/Timeline/AudioMixerProperties.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Timeline.IntervalTree`1
#include "UnityEngine/Timeline/IntervalTree_1.hpp"
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.AudioMixerProperties m_TrackProperties
[[deprecated]] ::UnityEngine::Timeline::AudioMixerProperties*& UnityEngine::Timeline::AudioTrack::dyn_m_TrackProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioTrack::dyn_m_TrackProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TrackProperties"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::AudioMixerProperties**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack.CreateClip
::UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::AudioTrack::CreateClip(::UnityEngine::AudioClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioTrack::CreateClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack.OnValidate
void UnityEngine::Timeline::AudioTrack::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioTrack::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack.get_outputs
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AudioTrack::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioTrack::get_outputs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack.CompileClips
::UnityEngine::Playables::Playable UnityEngine::Timeline::AudioTrack::CompileClips(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go, ::System::Collections::Generic::IList_1<::UnityEngine::Timeline::TimelineClip*>* timelineClips, ::UnityEngine::Timeline::IntervalTree_1<::UnityEngine::Timeline::RuntimeElement*>* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioTrack::CompileClips");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, timelineClips, tree);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.AudioTrack/UnityEngine.Timeline.<get_outputs>d__4
#include "UnityEngine/Timeline/AudioTrack_-get_outputs-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableBinding <>2__current
[[deprecated]] ::UnityEngine::Playables::PlayableBinding& UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableBinding*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated]] int& UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Timeline.AudioTrack <>4__this
[[deprecated]] ::UnityEngine::Timeline::AudioTrack*& UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::AudioTrack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/UnityEngine.Timeline.<get_outputs>d__4.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
::UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AudioTrack::$get_outputs$d__4*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/UnityEngine.Timeline.<get_outputs>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AudioTrack::$get_outputs$d__4*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/UnityEngine.Timeline.<get_outputs>d__4.System.IDisposable.Dispose
void UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AudioTrack::$get_outputs$d__4*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/UnityEngine.Timeline.<get_outputs>d__4.MoveNext
bool UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AudioTrack::$get_outputs$d__4*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/UnityEngine.Timeline.<get_outputs>d__4.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AudioTrack::$get_outputs$d__4*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/UnityEngine.Timeline.<get_outputs>d__4.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AudioTrack::$get_outputs$d__4*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/UnityEngine.Timeline.<get_outputs>d__4.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::AudioTrack::$get_outputs$d__4*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps None
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps None
void UnityEngine::Timeline::ClipCaps::_set_None(::UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps Looping
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_Looping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_get_Looping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "Looping"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps Looping
void UnityEngine::Timeline::ClipCaps::_set_Looping(::UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_set_Looping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "Looping", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps Extrapolation
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_Extrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_get_Extrapolation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "Extrapolation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps Extrapolation
void UnityEngine::Timeline::ClipCaps::_set_Extrapolation(::UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_set_Extrapolation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "Extrapolation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps ClipIn
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_ClipIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_get_ClipIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "ClipIn"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps ClipIn
void UnityEngine::Timeline::ClipCaps::_set_ClipIn(::UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_set_ClipIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "ClipIn", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps SpeedMultiplier
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_SpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_get_SpeedMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "SpeedMultiplier"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps SpeedMultiplier
void UnityEngine::Timeline::ClipCaps::_set_SpeedMultiplier(::UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_set_SpeedMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "SpeedMultiplier", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps Blending
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_Blending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_get_Blending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "Blending"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps Blending
void UnityEngine::Timeline::ClipCaps::_set_Blending(::UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_set_Blending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "Blending", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps AutoScale
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_AutoScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_get_AutoScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "AutoScale"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps AutoScale
void UnityEngine::Timeline::ClipCaps::_set_AutoScale(::UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_set_AutoScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "AutoScale", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps All
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps All
void UnityEngine::Timeline::ClipCaps::_set_All(::UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& UnityEngine::Timeline::ClipCaps::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ClipCaps::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineClipCapsExtensions
#include "UnityEngine/Timeline/TimelineClipCapsExtensions.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsLooping
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsLooping(::UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsLooping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsLooping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsExtrapolation
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsExtrapolation(::UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsClipIn
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsClipIn(::UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsClipIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsClipIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsSpeedMultiplier
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsSpeedMultiplier(::UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsSpeedMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsSpeedMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsBlending
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsBlending(::UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsBlending");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsBlending", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.HasAll
bool UnityEngine::Timeline::TimelineClipCapsExtensions::HasAll(::UnityEngine::Timeline::ClipCaps caps, ::UnityEngine::Timeline::ClipCaps flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClipCapsExtensions::HasAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "HasAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caps), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, caps, flags);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.HasAny
bool UnityEngine::Timeline::TimelineClipCapsExtensions::HasAny(::UnityEngine::Timeline::ClipCaps caps, ::UnityEngine::Timeline::ClipCaps flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineClipCapsExtensions::HasAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "HasAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caps), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, caps, flags);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ControlPlayableAsset
#include "UnityEngine/Timeline/ControlPlayableAsset.hpp"
// Including type: UnityEngine.Timeline.ControlPlayableAsset/UnityEngine.Timeline.<GetControlableScripts>d__39
#include "UnityEngine/Timeline/ControlPlayableAsset_-GetControlableScripts-d__39.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MaxRandInt
int UnityEngine::Timeline::ControlPlayableAsset::_get_k_MaxRandInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::_get_k_MaxRandInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Timeline", "ControlPlayableAsset", "k_MaxRandInt"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MaxRandInt
void UnityEngine::Timeline::ControlPlayableAsset::_set_k_MaxRandInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::_set_k_MaxRandInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "k_MaxRandInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Playables.PlayableDirector> k_EmptyDirectorsList
::System::Collections::Generic::List_1<::UnityEngine::Playables::PlayableDirector*>* UnityEngine::Timeline::ControlPlayableAsset::_get_k_EmptyDirectorsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::_get_k_EmptyDirectorsList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::Playables::PlayableDirector*>*>("UnityEngine.Timeline", "ControlPlayableAsset", "k_EmptyDirectorsList"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Playables.PlayableDirector> k_EmptyDirectorsList
void UnityEngine::Timeline::ControlPlayableAsset::_set_k_EmptyDirectorsList(::System::Collections::Generic::List_1<::UnityEngine::Playables::PlayableDirector*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::_set_k_EmptyDirectorsList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "k_EmptyDirectorsList", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.ParticleSystem> k_EmptyParticlesList
::System::Collections::Generic::List_1<::UnityEngine::ParticleSystem*>* UnityEngine::Timeline::ControlPlayableAsset::_get_k_EmptyParticlesList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::_get_k_EmptyParticlesList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::ParticleSystem*>*>("UnityEngine.Timeline", "ControlPlayableAsset", "k_EmptyParticlesList"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.ParticleSystem> k_EmptyParticlesList
void UnityEngine::Timeline::ControlPlayableAsset::_set_k_EmptyParticlesList(::System::Collections::Generic::List_1<::UnityEngine::ParticleSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::_set_k_EmptyParticlesList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "k_EmptyParticlesList", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.HashSet`1<UnityEngine.ParticleSystem> s_SubEmitterCollector
::System::Collections::Generic::HashSet_1<::UnityEngine::ParticleSystem*>* UnityEngine::Timeline::ControlPlayableAsset::_get_s_SubEmitterCollector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::_get_s_SubEmitterCollector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::UnityEngine::ParticleSystem*>*>("UnityEngine.Timeline", "ControlPlayableAsset", "s_SubEmitterCollector"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.HashSet`1<UnityEngine.ParticleSystem> s_SubEmitterCollector
void UnityEngine::Timeline::ControlPlayableAsset::_set_s_SubEmitterCollector(::System::Collections::Generic::HashSet_1<::UnityEngine::ParticleSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::_set_s_SubEmitterCollector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "s_SubEmitterCollector", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<UnityEngine.Playables.PlayableDirector> s_ProcessedDirectors
::System::Collections::Generic::HashSet_1<::UnityEngine::Playables::PlayableDirector*>* UnityEngine::Timeline::ControlPlayableAsset::_get_s_ProcessedDirectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::_get_s_ProcessedDirectors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::UnityEngine::Playables::PlayableDirector*>*>("UnityEngine.Timeline", "ControlPlayableAsset", "s_ProcessedDirectors"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<UnityEngine.Playables.PlayableDirector> s_ProcessedDirectors
void UnityEngine::Timeline::ControlPlayableAsset::_set_s_ProcessedDirectors(::System::Collections::Generic::HashSet_1<::UnityEngine::Playables::PlayableDirector*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::_set_s_ProcessedDirectors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "s_ProcessedDirectors", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<UnityEngine.GameObject> s_CreatedPrefabs
::System::Collections::Generic::HashSet_1<::UnityEngine::GameObject*>* UnityEngine::Timeline::ControlPlayableAsset::_get_s_CreatedPrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::_get_s_CreatedPrefabs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::UnityEngine::GameObject*>*>("UnityEngine.Timeline", "ControlPlayableAsset", "s_CreatedPrefabs"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<UnityEngine.GameObject> s_CreatedPrefabs
void UnityEngine::Timeline::ControlPlayableAsset::_set_s_CreatedPrefabs(::System::Collections::Generic::HashSet_1<::UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::_set_s_CreatedPrefabs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "s_CreatedPrefabs", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ExposedReference`1<UnityEngine.GameObject> sourceGameObject
[[deprecated]] ::UnityEngine::ExposedReference_1<::UnityEngine::GameObject*>& UnityEngine::Timeline::ControlPlayableAsset::dyn_sourceGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::dyn_sourceGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::ExposedReference_1<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject prefabGameObject
[[deprecated]] ::UnityEngine::GameObject*& UnityEngine::Timeline::ControlPlayableAsset::dyn_prefabGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::dyn_prefabGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updateParticle
[[deprecated]] bool& UnityEngine::Timeline::ControlPlayableAsset::dyn_updateParticle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::dyn_updateParticle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateParticle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 particleRandomSeed
[[deprecated]] uint& UnityEngine::Timeline::ControlPlayableAsset::dyn_particleRandomSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::dyn_particleRandomSeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particleRandomSeed"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updateDirector
[[deprecated]] bool& UnityEngine::Timeline::ControlPlayableAsset::dyn_updateDirector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::dyn_updateDirector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateDirector"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean updateITimeControl
[[deprecated]] bool& UnityEngine::Timeline::ControlPlayableAsset::dyn_updateITimeControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::dyn_updateITimeControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateITimeControl"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean searchHierarchy
[[deprecated]] bool& UnityEngine::Timeline::ControlPlayableAsset::dyn_searchHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::dyn_searchHierarchy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "searchHierarchy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean active
[[deprecated]] bool& UnityEngine::Timeline::ControlPlayableAsset::dyn_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::dyn_active");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "active"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.PostPlaybackState postPlayback
[[deprecated]] ::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState& UnityEngine::Timeline::ControlPlayableAsset::dyn_postPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::dyn_postPlayback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "postPlayback"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableAsset m_ControlDirectorAsset
[[deprecated]] ::UnityEngine::Playables::PlayableAsset*& UnityEngine::Timeline::ControlPlayableAsset::dyn_m_ControlDirectorAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::dyn_m_ControlDirectorAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControlDirectorAsset"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_Duration
[[deprecated]] double& UnityEngine::Timeline::ControlPlayableAsset::dyn_m_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::dyn_m_Duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Duration"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SupportLoop
[[deprecated]] bool& UnityEngine::Timeline::ControlPlayableAsset::dyn_m_SupportLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::dyn_m_SupportLoop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SupportLoop"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <controllingDirectors>k__BackingField
[[deprecated]] bool& UnityEngine::Timeline::ControlPlayableAsset::dyn_$controllingDirectors$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::dyn_$controllingDirectors$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<controllingDirectors>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <controllingParticles>k__BackingField
[[deprecated]] bool& UnityEngine::Timeline::ControlPlayableAsset::dyn_$controllingParticles$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::dyn_$controllingParticles$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<controllingParticles>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.get_controllingDirectors
bool UnityEngine::Timeline::ControlPlayableAsset::get_controllingDirectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::get_controllingDirectors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controllingDirectors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.set_controllingDirectors
void UnityEngine::Timeline::ControlPlayableAsset::set_controllingDirectors(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::set_controllingDirectors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controllingDirectors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.get_controllingParticles
bool UnityEngine::Timeline::ControlPlayableAsset::get_controllingParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::get_controllingParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controllingParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.set_controllingParticles
void UnityEngine::Timeline::ControlPlayableAsset::set_controllingParticles(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::set_controllingParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controllingParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.get_clipCaps
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ControlPlayableAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ControlPlayableAsset*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.OnEnable
void UnityEngine::Timeline::ControlPlayableAsset::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.ConnectPlayablesToMixer
::UnityEngine::Playables::Playable UnityEngine::Timeline::ControlPlayableAsset::ConnectPlayablesToMixer(::UnityEngine::Playables::PlayableGraph graph, ::System::Collections::Generic::List_1<::UnityEngine::Playables::Playable>* playables) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::ConnectPlayablesToMixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "ConnectPlayablesToMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(playables)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, playables);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.CreateActivationPlayable
void UnityEngine::Timeline::ControlPlayableAsset::CreateActivationPlayable(::UnityEngine::GameObject* root, ::UnityEngine::Playables::PlayableGraph graph, ::System::Collections::Generic::List_1<::UnityEngine::Playables::Playable>* outplayables) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::CreateActivationPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateActivationPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(outplayables)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, root, graph, outplayables);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.SearchHierarchyAndConnectParticleSystem
void UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectParticleSystem(::System::Collections::Generic::IEnumerable_1<::UnityEngine::ParticleSystem*>* particleSystems, ::UnityEngine::Playables::PlayableGraph graph, ::System::Collections::Generic::List_1<::UnityEngine::Playables::Playable>* outplayables) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectParticleSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchHierarchyAndConnectParticleSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particleSystems), ::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(outplayables)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, particleSystems, graph, outplayables);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.SearchHierarchyAndConnectDirector
void UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectDirector(::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableDirector*>* directors, ::UnityEngine::Playables::PlayableGraph graph, ::System::Collections::Generic::List_1<::UnityEngine::Playables::Playable>* outplayables, bool disableSelfReferences) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectDirector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchHierarchyAndConnectDirector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directors), ::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(outplayables), ::il2cpp_utils::ExtractType(disableSelfReferences)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, directors, graph, outplayables, disableSelfReferences);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.SearchHierarchyAndConnectControlableScripts
void UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectControlableScripts(::System::Collections::Generic::IEnumerable_1<::UnityEngine::MonoBehaviour*>* controlableScripts, ::UnityEngine::Playables::PlayableGraph graph, ::System::Collections::Generic::List_1<::UnityEngine::Playables::Playable>* outplayables) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectControlableScripts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "SearchHierarchyAndConnectControlableScripts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controlableScripts), ::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(outplayables)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, controlableScripts, graph, outplayables);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.ConnectMixerAndPlayable
void UnityEngine::Timeline::ControlPlayableAsset::ConnectMixerAndPlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Playables::Playable mixer, ::UnityEngine::Playables::Playable playable, int portIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::ConnectMixerAndPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "ConnectMixerAndPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(mixer), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(portIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, mixer, playable, portIndex);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.GetControlableScripts
::System::Collections::Generic::IEnumerable_1<::UnityEngine::MonoBehaviour*>* UnityEngine::Timeline::ControlPlayableAsset::GetControlableScripts(::UnityEngine::GameObject* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::GetControlableScripts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "GetControlableScripts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::MonoBehaviour*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, root);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.UpdateDurationAndLoopFlag
void UnityEngine::Timeline::ControlPlayableAsset::UpdateDurationAndLoopFlag(::System::Collections::Generic::IList_1<::UnityEngine::Playables::PlayableDirector*>* directors, ::System::Collections::Generic::IList_1<::UnityEngine::ParticleSystem*>* particleSystems) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::UpdateDurationAndLoopFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDurationAndLoopFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directors), ::il2cpp_utils::ExtractType(particleSystems)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, directors, particleSystems);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.GetControllableParticleSystems
::System::Collections::Generic::IList_1<::UnityEngine::ParticleSystem*>* UnityEngine::Timeline::ControlPlayableAsset::GetControllableParticleSystems(::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::GetControllableParticleSystems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetControllableParticleSystems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::UnityEngine::ParticleSystem*>*, false>(this, ___internal__method, go);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.GetControllableParticleSystems
void UnityEngine::Timeline::ControlPlayableAsset::GetControllableParticleSystems(::UnityEngine::Transform* t, ::System::Collections::Generic::ICollection_1<::UnityEngine::ParticleSystem*>* roots, ::System::Collections::Generic::HashSet_1<::UnityEngine::ParticleSystem*>* subEmitters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::GetControllableParticleSystems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "GetControllableParticleSystems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(roots), ::il2cpp_utils::ExtractType(subEmitters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, roots, subEmitters);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.CacheSubEmitters
void UnityEngine::Timeline::ControlPlayableAsset::CacheSubEmitters(::UnityEngine::ParticleSystem* ps, ::System::Collections::Generic::HashSet_1<::UnityEngine::ParticleSystem*>* subEmitters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::CacheSubEmitters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "CacheSubEmitters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ps), ::il2cpp_utils::ExtractType(subEmitters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ps, subEmitters);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.GatherProperties
void UnityEngine::Timeline::ControlPlayableAsset::GatherProperties(::UnityEngine::Playables::PlayableDirector* director, ::UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::GatherProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ControlPlayableAsset*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.PreviewParticles
void UnityEngine::Timeline::ControlPlayableAsset::PreviewParticles(::UnityEngine::Timeline::IPropertyCollector* driver, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::ParticleSystem*>* particles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::PreviewParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "PreviewParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driver), ::il2cpp_utils::ExtractType(particles)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, driver, particles);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.PreviewActivation
void UnityEngine::Timeline::ControlPlayableAsset::PreviewActivation(::UnityEngine::Timeline::IPropertyCollector* driver, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::GameObject*>* objects) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::PreviewActivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "PreviewActivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driver), ::il2cpp_utils::ExtractType(objects)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, driver, objects);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.PreviewTimeControl
void UnityEngine::Timeline::ControlPlayableAsset::PreviewTimeControl(::UnityEngine::Timeline::IPropertyCollector* driver, ::UnityEngine::Playables::PlayableDirector* director, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::MonoBehaviour*>* scripts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::PreviewTimeControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "PreviewTimeControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driver), ::il2cpp_utils::ExtractType(director), ::il2cpp_utils::ExtractType(scripts)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, driver, director, scripts);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.PreviewDirectors
void UnityEngine::Timeline::ControlPlayableAsset::PreviewDirectors(::UnityEngine::Timeline::IPropertyCollector* driver, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableDirector*>* directors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::PreviewDirectors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "PreviewDirectors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(driver), ::il2cpp_utils::ExtractType(directors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, driver, directors);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.get_duration
double UnityEngine::Timeline::ControlPlayableAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::get_duration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableAsset*), 7));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset..cctor
void UnityEngine::Timeline::ControlPlayableAsset::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.CreatePlayable
::UnityEngine::Playables::Playable UnityEngine::Timeline::ControlPlayableAsset::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableAsset*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.ControlPlayableAsset/UnityEngine.Timeline.<GetControlableScripts>d__39
#include "UnityEngine/Timeline/ControlPlayableAsset_-GetControlableScripts-d__39.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MonoBehaviour <>2__current
[[deprecated]] ::UnityEngine::MonoBehaviour*& UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::UnityEngine::MonoBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated]] int& UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject root
[[deprecated]] ::UnityEngine::GameObject*& UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject <>3__root
[[deprecated]] ::UnityEngine::GameObject*& UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$3__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$3__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__root"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MonoBehaviour[] <>7__wrap1
[[deprecated]] ::ArrayW<::UnityEngine::MonoBehaviour*>& UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MonoBehaviour*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>7__wrap2
[[deprecated]] int& UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/UnityEngine.Timeline.<GetControlableScripts>d__39.System.Collections.Generic.IEnumerator<UnityEngine.MonoBehaviour>.get_Current
::UnityEngine::MonoBehaviour* UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System_Collections_Generic_IEnumerator$UnityEngine_MonoBehaviour$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System.Collections.Generic.IEnumerator<UnityEngine.MonoBehaviour>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::MonoBehaviour*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/UnityEngine.Timeline.<GetControlableScripts>d__39.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/UnityEngine.Timeline.<GetControlableScripts>d__39.System.IDisposable.Dispose
void UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/UnityEngine.Timeline.<GetControlableScripts>d__39.MoveNext
bool UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/UnityEngine.Timeline.<GetControlableScripts>d__39.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/UnityEngine.Timeline.<GetControlableScripts>d__39.System.Collections.Generic.IEnumerable<UnityEngine.MonoBehaviour>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::UnityEngine::MonoBehaviour*>* UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System_Collections_Generic_IEnumerable$UnityEngine_MonoBehaviour$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System.Collections.Generic.IEnumerable<UnityEngine.MonoBehaviour>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::UnityEngine::MonoBehaviour*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/UnityEngine.Timeline.<GetControlableScripts>d__39.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__39*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ControlTrack
#include "UnityEngine/Timeline/ControlTrack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.DiscreteTime
#include "UnityEngine/Timeline/DiscreteTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Double k_Tick
double UnityEngine::Timeline::DiscreteTime::_get_k_Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::_get_k_Tick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "DiscreteTime", "k_Tick"));
}
// Autogenerated static field setter
// Set static field: static private System.Double k_Tick
void UnityEngine::Timeline::DiscreteTime::_set_k_Tick(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::_set_k_Tick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "DiscreteTime", "k_Tick", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.DiscreteTime kMaxTime
::UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::_get_kMaxTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::_get_kMaxTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::DiscreteTime>("UnityEngine.Timeline", "DiscreteTime", "kMaxTime"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.DiscreteTime kMaxTime
void UnityEngine::Timeline::DiscreteTime::_set_kMaxTime(::UnityEngine::Timeline::DiscreteTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::_set_kMaxTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "DiscreteTime", "kMaxTime", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 m_DiscreteTime
[[deprecated]] int64_t& UnityEngine::Timeline::DiscreteTime::dyn_m_DiscreteTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::dyn_m_DiscreteTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DiscreteTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.get_tickValue
double UnityEngine::Timeline::DiscreteTime::get_tickValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::get_tickValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "get_tickValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
// ABORTED elsewhere.  UnityEngine::Timeline::DiscreteTime::DiscreteTime(::UnityEngine::Timeline::DiscreteTime time)
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
// ABORTED elsewhere.  UnityEngine::Timeline::DiscreteTime::DiscreteTime(int64_t time)
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
UnityEngine::Timeline::DiscreteTime::DiscreteTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
UnityEngine::Timeline::DiscreteTime::DiscreteTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
UnityEngine::Timeline::DiscreteTime::DiscreteTime(int time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..ctor
UnityEngine::Timeline::DiscreteTime::DiscreteTime(int frame, double fps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(fps)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame, fps);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..cctor
void UnityEngine::Timeline::DiscreteTime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.OneTickBefore
::UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::OneTickBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::OneTickBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OneTickBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::DiscreteTime, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.OneTickAfter
::UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::OneTickAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::OneTickAfter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OneTickAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::DiscreteTime, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetTick
int64_t UnityEngine::Timeline::DiscreteTime::GetTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::GetTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.FromTicks
::UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::FromTicks(int64_t ticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::FromTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "FromTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ticks)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ticks);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.CompareTo
int UnityEngine::Timeline::DiscreteTime::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Timeline::DiscreteTime), 4));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Equals
bool UnityEngine::Timeline::DiscreteTime::Equals(::UnityEngine::Timeline::DiscreteTime other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.DoubleToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::DoubleToDiscreteTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::DoubleToDiscreteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "DoubleToDiscreteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.FloatToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::FloatToDiscreteTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::FloatToDiscreteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "FloatToDiscreteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.IntToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::IntToDiscreteTime(int time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::IntToDiscreteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "IntToDiscreteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToDouble
double UnityEngine::Timeline::DiscreteTime::ToDouble(int64_t time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToFloat
float UnityEngine::Timeline::DiscreteTime::ToFloat(int64_t time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::ToFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "ToFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::operator double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::operator float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
// ABORTED elsewhere.  UnityEngine::Timeline::DiscreteTime::operator int64_t()
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::DiscreteTime(double& time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::DiscreteTime(float& time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::DiscreteTime(int64_t& time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  *this = ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Min
::UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::Min(::UnityEngine::Timeline::DiscreteTime lhs, ::UnityEngine::Timeline::DiscreteTime rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Max
::UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::Max(::UnityEngine::Timeline::DiscreteTime lhs, ::UnityEngine::Timeline::DiscreteTime rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.SnapToNearestTick
double UnityEngine::Timeline::DiscreteTime::SnapToNearestTick(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::SnapToNearestTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "SnapToNearestTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.SnapToNearestTick
float UnityEngine::Timeline::DiscreteTime::SnapToNearestTick(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::SnapToNearestTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "SnapToNearestTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetNearestTick
int64_t UnityEngine::Timeline::DiscreteTime::GetNearestTick(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::GetNearestTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "GetNearestTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Equals
bool UnityEngine::Timeline::DiscreteTime::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToString
::StringW UnityEngine::Timeline::DiscreteTime::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetHashCode
int UnityEngine::Timeline::DiscreteTime::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Equality
bool UnityEngine::Timeline::operator ==(const ::UnityEngine::Timeline::DiscreteTime& lhs, const ::UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Inequality
bool UnityEngine::Timeline::operator !=(const ::UnityEngine::Timeline::DiscreteTime& lhs, const ::UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_GreaterThan
bool UnityEngine::Timeline::operator >(const ::UnityEngine::Timeline::DiscreteTime& lhs, const ::UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_LessThan
bool UnityEngine::Timeline::operator <(const ::UnityEngine::Timeline::DiscreteTime& lhs, const ::UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_LessThanOrEqual
bool UnityEngine::Timeline::operator <=(const ::UnityEngine::Timeline::DiscreteTime& lhs, const ::UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_GreaterThanOrEqual
bool UnityEngine::Timeline::operator >=(const ::UnityEngine::Timeline::DiscreteTime& lhs, const ::UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Addition
::UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::operator+(const ::UnityEngine::Timeline::DiscreteTime& lhs, const ::UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Subtraction
::UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::operator-(const ::UnityEngine::Timeline::DiscreteTime& lhs, const ::UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DiscreteTime::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.InfiniteRuntimeClip
#include "UnityEngine/Timeline/InfiniteRuntimeClip.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 kIntervalEnd
int64_t UnityEngine::Timeline::InfiniteRuntimeClip::_get_kIntervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::InfiniteRuntimeClip::_get_kIntervalEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("UnityEngine.Timeline", "InfiniteRuntimeClip", "kIntervalEnd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 kIntervalEnd
void UnityEngine::Timeline::InfiniteRuntimeClip::_set_kIntervalEnd(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::InfiniteRuntimeClip::_set_kIntervalEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "InfiniteRuntimeClip", "kIntervalEnd", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.Playable m_Playable
[[deprecated]] ::UnityEngine::Playables::Playable& UnityEngine::Timeline::InfiniteRuntimeClip::dyn_m_Playable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::InfiniteRuntimeClip::dyn_m_Playable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Playable"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::Playable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip..cctor
void UnityEngine::Timeline::InfiniteRuntimeClip::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::InfiniteRuntimeClip::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "InfiniteRuntimeClip", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.get_intervalStart
int64_t UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.get_intervalEnd
int64_t UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.set_enable
void UnityEngine::Timeline::InfiniteRuntimeClip::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::InfiniteRuntimeClip::set_enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.EvaluateAt
void UnityEngine::Timeline::InfiniteRuntimeClip::EvaluateAt(double localTime, ::UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::InfiniteRuntimeClip::EvaluateAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IInterval
#include "UnityEngine/Timeline/IInterval.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IInterval.get_intervalStart
int64_t UnityEngine::Timeline::IInterval::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IInterval::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IInterval*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IInterval.get_intervalEnd
int64_t UnityEngine::Timeline::IInterval::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IInterval::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IInterval*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.RuntimeClip
#include "UnityEngine/Timeline/RuntimeClip.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TimelineClip m_Clip
[[deprecated]] ::UnityEngine::Timeline::TimelineClip*& UnityEngine::Timeline::RuntimeClip::dyn_m_Clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::dyn_m_Clip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Clip"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TimelineClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.Playable m_Playable
[[deprecated]] ::UnityEngine::Playables::Playable& UnityEngine::Timeline::RuntimeClip::dyn_m_Playable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::dyn_m_Playable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Playable"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::Playable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.Playable m_ParentMixer
[[deprecated]] ::UnityEngine::Playables::Playable& UnityEngine::Timeline::RuntimeClip::dyn_m_ParentMixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::dyn_m_ParentMixer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ParentMixer"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::Playable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_clip
::UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::RuntimeClip::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_mixer
::UnityEngine::Playables::Playable UnityEngine::Timeline::RuntimeClip::get_mixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::get_mixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_playable
::UnityEngine::Playables::Playable UnityEngine::Timeline::RuntimeClip::get_playable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::get_playable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.Create
void UnityEngine::Timeline::RuntimeClip::Create(::UnityEngine::Timeline::TimelineClip* clip, ::UnityEngine::Playables::Playable clipPlayable, ::UnityEngine::Playables::Playable parentMixer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(clipPlayable), ::il2cpp_utils::ExtractType(parentMixer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip, clipPlayable, parentMixer);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.SetTime
void UnityEngine::Timeline::RuntimeClip::SetTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::SetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.SetDuration
void UnityEngine::Timeline::RuntimeClip::SetDuration(double duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::SetDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, duration);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_start
double UnityEngine::Timeline::RuntimeClip::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::get_start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeClipBase*), 11));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_duration
double UnityEngine::Timeline::RuntimeClip::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::get_duration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeClipBase*), 12));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.set_enable
void UnityEngine::Timeline::RuntimeClip::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::set_enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.EvaluateAt
void UnityEngine::Timeline::RuntimeClip::EvaluateAt(double localTime, ::UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::EvaluateAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.Reset
void UnityEngine::Timeline::RuntimeClip::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClip::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.RuntimeClipBase
#include "UnityEngine/Timeline/RuntimeClipBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_start
double UnityEngine::Timeline::RuntimeClipBase::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClipBase::get_start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeClipBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_duration
double UnityEngine::Timeline::RuntimeClipBase::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClipBase::get_duration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeClipBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_intervalStart
int64_t UnityEngine::Timeline::RuntimeClipBase::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClipBase::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_intervalEnd
int64_t UnityEngine::Timeline::RuntimeClipBase::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeClipBase::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <intervalBit>k__BackingField
[[deprecated]] int& UnityEngine::Timeline::RuntimeElement::dyn_$intervalBit$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeElement::dyn_$intervalBit$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<intervalBit>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.get_intervalStart
int64_t UnityEngine::Timeline::RuntimeElement::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeElement::get_intervalStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.get_intervalEnd
int64_t UnityEngine::Timeline::RuntimeElement::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeElement::get_intervalEnd");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.get_intervalBit
int UnityEngine::Timeline::RuntimeElement::get_intervalBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeElement::get_intervalBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intervalBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.set_intervalBit
void UnityEngine::Timeline::RuntimeElement::set_intervalBit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeElement::set_intervalBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_intervalBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.set_enable
void UnityEngine::Timeline::RuntimeElement::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeElement::set_enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.EvaluateAt
void UnityEngine::Timeline::RuntimeElement::EvaluateAt(double localTime, ::UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeElement::EvaluateAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.Reset
void UnityEngine::Timeline::RuntimeElement::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::RuntimeElement::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ScheduleRuntimeClip
#include "UnityEngine/Timeline/ScheduleRuntimeClip.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TimelineClip m_Clip
[[deprecated]] ::UnityEngine::Timeline::TimelineClip*& UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_Clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_Clip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Clip"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TimelineClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.Playable m_Playable
[[deprecated]] ::UnityEngine::Playables::Playable& UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_Playable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_Playable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Playable"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::Playable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.Playable m_ParentMixer
[[deprecated]] ::UnityEngine::Playables::Playable& UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_ParentMixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_ParentMixer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ParentMixer"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::Playable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_StartDelay
[[deprecated]] double& UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_StartDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_StartDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartDelay"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_FinishTail
[[deprecated]] double& UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_FinishTail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_FinishTail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FinishTail"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Started
[[deprecated]] bool& UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_Started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ScheduleRuntimeClip::dyn_m_Started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_clip
::UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::ScheduleRuntimeClip::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ScheduleRuntimeClip::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_mixer
::UnityEngine::Playables::Playable UnityEngine::Timeline::ScheduleRuntimeClip::get_mixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ScheduleRuntimeClip::get_mixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_playable
::UnityEngine::Playables::Playable UnityEngine::Timeline::ScheduleRuntimeClip::get_playable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ScheduleRuntimeClip::get_playable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.SetTime
void UnityEngine::Timeline::ScheduleRuntimeClip::SetTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ScheduleRuntimeClip::SetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.Create
void UnityEngine::Timeline::ScheduleRuntimeClip::Create(::UnityEngine::Timeline::TimelineClip* clip, ::UnityEngine::Playables::Playable clipPlayable, ::UnityEngine::Playables::Playable parentMixer, double startDelay, double finishTail) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ScheduleRuntimeClip::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(clipPlayable), ::il2cpp_utils::ExtractType(parentMixer), ::il2cpp_utils::ExtractType(startDelay), ::il2cpp_utils::ExtractType(finishTail)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip, clipPlayable, parentMixer, startDelay, finishTail);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_start
double UnityEngine::Timeline::ScheduleRuntimeClip::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ScheduleRuntimeClip::get_start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeClipBase*), 11));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_duration
double UnityEngine::Timeline::ScheduleRuntimeClip::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ScheduleRuntimeClip::get_duration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeClipBase*), 12));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.set_enable
void UnityEngine::Timeline::ScheduleRuntimeClip::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ScheduleRuntimeClip::set_enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.EvaluateAt
void UnityEngine::Timeline::ScheduleRuntimeClip::EvaluateAt(double localTime, ::UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ScheduleRuntimeClip::EvaluateAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::RuntimeElement*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IMarker.get_time
double UnityEngine::Timeline::IMarker::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IMarker::get_time");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IMarker*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IMarker.set_time
void UnityEngine::Timeline::IMarker::set_time(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IMarker::set_time");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IMarker*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.IMarker.get_parent
::UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::IMarker::get_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IMarker::get_parent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IMarker*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IMarker.Initialize
void UnityEngine::Timeline::IMarker::Initialize(::UnityEngine::Timeline::TrackAsset* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IMarker::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IMarker*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.INotificationOptionProvider
#include "UnityEngine/Timeline/INotificationOptionProvider.hpp"
// Including type: UnityEngine.Timeline.NotificationFlags
#include "UnityEngine/Timeline/NotificationFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.INotificationOptionProvider.get_flags
::UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::INotificationOptionProvider::get_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::INotificationOptionProvider::get_flags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::INotificationOptionProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::NotificationFlags, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.Marker
#include "UnityEngine/Timeline/Marker.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Double m_Time
[[deprecated]] double& UnityEngine::Timeline::Marker::dyn_m_Time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Marker::dyn_m_Time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Time"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.TrackAsset <parent>k__BackingField
[[deprecated]] ::UnityEngine::Timeline::TrackAsset*& UnityEngine::Timeline::Marker::dyn_$parent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Marker::dyn_$parent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<parent>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TrackAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.Marker.get_parent
::UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::Marker::get_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Marker::get_parent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::Marker*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.Marker.set_parent
void UnityEngine::Timeline::Marker::set_parent(::UnityEngine::Timeline::TrackAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Marker::set_parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.Marker.get_time
double UnityEngine::Timeline::Marker::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Marker::get_time");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::Marker*), 4));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.Marker.set_time
void UnityEngine::Timeline::Marker::set_time(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Marker::set_time");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::Marker*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.Marker.UnityEngine.Timeline.IMarker.Initialize
void UnityEngine::Timeline::Marker::UnityEngine_Timeline_IMarker_Initialize(::UnityEngine::Timeline::TrackAsset* parentTrack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Marker::UnityEngine.Timeline.IMarker.Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::Marker*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentTrack);
}
// Autogenerated method: UnityEngine.Timeline.Marker.OnInitialize
void UnityEngine::Timeline::Marker::OnInitialize(::UnityEngine::Timeline::TrackAsset* aPent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Marker::OnInitialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::Marker*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, aPent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MarkerList
#include "UnityEngine/Timeline/MarkerList.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Playables.PlayableAsset
#include "UnityEngine/Playables/PlayableAsset.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.ScriptableObject> m_Objects
[[deprecated]] ::System::Collections::Generic::List_1<::UnityEngine::ScriptableObject*>*& UnityEngine::Timeline::MarkerList::dyn_m_Objects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::dyn_m_Objects");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Objects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::ScriptableObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Timeline.IMarker> m_Cache
[[deprecated]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::IMarker*>*& UnityEngine::Timeline::MarkerList::dyn_m_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::dyn_m_Cache");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Cache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::IMarker*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CacheDirty
[[deprecated]] bool& UnityEngine::Timeline::MarkerList::dyn_m_CacheDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::dyn_m_CacheDirty");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CacheDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HasNotifications
[[deprecated]] bool& UnityEngine::Timeline::MarkerList::dyn_m_HasNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::dyn_m_HasNotifications");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HasNotifications"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.get_markers
::System::Collections::Generic::List_1<::UnityEngine::Timeline::IMarker*>* UnityEngine::Timeline::MarkerList::get_markers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::get_markers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_markers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Timeline::IMarker*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.get_Count
int UnityEngine::Timeline::MarkerList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.get_Item
::UnityEngine::Timeline::IMarker* UnityEngine::Timeline::MarkerList::get_Item(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::IMarker*, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList..ctor
UnityEngine::Timeline::MarkerList::MarkerList(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Add
void UnityEngine::Timeline::MarkerList::Add(::UnityEngine::ScriptableObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Remove
bool UnityEngine::Timeline::MarkerList::Remove(::UnityEngine::Timeline::IMarker* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Remove
bool UnityEngine::Timeline::MarkerList::Remove(::UnityEngine::ScriptableObject* item, ::UnityEngine::Timeline::TimelineAsset* timelineAsset, ::UnityEngine::Playables::PlayableAsset* thingToDirty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item), ::il2cpp_utils::ExtractType(timelineAsset), ::il2cpp_utils::ExtractType(thingToDirty)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item, timelineAsset, thingToDirty);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Clear
void UnityEngine::Timeline::MarkerList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Contains
bool UnityEngine::Timeline::MarkerList::Contains(::UnityEngine::ScriptableObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.GetMarkers
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::IMarker*>* UnityEngine::Timeline::MarkerList::GetMarkers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::GetMarkers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetMarkers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::IMarker*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.GetRawMarkerList
::System::Collections::Generic::List_1<::UnityEngine::ScriptableObject*>* UnityEngine::Timeline::MarkerList::GetRawMarkerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::GetRawMarkerList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRawMarkerList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::ScriptableObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.CreateMarker
::UnityEngine::Timeline::IMarker* UnityEngine::Timeline::MarkerList::CreateMarker(::System::Type* type, double time, ::UnityEngine::Timeline::TrackAsset* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::CreateMarker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreateMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(owner)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::IMarker*, false>(this, ___internal__method, type, time, owner);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.HasNotifications
bool UnityEngine::Timeline::MarkerList::HasNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::HasNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "HasNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::MarkerList::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Timeline::MarkerList), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::MarkerList::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Timeline::MarkerList), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.BuildCache
void UnityEngine::Timeline::MarkerList::BuildCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerList::BuildCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "BuildCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MarkerTrack
#include "UnityEngine/Timeline/MarkerTrack.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.MarkerTrack.get_outputs
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::MarkerTrack::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MarkerTrack::get_outputs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalTrack
#include "UnityEngine/Timeline/SignalTrack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.CustomSignalEventDrawer
#include "UnityEngine/Timeline/CustomSignalEventDrawer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.Timeline.SignalAsset> OnEnableCallback
::System::Action_1<::UnityEngine::Timeline::SignalAsset*>* UnityEngine::Timeline::SignalAsset::_get_OnEnableCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalAsset::_get_OnEnableCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::Timeline::SignalAsset*>*>("UnityEngine.Timeline", "SignalAsset", "OnEnableCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.Timeline.SignalAsset> OnEnableCallback
void UnityEngine::Timeline::SignalAsset::_set_OnEnableCallback(::System::Action_1<::UnityEngine::Timeline::SignalAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalAsset::_set_OnEnableCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "SignalAsset", "OnEnableCallback", value));
}
// Autogenerated method: UnityEngine.Timeline.SignalAsset.add_OnEnableCallback
void UnityEngine::Timeline::SignalAsset::add_OnEnableCallback(::System::Action_1<::UnityEngine::Timeline::SignalAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalAsset::add_OnEnableCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "SignalAsset", "add_OnEnableCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalAsset.remove_OnEnableCallback
void UnityEngine::Timeline::SignalAsset::remove_OnEnableCallback(::System::Action_1<::UnityEngine::Timeline::SignalAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalAsset::remove_OnEnableCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "SignalAsset", "remove_OnEnableCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalAsset.OnEnable
void UnityEngine::Timeline::SignalAsset::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalAsset::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalEmitter
#include "UnityEngine/Timeline/SignalEmitter.hpp"
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: UnityEngine.PropertyName
#include "UnityEngine/PropertyName.hpp"
// Including type: UnityEngine.Timeline.NotificationFlags
#include "UnityEngine/Timeline/NotificationFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Retroactive
[[deprecated]] bool& UnityEngine::Timeline::SignalEmitter::dyn_m_Retroactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalEmitter::dyn_m_Retroactive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Retroactive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EmitOnce
[[deprecated]] bool& UnityEngine::Timeline::SignalEmitter::dyn_m_EmitOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalEmitter::dyn_m_EmitOnce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EmitOnce"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.SignalAsset m_Asset
[[deprecated]] ::UnityEngine::Timeline::SignalAsset*& UnityEngine::Timeline::SignalEmitter::dyn_m_Asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalEmitter::dyn_m_Asset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Asset"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::SignalAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.get_retroactive
bool UnityEngine::Timeline::SignalEmitter::get_retroactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalEmitter::get_retroactive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_retroactive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.set_retroactive
void UnityEngine::Timeline::SignalEmitter::set_retroactive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalEmitter::set_retroactive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_retroactive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.get_emitOnce
bool UnityEngine::Timeline::SignalEmitter::get_emitOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalEmitter::get_emitOnce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_emitOnce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.set_emitOnce
void UnityEngine::Timeline::SignalEmitter::set_emitOnce(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalEmitter::set_emitOnce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_emitOnce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.get_asset
::UnityEngine::Timeline::SignalAsset* UnityEngine::Timeline::SignalEmitter::get_asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalEmitter::get_asset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_asset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::SignalAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.set_asset
void UnityEngine::Timeline::SignalEmitter::set_asset(::UnityEngine::Timeline::SignalAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalEmitter::set_asset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_asset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.UnityEngine.Playables.INotification.get_id
::UnityEngine::PropertyName UnityEngine::Timeline::SignalEmitter::UnityEngine_Playables_INotification_get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalEmitter::UnityEngine.Playables.INotification.get_id");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::SignalEmitter*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::PropertyName, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.UnityEngine.Timeline.INotificationOptionProvider.get_flags
::UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::SignalEmitter::UnityEngine_Timeline_INotificationOptionProvider_get_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalEmitter::UnityEngine.Timeline.INotificationOptionProvider.get_flags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::SignalEmitter*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::NotificationFlags, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.SignalReceiver
#include "UnityEngine/Timeline/SignalReceiver.hpp"
// Including type: UnityEngine.Timeline.SignalReceiver/UnityEngine.Timeline.EventKeyValue
#include "UnityEngine/Timeline/SignalReceiver_EventKeyValue.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.SignalReceiver/UnityEngine.Timeline.EventKeyValue m_Events
[[deprecated]] ::UnityEngine::Timeline::SignalReceiver::EventKeyValue*& UnityEngine::Timeline::SignalReceiver::dyn_m_Events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::dyn_m_Events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Events"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::SignalReceiver::EventKeyValue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.OnNotify
void UnityEngine::Timeline::SignalReceiver::OnNotify(::UnityEngine::Playables::Playable origin, ::UnityEngine::Playables::INotification* notification, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::OnNotify");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::SignalReceiver*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, origin, notification, context);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.AddReaction
void UnityEngine::Timeline::SignalReceiver::AddReaction(::UnityEngine::Timeline::SignalAsset* asset, ::UnityEngine::Events::UnityEvent* reaction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::AddReaction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddReaction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(reaction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asset, reaction);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.AddEmptyReaction
int UnityEngine::Timeline::SignalReceiver::AddEmptyReaction(::UnityEngine::Events::UnityEvent* reaction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::AddEmptyReaction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEmptyReaction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reaction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, reaction);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.Remove
void UnityEngine::Timeline::SignalReceiver::Remove(::UnityEngine::Timeline::SignalAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetRegisteredSignals
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::SignalAsset*>* UnityEngine::Timeline::SignalReceiver::GetRegisteredSignals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::GetRegisteredSignals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRegisteredSignals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::SignalAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetReaction
::UnityEngine::Events::UnityEvent* UnityEngine::Timeline::SignalReceiver::GetReaction(::UnityEngine::Timeline::SignalAsset* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::GetReaction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReaction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method, key);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.Count
int UnityEngine::Timeline::SignalReceiver::Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.ChangeSignalAtIndex
void UnityEngine::Timeline::SignalReceiver::ChangeSignalAtIndex(int idx, ::UnityEngine::Timeline::SignalAsset* newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::ChangeSignalAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeSignalAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(newKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, newKey);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.RemoveAtIndex
void UnityEngine::Timeline::SignalReceiver::RemoveAtIndex(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::RemoveAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.ChangeReactionAtIndex
void UnityEngine::Timeline::SignalReceiver::ChangeReactionAtIndex(int idx, ::UnityEngine::Events::UnityEvent* reaction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::ChangeReactionAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeReactionAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(reaction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, reaction);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetReactionAtIndex
::UnityEngine::Events::UnityEvent* UnityEngine::Timeline::SignalReceiver::GetReactionAtIndex(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::GetReactionAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReactionAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Events::UnityEvent*, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetSignalAssetAtIndex
::UnityEngine::Timeline::SignalAsset* UnityEngine::Timeline::SignalReceiver::GetSignalAssetAtIndex(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::GetSignalAssetAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSignalAssetAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::SignalAsset*, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.OnEnable
void UnityEngine::Timeline::SignalReceiver::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalReceiver/UnityEngine.Timeline.EventKeyValue
#include "UnityEngine/Timeline/SignalReceiver_EventKeyValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Timeline.SignalAsset> m_Signals
[[deprecated]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::SignalAsset*>*& UnityEngine::Timeline::SignalReceiver::EventKeyValue::dyn_m_Signals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::EventKeyValue::dyn_m_Signals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Signals"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::SignalAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Events.UnityEvent> m_Events
[[deprecated]] ::System::Collections::Generic::List_1<::UnityEngine::Events::UnityEvent*>*& UnityEngine::Timeline::SignalReceiver::EventKeyValue::dyn_m_Events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::EventKeyValue::dyn_m_Events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Events"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Events::UnityEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/UnityEngine.Timeline.EventKeyValue.get_signals
::System::Collections::Generic::List_1<::UnityEngine::Timeline::SignalAsset*>* UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_signals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_signals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_signals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Timeline::SignalAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/UnityEngine.Timeline.EventKeyValue.get_events
::System::Collections::Generic::List_1<::UnityEngine::Events::UnityEvent*>* UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_events");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_events", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Events::UnityEvent*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/UnityEngine.Timeline.EventKeyValue.TryGetValue
bool UnityEngine::Timeline::SignalReceiver::EventKeyValue::TryGetValue(::UnityEngine::Timeline::SignalAsset* key, ByRef<::UnityEngine::Events::UnityEvent*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::EventKeyValue::TryGetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Events::UnityEvent*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, byref(value));
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/UnityEngine.Timeline.EventKeyValue.Append
void UnityEngine::Timeline::SignalReceiver::EventKeyValue::Append(::UnityEngine::Timeline::SignalAsset* key, ::UnityEngine::Events::UnityEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::EventKeyValue::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/UnityEngine.Timeline.EventKeyValue.Remove
void UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/UnityEngine.Timeline.EventKeyValue.Remove
void UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove(::UnityEngine::Timeline::SignalAsset* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackAssetExtensions
#include "UnityEngine/Timeline/TrackAssetExtensions.hpp"
// Including type: UnityEngine.Timeline.GroupTrack
#include "UnityEngine/Timeline/GroupTrack.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TrackAssetExtensions.GetGroup
::UnityEngine::Timeline::GroupTrack* UnityEngine::Timeline::TrackAssetExtensions::GetGroup(::UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAssetExtensions::GetGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAssetExtensions", "GetGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::GroupTrack*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAssetExtensions.SetGroup
void UnityEngine::Timeline::TrackAssetExtensions::SetGroup(::UnityEngine::Timeline::TrackAsset* asset, ::UnityEngine::Timeline::GroupTrack* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackAssetExtensions::SetGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAssetExtensions", "SetGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asset, group);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.GroupTrack
#include "UnityEngine/Timeline/GroupTrack.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.GroupTrack.get_outputs
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::GroupTrack::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::GroupTrack::get_outputs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.GroupTrack.CanCompileClips
bool UnityEngine::Timeline::GroupTrack::CanCompileClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::GroupTrack::CanCompileClips");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 33));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ILayerable
#include "UnityEngine/Timeline/ILayerable.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ILayerable.CreateLayerMixer
::UnityEngine::Playables::Playable UnityEngine::Timeline::ILayerable::CreateLayerMixer(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ILayerable::CreateLayerMixer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ILayerable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, inputCount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.ActivationControlPlayable
#include "UnityEngine/Timeline/ActivationControlPlayable.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject gameObject
[[deprecated]] ::UnityEngine::GameObject*& UnityEngine::Timeline::ActivationControlPlayable::dyn_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::dyn_gameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.PostPlaybackState postPlayback
[[deprecated]] ::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState& UnityEngine::Timeline::ActivationControlPlayable::dyn_postPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::dyn_postPlayback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "postPlayback"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.InitialState m_InitialState
[[deprecated]] ::UnityEngine::Timeline::ActivationControlPlayable::InitialState& UnityEngine::Timeline::ActivationControlPlayable::dyn_m_InitialState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::dyn_m_InitialState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InitialState"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::ActivationControlPlayable::InitialState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.Create
::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::ActivationControlPlayable*> UnityEngine::Timeline::ActivationControlPlayable::Create(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* gameObject, ::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState postPlaybackState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ActivationControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(postPlaybackState)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::ActivationControlPlayable*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, gameObject, postPlaybackState);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPlay(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPause(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.ProcessFrame
void UnityEngine::Timeline::ActivationControlPlayable::ProcessFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, userData);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnGraphStart
void UnityEngine::Timeline::ActivationControlPlayable::OnGraphStart(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnPlayableDestroy
void UnityEngine::Timeline::ActivationControlPlayable::OnPlayableDestroy(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.PostPlaybackState
#include "UnityEngine/Timeline/ActivationControlPlayable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.PostPlaybackState Active
::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState>("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Active"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.PostPlaybackState Active
void UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Active(::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Active", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.PostPlaybackState Inactive
::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Inactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Inactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState>("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Inactive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.PostPlaybackState Inactive
void UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Inactive(::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Inactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Inactive", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.PostPlaybackState Revert
::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Revert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Revert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState>("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Revert"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.PostPlaybackState Revert
void UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Revert(::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Revert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Revert", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.InitialState
#include "UnityEngine/Timeline/ActivationControlPlayable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.InitialState Unset
::UnityEngine::Timeline::ActivationControlPlayable::InitialState UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Unset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Unset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ActivationControlPlayable::InitialState>("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Unset"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.InitialState Unset
void UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Unset(::UnityEngine::Timeline::ActivationControlPlayable::InitialState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Unset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Unset", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.InitialState Active
::UnityEngine::Timeline::ActivationControlPlayable::InitialState UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ActivationControlPlayable::InitialState>("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Active"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.InitialState Active
void UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Active(::UnityEngine::Timeline::ActivationControlPlayable::InitialState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Active", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.InitialState Inactive
::UnityEngine::Timeline::ActivationControlPlayable::InitialState UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Inactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Inactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::ActivationControlPlayable::InitialState>("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Inactive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/UnityEngine.Timeline.InitialState Inactive
void UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Inactive(::UnityEngine::Timeline::ActivationControlPlayable::InitialState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Inactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Inactive", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& UnityEngine::Timeline::ActivationControlPlayable::InitialState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ActivationControlPlayable::InitialState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.BasicPlayableBehaviour
#include "UnityEngine/Timeline/BasicPlayableBehaviour.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.get_duration
double UnityEngine::Timeline::BasicPlayableBehaviour::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::get_duration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 14));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.get_outputs
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::BasicPlayableBehaviour::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::get_outputs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnGraphStart
void UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStart(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnGraphStop
void UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStop(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnPlayableCreate
void UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableCreate(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableCreate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnPlayableDestroy
void UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableDestroy(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnBehaviourPlay
void UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPlay(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnBehaviourPause
void UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPause(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.PrepareFrame
void UnityEngine::Timeline::BasicPlayableBehaviour::PrepareFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.ProcessFrame
void UnityEngine::Timeline::BasicPlayableBehaviour::ProcessFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 23));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.CreatePlayable
::UnityEngine::Playables::Playable UnityEngine::Timeline::BasicPlayableBehaviour::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::BasicPlayableBehaviour::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::BasicPlayableBehaviour*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, owner);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.DirectorControlPlayable
#include "UnityEngine/Timeline/DirectorControlPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Playables.PlayableDirector director
[[deprecated]] ::UnityEngine::Playables::PlayableDirector*& UnityEngine::Timeline::DirectorControlPlayable::dyn_director() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::dyn_director");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "director"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableDirector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SyncTime
[[deprecated]] bool& UnityEngine::Timeline::DirectorControlPlayable::dyn_m_SyncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::dyn_m_SyncTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SyncTime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_AssetDuration
[[deprecated]] double& UnityEngine::Timeline::DirectorControlPlayable::dyn_m_AssetDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::dyn_m_AssetDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AssetDuration"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.Create
::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::DirectorControlPlayable*> UnityEngine::Timeline::DirectorControlPlayable::Create(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Playables::PlayableDirector* director) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DirectorControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(director)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::DirectorControlPlayable*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, director);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.SyncSpeed
void UnityEngine::Timeline::DirectorControlPlayable::SyncSpeed(double speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::SyncSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speed);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.SyncPlayState
void UnityEngine::Timeline::DirectorControlPlayable::SyncPlayState(::UnityEngine::Playables::PlayableGraph graph, double playableTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::SyncPlayState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncPlayState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(playableTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph, playableTime);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.DetectDiscontinuity
bool UnityEngine::Timeline::DirectorControlPlayable::DetectDiscontinuity(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::DetectDiscontinuity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectDiscontinuity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.DetectOutOfSync
bool UnityEngine::Timeline::DirectorControlPlayable::DetectOutOfSync(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::DetectOutOfSync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectOutOfSync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.UpdateTime
void UnityEngine::Timeline::DirectorControlPlayable::UpdateTime(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::UpdateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.OnPlayableDestroy
void UnityEngine::Timeline::DirectorControlPlayable::OnPlayableDestroy(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.PrepareFrame
void UnityEngine::Timeline::DirectorControlPlayable::PrepareFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPlay(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPause(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.ProcessFrame
void UnityEngine::Timeline::DirectorControlPlayable::ProcessFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::DirectorControlPlayable::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimeControl
#include "UnityEngine/Timeline/ITimeControl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimeControl.SetTime
void UnityEngine::Timeline::ITimeControl::SetTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ITimeControl::SetTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ITimeControl*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.ITimeControl.OnControlTimeStart
void UnityEngine::Timeline::ITimeControl::OnControlTimeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ITimeControl::OnControlTimeStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ITimeControl*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ITimeControl.OnControlTimeStop
void UnityEngine::Timeline::ITimeControl::OnControlTimeStop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ITimeControl::OnControlTimeStop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ITimeControl*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotificationFlags
#include "UnityEngine/Timeline/NotificationFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags TriggerInEditMode
::UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_TriggerInEditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::_get_TriggerInEditMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "TriggerInEditMode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags TriggerInEditMode
void UnityEngine::Timeline::NotificationFlags::_set_TriggerInEditMode(::UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::_set_TriggerInEditMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "TriggerInEditMode", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags Retroactive
::UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_Retroactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::_get_Retroactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "Retroactive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags Retroactive
void UnityEngine::Timeline::NotificationFlags::_set_Retroactive(::UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::_set_Retroactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "Retroactive", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags TriggerOnce
::UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_TriggerOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::_get_TriggerOnce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "TriggerOnce"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags TriggerOnce
void UnityEngine::Timeline::NotificationFlags::_set_TriggerOnce(::UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::_set_TriggerOnce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "TriggerOnce", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int16 value__
[[deprecated]] int16_t& UnityEngine::Timeline::NotificationFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ParticleControlPlayable
#include "UnityEngine/Timeline/ParticleControlPlayable.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kUnsetTime
float UnityEngine::Timeline::ParticleControlPlayable::_get_kUnsetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::_get_kUnsetTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "ParticleControlPlayable", "kUnsetTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kUnsetTime
void UnityEngine::Timeline::ParticleControlPlayable::_set_kUnsetTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::_set_kUnsetTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ParticleControlPlayable", "kUnsetTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LastPlayableTime
[[deprecated]] float& UnityEngine::Timeline::ParticleControlPlayable::dyn_m_LastPlayableTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::dyn_m_LastPlayableTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastPlayableTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_LastParticleTime
[[deprecated]] float& UnityEngine::Timeline::ParticleControlPlayable::dyn_m_LastParticleTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::dyn_m_LastParticleTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastParticleTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_RandomSeed
[[deprecated]] uint& UnityEngine::Timeline::ParticleControlPlayable::dyn_m_RandomSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::dyn_m_RandomSeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RandomSeed"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem <particleSystem>k__BackingField
[[deprecated]] ::UnityEngine::ParticleSystem*& UnityEngine::Timeline::ParticleControlPlayable::dyn_$particleSystem$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::dyn_$particleSystem$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<particleSystem>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.get_particleSystem
::UnityEngine::ParticleSystem* UnityEngine::Timeline::ParticleControlPlayable::get_particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::get_particleSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_particleSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ParticleSystem*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.set_particleSystem
void UnityEngine::Timeline::ParticleControlPlayable::set_particleSystem(::UnityEngine::ParticleSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::set_particleSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_particleSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.Create
::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::ParticleControlPlayable*> UnityEngine::Timeline::ParticleControlPlayable::Create(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::ParticleSystem* component, uint randomSeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ParticleControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(randomSeed)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::ParticleControlPlayable*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, component, randomSeed);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.Initialize
void UnityEngine::Timeline::ParticleControlPlayable::Initialize(::UnityEngine::ParticleSystem* ps, uint randomSeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ps), ::il2cpp_utils::ExtractType(randomSeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ps, randomSeed);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.SetRandomSeed
void UnityEngine::Timeline::ParticleControlPlayable::SetRandomSeed(::UnityEngine::ParticleSystem* particleSystem, uint randomSeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::SetRandomSeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ParticleControlPlayable", "SetRandomSeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particleSystem), ::il2cpp_utils::ExtractType(randomSeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, particleSystem, randomSeed);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.Simulate
void UnityEngine::Timeline::ParticleControlPlayable::Simulate(float time, bool restart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::Simulate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Simulate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(restart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, restart);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.PrepareFrame
void UnityEngine::Timeline::ParticleControlPlayable::PrepareFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, data);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPlay(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPause(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.PrefabControlPlayable
#include "UnityEngine/Timeline/PrefabControlPlayable.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_Instance
[[deprecated]] ::UnityEngine::GameObject*& UnityEngine::Timeline::PrefabControlPlayable::dyn_m_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::PrefabControlPlayable::dyn_m_Instance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Instance"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.get_prefabInstance
::UnityEngine::GameObject* UnityEngine::Timeline::PrefabControlPlayable::get_prefabInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::PrefabControlPlayable::get_prefabInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prefabInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.Create
::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::PrefabControlPlayable*> UnityEngine::Timeline::PrefabControlPlayable::Create(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* prefabGameObject, ::UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::PrefabControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "PrefabControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(prefabGameObject), ::il2cpp_utils::ExtractType(parentTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::PrefabControlPlayable*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, prefabGameObject, parentTransform);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.Initialize
::UnityEngine::GameObject* UnityEngine::Timeline::PrefabControlPlayable::Initialize(::UnityEngine::GameObject* prefabGameObject, ::UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::PrefabControlPlayable::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefabGameObject), ::il2cpp_utils::ExtractType(parentTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, prefabGameObject, parentTransform);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.SetHideFlagsRecursive
void UnityEngine::Timeline::PrefabControlPlayable::SetHideFlagsRecursive(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::PrefabControlPlayable::SetHideFlagsRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "PrefabControlPlayable", "SetHideFlagsRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.OnPlayableDestroy
void UnityEngine::Timeline::PrefabControlPlayable::OnPlayableDestroy(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::PrefabControlPlayable::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPlay(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPause(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeControlPlayable
#include "UnityEngine/Timeline/TimeControlPlayable.hpp"
// Including type: UnityEngine.Timeline.ITimeControl
#include "UnityEngine/Timeline/ITimeControl.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.ITimeControl m_timeControl
[[deprecated]] ::UnityEngine::Timeline::ITimeControl*& UnityEngine::Timeline::TimeControlPlayable::dyn_m_timeControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeControlPlayable::dyn_m_timeControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_timeControl"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::ITimeControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_started
[[deprecated]] bool& UnityEngine::Timeline::TimeControlPlayable::dyn_m_started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeControlPlayable::dyn_m_started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.Create
::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimeControlPlayable*> UnityEngine::Timeline::TimeControlPlayable::Create(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Timeline::ITimeControl* timeControl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timeControl)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimeControlPlayable*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, timeControl);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.Initialize
void UnityEngine::Timeline::TimeControlPlayable::Initialize(::UnityEngine::Timeline::ITimeControl* timeControl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeControlPlayable::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeControl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeControl);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.PrepareFrame
void UnityEngine::Timeline::TimeControlPlayable::PrepareFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeControlPlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPlay(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPause(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.<>c
#include "UnityEngine/Timeline/TimeNotificationBehaviour_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.DirectorWrapMode
#include "UnityEngine/Playables/DirectorWrapMode.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.NotificationEntry> m_Notifications
[[deprecated]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>*& UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_Notifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_Notifications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Notifications"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double m_PreviousTime
[[deprecated]] double& UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_PreviousTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_PreviousTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreviousTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_NeedSortNotifications
[[deprecated]] bool& UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_NeedSortNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_NeedSortNotifications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NeedSortNotifications"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.Playable m_TimeSource
[[deprecated]] ::UnityEngine::Playables::Playable& UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_TimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::dyn_m_TimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TimeSource"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::Playable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.set_timeSource
void UnityEngine::Timeline::TimeNotificationBehaviour::set_timeSource(::UnityEngine::Playables::Playable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::set_timeSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Create
::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimeNotificationBehaviour*> UnityEngine::Timeline::TimeNotificationBehaviour::Create(::UnityEngine::Playables::PlayableGraph graph, double duration, ::UnityEngine::Playables::DirectorWrapMode loopMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(loopMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimeNotificationBehaviour*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, duration, loopMode);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.AddNotification
void UnityEngine::Timeline::TimeNotificationBehaviour::AddNotification(double time, ::UnityEngine::Playables::INotification* payload, ::UnityEngine::Timeline::NotificationFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::AddNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(payload), ::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, payload, flags);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.SortNotifications
void UnityEngine::Timeline::TimeNotificationBehaviour::SortNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::SortNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.CanRestoreNotification
bool UnityEngine::Timeline::TimeNotificationBehaviour::CanRestoreNotification(::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry e, ::UnityEngine::Playables::FrameData info, double currentTime, double previousTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::CanRestoreNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "CanRestoreNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(currentTime), ::il2cpp_utils::ExtractType(previousTime)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e, info, currentTime, previousTime);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.TriggerNotificationsInRange
void UnityEngine::Timeline::TimeNotificationBehaviour::TriggerNotificationsInRange(double start, double end, ::UnityEngine::Playables::FrameData info, ::UnityEngine::Playables::Playable playable, bool checkState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::TriggerNotificationsInRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerNotificationsInRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(checkState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, info, playable, checkState);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.SyncDurationWithExternalSource
void UnityEngine::Timeline::TimeNotificationBehaviour::SyncDurationWithExternalSource(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::SyncDurationWithExternalSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncDurationWithExternalSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Trigger_internal
void UnityEngine::Timeline::TimeNotificationBehaviour::Trigger_internal(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::PlayableOutput output, ByRef<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::Trigger_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Trigger_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playable, output, byref(e));
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Restore_internal
void UnityEngine::Timeline::TimeNotificationBehaviour::Restore_internal(ByRef<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::Restore_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Restore_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(e));
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.OnGraphStart
void UnityEngine::Timeline::TimeNotificationBehaviour::OnGraphStart(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.OnBehaviourPause
void UnityEngine::Timeline::TimeNotificationBehaviour::OnBehaviourPause(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::OnBehaviourPause");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.PrepareFrame
void UnityEngine::Timeline::TimeNotificationBehaviour::PrepareFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.NotificationEntry
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Double time
[[deprecated]] double& UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_time");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Playables.INotification payload
[[deprecated]] ::UnityEngine::Playables::INotification*& UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_payload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_payload");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "payload"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::INotification**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean notificationFired
[[deprecated]] bool& UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_notificationFired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_notificationFired");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notificationFired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Timeline.NotificationFlags flags
[[deprecated]] ::UnityEngine::Timeline::NotificationFlags& UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::dyn_flags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::NotificationFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.NotificationEntry.get_triggerInEditor
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerInEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_triggerInEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.NotificationEntry.get_prewarm
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_prewarm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_prewarm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_prewarm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.NotificationEntry.get_triggerOnce
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerOnce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_triggerOnce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.<>c
#include "UnityEngine/Timeline/TimeNotificationBehaviour_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.<>c <>9
::UnityEngine::Timeline::TimeNotificationBehaviour::$$c* UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TimeNotificationBehaviour::$$c*>("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.<>c <>9
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9(::UnityEngine::Timeline::TimeNotificationBehaviour::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.NotificationEntry> <>9__12_0
::System::Comparison_1<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>* UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9__12_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>*>("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9__12_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.NotificationEntry> <>9__12_0
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9__12_0(::System::Comparison_1<::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9__12_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9__12_0", value)));
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.<>c..cctor
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/UnityEngine.Timeline.<>c.<SortNotifications>b__12_0
int UnityEngine::Timeline::TimeNotificationBehaviour::$$c::$SortNotifications$b__12_0(::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry x, ::UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeNotificationBehaviour::$$c::<SortNotifications>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortNotifications>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.PlayableTrack
#include "UnityEngine/Timeline/PlayableTrack.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.PlayableTrack.OnCreateClip
void UnityEngine::Timeline::PlayableTrack::OnCreateClip(::UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::PlayableTrack::OnCreateClip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::TrackAsset*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackMediaType
#include "UnityEngine/Timeline/TrackMediaType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Timeline.TimelineAsset/UnityEngine.Timeline.MediaType m_MediaType
[[deprecated]] ::UnityEngine::Timeline::TimelineAsset::MediaType& UnityEngine::Timeline::TrackMediaType::dyn_m_MediaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackMediaType::dyn_m_MediaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MediaType"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TimelineAsset::MediaType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackClipTypeAttribute
#include "UnityEngine/Timeline/TrackClipTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Type inspectedType
[[deprecated]] ::System::Type*& UnityEngine::Timeline::TrackClipTypeAttribute::dyn_inspectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackClipTypeAttribute::dyn_inspectedType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inspectedType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean allowAutoCreate
[[deprecated]] bool& UnityEngine::Timeline::TrackClipTypeAttribute::dyn_allowAutoCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackClipTypeAttribute::dyn_allowAutoCreate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allowAutoCreate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotKeyableAttribute
#include "UnityEngine/Timeline/NotKeyableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackBindingFlags
#include "UnityEngine/Timeline/TrackBindingFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags None
::UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags None
void UnityEngine::Timeline::TrackBindingFlags::_set_None(::UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags AllowCreateComponent
::UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_AllowCreateComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::_get_AllowCreateComponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "AllowCreateComponent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags AllowCreateComponent
void UnityEngine::Timeline::TrackBindingFlags::_set_AllowCreateComponent(::UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::_set_AllowCreateComponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "AllowCreateComponent", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags All
::UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags All
void UnityEngine::Timeline::TrackBindingFlags::_set_All(::UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& UnityEngine::Timeline::TrackBindingFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackBindingTypeAttribute
#include "UnityEngine/Timeline/TrackBindingTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Type type
[[deprecated]] ::System::Type*& UnityEngine::Timeline::TrackBindingTypeAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingTypeAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Timeline.TrackBindingFlags flags
[[deprecated]] ::UnityEngine::Timeline::TrackBindingFlags& UnityEngine::Timeline::TrackBindingTypeAttribute::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TrackBindingTypeAttribute::dyn_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TrackBindingFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SupportsChildTracksAttribute
#include "UnityEngine/Timeline/SupportsChildTracksAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Type childType
[[deprecated]] ::System::Type*& UnityEngine::Timeline::SupportsChildTracksAttribute::dyn_childType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SupportsChildTracksAttribute::dyn_childType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "childType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 levels
[[deprecated]] int& UnityEngine::Timeline::SupportsChildTracksAttribute::dyn_levels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::SupportsChildTracksAttribute::dyn_levels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IgnoreOnPlayableTrackAttribute
#include "UnityEngine/Timeline/IgnoreOnPlayableTrackAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeFieldAttribute
#include "UnityEngine/Timeline/TimeFieldAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Timeline.TimeFieldAttribute/UnityEngine.Timeline.UseEditMode <useEditMode>k__BackingField
[[deprecated]] ::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode& UnityEngine::Timeline::TimeFieldAttribute::dyn_$useEditMode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeFieldAttribute::dyn_$useEditMode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<useEditMode>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimeFieldAttribute.get_useEditMode
::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode UnityEngine::Timeline::TimeFieldAttribute::get_useEditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeFieldAttribute::get_useEditMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useEditMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeFieldAttribute/UnityEngine.Timeline.UseEditMode
#include "UnityEngine/Timeline/TimeFieldAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimeFieldAttribute/UnityEngine.Timeline.UseEditMode None
::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode>("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimeFieldAttribute/UnityEngine.Timeline.UseEditMode None
void UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_None(::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimeFieldAttribute/UnityEngine.Timeline.UseEditMode ApplyEditMode
::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_ApplyEditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_ApplyEditMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode>("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "ApplyEditMode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimeFieldAttribute/UnityEngine.Timeline.UseEditMode ApplyEditMode
void UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_ApplyEditMode(::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_ApplyEditMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "ApplyEditMode", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.HideInMenuAttribute
#include "UnityEngine/Timeline/HideInMenuAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.CustomStyleAttribute
#include "UnityEngine/Timeline/CustomStyleAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String ussStyle
[[deprecated]] ::StringW& UnityEngine::Timeline::CustomStyleAttribute::dyn_ussStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::CustomStyleAttribute::dyn_ussStyle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ussStyle"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MenuCategoryAttribute
#include "UnityEngine/Timeline/MenuCategoryAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String category
[[deprecated]] ::StringW& UnityEngine::Timeline::MenuCategoryAttribute::dyn_category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::MenuCategoryAttribute::dyn_category");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "category"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimelineClipAsset
#include "UnityEngine/Timeline/ITimelineClipAsset.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimelineClipAsset.get_clipCaps
::UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ITimelineClipAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ITimelineClipAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ITimelineClipAsset*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimelineEvaluateCallback
#include "UnityEngine/Timeline/ITimelineEvaluateCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimelineEvaluateCallback.Evaluate
void UnityEngine::Timeline::ITimelineEvaluateCallback::Evaluate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::ITimelineEvaluateCallback::Evaluate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::ITimelineEvaluateCallback*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelinePlayable
#include "UnityEngine/Timeline/TimelinePlayable.hpp"
// Including type: UnityEngine.Timeline.IntervalTree`1
#include "UnityEngine/Timeline/IntervalTree_1.hpp"
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Timeline.ITimelineEvaluateCallback
#include "UnityEngine/Timeline/ITimelineEvaluateCallback.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Animations.AnimationPlayableOutput
#include "UnityEngine/Animations/AnimationPlayableOutput.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Boolean muteAudioScrubbing
bool UnityEngine::Timeline::TimelinePlayable::_get_muteAudioScrubbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::_get_muteAudioScrubbing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine.Timeline", "TimelinePlayable", "muteAudioScrubbing"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean muteAudioScrubbing
void UnityEngine::Timeline::TimelinePlayable::_set_muteAudioScrubbing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::_set_muteAudioScrubbing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelinePlayable", "muteAudioScrubbing", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Timeline.IntervalTree`1<UnityEngine.Timeline.RuntimeElement> m_IntervalTree
[[deprecated]] ::UnityEngine::Timeline::IntervalTree_1<::UnityEngine::Timeline::RuntimeElement*>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_IntervalTree() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::dyn_m_IntervalTree");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IntervalTree"))->offset;
  return *reinterpret_cast<::UnityEngine::Timeline::IntervalTree_1<::UnityEngine::Timeline::RuntimeElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Timeline.RuntimeElement> m_ActiveClips
[[deprecated]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::RuntimeElement*>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_ActiveClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::dyn_m_ActiveClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActiveClips"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::RuntimeElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Timeline.RuntimeElement> m_CurrentListOfActiveClips
[[deprecated]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::RuntimeElement*>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_CurrentListOfActiveClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::dyn_m_CurrentListOfActiveClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentListOfActiveClips"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::RuntimeElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_ActiveBit
[[deprecated]] int& UnityEngine::Timeline::TimelinePlayable::dyn_m_ActiveBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::dyn_m_ActiveBit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActiveBit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Timeline.ITimelineEvaluateCallback> m_EvaluateCallbacks
[[deprecated]] ::System::Collections::Generic::List_1<::UnityEngine::Timeline::ITimelineEvaluateCallback*>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_EvaluateCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::dyn_m_EvaluateCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EvaluateCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Timeline::ITimelineEvaluateCallback*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.Timeline.TrackAsset,UnityEngine.Playables.Playable> m_PlayableCache
[[deprecated]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Timeline::TrackAsset*, ::UnityEngine::Playables::Playable>*& UnityEngine::Timeline::TimelinePlayable::dyn_m_PlayableCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::dyn_m_PlayableCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PlayableCache"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Timeline::TrackAsset*, ::UnityEngine::Playables::Playable>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable..cctor
void UnityEngine::Timeline::TimelinePlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Create
::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimelinePlayable*> UnityEngine::Timeline::TimelinePlayable::Create(::UnityEngine::Playables::PlayableGraph graph, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TrackAsset*>* tracks, ::UnityEngine::GameObject* go, bool autoRebalance, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(autoRebalance), ::il2cpp_utils::ExtractType(createOutputs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimelinePlayable*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, tracks, go, autoRebalance, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Compile
void UnityEngine::Timeline::TimelinePlayable::Compile(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Playables::Playable timelinePlayable, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TrackAsset*>* tracks, ::UnityEngine::GameObject* go, bool autoRebalance, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::Compile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timelinePlayable), ::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(autoRebalance), ::il2cpp_utils::ExtractType(createOutputs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph, timelinePlayable, tracks, go, autoRebalance, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CompileTrackList
void UnityEngine::Timeline::TimelinePlayable::CompileTrackList(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Playables::Playable timelinePlayable, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::TrackAsset*>* tracks, ::UnityEngine::GameObject* go, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::CompileTrackList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileTrackList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timelinePlayable), ::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(createOutputs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph, timelinePlayable, tracks, go, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CreateTrackOutput
void UnityEngine::Timeline::TimelinePlayable::CreateTrackOutput(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Timeline::TrackAsset* track, ::UnityEngine::GameObject* go, ::UnityEngine::Playables::Playable playable, int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::CreateTrackOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrackOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(port)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph, track, go, playable, port);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.EvaluateWeightsForAnimationPlayableOutput
void UnityEngine::Timeline::TimelinePlayable::EvaluateWeightsForAnimationPlayableOutput(::UnityEngine::Timeline::TrackAsset* track, ::UnityEngine::Animations::AnimationPlayableOutput animOutput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::EvaluateWeightsForAnimationPlayableOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateWeightsForAnimationPlayableOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(animOutput)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, track, animOutput);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.EvaluateAnimationPreviewUpdateCallback
void UnityEngine::Timeline::TimelinePlayable::EvaluateAnimationPreviewUpdateCallback(::UnityEngine::Timeline::TrackAsset* track, ::UnityEngine::Animations::AnimationPlayableOutput animOutput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::EvaluateAnimationPreviewUpdateCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateAnimationPreviewUpdateCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(animOutput)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, track, animOutput);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CreatePlayableGraph
::UnityEngine::Playables::Playable UnityEngine::Timeline::TimelinePlayable::CreatePlayableGraph(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Timeline::TrackAsset* asset, ::UnityEngine::GameObject* go, ::UnityEngine::Timeline::IntervalTree_1<::UnityEngine::Timeline::RuntimeElement*>* tree, ::UnityEngine::Playables::Playable timelinePlayable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::CreatePlayableGraph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", "CreatePlayableGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(asset), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(timelinePlayable)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, asset, go, tree, timelinePlayable);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CreateTrackPlayable
::UnityEngine::Playables::Playable UnityEngine::Timeline::TimelinePlayable::CreateTrackPlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Playables::Playable timelinePlayable, ::UnityEngine::Timeline::TrackAsset* track, ::UnityEngine::GameObject* go, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::CreateTrackPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrackPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(timelinePlayable), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(createOutputs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, timelinePlayable, track, go, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Evaluate
void UnityEngine::Timeline::TimelinePlayable::Evaluate(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::Evaluate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(frameData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, frameData);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CacheTrack
void UnityEngine::Timeline::TimelinePlayable::CacheTrack(::UnityEngine::Timeline::TrackAsset* track, ::UnityEngine::Playables::Playable playable, int port, ::UnityEngine::Playables::Playable parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::CacheTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, track, playable, port, parent);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.ForAOTCompilationOnly
void UnityEngine::Timeline::TimelinePlayable::ForAOTCompilationOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::ForAOTCompilationOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", "ForAOTCompilationOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.PrepareFrame
void UnityEngine::Timeline::TimelinePlayable::PrepareFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelinePlayable::PrepareFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Playables::PlayableBehaviour*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.Extrapolation
#include "UnityEngine/Timeline/Extrapolation.hpp"
// Including type: UnityEngine.Timeline.Extrapolation/UnityEngine.Timeline.<>c
#include "UnityEngine/Timeline/Extrapolation_--c.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Double kMinExtrapolationTime
double UnityEngine::Timeline::Extrapolation::_get_kMinExtrapolationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::_get_kMinExtrapolationTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "Extrapolation", "kMinExtrapolationTime"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Double kMinExtrapolationTime
void UnityEngine::Timeline::Extrapolation::_set_kMinExtrapolationTime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::_set_kMinExtrapolationTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation", "kMinExtrapolationTime", value));
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation..cctor
void UnityEngine::Timeline::Extrapolation::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation.CalculateExtrapolationTimes
void UnityEngine::Timeline::Extrapolation::CalculateExtrapolationTimes(::UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::CalculateExtrapolationTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", "CalculateExtrapolationTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation.SortClipsByStartTime
::ArrayW<::UnityEngine::Timeline::TimelineClip*> UnityEngine::Timeline::Extrapolation::SortClipsByStartTime(::ArrayW<::UnityEngine::Timeline::TimelineClip*> clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::SortClipsByStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", "SortClipsByStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clips)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Timeline::TimelineClip*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clips);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.Extrapolation/UnityEngine.Timeline.<>c
#include "UnityEngine/Timeline/Extrapolation_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.Extrapolation/UnityEngine.Timeline.<>c <>9
::UnityEngine::Timeline::Extrapolation::$$c* UnityEngine::Timeline::Extrapolation::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::Extrapolation::$$c*>("UnityEngine.Timeline", "Extrapolation/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.Extrapolation/UnityEngine.Timeline.<>c <>9
void UnityEngine::Timeline::Extrapolation::$$c::_set_$$9(::UnityEngine::Timeline::Extrapolation::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__2_0
::System::Comparison_1<::UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::Extrapolation::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::UnityEngine::Timeline::TimelineClip*>*>("UnityEngine.Timeline", "Extrapolation/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__2_0
void UnityEngine::Timeline::Extrapolation::$$c::_set_$$9__2_0(::System::Comparison_1<::UnityEngine::Timeline::TimelineClip*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation/<>c", "<>9__2_0", value)));
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation/UnityEngine.Timeline.<>c..cctor
void UnityEngine::Timeline::Extrapolation::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation/UnityEngine.Timeline.<>c.<SortClipsByStartTime>b__2_0
int UnityEngine::Timeline::Extrapolation::$$c::$SortClipsByStartTime$b__2_0(::UnityEngine::Timeline::TimelineClip* clip1, ::UnityEngine::Timeline::TimelineClip* clip2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::Extrapolation::$$c::<SortClipsByStartTime>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortClipsByStartTime>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip1), ::il2cpp_utils::ExtractType(clip2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, clip1, clip2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.HashUtility
#include "UnityEngine/Timeline/HashUtility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3, h4);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4), ::il2cpp_utils::ExtractType(h5)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3, h4, h5);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5, int h6) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4), ::il2cpp_utils::ExtractType(h5), ::il2cpp_utils::ExtractType(h6)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3, h4, h5, h6);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5, int h6, int h7) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h1), ::il2cpp_utils::ExtractType(h2), ::il2cpp_utils::ExtractType(h3), ::il2cpp_utils::ExtractType(h4), ::il2cpp_utils::ExtractType(h5), ::il2cpp_utils::ExtractType(h6), ::il2cpp_utils::ExtractType(h7)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, h1, h2, h3, h4, h5, h6, h7);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(::ArrayW<int> hashes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashes)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hashes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.PushActiveGameObject
void UnityEngine::Timeline::IPropertyCollector::PushActiveGameObject(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::PushActiveGameObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.PopActiveGameObject
void UnityEngine::Timeline::IPropertyCollector::PopActiveGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::PopActiveGameObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClip
void UnityEngine::Timeline::IPropertyCollector::AddFromClip(::UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddFromClip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClips
void UnityEngine::Timeline::IPropertyCollector::AddFromClips(::System::Collections::Generic::IEnumerable_1<::UnityEngine::AnimationClip*>* clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddFromClips");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clips);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromName
void UnityEngine::Timeline::IPropertyCollector::AddFromName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddFromName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClip
void UnityEngine::Timeline::IPropertyCollector::AddFromClip(::UnityEngine::GameObject* obj, ::UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddFromClip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, clip);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClips
void UnityEngine::Timeline::IPropertyCollector::AddFromClips(::UnityEngine::GameObject* obj, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::AnimationClip*>* clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddFromClips");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, clips);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromName
void UnityEngine::Timeline::IPropertyCollector::AddFromName(::UnityEngine::GameObject* obj, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddFromName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, name);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromName
void UnityEngine::Timeline::IPropertyCollector::AddFromName(::UnityEngine::Component* component, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddFromName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component, name);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromComponent
void UnityEngine::Timeline::IPropertyCollector::AddFromComponent(::UnityEngine::GameObject* obj, ::UnityEngine::Component* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddFromComponent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, component);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddObjectProperties
void UnityEngine::Timeline::IPropertyCollector::AddObjectProperties(::UnityEngine::Object* obj, ::UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyCollector::AddObjectProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyCollector*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, clip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IPropertyPreview
#include "UnityEngine/Timeline/IPropertyPreview.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IPropertyPreview.GatherProperties
void UnityEngine::Timeline::IPropertyPreview::GatherProperties(::UnityEngine::Playables::PlayableDirector* director, ::UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::IPropertyPreview::GatherProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Timeline::IPropertyPreview*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotificationUtilities
#include "UnityEngine/Timeline/NotificationUtilities.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.NotificationUtilities.CreateNotificationsPlayable
::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimeNotificationBehaviour*> UnityEngine::Timeline::NotificationUtilities::CreateNotificationsPlayable(::UnityEngine::Playables::PlayableGraph graph, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Timeline::IMarker*>* markers, ::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationUtilities::CreateNotificationsPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "NotificationUtilities", "CreateNotificationsPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(markers), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::ScriptPlayable_1<::UnityEngine::Timeline::TimeNotificationBehaviour*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, graph, markers, go);
}
// Autogenerated method: UnityEngine.Timeline.NotificationUtilities.TrackTypeSupportsNotifications
bool UnityEngine::Timeline::NotificationUtilities::TrackTypeSupportsNotifications(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::NotificationUtilities::TrackTypeSupportsNotifications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "NotificationUtilities", "TrackTypeSupportsNotifications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeUtility
#include "UnityEngine/Timeline/TimeUtility.hpp"
// Including type: UnityEngine.Timeline.TimeUtility/UnityEngine.Timeline.<>c
#include "UnityEngine/Timeline/TimeUtility_--c.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Double kTimeEpsilon
double UnityEngine::Timeline::TimeUtility::_get_kTimeEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_get_kTimeEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "kTimeEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kTimeEpsilon
void UnityEngine::Timeline::TimeUtility::_set_kTimeEpsilon(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_set_kTimeEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "kTimeEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double kFrameRateEpsilon
double UnityEngine::Timeline::TimeUtility::_get_kFrameRateEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_get_kFrameRateEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "kFrameRateEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kFrameRateEpsilon
void UnityEngine::Timeline::TimeUtility::_set_kFrameRateEpsilon(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_set_kFrameRateEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "kFrameRateEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double k_MaxTimelineDurationInSeconds
double UnityEngine::Timeline::TimeUtility::_get_k_MaxTimelineDurationInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_get_k_MaxTimelineDurationInSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "k_MaxTimelineDurationInSeconds"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double k_MaxTimelineDurationInSeconds
void UnityEngine::Timeline::TimeUtility::_set_k_MaxTimelineDurationInSeconds(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::_set_k_MaxTimelineDurationInSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "k_MaxTimelineDurationInSeconds", value));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility..cctor
void UnityEngine::Timeline::TimeUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ValidateFrameRate
void UnityEngine::Timeline::TimeUtility::ValidateFrameRate(double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::ValidateFrameRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ValidateFrameRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameRate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ToFrames
int UnityEngine::Timeline::TimeUtility::ToFrames(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::ToFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ToFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ToExactFrames
double UnityEngine::Timeline::TimeUtility::ToExactFrames(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::ToExactFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ToExactFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.FromFrames
double UnityEngine::Timeline::TimeUtility::FromFrames(int frames, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::FromFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "FromFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frames), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frames, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.FromFrames
double UnityEngine::Timeline::TimeUtility::FromFrames(double frames, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::FromFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "FromFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frames), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, frames, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.OnFrameBoundary
bool UnityEngine::Timeline::TimeUtility::OnFrameBoundary(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::OnFrameBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "OnFrameBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.GetEpsilon
double UnityEngine::Timeline::TimeUtility::GetEpsilon(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::GetEpsilon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "GetEpsilon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.OnFrameBoundary
bool UnityEngine::Timeline::TimeUtility::OnFrameBoundary(double time, double frameRate, double epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::OnFrameBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "OnFrameBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(epsilon)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate, epsilon);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.RoundToFrame
double UnityEngine::Timeline::TimeUtility::RoundToFrame(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::RoundToFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "RoundToFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(frameRate)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.TimeAsFrames
::StringW UnityEngine::Timeline::TimeUtility::TimeAsFrames(double timeValue, double frameRate, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::TimeAsFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "TimeAsFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeValue), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeValue, frameRate, format);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.TimeAsTimeCode
::StringW UnityEngine::Timeline::TimeUtility::TimeAsTimeCode(double timeValue, double frameRate, ::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::TimeAsTimeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "TimeAsTimeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeValue), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeValue, frameRate, format);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ParseTimeCode
double UnityEngine::Timeline::TimeUtility::ParseTimeCode(::StringW timeCode, double frameRate, double defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::ParseTimeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ParseTimeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeCode), ::il2cpp_utils::ExtractType(frameRate), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeCode, frameRate, defaultValue);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.GetAnimationClipLength
double UnityEngine::Timeline::TimeUtility::GetAnimationClipLength(::UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::GetAnimationClipLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "GetAnimationClipLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.RemoveChar
::StringW UnityEngine::Timeline::TimeUtility::RemoveChar(::StringW str, ::System::Func_2<::Il2CppChar, bool>* charToRemoveFunc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::RemoveChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "RemoveChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(charToRemoveFunc)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, charToRemoveFunc);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeUtility/UnityEngine.Timeline.<>c
#include "UnityEngine/Timeline/TimeUtility_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.TimeUtility/UnityEngine.Timeline.<>c <>9
::UnityEngine::Timeline::TimeUtility::$$c* UnityEngine::Timeline::TimeUtility::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Timeline::TimeUtility::$$c*>("UnityEngine.Timeline", "TimeUtility/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.TimeUtility/UnityEngine.Timeline.<>c <>9
void UnityEngine::Timeline::TimeUtility::$$c::_set_$$9(::UnityEngine::Timeline::TimeUtility::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_0
::System::Func_2<::Il2CppChar, bool>* UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppChar, bool>*>("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_0
void UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_0(::System::Func_2<::Il2CppChar, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_1
::System::Func_2<::Il2CppChar, bool>* UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Il2CppChar, bool>*>("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_1
void UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_1(::System::Func_2<::Il2CppChar, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_1", value)));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility/UnityEngine.Timeline.<>c..cctor
void UnityEngine::Timeline::TimeUtility::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility/UnityEngine.Timeline.<>c.<ParseTimeCode>b__14_0
bool UnityEngine::Timeline::TimeUtility::$$c::$ParseTimeCode$b__14_0(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::<ParseTimeCode>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ParseTimeCode>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility/UnityEngine.Timeline.<>c.<ParseTimeCode>b__14_1
bool UnityEngine::Timeline::TimeUtility::$$c::$ParseTimeCode$b__14_1(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimeUtility::$$c::<ParseTimeCode>b__14_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ParseTimeCode>b__14_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineCreateUtilities
#include "UnityEngine/Timeline/TimelineCreateUtilities.hpp"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/UnityEngine.Timeline.<>c__DisplayClass0_0
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_0.hpp"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/UnityEngine.Timeline.<>c__DisplayClass0_1
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.GenerateUniqueActorName
::StringW UnityEngine::Timeline::TimelineCreateUtilities::GenerateUniqueActorName(::System::Collections::Generic::List_1<::UnityEngine::ScriptableObject*>* tracks, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::GenerateUniqueActorName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "GenerateUniqueActorName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tracks), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tracks, name);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.SaveAssetIntoObject
void UnityEngine::Timeline::TimelineCreateUtilities::SaveAssetIntoObject(::UnityEngine::Object* childAsset, ::UnityEngine::Object* masterAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::SaveAssetIntoObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "SaveAssetIntoObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(childAsset), ::il2cpp_utils::ExtractType(masterAsset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, childAsset, masterAsset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.CreateAnimationClipForTrack
::UnityEngine::AnimationClip* UnityEngine::Timeline::TimelineCreateUtilities::CreateAnimationClipForTrack(::StringW name, ::UnityEngine::Timeline::TrackAsset* track, bool isLegacy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::CreateAnimationClipForTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "CreateAnimationClipForTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(isLegacy)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, track, isLegacy);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.ValidateParentTrack
bool UnityEngine::Timeline::TimelineCreateUtilities::ValidateParentTrack(::UnityEngine::Timeline::TrackAsset* parent, ::System::Type* childType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::ValidateParentTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "ValidateParentTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(childType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parent, childType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/UnityEngine.Timeline.<>c__DisplayClass0_0
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_0.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated]] ::StringW& UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities/UnityEngine.Timeline.<>c__DisplayClass0_0.<GenerateUniqueActorName>b__0
bool UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::$GenerateUniqueActorName$b__0(::UnityEngine::ScriptableObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::<GenerateUniqueActorName>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GenerateUniqueActorName>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/UnityEngine.Timeline.<>c__DisplayClass0_1
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String result
[[deprecated]] ::StringW& UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::dyn_result() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::dyn_result");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "result"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities/UnityEngine.Timeline.<>c__DisplayClass0_1.<GenerateUniqueActorName>b__1
bool UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::$GenerateUniqueActorName$b__1(::UnityEngine::ScriptableObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::<GenerateUniqueActorName>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GenerateUniqueActorName>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineUndo
#include "UnityEngine/Timeline/TimelineUndo.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.PushDestroyUndo
void UnityEngine::Timeline::TimelineUndo::PushDestroyUndo(::UnityEngine::Timeline::TimelineAsset* timeline, ::UnityEngine::Object* thingToDirty, ::UnityEngine::Object* objectToDestroy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineUndo::PushDestroyUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "PushDestroyUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeline), ::il2cpp_utils::ExtractType(thingToDirty), ::il2cpp_utils::ExtractType(objectToDestroy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeline, thingToDirty, objectToDestroy);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.PushUndo
void UnityEngine::Timeline::TimelineUndo::PushUndo(::ArrayW<::UnityEngine::Object*> thingsToDirty, ::StringW operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineUndo::PushUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "PushUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thingsToDirty), ::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thingsToDirty, operation);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.PushUndo
void UnityEngine::Timeline::TimelineUndo::PushUndo(::UnityEngine::Object* thingToDirty, ::StringW operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineUndo::PushUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "PushUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thingToDirty), ::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thingToDirty, operation);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.RegisterCreatedObjectUndo
void UnityEngine::Timeline::TimelineUndo::RegisterCreatedObjectUndo(::UnityEngine::Object* thingCreated, ::StringW operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineUndo::RegisterCreatedObjectUndo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "RegisterCreatedObjectUndo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thingCreated), ::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, thingCreated, operation);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.UndoName
::StringW UnityEngine::Timeline::TimelineUndo::UndoName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::TimelineUndo::UndoName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "UndoName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.WeightUtility
#include "UnityEngine/Timeline/WeightUtility.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.WeightUtility.NormalizeMixer
float UnityEngine::Timeline::WeightUtility::NormalizeMixer(::UnityEngine::Playables::Playable mixer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Timeline::WeightUtility::NormalizeMixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "WeightUtility", "NormalizeMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mixer)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mixer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Management.XRConfigurationDataAttribute
#include "UnityEngine/XR/Management/XRConfigurationDataAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <displayName>k__BackingField
[[deprecated]] ::StringW& UnityEngine::XR::Management::XRConfigurationDataAttribute::dyn_$displayName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRConfigurationDataAttribute::dyn_$displayName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<displayName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <buildSettingsKey>k__BackingField
[[deprecated]] ::StringW& UnityEngine::XR::Management::XRConfigurationDataAttribute::dyn_$buildSettingsKey$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRConfigurationDataAttribute::dyn_$buildSettingsKey$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<buildSettingsKey>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Management.XRConfigurationDataAttribute.get_displayName
::StringW UnityEngine::XR::Management::XRConfigurationDataAttribute::get_displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRConfigurationDataAttribute::get_displayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_displayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRConfigurationDataAttribute.set_displayName
void UnityEngine::XR::Management::XRConfigurationDataAttribute::set_displayName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRConfigurationDataAttribute::set_displayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_displayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Management.XRConfigurationDataAttribute.get_buildSettingsKey
::StringW UnityEngine::XR::Management::XRConfigurationDataAttribute::get_buildSettingsKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRConfigurationDataAttribute::get_buildSettingsKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buildSettingsKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRConfigurationDataAttribute.set_buildSettingsKey
void UnityEngine::XR::Management::XRConfigurationDataAttribute::set_buildSettingsKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRConfigurationDataAttribute::set_buildSettingsKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_buildSettingsKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Management.XRGeneralSettings
#include "UnityEngine/XR/Management/XRGeneralSettings.hpp"
// Including type: UnityEngine.XR.Management.XRManagerSettings
#include "UnityEngine/XR/Management/XRManagerSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String k_SettingsKey
::StringW UnityEngine::XR::Management::XRGeneralSettings::_get_k_SettingsKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::_get_k_SettingsKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.XR.Management", "XRGeneralSettings", "k_SettingsKey"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_SettingsKey
void UnityEngine::XR::Management::XRGeneralSettings::_set_k_SettingsKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::_set_k_SettingsKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Management", "XRGeneralSettings", "k_SettingsKey", value));
}
// Autogenerated static field getter
// Get static field: static UnityEngine.XR.Management.XRGeneralSettings s_RuntimeSettingsInstance
::UnityEngine::XR::Management::XRGeneralSettings* UnityEngine::XR::Management::XRGeneralSettings::_get_s_RuntimeSettingsInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::_get_s_RuntimeSettingsInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Management::XRGeneralSettings*>("UnityEngine.XR.Management", "XRGeneralSettings", "s_RuntimeSettingsInstance"));
}
// Autogenerated static field setter
// Set static field: static UnityEngine.XR.Management.XRGeneralSettings s_RuntimeSettingsInstance
void UnityEngine::XR::Management::XRGeneralSettings::_set_s_RuntimeSettingsInstance(::UnityEngine::XR::Management::XRGeneralSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::_set_s_RuntimeSettingsInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Management", "XRGeneralSettings", "s_RuntimeSettingsInstance", value));
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.XR.Management.XRManagerSettings m_LoaderManagerInstance
[[deprecated]] ::UnityEngine::XR::Management::XRManagerSettings*& UnityEngine::XR::Management::XRGeneralSettings::dyn_m_LoaderManagerInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::dyn_m_LoaderManagerInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LoaderManagerInstance"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Management::XRManagerSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_InitManagerOnStart
[[deprecated]] bool& UnityEngine::XR::Management::XRGeneralSettings::dyn_m_InitManagerOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::dyn_m_InitManagerOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InitManagerOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Management.XRManagerSettings m_XRManager
[[deprecated]] ::UnityEngine::XR::Management::XRManagerSettings*& UnityEngine::XR::Management::XRGeneralSettings::dyn_m_XRManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::dyn_m_XRManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_XRManager"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Management::XRManagerSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ProviderIntialized
[[deprecated]] bool& UnityEngine::XR::Management::XRGeneralSettings::dyn_m_ProviderIntialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::dyn_m_ProviderIntialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ProviderIntialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ProviderStarted
[[deprecated]] bool& UnityEngine::XR::Management::XRGeneralSettings::dyn_m_ProviderStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::dyn_m_ProviderStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ProviderStarted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.get_Manager
::UnityEngine::XR::Management::XRManagerSettings* UnityEngine::XR::Management::XRGeneralSettings::get_Manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::get_Manager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Manager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Management::XRManagerSettings*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.set_Manager
void UnityEngine::XR::Management::XRGeneralSettings::set_Manager(::UnityEngine::XR::Management::XRManagerSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::set_Manager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Manager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.get_Instance
::UnityEngine::XR::Management::XRGeneralSettings* UnityEngine::XR::Management::XRGeneralSettings::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Management", "XRGeneralSettings", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Management::XRGeneralSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.get_AssignedSettings
::UnityEngine::XR::Management::XRManagerSettings* UnityEngine::XR::Management::XRGeneralSettings::get_AssignedSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::get_AssignedSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssignedSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Management::XRManagerSettings*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.get_InitManagerOnStart
bool UnityEngine::XR::Management::XRGeneralSettings::get_InitManagerOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::get_InitManagerOnStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InitManagerOnStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.Awake
void UnityEngine::XR::Management::XRGeneralSettings::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.Quit
void UnityEngine::XR::Management::XRGeneralSettings::Quit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::Quit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Management", "XRGeneralSettings", "Quit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.Start
void UnityEngine::XR::Management::XRGeneralSettings::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.OnDestroy
void UnityEngine::XR::Management::XRGeneralSettings::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.AttemptInitializeXRSDKOnLoad
void UnityEngine::XR::Management::XRGeneralSettings::AttemptInitializeXRSDKOnLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::AttemptInitializeXRSDKOnLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Management", "XRGeneralSettings", "AttemptInitializeXRSDKOnLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.AttemptStartXRSDKOnBeforeSplashScreen
void UnityEngine::XR::Management::XRGeneralSettings::AttemptStartXRSDKOnBeforeSplashScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::AttemptStartXRSDKOnBeforeSplashScreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Management", "XRGeneralSettings", "AttemptStartXRSDKOnBeforeSplashScreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.InitXRSDK
void UnityEngine::XR::Management::XRGeneralSettings::InitXRSDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::InitXRSDK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitXRSDK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.StartXRSDK
void UnityEngine::XR::Management::XRGeneralSettings::StartXRSDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::StartXRSDK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartXRSDK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.StopXRSDK
void UnityEngine::XR::Management::XRGeneralSettings::StopXRSDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::StopXRSDK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopXRSDK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings.DeInitXRSDK
void UnityEngine::XR::Management::XRGeneralSettings::DeInitXRSDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::DeInitXRSDK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeInitXRSDK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRGeneralSettings..cctor
void UnityEngine::XR::Management::XRGeneralSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRGeneralSettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Management", "XRGeneralSettings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Management.XRLoader
#include "UnityEngine/XR/Management/XRLoader.hpp"
// Including type: UnityEngine.ISubsystem
#include "UnityEngine/ISubsystem.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.XR.Management.XRLoader.Initialize
bool UnityEngine::XR::Management::XRLoader::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRLoader::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRLoader*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRLoader.Start
bool UnityEngine::XR::Management::XRLoader::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRLoader::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRLoader*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRLoader.Stop
bool UnityEngine::XR::Management::XRLoader::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRLoader::Stop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRLoader*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRLoader.Deinitialize
bool UnityEngine::XR::Management::XRLoader::Deinitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRLoader::Deinitialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRLoader*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRLoader.GetSupportedGraphicsDeviceTypes
::System::Collections::Generic::List_1<::UnityEngine::Rendering::GraphicsDeviceType>* UnityEngine::XR::Management::XRLoader::GetSupportedGraphicsDeviceTypes(bool buildingPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRLoader::GetSupportedGraphicsDeviceTypes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRLoader*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Rendering::GraphicsDeviceType>*, false>(this, ___internal__method, buildingPlayer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ISubsystemDescriptor
#include "UnityEngine/ISubsystemDescriptor.hpp"
// Including type: UnityEngine.IntegratedSubsystemDescriptor
#include "UnityEngine/IntegratedSubsystemDescriptor.hpp"
// Including type: UnityEngine.SubsystemDescriptor
#include "UnityEngine/SubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.Management.XRLoaderHelper
#include "UnityEngine/XR/Management/XRLoaderHelper.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.ISubsystem
#include "UnityEngine/ISubsystem.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.IntegratedSubsystem
#include "UnityEngine/IntegratedSubsystem.hpp"
// Including type: UnityEngine.Subsystem
#include "UnityEngine/Subsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.ISubsystem> m_SubsystemInstanceMap
[[deprecated]] ::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::ISubsystem*>*& UnityEngine::XR::Management::XRLoaderHelper::dyn_m_SubsystemInstanceMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRLoaderHelper::dyn_m_SubsystemInstanceMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SubsystemInstanceMap"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::ISubsystem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Management.XRLoaderHelper.Deinitialize
bool UnityEngine::XR::Management::XRLoaderHelper::Deinitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRLoaderHelper::Deinitialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRLoader*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Management.XRManagementAnalytics
#include "UnityEngine/XR/Management/XRManagementAnalytics.hpp"
// Including type: UnityEngine.XR.Management.XRManagementAnalytics/UnityEngine.XR.Management.BuildEvent
#include "UnityEngine/XR/Management/XRManagementAnalytics_BuildEvent.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxEventsPerHour
int UnityEngine::XR::Management::XRManagementAnalytics::_get_kMaxEventsPerHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagementAnalytics::_get_kMaxEventsPerHour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Management", "XRManagementAnalytics", "kMaxEventsPerHour"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxEventsPerHour
void UnityEngine::XR::Management::XRManagementAnalytics::_set_kMaxEventsPerHour(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagementAnalytics::_set_kMaxEventsPerHour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Management", "XRManagementAnalytics", "kMaxEventsPerHour", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxNumberOfElements
int UnityEngine::XR::Management::XRManagementAnalytics::_get_kMaxNumberOfElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagementAnalytics::_get_kMaxNumberOfElements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.XR.Management", "XRManagementAnalytics", "kMaxNumberOfElements"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxNumberOfElements
void UnityEngine::XR::Management::XRManagementAnalytics::_set_kMaxNumberOfElements(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagementAnalytics::_set_kMaxNumberOfElements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Management", "XRManagementAnalytics", "kMaxNumberOfElements", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kVendorKey
::StringW UnityEngine::XR::Management::XRManagementAnalytics::_get_kVendorKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagementAnalytics::_get_kVendorKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.XR.Management", "XRManagementAnalytics", "kVendorKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kVendorKey
void UnityEngine::XR::Management::XRManagementAnalytics::_set_kVendorKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagementAnalytics::_set_kVendorKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Management", "XRManagementAnalytics", "kVendorKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kEventBuild
::StringW UnityEngine::XR::Management::XRManagementAnalytics::_get_kEventBuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagementAnalytics::_get_kEventBuild");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.XR.Management", "XRManagementAnalytics", "kEventBuild"));
}
// Autogenerated static field setter
// Set static field: static private System.String kEventBuild
void UnityEngine::XR::Management::XRManagementAnalytics::_set_kEventBuild(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagementAnalytics::_set_kEventBuild");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Management", "XRManagementAnalytics", "kEventBuild", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_Initialized
bool UnityEngine::XR::Management::XRManagementAnalytics::_get_s_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagementAnalytics::_get_s_Initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine.XR.Management", "XRManagementAnalytics", "s_Initialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_Initialized
void UnityEngine::XR::Management::XRManagementAnalytics::_set_s_Initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagementAnalytics::_set_s_Initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Management", "XRManagementAnalytics", "s_Initialized", value));
}
// Autogenerated method: UnityEngine.XR.Management.XRManagementAnalytics..cctor
void UnityEngine::XR::Management::XRManagementAnalytics::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagementAnalytics::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Management", "XRManagementAnalytics", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagementAnalytics.Initialize
bool UnityEngine::XR::Management::XRManagementAnalytics::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagementAnalytics::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Management", "XRManagementAnalytics", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Management.XRManagerSettings
#include "UnityEngine/XR/Management/XRManagerSettings.hpp"
// Including type: UnityEngine.XR.Management.XRManagerSettings/UnityEngine.XR.Management.<InitializeLoader>d__24
#include "UnityEngine/XR/Management/XRManagerSettings_-InitializeLoader-d__24.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Management.XRLoader
#include "UnityEngine/XR/Management/XRLoader.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_InitializationComplete
[[deprecated]] bool& UnityEngine::XR::Management::XRManagerSettings::dyn_m_InitializationComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::dyn_m_InitializationComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InitializationComplete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_RequiresSettingsUpdate
[[deprecated]] bool& UnityEngine::XR::Management::XRManagerSettings::dyn_m_RequiresSettingsUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::dyn_m_RequiresSettingsUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RequiresSettingsUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AutomaticLoading
[[deprecated]] bool& UnityEngine::XR::Management::XRManagerSettings::dyn_m_AutomaticLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::dyn_m_AutomaticLoading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AutomaticLoading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AutomaticRunning
[[deprecated]] bool& UnityEngine::XR::Management::XRManagerSettings::dyn_m_AutomaticRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::dyn_m_AutomaticRunning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AutomaticRunning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Management.XRLoader> m_Loaders
[[deprecated]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>*& UnityEngine::XR::Management::XRManagerSettings::dyn_m_Loaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::dyn_m_Loaders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Loaders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<UnityEngine.XR.Management.XRLoader> m_RegisteredLoaders
[[deprecated]] ::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Management::XRLoader*>*& UnityEngine::XR::Management::XRManagerSettings::dyn_m_RegisteredLoaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::dyn_m_RegisteredLoaders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RegisteredLoaders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Management::XRLoader*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Management.XRLoader <activeLoader>k__BackingField
[[deprecated]] ::UnityEngine::XR::Management::XRLoader*& UnityEngine::XR::Management::XRManagerSettings::dyn_$activeLoader$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::dyn_$activeLoader$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<activeLoader>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Management::XRLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.get_automaticLoading
bool UnityEngine::XR::Management::XRManagerSettings::get_automaticLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::get_automaticLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_automaticLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.set_automaticLoading
void UnityEngine::XR::Management::XRManagerSettings::set_automaticLoading(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::set_automaticLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_automaticLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.get_automaticRunning
bool UnityEngine::XR::Management::XRManagerSettings::get_automaticRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::get_automaticRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_automaticRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.set_automaticRunning
void UnityEngine::XR::Management::XRManagerSettings::set_automaticRunning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::set_automaticRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_automaticRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.get_loaders
::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>* UnityEngine::XR::Management::XRManagerSettings::get_loaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::get_loaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.get_activeLoaders
::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::XR::Management::XRLoader*>* UnityEngine::XR::Management::XRManagerSettings::get_activeLoaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::get_activeLoaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeLoaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::XR::Management::XRLoader*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.get_isInitializationComplete
bool UnityEngine::XR::Management::XRManagerSettings::get_isInitializationComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::get_isInitializationComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInitializationComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.get_activeLoader
::UnityEngine::XR::Management::XRLoader* UnityEngine::XR::Management::XRManagerSettings::get_activeLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::get_activeLoader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeLoader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Management::XRLoader*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.set_activeLoader
void UnityEngine::XR::Management::XRManagerSettings::set_activeLoader(::UnityEngine::XR::Management::XRLoader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::set_activeLoader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_activeLoader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.get_currentLoaders
::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>* UnityEngine::XR::Management::XRManagerSettings::get_currentLoaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::get_currentLoaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentLoaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.set_currentLoaders
void UnityEngine::XR::Management::XRManagerSettings::set_currentLoaders(::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::set_currentLoaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentLoaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.get_registeredLoaders
::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Management::XRLoader*>* UnityEngine::XR::Management::XRManagerSettings::get_registeredLoaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::get_registeredLoaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_registeredLoaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::UnityEngine::XR::Management::XRLoader*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.InitializeLoaderSync
void UnityEngine::XR::Management::XRManagerSettings::InitializeLoaderSync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::InitializeLoaderSync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeLoaderSync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.InitializeLoader
::System::Collections::IEnumerator* UnityEngine::XR::Management::XRManagerSettings::InitializeLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::InitializeLoader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeLoader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.TryAddLoader
bool UnityEngine::XR::Management::XRManagerSettings::TryAddLoader(::UnityEngine::XR::Management::XRLoader* loader, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::TryAddLoader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddLoader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loader), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, loader, index);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.TryRemoveLoader
bool UnityEngine::XR::Management::XRManagerSettings::TryRemoveLoader(::UnityEngine::XR::Management::XRLoader* loader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::TryRemoveLoader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryRemoveLoader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loader)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, loader);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.TrySetLoaders
bool UnityEngine::XR::Management::XRManagerSettings::TrySetLoaders(::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>* reorderedLoaders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::TrySetLoaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySetLoaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reorderedLoaders)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reorderedLoaders);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.CheckGraphicsAPICompatibility
bool UnityEngine::XR::Management::XRManagerSettings::CheckGraphicsAPICompatibility(::UnityEngine::XR::Management::XRLoader* loader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::CheckGraphicsAPICompatibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckGraphicsAPICompatibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loader)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, loader);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.StartSubsystems
void UnityEngine::XR::Management::XRManagerSettings::StartSubsystems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::StartSubsystems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSubsystems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.StopSubsystems
void UnityEngine::XR::Management::XRManagerSettings::StopSubsystems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::StopSubsystems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSubsystems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.DeinitializeLoader
void UnityEngine::XR::Management::XRManagerSettings::DeinitializeLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::DeinitializeLoader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeinitializeLoader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.Start
void UnityEngine::XR::Management::XRManagerSettings::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.OnDisable
void UnityEngine::XR::Management::XRManagerSettings::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings.OnDestroy
void UnityEngine::XR::Management::XRManagerSettings::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.XR.Management.XRManagerSettings/UnityEngine.XR.Management.<InitializeLoader>d__24
#include "UnityEngine/XR/Management/XRManagerSettings_-InitializeLoader-d__24.hpp"
// Including type: UnityEngine.XR.Management.XRLoader
#include "UnityEngine/XR/Management/XRLoader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated]] int& UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated]] ::Il2CppObject*& UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.Management.XRManagerSettings <>4__this
[[deprecated]] ::UnityEngine::XR::Management::XRManagerSettings*& UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Management::XRManagerSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/System.Collections.Generic.Enumerator<UnityEngine.XR.Management.XRLoader> <>7__wrap1
[[deprecated]] typename ::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>::Enumerator& UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::UnityEngine::XR::Management::XRLoader*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings/UnityEngine.XR.Management.<InitializeLoader>d__24.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings/UnityEngine.XR.Management.<InitializeLoader>d__24.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings/UnityEngine.XR.Management.<InitializeLoader>d__24.System.IDisposable.Dispose
void UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings/UnityEngine.XR.Management.<InitializeLoader>d__24.MoveNext
bool UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings/UnityEngine.XR.Management.<InitializeLoader>d__24.<>m__Finally1
void UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Management.XRManagerSettings/UnityEngine.XR.Management.<InitializeLoader>d__24.System.Collections.IEnumerator.Reset
void UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRManagerSettings::$InitializeLoader$d__24*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.Utils
#include "Unity/XR/Oculus/Utils.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: Unity.XR.Oculus.SystemHeadset
#include "Unity/XR/Oculus/SystemHeadset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.XR.Oculus.Utils.SetColorScaleAndOffset
void Unity::XR::Oculus::Utils::SetColorScaleAndOffset(::UnityEngine::Vector4 colorScale, ::UnityEngine::Vector4 colorOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Utils::SetColorScaleAndOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Utils", "SetColorScaleAndOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScale), ::il2cpp_utils::ExtractType(colorOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorScale, colorOffset);
}
// Autogenerated method: Unity.XR.Oculus.Utils.GetSystemHeadsetType
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::Utils::GetSystemHeadsetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Utils::GetSystemHeadsetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Utils", "GetSystemHeadsetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::XR::Oculus::SystemHeadset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Utils.SetFoveationLevel
void Unity::XR::Oculus::Utils::SetFoveationLevel(int level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Utils::SetFoveationLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Utils", "SetFoveationLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level);
}
// Autogenerated method: Unity.XR.Oculus.Utils.EnableDynamicFFR
bool Unity::XR::Oculus::Utils::EnableDynamicFFR(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Utils::EnableDynamicFFR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Utils", "EnableDynamicFFR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, enable);
}
// Autogenerated method: Unity.XR.Oculus.Utils.GetFoveationLevel
int Unity::XR::Oculus::Utils::GetFoveationLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Utils::GetFoveationLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Utils", "GetFoveationLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.InputFocus
#include "Unity/XR/Oculus/InputFocus.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Action InputFocusAcquired
::System::Action* Unity::XR::Oculus::InputFocus::_get_InputFocusAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::InputFocus::_get_InputFocusAcquired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("Unity.XR.Oculus", "InputFocus", "InputFocusAcquired"));
}
// Autogenerated static field setter
// Set static field: static private System.Action InputFocusAcquired
void Unity::XR::Oculus::InputFocus::_set_InputFocusAcquired(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::InputFocus::_set_InputFocusAcquired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "InputFocus", "InputFocusAcquired", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action InputFocusLost
::System::Action* Unity::XR::Oculus::InputFocus::_get_InputFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::InputFocus::_get_InputFocusLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action*>("Unity.XR.Oculus", "InputFocus", "InputFocusLost"));
}
// Autogenerated static field setter
// Set static field: static private System.Action InputFocusLost
void Unity::XR::Oculus::InputFocus::_set_InputFocusLost(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::InputFocus::_set_InputFocusLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "InputFocus", "InputFocusLost", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean hadInputFocus
bool Unity::XR::Oculus::InputFocus::_get_hadInputFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::InputFocus::_get_hadInputFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Unity.XR.Oculus", "InputFocus", "hadInputFocus"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean hadInputFocus
void Unity::XR::Oculus::InputFocus::_set_hadInputFocus(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::InputFocus::_set_hadInputFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "InputFocus", "hadInputFocus", value));
}
// Autogenerated method: Unity.XR.Oculus.InputFocus.get_hasInputFocus
bool Unity::XR::Oculus::InputFocus::get_hasInputFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::InputFocus::get_hasInputFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "InputFocus", "get_hasInputFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.InputFocus.add_InputFocusAcquired
void Unity::XR::Oculus::InputFocus::add_InputFocusAcquired(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::InputFocus::add_InputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "InputFocus", "add_InputFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.InputFocus.remove_InputFocusAcquired
void Unity::XR::Oculus::InputFocus::remove_InputFocusAcquired(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::InputFocus::remove_InputFocusAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "InputFocus", "remove_InputFocusAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.InputFocus.add_InputFocusLost
void Unity::XR::Oculus::InputFocus::add_InputFocusLost(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::InputFocus::add_InputFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "InputFocus", "add_InputFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.InputFocus.remove_InputFocusLost
void Unity::XR::Oculus::InputFocus::remove_InputFocusLost(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::InputFocus::remove_InputFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "InputFocus", "remove_InputFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.InputFocus..cctor
void Unity::XR::Oculus::InputFocus::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::InputFocus::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "InputFocus", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.InputFocus.Update
void Unity::XR::Oculus::InputFocus::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::InputFocus::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "InputFocus", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.Boundary
#include "Unity/XR/Oculus/Boundary.hpp"
// Including type: Unity.XR.Oculus.Boundary/Unity.XR.Oculus.BoundaryType
#include "Unity/XR/Oculus/Boundary_BoundaryType.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.XR.Oculus.Boundary.GetBoundaryConfigured
bool Unity::XR::Oculus::Boundary::GetBoundaryConfigured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Boundary::GetBoundaryConfigured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Boundary", "GetBoundaryConfigured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Boundary.GetBoundaryDimensions
bool Unity::XR::Oculus::Boundary::GetBoundaryDimensions(::Unity::XR::Oculus::Boundary::BoundaryType boundaryType, ByRef<::UnityEngine::Vector3> dimensions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Boundary::GetBoundaryDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Boundary", "GetBoundaryDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryType), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, boundaryType, byref(dimensions));
}
// Autogenerated method: Unity.XR.Oculus.Boundary.GetBoundaryVisible
bool Unity::XR::Oculus::Boundary::GetBoundaryVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Boundary::GetBoundaryVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Boundary", "GetBoundaryVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Boundary.SetBoundaryVisible
void Unity::XR::Oculus::Boundary::SetBoundaryVisible(bool boundaryVisible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Boundary::SetBoundaryVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Boundary", "SetBoundaryVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boundaryVisible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, boundaryVisible);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.Boundary/Unity.XR.Oculus.BoundaryType
#include "Unity/XR/Oculus/Boundary_BoundaryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.Boundary/Unity.XR.Oculus.BoundaryType OuterBoundary
::Unity::XR::Oculus::Boundary::BoundaryType Unity::XR::Oculus::Boundary::BoundaryType::_get_OuterBoundary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Boundary::BoundaryType::_get_OuterBoundary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::Boundary::BoundaryType>("Unity.XR.Oculus", "Boundary/BoundaryType", "OuterBoundary"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.Boundary/Unity.XR.Oculus.BoundaryType OuterBoundary
void Unity::XR::Oculus::Boundary::BoundaryType::_set_OuterBoundary(::Unity::XR::Oculus::Boundary::BoundaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Boundary::BoundaryType::_set_OuterBoundary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "Boundary/BoundaryType", "OuterBoundary", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.Boundary/Unity.XR.Oculus.BoundaryType PlayArea
::Unity::XR::Oculus::Boundary::BoundaryType Unity::XR::Oculus::Boundary::BoundaryType::_get_PlayArea() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Boundary::BoundaryType::_get_PlayArea");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::Boundary::BoundaryType>("Unity.XR.Oculus", "Boundary/BoundaryType", "PlayArea"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.Boundary/Unity.XR.Oculus.BoundaryType PlayArea
void Unity::XR::Oculus::Boundary::BoundaryType::_set_PlayArea(::Unity::XR::Oculus::Boundary::BoundaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Boundary::BoundaryType::_set_PlayArea");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "Boundary/BoundaryType", "PlayArea", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Unity::XR::Oculus::Boundary::BoundaryType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Boundary::BoundaryType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.Development
#include "Unity/XR/Oculus/Development.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Unity.XR.Oculus.Development/Unity.XR.Oculus.UserDeveloperModeSettingCache s_CachedMode
::Unity::XR::Oculus::Development::UserDeveloperModeSettingCache Unity::XR::Oculus::Development::_get_s_CachedMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Development::_get_s_CachedMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::Development::UserDeveloperModeSettingCache>("Unity.XR.Oculus", "Development", "s_CachedMode"));
}
// Autogenerated static field setter
// Set static field: static private Unity.XR.Oculus.Development/Unity.XR.Oculus.UserDeveloperModeSettingCache s_CachedMode
void Unity::XR::Oculus::Development::_set_s_CachedMode(::Unity::XR::Oculus::Development::UserDeveloperModeSettingCache value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Development::_set_s_CachedMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "Development", "s_CachedMode", value));
}
// Autogenerated method: Unity.XR.Oculus.Development..cctor
void Unity::XR::Oculus::Development::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Development::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Development", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Development.TrySetDeveloperMode
void Unity::XR::Oculus::Development::TrySetDeveloperMode(bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Development::TrySetDeveloperMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Development", "TrySetDeveloperMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, active);
}
// Autogenerated method: Unity.XR.Oculus.Development.OverrideDeveloperModeStart
void Unity::XR::Oculus::Development::OverrideDeveloperModeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Development::OverrideDeveloperModeStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Development", "OverrideDeveloperModeStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Development.OverrideDeveloperModeStop
void Unity::XR::Oculus::Development::OverrideDeveloperModeStop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Development::OverrideDeveloperModeStop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Development", "OverrideDeveloperModeStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.Development/Unity.XR.Oculus.UserDeveloperModeSettingCache
#include "Unity/XR/Oculus/Development.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.Development/Unity.XR.Oculus.UserDeveloperModeSettingCache NoUserSettingCached
::Unity::XR::Oculus::Development::UserDeveloperModeSettingCache Unity::XR::Oculus::Development::UserDeveloperModeSettingCache::_get_NoUserSettingCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Development::UserDeveloperModeSettingCache::_get_NoUserSettingCached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::Development::UserDeveloperModeSettingCache>("Unity.XR.Oculus", "Development/UserDeveloperModeSettingCache", "NoUserSettingCached"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.Development/Unity.XR.Oculus.UserDeveloperModeSettingCache NoUserSettingCached
void Unity::XR::Oculus::Development::UserDeveloperModeSettingCache::_set_NoUserSettingCached(::Unity::XR::Oculus::Development::UserDeveloperModeSettingCache value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Development::UserDeveloperModeSettingCache::_set_NoUserSettingCached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "Development/UserDeveloperModeSettingCache", "NoUserSettingCached", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.Development/Unity.XR.Oculus.UserDeveloperModeSettingCache UserSettingFalse
::Unity::XR::Oculus::Development::UserDeveloperModeSettingCache Unity::XR::Oculus::Development::UserDeveloperModeSettingCache::_get_UserSettingFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Development::UserDeveloperModeSettingCache::_get_UserSettingFalse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::Development::UserDeveloperModeSettingCache>("Unity.XR.Oculus", "Development/UserDeveloperModeSettingCache", "UserSettingFalse"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.Development/Unity.XR.Oculus.UserDeveloperModeSettingCache UserSettingFalse
void Unity::XR::Oculus::Development::UserDeveloperModeSettingCache::_set_UserSettingFalse(::Unity::XR::Oculus::Development::UserDeveloperModeSettingCache value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Development::UserDeveloperModeSettingCache::_set_UserSettingFalse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "Development/UserDeveloperModeSettingCache", "UserSettingFalse", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.Development/Unity.XR.Oculus.UserDeveloperModeSettingCache UserSettingTrue
::Unity::XR::Oculus::Development::UserDeveloperModeSettingCache Unity::XR::Oculus::Development::UserDeveloperModeSettingCache::_get_UserSettingTrue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Development::UserDeveloperModeSettingCache::_get_UserSettingTrue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::Development::UserDeveloperModeSettingCache>("Unity.XR.Oculus", "Development/UserDeveloperModeSettingCache", "UserSettingTrue"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.Development/Unity.XR.Oculus.UserDeveloperModeSettingCache UserSettingTrue
void Unity::XR::Oculus::Development::UserDeveloperModeSettingCache::_set_UserSettingTrue(::Unity::XR::Oculus::Development::UserDeveloperModeSettingCache value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Development::UserDeveloperModeSettingCache::_set_UserSettingTrue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "Development/UserDeveloperModeSettingCache", "UserSettingTrue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Unity::XR::Oculus::Development::UserDeveloperModeSettingCache::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Development::UserDeveloperModeSettingCache::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.XRDisplaySubsystemDescriptor
#include "UnityEngine/XR/XRDisplaySubsystemDescriptor.hpp"
// Including type: UnityEngine.XR.XRInputSubsystemDescriptor
#include "UnityEngine/XR/XRInputSubsystemDescriptor.hpp"
// Including type: Unity.XR.Oculus.OculusLoader
#include "Unity/XR/Oculus/OculusLoader.hpp"
// Including type: Unity.XR.Oculus.OculusLoader/Unity.XR.Oculus.DeviceSupportedResult
#include "Unity/XR/Oculus/OculusLoader_DeviceSupportedResult.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.XRDisplaySubsystem
#include "UnityEngine/XR/XRDisplaySubsystem.hpp"
// Including type: UnityEngine.XR.XRInputSubsystem
#include "UnityEngine/XR/XRInputSubsystem.hpp"
// Including type: Unity.XR.Oculus.OculusSettings
#include "Unity/XR/Oculus/OculusSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystemDescriptor> s_DisplaySubsystemDescriptors
::System::Collections::Generic::List_1<::UnityEngine::XR::XRDisplaySubsystemDescriptor*>* Unity::XR::Oculus::OculusLoader::_get_s_DisplaySubsystemDescriptors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::_get_s_DisplaySubsystemDescriptors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::XRDisplaySubsystemDescriptor*>*>("Unity.XR.Oculus", "OculusLoader", "s_DisplaySubsystemDescriptors"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRDisplaySubsystemDescriptor> s_DisplaySubsystemDescriptors
void Unity::XR::Oculus::OculusLoader::_set_s_DisplaySubsystemDescriptors(::System::Collections::Generic::List_1<::UnityEngine::XR::XRDisplaySubsystemDescriptor*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::_set_s_DisplaySubsystemDescriptors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "OculusLoader", "s_DisplaySubsystemDescriptors", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystemDescriptor> s_InputSubsystemDescriptors
::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystemDescriptor*>* Unity::XR::Oculus::OculusLoader::_get_s_InputSubsystemDescriptors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::_get_s_InputSubsystemDescriptors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystemDescriptor*>*>("Unity.XR.Oculus", "OculusLoader", "s_InputSubsystemDescriptors"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.XR.XRInputSubsystemDescriptor> s_InputSubsystemDescriptors
void Unity::XR::Oculus::OculusLoader::_set_s_InputSubsystemDescriptors(::System::Collections::Generic::List_1<::UnityEngine::XR::XRInputSubsystemDescriptor*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::_set_s_InputSubsystemDescriptors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "OculusLoader", "s_InputSubsystemDescriptors", value));
}
// Autogenerated method: Unity.XR.Oculus.OculusLoader.get_displaySubsystem
::UnityEngine::XR::XRDisplaySubsystem* Unity::XR::Oculus::OculusLoader::get_displaySubsystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::get_displaySubsystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_displaySubsystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::XRDisplaySubsystem*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.OculusLoader.get_inputSubsystem
::UnityEngine::XR::XRInputSubsystem* Unity::XR::Oculus::OculusLoader::get_inputSubsystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::get_inputSubsystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputSubsystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::XRInputSubsystem*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.OculusLoader.IsDeviceSupported
::Unity::XR::Oculus::OculusLoader::DeviceSupportedResult Unity::XR::Oculus::OculusLoader::IsDeviceSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::IsDeviceSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "OculusLoader", "IsDeviceSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::XR::Oculus::OculusLoader::DeviceSupportedResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.OculusLoader.RuntimeLoadOVRPlugin
void Unity::XR::Oculus::OculusLoader::RuntimeLoadOVRPlugin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::RuntimeLoadOVRPlugin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "OculusLoader", "RuntimeLoadOVRPlugin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.OculusLoader.GetSettings
::Unity::XR::Oculus::OculusSettings* Unity::XR::Oculus::OculusLoader::GetSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::GetSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::XR::Oculus::OculusSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.OculusLoader..cctor
void Unity::XR::Oculus::OculusLoader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "OculusLoader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.OculusLoader.Initialize
bool Unity::XR::Oculus::OculusLoader::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::Initialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRLoader*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.OculusLoader.Start
bool Unity::XR::Oculus::OculusLoader::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRLoader*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.OculusLoader.Stop
bool Unity::XR::Oculus::OculusLoader::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::Stop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRLoader*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.OculusLoader.Deinitialize
bool Unity::XR::Oculus::OculusLoader::Deinitialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::Deinitialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::XR::Management::XRLoaderHelper*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.OculusLoader/Unity.XR.Oculus.DeviceSupportedResult
#include "Unity/XR/Oculus/OculusLoader_DeviceSupportedResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.OculusLoader/Unity.XR.Oculus.DeviceSupportedResult Supported
::Unity::XR::Oculus::OculusLoader::DeviceSupportedResult Unity::XR::Oculus::OculusLoader::DeviceSupportedResult::_get_Supported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::DeviceSupportedResult::_get_Supported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::OculusLoader::DeviceSupportedResult>("Unity.XR.Oculus", "OculusLoader/DeviceSupportedResult", "Supported"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.OculusLoader/Unity.XR.Oculus.DeviceSupportedResult Supported
void Unity::XR::Oculus::OculusLoader::DeviceSupportedResult::_set_Supported(::Unity::XR::Oculus::OculusLoader::DeviceSupportedResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::DeviceSupportedResult::_set_Supported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "OculusLoader/DeviceSupportedResult", "Supported", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.OculusLoader/Unity.XR.Oculus.DeviceSupportedResult NotSupported
::Unity::XR::Oculus::OculusLoader::DeviceSupportedResult Unity::XR::Oculus::OculusLoader::DeviceSupportedResult::_get_NotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::DeviceSupportedResult::_get_NotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::OculusLoader::DeviceSupportedResult>("Unity.XR.Oculus", "OculusLoader/DeviceSupportedResult", "NotSupported"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.OculusLoader/Unity.XR.Oculus.DeviceSupportedResult NotSupported
void Unity::XR::Oculus::OculusLoader::DeviceSupportedResult::_set_NotSupported(::Unity::XR::Oculus::OculusLoader::DeviceSupportedResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::DeviceSupportedResult::_set_NotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "OculusLoader/DeviceSupportedResult", "NotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.OculusLoader/Unity.XR.Oculus.DeviceSupportedResult ExitApplication
::Unity::XR::Oculus::OculusLoader::DeviceSupportedResult Unity::XR::Oculus::OculusLoader::DeviceSupportedResult::_get_ExitApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::DeviceSupportedResult::_get_ExitApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::OculusLoader::DeviceSupportedResult>("Unity.XR.Oculus", "OculusLoader/DeviceSupportedResult", "ExitApplication"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.OculusLoader/Unity.XR.Oculus.DeviceSupportedResult ExitApplication
void Unity::XR::Oculus::OculusLoader::DeviceSupportedResult::_set_ExitApplication(::Unity::XR::Oculus::OculusLoader::DeviceSupportedResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::DeviceSupportedResult::_set_ExitApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "OculusLoader/DeviceSupportedResult", "ExitApplication", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Unity::XR::Oculus::OculusLoader::DeviceSupportedResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::OculusLoader::DeviceSupportedResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.Performance
#include "Unity/XR/Oculus/Performance.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single[] cachedDisplayAvailableFrequencies
::ArrayW<float> Unity::XR::Oculus::Performance::_get_cachedDisplayAvailableFrequencies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Performance::_get_cachedDisplayAvailableFrequencies");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("Unity.XR.Oculus", "Performance", "cachedDisplayAvailableFrequencies"));
}
// Autogenerated static field setter
// Set static field: static private System.Single[] cachedDisplayAvailableFrequencies
void Unity::XR::Oculus::Performance::_set_cachedDisplayAvailableFrequencies(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Performance::_set_cachedDisplayAvailableFrequencies");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "Performance", "cachedDisplayAvailableFrequencies", value));
}
// Autogenerated method: Unity.XR.Oculus.Performance..cctor
void Unity::XR::Oculus::Performance::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Performance::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Performance", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Performance.TrySetCPULevel
bool Unity::XR::Oculus::Performance::TrySetCPULevel(int level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Performance::TrySetCPULevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Performance", "TrySetCPULevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level);
}
// Autogenerated method: Unity.XR.Oculus.Performance.TrySetGPULevel
bool Unity::XR::Oculus::Performance::TrySetGPULevel(int level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Performance::TrySetGPULevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Performance", "TrySetGPULevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level);
}
// Autogenerated method: Unity.XR.Oculus.Performance.TryGetAvailableDisplayRefreshRates
bool Unity::XR::Oculus::Performance::TryGetAvailableDisplayRefreshRates(ByRef<::ArrayW<float>> refreshRates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Performance::TryGetAvailableDisplayRefreshRates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Performance", "TryGetAvailableDisplayRefreshRates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<float>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(refreshRates));
}
// Autogenerated method: Unity.XR.Oculus.Performance.TrySetDisplayRefreshRate
bool Unity::XR::Oculus::Performance::TrySetDisplayRefreshRate(float refreshRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Performance::TrySetDisplayRefreshRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Performance", "TrySetDisplayRefreshRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(refreshRate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, refreshRate);
}
// Autogenerated method: Unity.XR.Oculus.Performance.TryGetDisplayRefreshRate
bool Unity::XR::Oculus::Performance::TryGetDisplayRefreshRate(ByRef<float> refreshRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Performance::TryGetDisplayRefreshRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Performance", "TryGetDisplayRefreshRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(refreshRate));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.Stats
#include "Unity/XR/Oculus/Stats.hpp"
// Including type: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AdaptivePerformance
#include "Unity/XR/Oculus/Stats_AdaptivePerformance.hpp"
// Including type: Unity.XR.Oculus.Stats/Unity.XR.Oculus.PerfMetrics
#include "Unity/XR/Oculus/Stats_PerfMetrics.hpp"
// Including type: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AppMetrics
#include "Unity/XR/Oculus/Stats_AppMetrics.hpp"
// Including type: UnityEngine.IntegratedSubsystem
#include "UnityEngine/IntegratedSubsystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.IntegratedSubsystem m_Display
::UnityEngine::IntegratedSubsystem* Unity::XR::Oculus::Stats::_get_m_Display() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::_get_m_Display");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::IntegratedSubsystem*>("Unity.XR.Oculus", "Stats", "m_Display"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.IntegratedSubsystem m_Display
void Unity::XR::Oculus::Stats::_set_m_Display(::UnityEngine::IntegratedSubsystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::_set_m_Display");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "Stats", "m_Display", value));
}
// Autogenerated static field getter
// Get static field: static private System.String m_PluginVersion
::StringW Unity::XR::Oculus::Stats::_get_m_PluginVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::_get_m_PluginVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Unity.XR.Oculus", "Stats", "m_PluginVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String m_PluginVersion
void Unity::XR::Oculus::Stats::_set_m_PluginVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::_set_m_PluginVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "Stats", "m_PluginVersion", value));
}
// Autogenerated method: Unity.XR.Oculus.Stats.get_PluginVersion
::StringW Unity::XR::Oculus::Stats::get_PluginVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::get_PluginVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats", "get_PluginVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats..cctor
void Unity::XR::Oculus::Stats::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats.GetOculusDisplaySubsystem
::UnityEngine::IntegratedSubsystem* Unity::XR::Oculus::Stats::GetOculusDisplaySubsystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::GetOculusDisplaySubsystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats", "GetOculusDisplaySubsystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::IntegratedSubsystem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AdaptivePerformance
#include "Unity/XR/Oculus/Stats_AdaptivePerformance.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AdaptivePerformance.get_GPUAppTime
float Unity::XR::Oculus::Stats::AdaptivePerformance::get_GPUAppTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::AdaptivePerformance::get_GPUAppTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/AdaptivePerformance", "get_GPUAppTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AdaptivePerformance.get_GPUCompositorTime
float Unity::XR::Oculus::Stats::AdaptivePerformance::get_GPUCompositorTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::AdaptivePerformance::get_GPUCompositorTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/AdaptivePerformance", "get_GPUCompositorTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AdaptivePerformance.get_MotionToPhoton
float Unity::XR::Oculus::Stats::AdaptivePerformance::get_MotionToPhoton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::AdaptivePerformance::get_MotionToPhoton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/AdaptivePerformance", "get_MotionToPhoton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AdaptivePerformance.get_RefreshRate
float Unity::XR::Oculus::Stats::AdaptivePerformance::get_RefreshRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::AdaptivePerformance::get_RefreshRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/AdaptivePerformance", "get_RefreshRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AdaptivePerformance.get_BatteryTemp
float Unity::XR::Oculus::Stats::AdaptivePerformance::get_BatteryTemp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::AdaptivePerformance::get_BatteryTemp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/AdaptivePerformance", "get_BatteryTemp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AdaptivePerformance.get_BatteryLevel
float Unity::XR::Oculus::Stats::AdaptivePerformance::get_BatteryLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::AdaptivePerformance::get_BatteryLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/AdaptivePerformance", "get_BatteryLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AdaptivePerformance.get_PowerSavingMode
bool Unity::XR::Oculus::Stats::AdaptivePerformance::get_PowerSavingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::AdaptivePerformance::get_PowerSavingMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/AdaptivePerformance", "get_PowerSavingMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AdaptivePerformance.get_AdaptivePerformanceScale
float Unity::XR::Oculus::Stats::AdaptivePerformance::get_AdaptivePerformanceScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::AdaptivePerformance::get_AdaptivePerformanceScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/AdaptivePerformance", "get_AdaptivePerformanceScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AdaptivePerformance.get_CPULevel
int Unity::XR::Oculus::Stats::AdaptivePerformance::get_CPULevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::AdaptivePerformance::get_CPULevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/AdaptivePerformance", "get_CPULevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AdaptivePerformance.get_GPULevel
int Unity::XR::Oculus::Stats::AdaptivePerformance::get_GPULevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::AdaptivePerformance::get_GPULevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/AdaptivePerformance", "get_GPULevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.Stats/Unity.XR.Oculus.PerfMetrics
#include "Unity/XR/Oculus/Stats_PerfMetrics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.PerfMetrics.get_AppCPUTime
float Unity::XR::Oculus::Stats::PerfMetrics::get_AppCPUTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::PerfMetrics::get_AppCPUTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/PerfMetrics", "get_AppCPUTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.PerfMetrics.get_AppGPUTime
float Unity::XR::Oculus::Stats::PerfMetrics::get_AppGPUTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::PerfMetrics::get_AppGPUTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/PerfMetrics", "get_AppGPUTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.PerfMetrics.get_CompositorCPUTime
float Unity::XR::Oculus::Stats::PerfMetrics::get_CompositorCPUTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::PerfMetrics::get_CompositorCPUTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/PerfMetrics", "get_CompositorCPUTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.PerfMetrics.get_CompositorGPUTime
float Unity::XR::Oculus::Stats::PerfMetrics::get_CompositorGPUTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::PerfMetrics::get_CompositorGPUTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/PerfMetrics", "get_CompositorGPUTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.PerfMetrics.get_GPUUtilization
float Unity::XR::Oculus::Stats::PerfMetrics::get_GPUUtilization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::PerfMetrics::get_GPUUtilization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/PerfMetrics", "get_GPUUtilization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.PerfMetrics.get_CPUUtilizationAverage
float Unity::XR::Oculus::Stats::PerfMetrics::get_CPUUtilizationAverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::PerfMetrics::get_CPUUtilizationAverage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/PerfMetrics", "get_CPUUtilizationAverage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.PerfMetrics.get_CPUUtilizationWorst
float Unity::XR::Oculus::Stats::PerfMetrics::get_CPUUtilizationWorst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::PerfMetrics::get_CPUUtilizationWorst");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/PerfMetrics", "get_CPUUtilizationWorst", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.PerfMetrics.get_CPUClockFrequency
float Unity::XR::Oculus::Stats::PerfMetrics::get_CPUClockFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::PerfMetrics::get_CPUClockFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/PerfMetrics", "get_CPUClockFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.PerfMetrics.get_GPUClockFrequency
float Unity::XR::Oculus::Stats::PerfMetrics::get_GPUClockFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::PerfMetrics::get_GPUClockFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/PerfMetrics", "get_GPUClockFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.PerfMetrics.EnablePerfMetrics
void Unity::XR::Oculus::Stats::PerfMetrics::EnablePerfMetrics(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::PerfMetrics::EnablePerfMetrics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/PerfMetrics", "EnablePerfMetrics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, enable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AppMetrics
#include "Unity/XR/Oculus/Stats_AppMetrics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AppMetrics.get_AppQueueAheadTime
float Unity::XR::Oculus::Stats::AppMetrics::get_AppQueueAheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::AppMetrics::get_AppQueueAheadTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/AppMetrics", "get_AppQueueAheadTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AppMetrics.get_AppCPUElapsedTime
float Unity::XR::Oculus::Stats::AppMetrics::get_AppCPUElapsedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::AppMetrics::get_AppCPUElapsedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/AppMetrics", "get_AppCPUElapsedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AppMetrics.get_CompositorDroppedFrames
float Unity::XR::Oculus::Stats::AppMetrics::get_CompositorDroppedFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::AppMetrics::get_CompositorDroppedFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/AppMetrics", "get_CompositorDroppedFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AppMetrics.get_CompositorLatency
float Unity::XR::Oculus::Stats::AppMetrics::get_CompositorLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::AppMetrics::get_CompositorLatency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/AppMetrics", "get_CompositorLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AppMetrics.get_CompositorCPUTime
float Unity::XR::Oculus::Stats::AppMetrics::get_CompositorCPUTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::AppMetrics::get_CompositorCPUTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/AppMetrics", "get_CompositorCPUTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AppMetrics.get_CPUStartToGPUEnd
float Unity::XR::Oculus::Stats::AppMetrics::get_CPUStartToGPUEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::AppMetrics::get_CPUStartToGPUEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/AppMetrics", "get_CPUStartToGPUEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AppMetrics.get_GPUEndToVsync
float Unity::XR::Oculus::Stats::AppMetrics::get_GPUEndToVsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::AppMetrics::get_GPUEndToVsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/AppMetrics", "get_GPUEndToVsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Stats/Unity.XR.Oculus.AppMetrics.EnableAppMetrics
void Unity::XR::Oculus::Stats::AppMetrics::EnableAppMetrics(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Stats::AppMetrics::EnableAppMetrics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity.XR.Oculus", "Stats/AppMetrics", "EnableAppMetrics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, enable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.SystemHeadset
#include "Unity/XR/Oculus/SystemHeadset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset None
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "None"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset None
void Unity::XR::Oculus::SystemHeadset::_set_None(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset Oculus_Quest
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_Oculus_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_Oculus_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "Oculus_Quest"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset Oculus_Quest
void Unity::XR::Oculus::SystemHeadset::_set_Oculus_Quest(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_Oculus_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "Oculus_Quest", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset Oculus_Quest_2
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_Oculus_Quest_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_Oculus_Quest_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "Oculus_Quest_2"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset Oculus_Quest_2
void Unity::XR::Oculus::SystemHeadset::_set_Oculus_Quest_2(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_Oculus_Quest_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "Oculus_Quest_2", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset Placeholder_10
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_Placeholder_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_Placeholder_10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "Placeholder_10"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset Placeholder_10
void Unity::XR::Oculus::SystemHeadset::_set_Placeholder_10(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_Placeholder_10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "Placeholder_10", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset Placeholder_11
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_Placeholder_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_Placeholder_11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "Placeholder_11"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset Placeholder_11
void Unity::XR::Oculus::SystemHeadset::_set_Placeholder_11(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_Placeholder_11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "Placeholder_11", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset Placeholder_12
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_Placeholder_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_Placeholder_12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "Placeholder_12"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset Placeholder_12
void Unity::XR::Oculus::SystemHeadset::_set_Placeholder_12(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_Placeholder_12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "Placeholder_12", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset Placeholder_13
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_Placeholder_13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_Placeholder_13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "Placeholder_13"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset Placeholder_13
void Unity::XR::Oculus::SystemHeadset::_set_Placeholder_13(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_Placeholder_13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "Placeholder_13", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset Placeholder_14
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_Placeholder_14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_Placeholder_14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "Placeholder_14"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset Placeholder_14
void Unity::XR::Oculus::SystemHeadset::_set_Placeholder_14(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_Placeholder_14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "Placeholder_14", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset Rift_DK1
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_Rift_DK1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_Rift_DK1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "Rift_DK1"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset Rift_DK1
void Unity::XR::Oculus::SystemHeadset::_set_Rift_DK1(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_Rift_DK1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "Rift_DK1", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset Rift_DK2
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_Rift_DK2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_Rift_DK2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "Rift_DK2"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset Rift_DK2
void Unity::XR::Oculus::SystemHeadset::_set_Rift_DK2(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_Rift_DK2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "Rift_DK2", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset Rift_CV1
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_Rift_CV1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_Rift_CV1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "Rift_CV1"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset Rift_CV1
void Unity::XR::Oculus::SystemHeadset::_set_Rift_CV1(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_Rift_CV1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "Rift_CV1", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset Rift_CB
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_Rift_CB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_Rift_CB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "Rift_CB"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset Rift_CB
void Unity::XR::Oculus::SystemHeadset::_set_Rift_CB(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_Rift_CB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "Rift_CB", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset Rift_S
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_Rift_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_Rift_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "Rift_S"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset Rift_S
void Unity::XR::Oculus::SystemHeadset::_set_Rift_S(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_Rift_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "Rift_S", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset Oculus_Link_Quest
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_Oculus_Link_Quest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_Oculus_Link_Quest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "Oculus_Link_Quest"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset Oculus_Link_Quest
void Unity::XR::Oculus::SystemHeadset::_set_Oculus_Link_Quest(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_Oculus_Link_Quest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "Oculus_Link_Quest", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset Oculus_Link_Quest_2
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_Oculus_Link_Quest_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_Oculus_Link_Quest_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "Oculus_Link_Quest_2"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset Oculus_Link_Quest_2
void Unity::XR::Oculus::SystemHeadset::_set_Oculus_Link_Quest_2(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_Oculus_Link_Quest_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "Oculus_Link_Quest_2", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset PC_Placeholder_4103
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_PC_Placeholder_4103() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_PC_Placeholder_4103");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "PC_Placeholder_4103"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset PC_Placeholder_4103
void Unity::XR::Oculus::SystemHeadset::_set_PC_Placeholder_4103(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_PC_Placeholder_4103");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "PC_Placeholder_4103", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset PC_Placeholder_4104
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_PC_Placeholder_4104() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_PC_Placeholder_4104");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "PC_Placeholder_4104"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset PC_Placeholder_4104
void Unity::XR::Oculus::SystemHeadset::_set_PC_Placeholder_4104(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_PC_Placeholder_4104");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "PC_Placeholder_4104", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset PC_Placeholder_4105
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_PC_Placeholder_4105() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_PC_Placeholder_4105");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "PC_Placeholder_4105"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset PC_Placeholder_4105
void Unity::XR::Oculus::SystemHeadset::_set_PC_Placeholder_4105(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_PC_Placeholder_4105");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "PC_Placeholder_4105", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset PC_Placeholder_4106
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_PC_Placeholder_4106() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_PC_Placeholder_4106");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "PC_Placeholder_4106"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset PC_Placeholder_4106
void Unity::XR::Oculus::SystemHeadset::_set_PC_Placeholder_4106(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_PC_Placeholder_4106");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "PC_Placeholder_4106", value));
}
// Autogenerated static field getter
// Get static field: static public Unity.XR.Oculus.SystemHeadset PC_Placeholder_4107
::Unity::XR::Oculus::SystemHeadset Unity::XR::Oculus::SystemHeadset::_get_PC_Placeholder_4107() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_get_PC_Placeholder_4107");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Unity::XR::Oculus::SystemHeadset>("Unity.XR.Oculus", "SystemHeadset", "PC_Placeholder_4107"));
}
// Autogenerated static field setter
// Set static field: static public Unity.XR.Oculus.SystemHeadset PC_Placeholder_4107
void Unity::XR::Oculus::SystemHeadset::_set_PC_Placeholder_4107(::Unity::XR::Oculus::SystemHeadset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::_set_PC_Placeholder_4107");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Unity.XR.Oculus", "SystemHeadset", "PC_Placeholder_4107", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& Unity::XR::Oculus::SystemHeadset::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::SystemHeadset::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
