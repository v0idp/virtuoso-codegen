// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.UInt16Converter
#include "Firebase/Firestore/Converters/UInt16Converter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.UInt16Converter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::UInt16Converter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::UInt16Converter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.UInt16Converter.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::UInt16Converter::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::UInt16Converter::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.Int32Converter
#include "Firebase/Firestore/Converters/Int32Converter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.Int32Converter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::Int32Converter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::Int32Converter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.Int32Converter.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::Int32Converter::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::Int32Converter::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.UInt32Converter
#include "Firebase/Firestore/Converters/UInt32Converter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.UInt32Converter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::UInt32Converter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::UInt32Converter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.UInt32Converter.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::UInt32Converter::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::UInt32Converter::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.Int64Converter
#include "Firebase/Firestore/Converters/Int64Converter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.Int64Converter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::Int64Converter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::Int64Converter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.Int64Converter.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::Int64Converter::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::Int64Converter::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.UInt64Converter
#include "Firebase/Firestore/Converters/UInt64Converter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.UInt64Converter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::UInt64Converter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::UInt64Converter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.UInt64Converter.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::UInt64Converter::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::UInt64Converter::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.SingleConverter
#include "Firebase/Firestore/Converters/SingleConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.SingleConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::SingleConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::SingleConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.SingleConverter.DeserializeDouble
::Il2CppObject* Firebase::Firestore::Converters::SingleConverter::DeserializeDouble(::Firebase::Firestore::DeserializationContext* context, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::SingleConverter::DeserializeDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.SingleConverter.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::SingleConverter::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::SingleConverter::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.DoubleConverter
#include "Firebase/Firestore/Converters/DoubleConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.DoubleConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::DoubleConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::DoubleConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.DoubleConverter.DeserializeDouble
::Il2CppObject* Firebase::Firestore::Converters::DoubleConverter::DeserializeDouble(::Firebase::Firestore::DeserializationContext* context, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::DoubleConverter::DeserializeDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.DoubleConverter.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::DoubleConverter::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::DoubleConverter::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.BooleanConverter
#include "Firebase/Firestore/Converters/BooleanConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.BooleanConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::BooleanConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::BooleanConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.BooleanConverter.DeserializeBoolean
::Il2CppObject* Firebase::Firestore::Converters::BooleanConverter::DeserializeBoolean(::Firebase::Firestore::DeserializationContext* context, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::BooleanConverter::DeserializeBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.TimestampConverter
#include "Firebase/Firestore/Converters/TimestampConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.Timestamp
#include "Firebase/Firestore/Timestamp.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.TimestampConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::TimestampConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::TimestampConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.TimestampConverter.DeserializeTimestamp
::Il2CppObject* Firebase::Firestore::Converters::TimestampConverter::DeserializeTimestamp(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::Timestamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::TimestampConverter::DeserializeTimestamp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.GeoPointConverter
#include "Firebase/Firestore/Converters/GeoPointConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.GeoPoint
#include "Firebase/Firestore/GeoPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.GeoPointConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::GeoPointConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::GeoPointConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.GeoPointConverter.DeserializeGeoPoint
::Il2CppObject* Firebase::Firestore::Converters::GeoPointConverter::DeserializeGeoPoint(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::GeoPoint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::GeoPointConverter::DeserializeGeoPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.ByteArrayConverter
#include "Firebase/Firestore/Converters/ByteArrayConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.ByteArrayConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::ByteArrayConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ByteArrayConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ByteArrayConverter.DeserializeBytes
::Il2CppObject* Firebase::Firestore::Converters::ByteArrayConverter::DeserializeBytes(::Firebase::Firestore::DeserializationContext* context, ::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ByteArrayConverter::DeserializeBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.BlobConverter
#include "Firebase/Firestore/Converters/BlobConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.BlobConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::BlobConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::BlobConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.BlobConverter.DeserializeBytes
::Il2CppObject* Firebase::Firestore::Converters::BlobConverter::DeserializeBytes(::Firebase::Firestore::DeserializationContext* context, ::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::BlobConverter::DeserializeBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.FieldValueProxyConverter
#include "Firebase/Firestore/Converters/FieldValueProxyConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.FieldValueProxyConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::FieldValueProxyConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::FieldValueProxyConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.DateTimeConverter
#include "Firebase/Firestore/Converters/DateTimeConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.Timestamp
#include "Firebase/Firestore/Timestamp.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.DateTimeConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::DateTimeConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::DateTimeConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.DateTimeConverter.DeserializeTimestamp
::Il2CppObject* Firebase::Firestore::Converters::DateTimeConverter::DeserializeTimestamp(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::Timestamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::DateTimeConverter::DeserializeTimestamp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.DateTimeOffsetConverter
#include "Firebase/Firestore/Converters/DateTimeOffsetConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.Timestamp
#include "Firebase/Firestore/Timestamp.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.DateTimeOffsetConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::DateTimeOffsetConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::DateTimeOffsetConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.DateTimeOffsetConverter.DeserializeTimestamp
::Il2CppObject* Firebase::Firestore::Converters::DateTimeOffsetConverter::DeserializeTimestamp(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::Timestamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::DateTimeOffsetConverter::DeserializeTimestamp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.DocumentReferenceConverter
#include "Firebase/Firestore/Converters/DocumentReferenceConverter.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.DocumentReference
#include "Firebase/Firestore/DocumentReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.DocumentReferenceConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::DocumentReferenceConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::DocumentReferenceConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.DocumentReferenceConverter.DeserializeReference
::Il2CppObject* Firebase::Firestore::Converters::DocumentReferenceConverter::DeserializeReference(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::DocumentReference* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::DocumentReferenceConverter::DeserializeReference");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.MapConverterBase
#include "Firebase/Firestore/Converters/MapConverterBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.MapConverterBase.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::MapConverterBase::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::MapConverterBase::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.IFirestoreInternalConverter
#include "Firebase/Firestore/Converters/IFirestoreInternalConverter.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.IFirestoreInternalConverter.DeserializeValue
::Il2CppObject* Firebase::Firestore::Converters::IFirestoreInternalConverter::DeserializeValue(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::IFirestoreInternalConverter::DeserializeValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::IFirestoreInternalConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.IFirestoreInternalConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::IFirestoreInternalConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::IFirestoreInternalConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::IFirestoreInternalConverter*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.EnumerableConverterBase
#include "Firebase/Firestore/Converters/EnumerableConverterBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Converters.EnumerableConverterBase.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::EnumerableConverterBase::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumerableConverterBase::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.EnumerableConverter
#include "Firebase/Firestore/Converters/EnumerableConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.Type,System.Boolean> <>f__am$cache0
::System::Func_2<::System::Type*, bool>* Firebase::Firestore::Converters::EnumerableConverter::_get_$$f__am$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumerableConverter::_get_$$f__am$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, bool>*>("Firebase.Firestore.Converters", "EnumerableConverter", "<>f__am$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.Type,System.Boolean> <>f__am$cache0
void Firebase::Firestore::Converters::EnumerableConverter::_set_$$f__am$cache0(::System::Func_2<::System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumerableConverter::_set_$$f__am$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore.Converters", "EnumerableConverter", "<>f__am$cache0", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _elementType
[[deprecated("Use field access instead!")]] ::System::Type*& Firebase::Firestore::Converters::EnumerableConverter::dyn__elementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumerableConverter::dyn__elementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.EnumerableConverter.<EnumerableConverter>m__0
bool Firebase::Firestore::Converters::EnumerableConverter::$EnumerableConverter$m__0(::System::Type* iface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumerableConverter::<EnumerableConverter>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "EnumerableConverter", "<EnumerableConverter>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iface)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, iface);
}
// Autogenerated method: Firebase.Firestore.Converters.EnumerableConverter.DeserializeArray
::Il2CppObject* Firebase::Firestore::Converters::EnumerableConverter::DeserializeArray(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* arrayValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumerableConverter::DeserializeArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, arrayValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.EnumConverter
#include "Firebase/Firestore/Converters/EnumConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.TypeCode _typeCode
[[deprecated("Use field access instead!")]] ::System::TypeCode& Firebase::Firestore::Converters::EnumConverter::dyn__typeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumConverter::dyn__typeCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeCode"))->offset;
  return *reinterpret_cast<::System::TypeCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.EnumConverter.EnumToInt64
int64_t Firebase::Firestore::Converters::EnumConverter::EnumToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumConverter::EnumToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnumToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.Converters.EnumConverter.Int64ToEnumBaseType
::Il2CppObject* Firebase::Firestore::Converters::EnumConverter::Int64ToEnumBaseType(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumConverter::Int64ToEnumBaseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Int64ToEnumBaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.Converters.EnumConverter.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::EnumConverter::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumConverter::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.EnumConverter.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::EnumConverter::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::EnumConverter::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.Converters.CustomConverter
#include "Firebase/Firestore/Converters/CustomConverter.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: Firebase.Firestore.Converters.IFirestoreInternalConverter
#include "Firebase/Firestore/Converters/IFirestoreInternalConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.FirestoreConverter`1
#include "Firebase/Firestore/FirestoreConverter_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Reflection.MethodInfo _method
::System::Reflection::MethodInfo* Firebase::Firestore::Converters::CustomConverter::_get__method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::CustomConverter::_get__method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("Firebase.Firestore.Converters", "CustomConverter", "_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Reflection.MethodInfo _method
void Firebase::Firestore::Converters::CustomConverter::_set__method(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::CustomConverter::_set__method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore.Converters", "CustomConverter", "_method", value));
}
// Autogenerated method: Firebase.Firestore.Converters.CustomConverter..cctor
void Firebase::Firestore::Converters::CustomConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::CustomConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "CustomConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Converters.CustomConverter.ForConverterType
::Firebase::Firestore::Converters::IFirestoreInternalConverter* Firebase::Firestore::Converters::CustomConverter::ForConverterType(::System::Type* converterType, ::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::CustomConverter::ForConverterType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "CustomConverter", "ForConverterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(converterType), ::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Converters::IFirestoreInternalConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, converterType, targetType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.Converters.ConverterCache
#include "Firebase/Firestore/Converters/ConverterCache.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.Converters.IFirestoreInternalConverter
#include "Firebase/Firestore/Converters/IFirestoreInternalConverter.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,Firebase.Firestore.Converters.IFirestoreInternalConverter> s_converters
::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>* Firebase::Firestore::Converters::ConverterCache::_get_s_converters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::_get_s_converters");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>*>("Firebase.Firestore.Converters", "ConverterCache", "s_converters")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,Firebase.Firestore.Converters.IFirestoreInternalConverter> s_converters
void Firebase::Firestore::Converters::ConverterCache::_set_s_converters(::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::_set_s_converters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore.Converters", "ConverterCache", "s_converters", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Reflection.MethodInfo s_createDictionaryConverter
::System::Reflection::MethodInfo* Firebase::Firestore::Converters::ConverterCache::_get_s_createDictionaryConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::_get_s_createDictionaryConverter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Reflection::MethodInfo*>("Firebase.Firestore.Converters", "ConverterCache", "s_createDictionaryConverter"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Reflection.MethodInfo s_createDictionaryConverter
void Firebase::Firestore::Converters::ConverterCache::_set_s_createDictionaryConverter(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::_set_s_createDictionaryConverter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore.Converters", "ConverterCache", "s_createDictionaryConverter", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.Type,System.Type> <>f__mg$cache0
::System::Func_2<::System::Type*, ::System::Type*>* Firebase::Firestore::Converters::ConverterCache::_get_$$f__mg$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::_get_$$f__mg$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, ::System::Type*>*>("Firebase.Firestore.Converters", "ConverterCache", "<>f__mg$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.Type,System.Type> <>f__mg$cache0
void Firebase::Firestore::Converters::ConverterCache::_set_$$f__mg$cache0(::System::Func_2<::System::Type*, ::System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::_set_$$f__mg$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore.Converters", "ConverterCache", "<>f__mg$cache0", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.Type,System.Boolean> <>f__am$cache0
::System::Func_2<::System::Type*, bool>* Firebase::Firestore::Converters::ConverterCache::_get_$$f__am$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::_get_$$f__am$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, bool>*>("Firebase.Firestore.Converters", "ConverterCache", "<>f__am$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.Type,System.Boolean> <>f__am$cache0
void Firebase::Firestore::Converters::ConverterCache::_set_$$f__am$cache0(::System::Func_2<::System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::_set_$$f__am$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore.Converters", "ConverterCache", "<>f__am$cache0", value));
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterCache..cctor
void Firebase::Firestore::Converters::ConverterCache::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterCache", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterCache.GetConverter
::Firebase::Firestore::Converters::IFirestoreInternalConverter* Firebase::Firestore::Converters::ConverterCache::GetConverter(::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::GetConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterCache", "GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Converters::IFirestoreInternalConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetType);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterCache.InitializeConverterCache
void Firebase::Firestore::Converters::ConverterCache::InitializeConverterCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::InitializeConverterCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterCache", "InitializeConverterCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterCache.CreateConverter
::Firebase::Firestore::Converters::IFirestoreInternalConverter* Firebase::Firestore::Converters::ConverterCache::CreateConverter(::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::CreateConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterCache", "CreateConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Converters::IFirestoreInternalConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetType);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterCache.TryGetStringDictionaryValueType
bool Firebase::Firestore::Converters::ConverterCache::TryGetStringDictionaryValueType(::System::Type* type, ByRef<::System::Type*> elementType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::TryGetStringDictionaryValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterCache", "TryGetStringDictionaryValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<::System::Type*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, byref(elementType));
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterCache.MapInterfaceToDictionaryValueTypeArgument
::System::Type* Firebase::Firestore::Converters::ConverterCache::MapInterfaceToDictionaryValueTypeArgument(::System::Type* iface) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::MapInterfaceToDictionaryValueTypeArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterCache", "MapInterfaceToDictionaryValueTypeArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iface)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, iface);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterCache.<TryGetStringDictionaryValueType>m__0
bool Firebase::Firestore::Converters::ConverterCache::$TryGetStringDictionaryValueType$m__0(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterCache::<TryGetStringDictionaryValueType>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterCache", "<TryGetStringDictionaryValueType>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.ConverterBase
#include "Firebase/Firestore/Converters/ConverterBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: Firebase.Firestore.GeoPoint
#include "Firebase/Firestore/GeoPoint.hpp"
// Including type: Firebase.Firestore.DocumentReference
#include "Firebase/Firestore/DocumentReference.hpp"
// Including type: Firebase.Firestore.Timestamp
#include "Firebase/Firestore/Timestamp.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected readonly System.Type TargetType
[[deprecated("Use field access instead!")]] ::System::Type*& Firebase::Firestore::Converters::ConverterBase::dyn_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::dyn_TargetType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeMap
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeMap(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* mapValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, mapValue);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeValue
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeValue(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.Serialize
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::ConverterBase::Serialize(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::Serialize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.SerializeMap
void Firebase::Firestore::Converters::ConverterBase::SerializeMap(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value, ::System::Collections::Generic::IDictionary_2<::StringW, ::Firebase::Firestore::FieldValueProxy*>* map) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::SerializeMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, value, map);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeArray
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeArray(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* arrayValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, arrayValue);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeBoolean
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeBoolean(::Firebase::Firestore::DeserializationContext* context, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeBytes
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeBytes(::Firebase::Firestore::DeserializationContext* context, ::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeBytes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeDouble
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeDouble(::Firebase::Firestore::DeserializationContext* context, double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeGeoPoint
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeGeoPoint(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::GeoPoint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeGeoPoint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeInteger
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeInteger(::Firebase::Firestore::DeserializationContext* context, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeInteger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeReference
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeReference(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::DocumentReference* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeReference");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeString
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeString(::Firebase::Firestore::DeserializationContext* context, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.DeserializeTimestamp
::Il2CppObject* Firebase::Firestore::Converters::ConverterBase::DeserializeTimestamp(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::Timestamp value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::DeserializeTimestamp");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.ConvertToProxyMap
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::ConverterBase::ConvertToProxyMap(::System::Collections::Generic::IDictionary_2<::StringW, ::Firebase::Firestore::FieldValueProxy*>* map) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::ConvertToProxyMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterBase", "ConvertToProxyMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(map)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, map);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.ConvertToProxyArray
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::ConverterBase::ConvertToProxyArray(::System::Collections::Generic::IList_1<::Firebase::Firestore::FieldValueProxy*>* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::ConvertToProxyArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterBase", "ConvertToProxyArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.ConvertFromProxyBlob
::ArrayW<uint8_t> Firebase::Firestore::Converters::ConverterBase::ConvertFromProxyBlob(::Firebase::Firestore::FieldValueProxy* internalValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::ConvertFromProxyBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterBase", "ConvertFromProxyBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(internalValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, internalValue);
}
// Autogenerated method: Firebase.Firestore.Converters.ConverterBase.ConvertToProxyBlob
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::ConverterBase::ConvertToProxyBlob(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ConverterBase::ConvertToProxyBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "ConverterBase", "ConvertToProxyBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter
#include "Firebase/Firestore/Converters/AttributedTypeConverter.hpp"
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty
#include "Firebase/Firestore/Converters/AttributedTypeConverter_AttributedProperty.hpp"
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.<AttributedTypeConverter>c__AnonStorey0
#include "Firebase/Firestore/Converters/AttributedTypeConverter_-AttributedTypeConverter-c__AnonStorey0.hpp"
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.<CreateObjectCreator>c__AnonStorey1
#include "Firebase/Firestore/Converters/AttributedTypeConverter_-CreateObjectCreator-c__AnonStorey1.hpp"
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.<CreateObjectCreator>c__AnonStorey2
#include "Firebase/Firestore/Converters/AttributedTypeConverter_-CreateObjectCreator-c__AnonStorey2.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: Firebase.Firestore.FirestoreDataAttribute
#include "Firebase/Firestore/FirestoreDataAttribute.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.Reflection.ConstructorInfo,System.Boolean> <>f__am$cache0
::System::Func_2<::System::Reflection::ConstructorInfo*, bool>* Firebase::Firestore::Converters::AttributedTypeConverter::_get_$$f__am$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::_get_$$f__am$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Reflection::ConstructorInfo*, bool>*>("Firebase.Firestore.Converters", "AttributedTypeConverter", "<>f__am$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.Reflection.ConstructorInfo,System.Boolean> <>f__am$cache0
void Firebase::Firestore::Converters::AttributedTypeConverter::_set_$$f__am$cache0(::System::Func_2<::System::Reflection::ConstructorInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::_set_$$f__am$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore.Converters", "AttributedTypeConverter", "<>f__am$cache0", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty> _writableProperties
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty*>*& Firebase::Firestore::Converters::AttributedTypeConverter::dyn__writableProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::dyn__writableProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writableProperties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty> _readableProperties
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty*>*& Firebase::Firestore::Converters::AttributedTypeConverter::dyn__readableProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::dyn__readableProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readableProperties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Func`1<System.Object> _createInstance
[[deprecated("Use field access instead!")]] ::System::Func_1<::Il2CppObject*>*& Firebase::Firestore::Converters::AttributedTypeConverter::dyn__createInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::dyn__createInstance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_createInstance"))->offset;
  return *reinterpret_cast<::System::Func_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.FirestoreDataAttribute _attribute
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::FirestoreDataAttribute*& Firebase::Firestore::Converters::AttributedTypeConverter::dyn__attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::dyn__attribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attribute"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirestoreDataAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter.CreateObjectCreator
::System::Func_1<::Il2CppObject*>* Firebase::Firestore::Converters::AttributedTypeConverter::CreateObjectCreator(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::CreateObjectCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "AttributedTypeConverter", "CreateObjectCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_1<::Il2CppObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter.ForType
::Firebase::Firestore::Converters::IFirestoreInternalConverter* Firebase::Firestore::Converters::AttributedTypeConverter::ForType(::System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::ForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "AttributedTypeConverter", "ForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Converters::IFirestoreInternalConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, targetType);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter.<CreateObjectCreator>m__0
bool Firebase::Firestore::Converters::AttributedTypeConverter::$CreateObjectCreator$m__0(::System::Reflection::ConstructorInfo* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::<CreateObjectCreator>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "AttributedTypeConverter", "<CreateObjectCreator>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter.DeserializeMap
::Il2CppObject* Firebase::Firestore::Converters::AttributedTypeConverter::DeserializeMap(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* mapValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::DeserializeMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, mapValue);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter.SerializeMap
void Firebase::Firestore::Converters::AttributedTypeConverter::SerializeMap(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value, ::System::Collections::Generic::IDictionary_2<::StringW, ::Firebase::Firestore::FieldValueProxy*>* map) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::SerializeMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, value, map);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty
#include "Firebase/Firestore/Converters/AttributedTypeConverter_AttributedProperty.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.Converters.IFirestoreInternalConverter
#include "Firebase/Firestore/Converters/IFirestoreInternalConverter.hpp"
// Including type: Firebase.Firestore.FirestorePropertyAttribute
#include "Firebase/Firestore/FirestorePropertyAttribute.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Reflection.PropertyInfo _propertyInfo
[[deprecated("Use field access instead!")]] ::System::Reflection::PropertyInfo*& Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::dyn__propertyInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::dyn__propertyInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propertyInfo"))->offset;
  return *reinterpret_cast<::System::Reflection::PropertyInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.FieldValueProxy _sentinelValue
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::FieldValueProxy*& Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::dyn__sentinelValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::dyn__sentinelValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sentinelValue"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FieldValueProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.Converters.IFirestoreInternalConverter _converter
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::Converters::IFirestoreInternalConverter*& Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::dyn__converter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::dyn__converter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_converter"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::Converters::IFirestoreInternalConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.String FirestoreName
[[deprecated("Use field access instead!")]] ::StringW& Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::dyn_FirestoreName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::dyn_FirestoreName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FirestoreName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty.get_CanRead
bool Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::get_CanRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty.get_CanWrite
bool Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::get_CanWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty.get_IsNullableValue
bool Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::get_IsNullableValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::get_IsNullableValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNullableValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty.GetSerializedValue
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::GetSerializedValue(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::GetSerializedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSerializedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, context, obj);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty.SetValue
void Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::SetValue(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* value, ::Il2CppObject* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, value, target);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.<AttributedTypeConverter>c__AnonStorey0
#include "Firebase/Firestore/Converters/AttributedTypeConverter_-AttributedTypeConverter-c__AnonStorey0.hpp"
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.AttributedProperty
#include "Firebase/Firestore/Converters/AttributedTypeConverter_AttributedProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String firestoreName
[[deprecated("Use field access instead!")]] ::StringW& Firebase::Firestore::Converters::AttributedTypeConverter::$AttributedTypeConverter$c__AnonStorey0::dyn_firestoreName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::$AttributedTypeConverter$c__AnonStorey0::dyn_firestoreName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firestoreName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.<AttributedTypeConverter>c__AnonStorey0.<>m__0
bool Firebase::Firestore::Converters::AttributedTypeConverter::$AttributedTypeConverter$c__AnonStorey0::$$m__0(::Firebase::Firestore::Converters::AttributedTypeConverter::AttributedProperty* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::$AttributedTypeConverter$c__AnonStorey0::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.<CreateObjectCreator>c__AnonStorey1
#include "Firebase/Firestore/Converters/AttributedTypeConverter_-CreateObjectCreator-c__AnonStorey1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& Firebase::Firestore::Converters::AttributedTypeConverter::$CreateObjectCreator$c__AnonStorey1::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::$CreateObjectCreator$c__AnonStorey1::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.<CreateObjectCreator>c__AnonStorey1.<>m__0
::Il2CppObject* Firebase::Firestore::Converters::AttributedTypeConverter::$CreateObjectCreator$c__AnonStorey1::$$m__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::$CreateObjectCreator$c__AnonStorey1::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.<CreateObjectCreator>c__AnonStorey2
#include "Firebase/Firestore/Converters/AttributedTypeConverter_-CreateObjectCreator-c__AnonStorey2.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Reflection.ConstructorInfo ctor
[[deprecated("Use field access instead!")]] ::System::Reflection::ConstructorInfo*& Firebase::Firestore::Converters::AttributedTypeConverter::$CreateObjectCreator$c__AnonStorey2::dyn_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::$CreateObjectCreator$c__AnonStorey2::dyn_ctor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ctor"))->offset;
  return *reinterpret_cast<::System::Reflection::ConstructorInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedTypeConverter/Firebase.Firestore.Converters.<CreateObjectCreator>c__AnonStorey2.<>m__0
::Il2CppObject* Firebase::Firestore::Converters::AttributedTypeConverter::$CreateObjectCreator$c__AnonStorey2::$$m__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedTypeConverter::$CreateObjectCreator$c__AnonStorey2::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.AttributedIdAssigner
#include "Firebase/Firestore/Converters/AttributedIdAssigner.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.DocumentReference
#include "Firebase/Firestore/DocumentReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,Firebase.Firestore.Converters.AttributedIdAssigner> s_assigners
::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::AttributedIdAssigner*>* Firebase::Firestore::Converters::AttributedIdAssigner::_get_s_assigners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedIdAssigner::_get_s_assigners");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::AttributedIdAssigner*>*>("Firebase.Firestore.Converters", "AttributedIdAssigner", "s_assigners")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,Firebase.Firestore.Converters.AttributedIdAssigner> s_assigners
void Firebase::Firestore::Converters::AttributedIdAssigner::_set_s_assigners(::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::AttributedIdAssigner*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedIdAssigner::_set_s_assigners");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore.Converters", "AttributedIdAssigner", "s_assigners", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Reflection.PropertyInfo> _idProperties
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Reflection::PropertyInfo*>*& Firebase::Firestore::Converters::AttributedIdAssigner::dyn__idProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedIdAssigner::dyn__idProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_idProperties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Reflection::PropertyInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Reflection.PropertyInfo> _referenceProperties
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Reflection::PropertyInfo*>*& Firebase::Firestore::Converters::AttributedIdAssigner::dyn__referenceProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedIdAssigner::dyn__referenceProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_referenceProperties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Reflection::PropertyInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedIdAssigner..cctor
void Firebase::Firestore::Converters::AttributedIdAssigner::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedIdAssigner::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "AttributedIdAssigner", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedIdAssigner.AssignId
void Firebase::Firestore::Converters::AttributedIdAssigner::AssignId(::Il2CppObject* value, ::Firebase::Firestore::DocumentReference* reference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedIdAssigner::AssignId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(reference)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, reference);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedIdAssigner.MaybeAssignId
void Firebase::Firestore::Converters::AttributedIdAssigner::MaybeAssignId(::Il2CppObject* value, ::Firebase::Firestore::DocumentReference* reference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedIdAssigner::MaybeAssignId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "AttributedIdAssigner", "MaybeAssignId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(reference)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, reference);
}
// Autogenerated method: Firebase.Firestore.Converters.AttributedIdAssigner.MaybeCreateAssigner
::Firebase::Firestore::Converters::AttributedIdAssigner* Firebase::Firestore::Converters::AttributedIdAssigner::MaybeCreateAssigner(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AttributedIdAssigner::MaybeCreateAssigner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore.Converters", "AttributedIdAssigner", "MaybeCreateAssigner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Converters::AttributedIdAssigner*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.ArrayConverter
#include "Firebase/Firestore/Converters/ArrayConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.DeserializationContext
#include "Firebase/Firestore/DeserializationContext.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _elementType
[[deprecated("Use field access instead!")]] ::System::Type*& Firebase::Firestore::Converters::ArrayConverter::dyn__elementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ArrayConverter::dyn__elementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.ArrayConverter.DeserializeArray
::Il2CppObject* Firebase::Firestore::Converters::ArrayConverter::DeserializeArray(::Firebase::Firestore::DeserializationContext* context, ::Firebase::Firestore::FieldValueProxy* arrayValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::ArrayConverter::DeserializeArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, arrayValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Converters.AnonymousTypeConverter
#include "Firebase/Firestore/Converters/AnonymousTypeConverter.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.SerializationContext
#include "Firebase/Firestore/SerializationContext.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IList`1<System.Reflection.PropertyInfo> _properties
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::System::Reflection::PropertyInfo*>*& Firebase::Firestore::Converters::AnonymousTypeConverter::dyn__properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AnonymousTypeConverter::dyn__properties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_properties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::System::Reflection::PropertyInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Converters.AnonymousTypeConverter.SerializeMap
void Firebase::Firestore::Converters::AnonymousTypeConverter::SerializeMap(::Firebase::Firestore::SerializationContext* context, ::Il2CppObject* value, ::System::Collections::Generic::IDictionary_2<::StringW, ::Firebase::Firestore::FieldValueProxy*>* map) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Converters::AnonymousTypeConverter::SerializeMap");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Converters::ConverterBase*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, value, map);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.ConverterRegistry
#include "Firebase/Firestore/ConverterRegistry.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Firebase.Firestore.Converters.IFirestoreInternalConverter
#include "Firebase/Firestore/Converters/IFirestoreInternalConverter.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Type,Firebase.Firestore.Converters.IFirestoreInternalConverter> _converters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>*& Firebase::Firestore::ConverterRegistry::dyn__converters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ConverterRegistry::dyn__converters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_converters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.ConverterRegistry.ToConverterDictionary
::System::Collections::Generic::IDictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>* Firebase::Firestore::ConverterRegistry::ToConverterDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ConverterRegistry::ToConverterDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToConverterDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IDictionary_2<::System::Type*, ::Firebase::Firestore::Converters::IFirestoreInternalConverter*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.WriteBatch
#include "Firebase/Firestore/WriteBatch.hpp"
// Including type: Firebase.Firestore.WriteBatchProxy
#include "Firebase/Firestore/WriteBatchProxy.hpp"
// Including type: Firebase.Firestore.DocumentReference
#include "Firebase/Firestore/DocumentReference.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: Firebase.Firestore.FieldValueProxy
#include "Firebase/Firestore/FieldValueProxy.hpp"
// Including type: Firebase.Firestore.SetOptions
#include "Firebase/Firestore/SetOptions.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.WriteBatchProxy _proxy
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::WriteBatchProxy*& Firebase::Firestore::WriteBatch::dyn__proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::WriteBatch::dyn__proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proxy"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::WriteBatchProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.WriteBatch.Delete
::Firebase::Firestore::WriteBatch* Firebase::Firestore::WriteBatch::Delete(::Firebase::Firestore::DocumentReference* documentReference) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::WriteBatch::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(documentReference)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::WriteBatch*, false>(this, ___internal__method, documentReference);
}
// Autogenerated method: Firebase.Firestore.WriteBatch.Update
::Firebase::Firestore::WriteBatch* Firebase::Firestore::WriteBatch::Update(::Firebase::Firestore::DocumentReference* documentReference, ::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* updates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::WriteBatch::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(documentReference), ::il2cpp_utils::ExtractType(updates)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::WriteBatch*, false>(this, ___internal__method, documentReference, updates);
}
// Autogenerated method: Firebase.Firestore.WriteBatch.ConvertToFieldValue
::Firebase::Firestore::FieldValueProxy* Firebase::Firestore::WriteBatch::ConvertToFieldValue(::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* updates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::WriteBatch::ConvertToFieldValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToFieldValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updates)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldValueProxy*, false>(this, ___internal__method, updates);
}
// Autogenerated method: Firebase.Firestore.WriteBatch.Set
::Firebase::Firestore::WriteBatch* Firebase::Firestore::WriteBatch::Set(::Firebase::Firestore::DocumentReference* documentReference, ::Il2CppObject* documentData, ::Firebase::Firestore::SetOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::WriteBatch::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(documentReference), ::il2cpp_utils::ExtractType(documentData), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::WriteBatch*, false>(this, ___internal__method, documentReference, documentData, options);
}
// Autogenerated method: Firebase.Firestore.WriteBatch.CommitAsync
::System::Threading::Tasks::Task* Firebase::Firestore::WriteBatch::CommitAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::WriteBatch::CommitAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CommitAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.UnknownPropertyHandling
#include "Firebase/Firestore/UnknownPropertyHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.UnknownPropertyHandling Ignore
::Firebase::Firestore::UnknownPropertyHandling Firebase::Firestore::UnknownPropertyHandling::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::UnknownPropertyHandling::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::UnknownPropertyHandling>("Firebase.Firestore", "UnknownPropertyHandling", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.UnknownPropertyHandling Ignore
void Firebase::Firestore::UnknownPropertyHandling::_set_Ignore(::Firebase::Firestore::UnknownPropertyHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::UnknownPropertyHandling::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "UnknownPropertyHandling", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.UnknownPropertyHandling Warn
::Firebase::Firestore::UnknownPropertyHandling Firebase::Firestore::UnknownPropertyHandling::_get_Warn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::UnknownPropertyHandling::_get_Warn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::UnknownPropertyHandling>("Firebase.Firestore", "UnknownPropertyHandling", "Warn"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.UnknownPropertyHandling Warn
void Firebase::Firestore::UnknownPropertyHandling::_set_Warn(::Firebase::Firestore::UnknownPropertyHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::UnknownPropertyHandling::_set_Warn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "UnknownPropertyHandling", "Warn", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.UnknownPropertyHandling Throw
::Firebase::Firestore::UnknownPropertyHandling Firebase::Firestore::UnknownPropertyHandling::_get_Throw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::UnknownPropertyHandling::_get_Throw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::UnknownPropertyHandling>("Firebase.Firestore", "UnknownPropertyHandling", "Throw"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.UnknownPropertyHandling Throw
void Firebase::Firestore::UnknownPropertyHandling::_set_Throw(::Firebase::Firestore::UnknownPropertyHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::UnknownPropertyHandling::_set_Throw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "UnknownPropertyHandling", "Throw", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Firebase::Firestore::UnknownPropertyHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::UnknownPropertyHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Timestamp
#include "Firebase/Firestore/Timestamp.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: Firebase.Firestore.TimestampProxy
#include "Firebase/Firestore/TimestampProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.DateTime s_unixEpoch
::System::DateTime Firebase::Firestore::Timestamp::_get_s_unixEpoch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::_get_s_unixEpoch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("Firebase.Firestore", "Timestamp", "s_unixEpoch"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.DateTime s_unixEpoch
void Firebase::Firestore::Timestamp::_set_s_unixEpoch(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::_set_s_unixEpoch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Timestamp", "s_unixEpoch", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 _seconds
[[deprecated("Use field access instead!")]] int64_t& Firebase::Firestore::Timestamp::dyn__seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::dyn__seconds");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_seconds"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _nanoseconds
[[deprecated("Use field access instead!")]] int& Firebase::Firestore::Timestamp::dyn__nanoseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::dyn__nanoseconds");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nanoseconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Timestamp..ctor
// ABORTED elsewhere.  Firebase::Firestore::Timestamp::Timestamp(int64_t seconds, int nanoseconds)
// Autogenerated method: Firebase.Firestore.Timestamp..cctor
void Firebase::Firestore::Timestamp::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Timestamp", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Timestamp.ToDateTime
::System::DateTime Firebase::Firestore::Timestamp::ToDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::ToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Timestamp.ToDateTimeOffset
::System::DateTimeOffset Firebase::Firestore::Timestamp::ToDateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::ToDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Timestamp.FromDateTime
::Firebase::Firestore::Timestamp Firebase::Firestore::Timestamp::FromDateTime(::System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::FromDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Timestamp", "FromDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Timestamp, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime);
}
// Autogenerated method: Firebase.Firestore.Timestamp.FromDateTimeOffset
::Firebase::Firestore::Timestamp Firebase::Firestore::Timestamp::FromDateTimeOffset(::System::DateTimeOffset dateTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::FromDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Timestamp", "FromDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTimeOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Timestamp, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTimeOffset);
}
// Autogenerated method: Firebase.Firestore.Timestamp.Equals
bool Firebase::Firestore::Timestamp::Equals(::Firebase::Firestore::Timestamp other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Firebase::Firestore::Timestamp), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.Timestamp.CompareTo
int Firebase::Firestore::Timestamp::CompareTo(::Firebase::Firestore::Timestamp other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Firebase::Firestore::Timestamp), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.Timestamp.CompareTo
int Firebase::Firestore::Timestamp::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Firebase::Firestore::Timestamp), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.Timestamp.ConvertToProxy
::Firebase::Firestore::TimestampProxy* Firebase::Firestore::Timestamp::ConvertToProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::ConvertToProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConvertToProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::TimestampProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Timestamp.ConvertFromProxy
::Firebase::Firestore::Timestamp Firebase::Firestore::Timestamp::ConvertFromProxy(::Firebase::Firestore::TimestampProxy* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::ConvertFromProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Timestamp", "ConvertFromProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Timestamp, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.Timestamp.Equals
bool Firebase::Firestore::Timestamp::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.Timestamp.GetHashCode
int Firebase::Firestore::Timestamp::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Timestamp.ToString
::StringW Firebase::Firestore::Timestamp::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Timestamp::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.Source
#include "Firebase/Firestore/Source.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.Source Default
::Firebase::Firestore::Source Firebase::Firestore::Source::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Source::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::Source>("Firebase.Firestore", "Source", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.Source Default
void Firebase::Firestore::Source::_set_Default(::Firebase::Firestore::Source value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Source::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Source", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.Source Server
::Firebase::Firestore::Source Firebase::Firestore::Source::_get_Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Source::_get_Server");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::Source>("Firebase.Firestore", "Source", "Server"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.Source Server
void Firebase::Firestore::Source::_set_Server(::Firebase::Firestore::Source value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Source::_set_Server");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Source", "Server", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.Source Cache
::Firebase::Firestore::Source Firebase::Firestore::Source::_get_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Source::_get_Cache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::Source>("Firebase.Firestore", "Source", "Cache"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.Source Cache
void Firebase::Firestore::Source::_set_Cache(::Firebase::Firestore::Source value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Source::_set_Cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Source", "Cache", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Firebase::Firestore::Source::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Source::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.SetOptions
#include "Firebase/Firestore/SetOptions.hpp"
// Including type: Firebase.Firestore.FieldPath
#include "Firebase/Firestore/FieldPath.hpp"
// Including type: Firebase.Firestore.SetOptionsProxy
#include "Firebase/Firestore/SetOptionsProxy.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Func`2<Firebase.Firestore.FieldPath,System.String> <>f__am$cache1
::System::Func_2<::Firebase::Firestore::FieldPath*, ::StringW>* Firebase::Firestore::SetOptions::_get_$$f__am$cache1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::_get_$$f__am$cache1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Firebase::Firestore::FieldPath*, ::StringW>*>("Firebase.Firestore", "SetOptions", "<>f__am$cache1")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<Firebase.Firestore.FieldPath,System.String> <>f__am$cache1
void Firebase::Firestore::SetOptions::_set_$$f__am$cache1(::System::Func_2<::Firebase::Firestore::FieldPath*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::_set_$$f__am$cache1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "SetOptions", "<>f__am$cache1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`3<System.Int32,Firebase.Firestore.FieldPath,System.Int32> <>f__am$cache2
::System::Func_3<int, ::Firebase::Firestore::FieldPath*, int>* Firebase::Firestore::SetOptions::_get_$$f__am$cache2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::_get_$$f__am$cache2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<int, ::Firebase::Firestore::FieldPath*, int>*>("Firebase.Firestore", "SetOptions", "<>f__am$cache2")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`3<System.Int32,Firebase.Firestore.FieldPath,System.Int32> <>f__am$cache2
void Firebase::Firestore::SetOptions::_set_$$f__am$cache2(::System::Func_3<int, ::Firebase::Firestore::FieldPath*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::_set_$$f__am$cache2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "SetOptions", "<>f__am$cache2", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.SetOptionsProxy _proxy
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::SetOptionsProxy*& Firebase::Firestore::SetOptions::dyn__proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::dyn__proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proxy"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::SetOptionsProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.SetOptions/Firebase.Firestore.Type setType
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::SetOptions::Type& Firebase::Firestore::SetOptions::dyn_setType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::dyn_setType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setType"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::SetOptions::Type*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.FieldPath[] fields
[[deprecated("Use field access instead!")]] ::ArrayW<::Firebase::Firestore::FieldPath*>& Firebase::Firestore::SetOptions::dyn_fields() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::dyn_fields");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fields"))->offset;
  return *reinterpret_cast<::ArrayW<::Firebase::Firestore::FieldPath*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.SetOptions.get_Proxy
::Firebase::Firestore::SetOptionsProxy* Firebase::Firestore::SetOptions::get_Proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::get_Proxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Proxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::SetOptionsProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.SetOptions.get_Overwrite
::Firebase::Firestore::SetOptions* Firebase::Firestore::SetOptions::get_Overwrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::get_Overwrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "SetOptions", "get_Overwrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::SetOptions*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.SetOptions.Equals
bool Firebase::Firestore::SetOptions::Equals(::Firebase::Firestore::SetOptions* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.SetOptions.<ToString>m__1
::StringW Firebase::Firestore::SetOptions::$ToString$m__1(::Firebase::Firestore::FieldPath* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::<ToString>m__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "SetOptions", "<ToString>m__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: Firebase.Firestore.SetOptions.<GetHashCode>m__2
int Firebase::Firestore::SetOptions::$GetHashCode$m__2(int current, ::Firebase::Firestore::FieldPath* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::<GetHashCode>m__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "SetOptions", "<GetHashCode>m__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current, f);
}
// Autogenerated method: Firebase.Firestore.SetOptions.ToString
::StringW Firebase::Firestore::SetOptions::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.SetOptions.Equals
bool Firebase::Firestore::SetOptions::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.SetOptions.GetHashCode
int Firebase::Firestore::SetOptions::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.SetOptions/Firebase.Firestore.Type
#include "Firebase/Firestore/SetOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.SetOptions/Firebase.Firestore.Type Overwrite
::Firebase::Firestore::SetOptions::Type Firebase::Firestore::SetOptions::Type::_get_Overwrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::Type::_get_Overwrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::SetOptions::Type>("Firebase.Firestore", "SetOptions/Type", "Overwrite"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.SetOptions/Firebase.Firestore.Type Overwrite
void Firebase::Firestore::SetOptions::Type::_set_Overwrite(::Firebase::Firestore::SetOptions::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::Type::_set_Overwrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "SetOptions/Type", "Overwrite", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.SetOptions/Firebase.Firestore.Type Merge
::Firebase::Firestore::SetOptions::Type Firebase::Firestore::SetOptions::Type::_get_Merge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::Type::_get_Merge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::SetOptions::Type>("Firebase.Firestore", "SetOptions/Type", "Merge"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.SetOptions/Firebase.Firestore.Type Merge
void Firebase::Firestore::SetOptions::Type::_set_Merge(::Firebase::Firestore::SetOptions::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::Type::_set_Merge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "SetOptions/Type", "Merge", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Firebase::Firestore::SetOptions::Type::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::SetOptions::Type::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.ServerTimestampBehaviorConverter
#include "Firebase/Firestore/ServerTimestampBehaviorConverter.hpp"
// Including type: Firebase.Firestore.ServerTimestampBehavior
#include "Firebase/Firestore/ServerTimestampBehavior.hpp"
// Including type: Firebase.Firestore.DocumentSnapshotProxy/Firebase.Firestore.ServerTimestampBehavior
#include "Firebase/Firestore/DocumentSnapshotProxy_ServerTimestampBehavior.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.ServerTimestampBehaviorConverter.ConvertToProxy
::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior Firebase::Firestore::ServerTimestampBehaviorConverter::ConvertToProxy(::Firebase::Firestore::ServerTimestampBehavior stb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ServerTimestampBehaviorConverter::ConvertToProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "ServerTimestampBehaviorConverter", "ConvertToProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stb)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentSnapshotProxy::ServerTimestampBehavior, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.ServerTimestampBehavior
#include "Firebase/Firestore/ServerTimestampBehavior.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.ServerTimestampBehavior None
::Firebase::Firestore::ServerTimestampBehavior Firebase::Firestore::ServerTimestampBehavior::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ServerTimestampBehavior::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::ServerTimestampBehavior>("Firebase.Firestore", "ServerTimestampBehavior", "None"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.ServerTimestampBehavior None
void Firebase::Firestore::ServerTimestampBehavior::_set_None(::Firebase::Firestore::ServerTimestampBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ServerTimestampBehavior::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "ServerTimestampBehavior", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.ServerTimestampBehavior Estimate
::Firebase::Firestore::ServerTimestampBehavior Firebase::Firestore::ServerTimestampBehavior::_get_Estimate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ServerTimestampBehavior::_get_Estimate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::ServerTimestampBehavior>("Firebase.Firestore", "ServerTimestampBehavior", "Estimate"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.ServerTimestampBehavior Estimate
void Firebase::Firestore::ServerTimestampBehavior::_set_Estimate(::Firebase::Firestore::ServerTimestampBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ServerTimestampBehavior::_set_Estimate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "ServerTimestampBehavior", "Estimate", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.ServerTimestampBehavior Previous
::Firebase::Firestore::ServerTimestampBehavior Firebase::Firestore::ServerTimestampBehavior::_get_Previous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ServerTimestampBehavior::_get_Previous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::ServerTimestampBehavior>("Firebase.Firestore", "ServerTimestampBehavior", "Previous"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.ServerTimestampBehavior Previous
void Firebase::Firestore::ServerTimestampBehavior::_set_Previous(::Firebase::Firestore::ServerTimestampBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ServerTimestampBehavior::_set_Previous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "ServerTimestampBehavior", "Previous", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Firebase::Firestore::ServerTimestampBehavior::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::ServerTimestampBehavior::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.QuerySnapshot
#include "Firebase/Firestore/QuerySnapshot.hpp"
// Including type: Firebase.Firestore.DocumentSnapshot
#include "Firebase/Firestore/DocumentSnapshot.hpp"
// Including type: Firebase.Firestore.QuerySnapshotProxy
#include "Firebase/Firestore/QuerySnapshotProxy.hpp"
// Including type: Firebase.Firestore.FirebaseFirestore
#include "Firebase/Firestore/FirebaseFirestore.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.QuerySnapshotProxy _proxy
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::QuerySnapshotProxy*& Firebase::Firestore::QuerySnapshot::dyn__proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::dyn__proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proxy"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::QuerySnapshotProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.FirebaseFirestore _firestore
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::FirebaseFirestore*& Firebase::Firestore::QuerySnapshot::dyn__firestore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::dyn__firestore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firestore"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirebaseFirestore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.DocumentSnapshot[] _documentsCached
[[deprecated("Use field access instead!")]] ::ArrayW<::Firebase::Firestore::DocumentSnapshot*>& Firebase::Firestore::QuerySnapshot::dyn__documentsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::dyn__documentsCached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_documentsCached"))->offset;
  return *reinterpret_cast<::ArrayW<::Firebase::Firestore::DocumentSnapshot*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.QuerySnapshot.get_Documents
::System::Collections::Generic::IEnumerable_1<::Firebase::Firestore::DocumentSnapshot*>* Firebase::Firestore::QuerySnapshot::get_Documents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::get_Documents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Documents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Firebase::Firestore::DocumentSnapshot*>*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.QuerySnapshot.get_Count
int Firebase::Firestore::QuerySnapshot::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.QuerySnapshot.Equals
bool Firebase::Firestore::QuerySnapshot::Equals(::Firebase::Firestore::QuerySnapshot* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.QuerySnapshot.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Firebase::Firestore::DocumentSnapshot*>* Firebase::Firestore::QuerySnapshot::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::QuerySnapshot*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Firebase::Firestore::DocumentSnapshot*>*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.QuerySnapshot.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Firebase::Firestore::QuerySnapshot::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::QuerySnapshot*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.QuerySnapshot.LoadDocumentsCached
void Firebase::Firestore::QuerySnapshot::LoadDocumentsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::LoadDocumentsCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadDocumentsCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.QuerySnapshot.Equals
bool Firebase::Firestore::QuerySnapshot::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.QuerySnapshot.GetHashCode
int Firebase::Firestore::QuerySnapshot::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::QuerySnapshot::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Query
#include "Firebase/Firestore/Query.hpp"
// Including type: Firebase.Firestore.Query/Firebase.Firestore.ListenerDelegate
#include "Firebase/Firestore/Query_ListenerDelegate.hpp"
// Including type: Firebase.Firestore.QueryProxy
#include "Firebase/Firestore/QueryProxy.hpp"
// Including type: Firebase.Firestore.FirebaseFirestore
#include "Firebase/Firestore/FirebaseFirestore.hpp"
// Including type: Firebase.Firestore.ListenerRegistrationMap`1
#include "Firebase/Firestore/ListenerRegistrationMap_1.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: Firebase.Firestore.QuerySnapshotProxy
#include "Firebase/Firestore/QuerySnapshotProxy.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Firebase.Firestore.QuerySnapshot
#include "Firebase/Firestore/QuerySnapshot.hpp"
// Including type: Firebase.Firestore.Source
#include "Firebase/Firestore/Source.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.ListenerRegistrationMap`1<System.Action`3<Firebase.Firestore.QuerySnapshotProxy,Firebase.Firestore.FirestoreError,System.String>> snapshotListenerCallbacks
::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action_3<::Firebase::Firestore::QuerySnapshotProxy*, ::Firebase::Firestore::FirestoreError, ::StringW>*>* Firebase::Firestore::Query::_get_snapshotListenerCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::_get_snapshotListenerCallbacks");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action_3<::Firebase::Firestore::QuerySnapshotProxy*, ::Firebase::Firestore::FirestoreError, ::StringW>*>*>("Firebase.Firestore", "Query", "snapshotListenerCallbacks")));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.ListenerRegistrationMap`1<System.Action`3<Firebase.Firestore.QuerySnapshotProxy,Firebase.Firestore.FirestoreError,System.String>> snapshotListenerCallbacks
void Firebase::Firestore::Query::_set_snapshotListenerCallbacks(::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action_3<::Firebase::Firestore::QuerySnapshotProxy*, ::Firebase::Firestore::FirestoreError, ::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::_set_snapshotListenerCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Query", "snapshotListenerCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.Query/Firebase.Firestore.ListenerDelegate querySnapshotsHandler
::Firebase::Firestore::Query::ListenerDelegate* Firebase::Firestore::Query::_get_querySnapshotsHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::_get_querySnapshotsHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::Query::ListenerDelegate*>("Firebase.Firestore", "Query", "querySnapshotsHandler"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.Query/Firebase.Firestore.ListenerDelegate querySnapshotsHandler
void Firebase::Firestore::Query::_set_querySnapshotsHandler(::Firebase::Firestore::Query::ListenerDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::_set_querySnapshotsHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "Query", "querySnapshotsHandler", value));
}
// Autogenerated instance field getter
// Get instance field: readonly Firebase.Firestore.QueryProxy _proxy
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::QueryProxy*& Firebase::Firestore::Query::dyn__proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::dyn__proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proxy"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::QueryProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.FirebaseFirestore _firestore
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::FirebaseFirestore*& Firebase::Firestore::Query::dyn__firestore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::dyn__firestore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firestore"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirebaseFirestore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Query.get_Firestore
::Firebase::Firestore::FirebaseFirestore* Firebase::Firestore::Query::get_Firestore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::get_Firestore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Firestore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FirebaseFirestore*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Query..cctor
void Firebase::Firestore::Query::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Query", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Query.ClearCallbacksForOwner
void Firebase::Firestore::Query::ClearCallbacksForOwner(::Firebase::Firestore::FirebaseFirestore* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::ClearCallbacksForOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Query", "ClearCallbacksForOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(owner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, owner);
}
// Autogenerated method: Firebase.Firestore.Query.GetSnapshotAsync
::System::Threading::Tasks::Task_1<::Firebase::Firestore::QuerySnapshot*>* Firebase::Firestore::Query::GetSnapshotAsync(::Firebase::Firestore::Source source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::GetSnapshotAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSnapshotAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Firebase::Firestore::QuerySnapshot*>*, false>(this, ___internal__method, source);
}
// Autogenerated method: Firebase.Firestore.Query.Equals
bool Firebase::Firestore::Query::Equals(::Firebase::Firestore::Query* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.Query.QuerySnapshotsHandler
void Firebase::Firestore::Query::QuerySnapshotsHandler(int callbackId, ::System::IntPtr snapshotPtr, ::Firebase::Firestore::FirestoreError errorCode, ::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::QuerySnapshotsHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Query", "QuerySnapshotsHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackId), ::il2cpp_utils::ExtractType(snapshotPtr), ::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(errorMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callbackId, snapshotPtr, errorCode, errorMessage);
}
// Autogenerated method: Firebase.Firestore.Query.<GetSnapshotAsync>m__0
::Firebase::Firestore::QuerySnapshot* Firebase::Firestore::Query::$GetSnapshotAsync$m__0(::Firebase::Firestore::QuerySnapshotProxy* taskResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::<GetSnapshotAsync>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSnapshotAsync>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(taskResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::QuerySnapshot*, false>(this, ___internal__method, taskResult);
}
// Autogenerated method: Firebase.Firestore.Query.Equals
bool Firebase::Firestore::Query::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.Query.GetHashCode
int Firebase::Firestore::Query::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Query/Firebase.Firestore.ListenerDelegate
#include "Firebase/Firestore/Query_ListenerDelegate.hpp"
// Including type: Firebase.Firestore.FirestoreError
#include "Firebase/Firestore/FirestoreError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.Query/Firebase.Firestore.ListenerDelegate.Invoke
void Firebase::Firestore::Query::ListenerDelegate::Invoke(int callbackId, ::System::IntPtr snapshotPtr, ::Firebase::Firestore::FirestoreError errorCode, ::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::ListenerDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Query::ListenerDelegate*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callbackId, snapshotPtr, errorCode, errorMessage);
}
// Autogenerated method: Firebase.Firestore.Query/Firebase.Firestore.ListenerDelegate.BeginInvoke
::System::IAsyncResult* Firebase::Firestore::Query::ListenerDelegate::BeginInvoke(int callbackId, ::System::IntPtr snapshotPtr, ::Firebase::Firestore::FirestoreError errorCode, ::StringW errorMessage, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::ListenerDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Query::ListenerDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callbackId, snapshotPtr, errorCode, errorMessage, callback, object);
}
// Autogenerated method: Firebase.Firestore.Query/Firebase.Firestore.ListenerDelegate.EndInvoke
void Firebase::Firestore::Query::ListenerDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Query::ListenerDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Query::ListenerDelegate*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.LoadBundleTaskProgress
#include "Firebase/Firestore/LoadBundleTaskProgress.hpp"
// Including type: Firebase.Firestore.LoadBundleTaskProgressProxy
#include "Firebase/Firestore/LoadBundleTaskProgressProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <DocumentsLoaded>k__BackingField
[[deprecated("Use field access instead!")]] int& Firebase::Firestore::LoadBundleTaskProgress::dyn_$DocumentsLoaded$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::dyn_$DocumentsLoaded$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DocumentsLoaded>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <TotalDocuments>k__BackingField
[[deprecated("Use field access instead!")]] int& Firebase::Firestore::LoadBundleTaskProgress::dyn_$TotalDocuments$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::dyn_$TotalDocuments$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TotalDocuments>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <BytesLoaded>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& Firebase::Firestore::LoadBundleTaskProgress::dyn_$BytesLoaded$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::dyn_$BytesLoaded$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BytesLoaded>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <TotalBytes>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& Firebase::Firestore::LoadBundleTaskProgress::dyn_$TotalBytes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::dyn_$TotalBytes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TotalBytes>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState <State>k__BackingField
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState& Firebase::Firestore::LoadBundleTaskProgress::dyn_$State$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::dyn_$State$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<State>k__BackingField"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.LoadBundleTaskProgress.get_DocumentsLoaded
int Firebase::Firestore::LoadBundleTaskProgress::get_DocumentsLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::get_DocumentsLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DocumentsLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.LoadBundleTaskProgress.set_DocumentsLoaded
void Firebase::Firestore::LoadBundleTaskProgress::set_DocumentsLoaded(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::set_DocumentsLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DocumentsLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.LoadBundleTaskProgress.get_TotalDocuments
int Firebase::Firestore::LoadBundleTaskProgress::get_TotalDocuments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::get_TotalDocuments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TotalDocuments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.LoadBundleTaskProgress.set_TotalDocuments
void Firebase::Firestore::LoadBundleTaskProgress::set_TotalDocuments(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::set_TotalDocuments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TotalDocuments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.LoadBundleTaskProgress.get_BytesLoaded
int64_t Firebase::Firestore::LoadBundleTaskProgress::get_BytesLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::get_BytesLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BytesLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.LoadBundleTaskProgress.set_BytesLoaded
void Firebase::Firestore::LoadBundleTaskProgress::set_BytesLoaded(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::set_BytesLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BytesLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.LoadBundleTaskProgress.get_TotalBytes
int64_t Firebase::Firestore::LoadBundleTaskProgress::get_TotalBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::get_TotalBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TotalBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.LoadBundleTaskProgress.set_TotalBytes
void Firebase::Firestore::LoadBundleTaskProgress::set_TotalBytes(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::set_TotalBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TotalBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.LoadBundleTaskProgress.get_State
::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState Firebase::Firestore::LoadBundleTaskProgress::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.LoadBundleTaskProgress.set_State
void Firebase::Firestore::LoadBundleTaskProgress::set_State(::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::set_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.LoadBundleTaskProgress.Equals
bool Firebase::Firestore::LoadBundleTaskProgress::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.LoadBundleTaskProgress.GetHashCode
int Firebase::Firestore::LoadBundleTaskProgress::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState
#include "Firebase/Firestore/LoadBundleTaskProgress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState Error
::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState>("Firebase.Firestore", "LoadBundleTaskProgress/LoadBundleTaskState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState Error
void Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState::_set_Error(::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "LoadBundleTaskProgress/LoadBundleTaskState", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState InProgress
::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState::_get_InProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState::_get_InProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState>("Firebase.Firestore", "LoadBundleTaskProgress/LoadBundleTaskState", "InProgress"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState InProgress
void Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState::_set_InProgress(::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState::_set_InProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "LoadBundleTaskProgress/LoadBundleTaskState", "InProgress", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState Success
::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState>("Firebase.Firestore", "LoadBundleTaskProgress/LoadBundleTaskState", "Success"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.LoadBundleTaskProgress/Firebase.Firestore.LoadBundleTaskState Success
void Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState::_set_Success(::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "LoadBundleTaskProgress/LoadBundleTaskState", "Success", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::LoadBundleTaskProgress::LoadBundleTaskState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.GeoPoint
#include "Firebase/Firestore/GeoPoint.hpp"
// Including type: Firebase.Firestore.GeoPointProxy
#include "Firebase/Firestore/GeoPointProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Double _latitude
[[deprecated("Use field access instead!")]] double& Firebase::Firestore::GeoPoint::dyn__latitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::dyn__latitude");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_latitude"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Double _longitude
[[deprecated("Use field access instead!")]] double& Firebase::Firestore::GeoPoint::dyn__longitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::dyn__longitude");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_longitude"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.GeoPoint.get_Latitude
double Firebase::Firestore::GeoPoint::get_Latitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::get_Latitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Latitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.GeoPoint.get_Longitude
double Firebase::Firestore::GeoPoint::get_Longitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::get_Longitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Longitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.GeoPoint..ctor
// ABORTED elsewhere.  Firebase::Firestore::GeoPoint::GeoPoint(double latitude, double longitude)
// Autogenerated method: Firebase.Firestore.GeoPoint.Equals
bool Firebase::Firestore::GeoPoint::Equals(::Firebase::Firestore::GeoPoint other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Firebase::Firestore::GeoPoint), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.GeoPoint.ConvertToProxy
::Firebase::Firestore::GeoPointProxy* Firebase::Firestore::GeoPoint::ConvertToProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::ConvertToProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ConvertToProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::GeoPointProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.GeoPoint.ConvertFromProxy
::Firebase::Firestore::GeoPoint Firebase::Firestore::GeoPoint::ConvertFromProxy(::Firebase::Firestore::GeoPointProxy* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::ConvertFromProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "GeoPoint", "ConvertFromProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::GeoPoint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.GeoPoint.Equals
bool Firebase::Firestore::GeoPoint::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.GeoPoint.GetHashCode
int Firebase::Firestore::GeoPoint::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.GeoPoint.ToString
::StringW Firebase::Firestore::GeoPoint::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::GeoPoint::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FirestorePropertyAttribute
#include "Firebase/Firestore/FirestorePropertyAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Firebase::Firestore::FirestorePropertyAttribute::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestorePropertyAttribute::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type <ConverterType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Firebase::Firestore::FirestorePropertyAttribute::dyn_$ConverterType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestorePropertyAttribute::dyn_$ConverterType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ConverterType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FirestorePropertyAttribute.get_Name
::StringW Firebase::Firestore::FirestorePropertyAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestorePropertyAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirestorePropertyAttribute.get_ConverterType
::System::Type* Firebase::Firestore::FirestorePropertyAttribute::get_ConverterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestorePropertyAttribute::get_ConverterType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConverterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FirestoreException
#include "Firebase/Firestore/FirestoreException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.FirestoreError <ErrorCode>k__BackingField
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::FirestoreError& Firebase::Firestore::FirestoreException::dyn_$ErrorCode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreException::dyn_$ErrorCode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ErrorCode>k__BackingField"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirestoreError*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FirestoreException.set_ErrorCode
void Firebase::Firestore::FirestoreException::set_ErrorCode(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreException::set_ErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FirestoreError
#include "Firebase/Firestore/FirestoreError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError Ok
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError Ok
void Firebase::Firestore::FirestoreError::_set_Ok(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "Ok", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError None
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "None"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError None
void Firebase::Firestore::FirestoreError::_set_None(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError Cancelled
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_Cancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_Cancelled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "Cancelled"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError Cancelled
void Firebase::Firestore::FirestoreError::_set_Cancelled(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_Cancelled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "Cancelled", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError Unknown
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError Unknown
void Firebase::Firestore::FirestoreError::_set_Unknown(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError InvalidArgument
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_InvalidArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_InvalidArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "InvalidArgument"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError InvalidArgument
void Firebase::Firestore::FirestoreError::_set_InvalidArgument(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_InvalidArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "InvalidArgument", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError DeadlineExceeded
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_DeadlineExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_DeadlineExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "DeadlineExceeded"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError DeadlineExceeded
void Firebase::Firestore::FirestoreError::_set_DeadlineExceeded(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_DeadlineExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "DeadlineExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError NotFound
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_NotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_NotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "NotFound"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError NotFound
void Firebase::Firestore::FirestoreError::_set_NotFound(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_NotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "NotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError AlreadyExists
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_AlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_AlreadyExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "AlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError AlreadyExists
void Firebase::Firestore::FirestoreError::_set_AlreadyExists(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_AlreadyExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "AlreadyExists", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError PermissionDenied
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_PermissionDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_PermissionDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "PermissionDenied"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError PermissionDenied
void Firebase::Firestore::FirestoreError::_set_PermissionDenied(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_PermissionDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "PermissionDenied", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError ResourceExhausted
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_ResourceExhausted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_ResourceExhausted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "ResourceExhausted"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError ResourceExhausted
void Firebase::Firestore::FirestoreError::_set_ResourceExhausted(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_ResourceExhausted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "ResourceExhausted", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError FailedPrecondition
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_FailedPrecondition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_FailedPrecondition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "FailedPrecondition"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError FailedPrecondition
void Firebase::Firestore::FirestoreError::_set_FailedPrecondition(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_FailedPrecondition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "FailedPrecondition", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError Aborted
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_Aborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_Aborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "Aborted"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError Aborted
void Firebase::Firestore::FirestoreError::_set_Aborted(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_Aborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "Aborted", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError OutOfRange
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_OutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_OutOfRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "OutOfRange"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError OutOfRange
void Firebase::Firestore::FirestoreError::_set_OutOfRange(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_OutOfRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "OutOfRange", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError Unimplemented
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_Unimplemented() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_Unimplemented");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "Unimplemented"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError Unimplemented
void Firebase::Firestore::FirestoreError::_set_Unimplemented(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_Unimplemented");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "Unimplemented", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError Internal
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_Internal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "Internal"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError Internal
void Firebase::Firestore::FirestoreError::_set_Internal(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_Internal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "Internal", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError Unavailable
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_Unavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_Unavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "Unavailable"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError Unavailable
void Firebase::Firestore::FirestoreError::_set_Unavailable(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_Unavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "Unavailable", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError DataLoss
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_DataLoss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_DataLoss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "DataLoss"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError DataLoss
void Firebase::Firestore::FirestoreError::_set_DataLoss(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_DataLoss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "DataLoss", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Firestore.FirestoreError Unauthenticated
::Firebase::Firestore::FirestoreError Firebase::Firestore::FirestoreError::_get_Unauthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_get_Unauthenticated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirestoreError>("Firebase.Firestore", "FirestoreError", "Unauthenticated"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Firestore.FirestoreError Unauthenticated
void Firebase::Firestore::FirestoreError::_set_Unauthenticated(::Firebase::Firestore::FirestoreError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::_set_Unauthenticated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirestoreError", "Unauthenticated", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Firebase::Firestore::FirestoreError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FirestoreDataAttribute
#include "Firebase/Firestore/FirestoreDataAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.UnknownPropertyHandling <UnknownPropertyHandling>k__BackingField
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::UnknownPropertyHandling& Firebase::Firestore::FirestoreDataAttribute::dyn_$UnknownPropertyHandling$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreDataAttribute::dyn_$UnknownPropertyHandling$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UnknownPropertyHandling>k__BackingField"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::UnknownPropertyHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type <ConverterType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Firebase::Firestore::FirestoreDataAttribute::dyn_$ConverterType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreDataAttribute::dyn_$ConverterType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ConverterType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FirestoreDataAttribute.get_UnknownPropertyHandling
::Firebase::Firestore::UnknownPropertyHandling Firebase::Firestore::FirestoreDataAttribute::get_UnknownPropertyHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreDataAttribute::get_UnknownPropertyHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnknownPropertyHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::UnknownPropertyHandling, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirestoreDataAttribute.get_ConverterType
::System::Type* Firebase::Firestore::FirestoreDataAttribute::get_ConverterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirestoreDataAttribute::get_ConverterType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConverterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.FirebaseFirestoreSettings
#include "Firebase/Firestore/FirebaseFirestoreSettings.hpp"
// Including type: System.Threading.ReaderWriterLock
#include "System/Threading/ReaderWriterLock.hpp"
// Including type: Firebase.Firestore.FirestoreProxy
#include "Firebase/Firestore/FirestoreProxy.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int64 CacheSizeUnlimited
int64_t Firebase::Firestore::FirebaseFirestoreSettings::_get_CacheSizeUnlimited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::_get_CacheSizeUnlimited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("Firebase.Firestore", "FirebaseFirestoreSettings", "CacheSizeUnlimited"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int64 CacheSizeUnlimited
void Firebase::Firestore::FirebaseFirestoreSettings::_set_CacheSizeUnlimited(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::_set_CacheSizeUnlimited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirebaseFirestoreSettings", "CacheSizeUnlimited", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.ReaderWriterLock _lock
[[deprecated("Use field access instead!")]] ::System::Threading::ReaderWriterLock*& Firebase::Firestore::FirebaseFirestoreSettings::dyn__lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::dyn__lock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lock"))->offset;
  return *reinterpret_cast<::System::Threading::ReaderWriterLock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.FirestoreProxy _firestoreProxy
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::FirestoreProxy*& Firebase::Firestore::FirebaseFirestoreSettings::dyn__firestoreProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::dyn__firestoreProxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firestoreProxy"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirestoreProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _host
[[deprecated("Use field access instead!")]] ::StringW& Firebase::Firestore::FirebaseFirestoreSettings::dyn__host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::dyn__host");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_host"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sslEnabled
[[deprecated("Use field access instead!")]] bool& Firebase::Firestore::FirebaseFirestoreSettings::dyn__sslEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::dyn__sslEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sslEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _persistenceEnabled
[[deprecated("Use field access instead!")]] bool& Firebase::Firestore::FirebaseFirestoreSettings::dyn__persistenceEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::dyn__persistenceEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_persistenceEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _cacheSizeBytes
[[deprecated("Use field access instead!")]] int64_t& Firebase::Firestore::FirebaseFirestoreSettings::dyn__cacheSizeBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::dyn__cacheSizeBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cacheSizeBytes"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings.get_Host
::StringW Firebase::Firestore::FirebaseFirestoreSettings::get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::get_Host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings.get_SslEnabled
bool Firebase::Firestore::FirebaseFirestoreSettings::get_SslEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::get_SslEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SslEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings.get_PersistenceEnabled
bool Firebase::Firestore::FirebaseFirestoreSettings::get_PersistenceEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::get_PersistenceEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PersistenceEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings.get_CacheSizeBytes
int64_t Firebase::Firestore::FirebaseFirestoreSettings::get_CacheSizeBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::get_CacheSizeBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CacheSizeBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings..cctor
void Firebase::Firestore::FirebaseFirestoreSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirebaseFirestoreSettings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings.Dispose
void Firebase::Firestore::FirebaseFirestoreSettings::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings.EnsureAppliedToFirestoreProxy
void Firebase::Firestore::FirebaseFirestoreSettings::EnsureAppliedToFirestoreProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::EnsureAppliedToFirestoreProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureAppliedToFirestoreProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings.<get_Host>m__0
::StringW Firebase::Firestore::FirebaseFirestoreSettings::$get_Host$m__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::<get_Host>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_Host>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings.<get_SslEnabled>m__1
bool Firebase::Firestore::FirebaseFirestoreSettings::$get_SslEnabled$m__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::<get_SslEnabled>m__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_SslEnabled>m__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings.<get_PersistenceEnabled>m__2
bool Firebase::Firestore::FirebaseFirestoreSettings::$get_PersistenceEnabled$m__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::<get_PersistenceEnabled>m__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_PersistenceEnabled>m__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings.<get_CacheSizeBytes>m__3
int64_t Firebase::Firestore::FirebaseFirestoreSettings::$get_CacheSizeBytes$m__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::<get_CacheSizeBytes>m__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_CacheSizeBytes>m__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestoreSettings.ToString
::StringW Firebase::Firestore::FirebaseFirestoreSettings::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestoreSettings::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.FirebaseFirestore
#include "Firebase/Firestore/FirebaseFirestore.hpp"
// Including type: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.SnapshotsInSyncDelegate
#include "Firebase/Firestore/FirebaseFirestore_SnapshotsInSyncDelegate.hpp"
// Including type: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.LoadBundleTaskProgressDelegate
#include "Firebase/Firestore/FirebaseFirestore_LoadBundleTaskProgressDelegate.hpp"
// Including type: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.<Collection>c__AnonStorey0
#include "Firebase/Firestore/FirebaseFirestore_-Collection-c__AnonStorey0.hpp"
// Including type: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.<SnapshotsInSyncHandler>c__AnonStorey5
#include "Firebase/Firestore/FirebaseFirestore_-SnapshotsInSyncHandler-c__AnonStorey5.hpp"
// Including type: System.Threading.ReaderWriterLock
#include "System/Threading/ReaderWriterLock.hpp"
// Including type: Firebase.Firestore.FirestoreProxy
#include "Firebase/Firestore/FirestoreProxy.hpp"
// Including type: Firebase.Firestore.FirebaseFirestoreSettings
#include "Firebase/Firestore/FirebaseFirestoreSettings.hpp"
// Including type: Firebase.Firestore.TransactionManager
#include "Firebase/Firestore/TransactionManager.hpp"
// Including type: Firebase.FirebaseApp
#include "Firebase/FirebaseApp.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: Firebase.Firestore.ListenerRegistrationMap`1
#include "Firebase/Firestore/ListenerRegistrationMap_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Firebase.Firestore.LoadBundleTaskProgress
#include "Firebase/Firestore/LoadBundleTaskProgress.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Firebase.Firestore.WriteBatch
#include "Firebase/Firestore/WriteBatch.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: Firebase.Firestore.CollectionReference
#include "Firebase/Firestore/CollectionReference.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.IDictionary`2<Firebase.FirebaseApp,Firebase.Firestore.FirebaseFirestore> _instanceCache
::System::Collections::Generic::IDictionary_2<::Firebase::FirebaseApp*, ::Firebase::Firestore::FirebaseFirestore*>* Firebase::Firestore::FirebaseFirestore::_get__instanceCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::_get__instanceCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::IDictionary_2<::Firebase::FirebaseApp*, ::Firebase::Firestore::FirebaseFirestore*>*>("Firebase.Firestore", "FirebaseFirestore", "_instanceCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.IDictionary`2<Firebase.FirebaseApp,Firebase.Firestore.FirebaseFirestore> _instanceCache
void Firebase::Firestore::FirebaseFirestore::_set__instanceCache(::System::Collections::Generic::IDictionary_2<::Firebase::FirebaseApp*, ::Firebase::Firestore::FirebaseFirestore*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::_set__instanceCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirebaseFirestore", "_instanceCache", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.ListenerRegistrationMap`1<System.Action> snapshotsInSyncCallbacks
::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action*>* Firebase::Firestore::FirebaseFirestore::_get_snapshotsInSyncCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::_get_snapshotsInSyncCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action*>*>("Firebase.Firestore", "FirebaseFirestore", "snapshotsInSyncCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.ListenerRegistrationMap`1<System.Action> snapshotsInSyncCallbacks
void Firebase::Firestore::FirebaseFirestore::_set_snapshotsInSyncCallbacks(::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::_set_snapshotsInSyncCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirebaseFirestore", "snapshotsInSyncCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.SnapshotsInSyncDelegate snapshotsInSyncHandler
::Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate* Firebase::Firestore::FirebaseFirestore::_get_snapshotsInSyncHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::_get_snapshotsInSyncHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate*>("Firebase.Firestore", "FirebaseFirestore", "snapshotsInSyncHandler"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.SnapshotsInSyncDelegate snapshotsInSyncHandler
void Firebase::Firestore::FirebaseFirestore::_set_snapshotsInSyncHandler(::Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::_set_snapshotsInSyncHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirebaseFirestore", "snapshotsInSyncHandler", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.ListenerRegistrationMap`1<System.Action`1<Firebase.Firestore.LoadBundleTaskProgress>> loadBundleProgressCallbackMap
::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action_1<::Firebase::Firestore::LoadBundleTaskProgress*>*>* Firebase::Firestore::FirebaseFirestore::_get_loadBundleProgressCallbackMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::_get_loadBundleProgressCallbackMap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action_1<::Firebase::Firestore::LoadBundleTaskProgress*>*>*>("Firebase.Firestore", "FirebaseFirestore", "loadBundleProgressCallbackMap"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.ListenerRegistrationMap`1<System.Action`1<Firebase.Firestore.LoadBundleTaskProgress>> loadBundleProgressCallbackMap
void Firebase::Firestore::FirebaseFirestore::_set_loadBundleProgressCallbackMap(::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action_1<::Firebase::Firestore::LoadBundleTaskProgress*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::_set_loadBundleProgressCallbackMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirebaseFirestore", "loadBundleProgressCallbackMap", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.LoadBundleTaskProgressDelegate handler
::Firebase::Firestore::FirebaseFirestore::LoadBundleTaskProgressDelegate* Firebase::Firestore::FirebaseFirestore::_get_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::_get_handler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::FirebaseFirestore::LoadBundleTaskProgressDelegate*>("Firebase.Firestore", "FirebaseFirestore", "handler"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.LoadBundleTaskProgressDelegate handler
void Firebase::Firestore::FirebaseFirestore::_set_handler(::Firebase::Firestore::FirebaseFirestore::LoadBundleTaskProgressDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::_set_handler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirebaseFirestore", "handler", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`2<Firebase.Firestore.FirestoreProxy,Firebase.Firestore.WriteBatch> <>f__am$cache0
::System::Func_2<::Firebase::Firestore::FirestoreProxy*, ::Firebase::Firestore::WriteBatch*>* Firebase::Firestore::FirebaseFirestore::_get_$$f__am$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::_get_$$f__am$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Firebase::Firestore::FirestoreProxy*, ::Firebase::Firestore::WriteBatch*>*>("Firebase.Firestore", "FirebaseFirestore", "<>f__am$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<Firebase.Firestore.FirestoreProxy,Firebase.Firestore.WriteBatch> <>f__am$cache0
void Firebase::Firestore::FirebaseFirestore::_set_$$f__am$cache0(::System::Func_2<::Firebase::Firestore::FirestoreProxy*, ::Firebase::Firestore::WriteBatch*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::_set_$$f__am$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FirebaseFirestore", "<>f__am$cache0", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _isInCppInstanceCacheLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Firebase::Firestore::FirebaseFirestore::dyn__isInCppInstanceCacheLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::dyn__isInCppInstanceCacheLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInCppInstanceCacheLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInCppInstanceCache
[[deprecated("Use field access instead!")]] bool& Firebase::Firestore::FirebaseFirestore::dyn__isInCppInstanceCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::dyn__isInCppInstanceCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInCppInstanceCache"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.ReaderWriterLock _disposeLock
[[deprecated("Use field access instead!")]] ::System::Threading::ReaderWriterLock*& Firebase::Firestore::FirebaseFirestore::dyn__disposeLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::dyn__disposeLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposeLock"))->offset;
  return *reinterpret_cast<::System::Threading::ReaderWriterLock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Firestore.FirestoreProxy _proxy
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::FirestoreProxy*& Firebase::Firestore::FirebaseFirestore::dyn__proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::dyn__proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proxy"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirestoreProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.FirebaseFirestoreSettings _settings
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::FirebaseFirestoreSettings*& Firebase::Firestore::FirebaseFirestore::dyn__settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::dyn__settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settings"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirebaseFirestoreSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.TransactionManager _transactionManager
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::TransactionManager*& Firebase::Firestore::FirebaseFirestore::dyn__transactionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::dyn__transactionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transactionManager"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::TransactionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.FirebaseApp <App>k__BackingField
[[deprecated("Use field access instead!")]] ::Firebase::FirebaseApp*& Firebase::Firestore::FirebaseFirestore::dyn_$App$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::dyn_$App$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<App>k__BackingField"))->offset;
  return *reinterpret_cast<::Firebase::FirebaseApp**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.get_App
::Firebase::FirebaseApp* Firebase::Firestore::FirebaseFirestore::get_App() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::get_App");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_App", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::FirebaseApp*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.set_App
void Firebase::Firestore::FirebaseFirestore::set_App(::Firebase::FirebaseApp* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::set_App");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_App", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.get_DefaultInstance
::Firebase::Firestore::FirebaseFirestore* Firebase::Firestore::FirebaseFirestore::get_DefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::get_DefaultInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirebaseFirestore", "get_DefaultInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FirebaseFirestore*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore..cctor
void Firebase::Firestore::FirebaseFirestore::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirebaseFirestore", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.OnAppDisposed
void Firebase::Firestore::FirebaseFirestore::OnAppDisposed(::Il2CppObject* sender, ::System::EventArgs* eventArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::OnAppDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAppDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(eventArgs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, eventArgs);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.Dispose
void Firebase::Firestore::FirebaseFirestore::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.GetInstance
::Firebase::Firestore::FirebaseFirestore* Firebase::Firestore::FirebaseFirestore::GetInstance(::Firebase::FirebaseApp* app) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirebaseFirestore", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(app)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FirebaseFirestore*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, app);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.Collection
::Firebase::Firestore::CollectionReference* Firebase::Firestore::FirebaseFirestore::Collection(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::Collection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Collection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::CollectionReference*, false>(this, ___internal__method, path);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.StartBatch
::Firebase::Firestore::WriteBatch* Firebase::Firestore::FirebaseFirestore::StartBatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::StartBatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartBatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::WriteBatch*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.SnapshotsInSyncHandler
void Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncHandler(int callbackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirebaseFirestore", "SnapshotsInSyncHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callbackId);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.LoadBundleTaskProgressHandler
void Firebase::Firestore::FirebaseFirestore::LoadBundleTaskProgressHandler(int callbackId, ::System::IntPtr progressPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::LoadBundleTaskProgressHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirebaseFirestore", "LoadBundleTaskProgressHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackId), ::il2cpp_utils::ExtractType(progressPtr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callbackId, progressPtr);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.RemoveSelfFromInstanceCache
void Firebase::Firestore::FirebaseFirestore::RemoveSelfFromInstanceCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::RemoveSelfFromInstanceCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSelfFromInstanceCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.<StartBatch>m__0
::Firebase::Firestore::WriteBatch* Firebase::Firestore::FirebaseFirestore::$StartBatch$m__0(::Firebase::Firestore::FirestoreProxy* proxy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::<StartBatch>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FirebaseFirestore", "<StartBatch>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxy)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::WriteBatch*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proxy);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore.Finalize
void Firebase::Firestore::FirebaseFirestore::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.SnapshotsInSyncDelegate
#include "Firebase/Firestore/FirebaseFirestore_SnapshotsInSyncDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.SnapshotsInSyncDelegate.Invoke
void Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate::Invoke(int callbackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callbackId);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.SnapshotsInSyncDelegate.BeginInvoke
::System::IAsyncResult* Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate::BeginInvoke(int callbackId, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callbackId, callback, object);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.SnapshotsInSyncDelegate.EndInvoke
void Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::FirebaseFirestore::SnapshotsInSyncDelegate*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.LoadBundleTaskProgressDelegate
#include "Firebase/Firestore/FirebaseFirestore_LoadBundleTaskProgressDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.LoadBundleTaskProgressDelegate.Invoke
void Firebase::Firestore::FirebaseFirestore::LoadBundleTaskProgressDelegate::Invoke(int callbackId, ::System::IntPtr progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::LoadBundleTaskProgressDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::FirebaseFirestore::LoadBundleTaskProgressDelegate*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callbackId, progress);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.LoadBundleTaskProgressDelegate.BeginInvoke
::System::IAsyncResult* Firebase::Firestore::FirebaseFirestore::LoadBundleTaskProgressDelegate::BeginInvoke(int callbackId, ::System::IntPtr progress, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::LoadBundleTaskProgressDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::FirebaseFirestore::LoadBundleTaskProgressDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callbackId, progress, callback, object);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.LoadBundleTaskProgressDelegate.EndInvoke
void Firebase::Firestore::FirebaseFirestore::LoadBundleTaskProgressDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::LoadBundleTaskProgressDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::FirebaseFirestore::LoadBundleTaskProgressDelegate*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.<Collection>c__AnonStorey0
#include "Firebase/Firestore/FirebaseFirestore_-Collection-c__AnonStorey0.hpp"
// Including type: Firebase.Firestore.CollectionReference
#include "Firebase/Firestore/CollectionReference.hpp"
// Including type: Firebase.Firestore.FirestoreProxy
#include "Firebase/Firestore/FirestoreProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String path
[[deprecated("Use field access instead!")]] ::StringW& Firebase::Firestore::FirebaseFirestore::$Collection$c__AnonStorey0::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::$Collection$c__AnonStorey0::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Firebase.Firestore.FirebaseFirestore $this
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::FirebaseFirestore*& Firebase::Firestore::FirebaseFirestore::$Collection$c__AnonStorey0::dyn_$this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::$Collection$c__AnonStorey0::dyn_$this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$this"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirebaseFirestore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.<Collection>c__AnonStorey0.<>m__0
::Firebase::Firestore::CollectionReference* Firebase::Firestore::FirebaseFirestore::$Collection$c__AnonStorey0::$$m__0(::Firebase::Firestore::FirestoreProxy* proxy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::$Collection$c__AnonStorey0::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxy)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::CollectionReference*, false>(this, ___internal__method, proxy);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.<SnapshotsInSyncHandler>c__AnonStorey5
#include "Firebase/Firestore/FirebaseFirestore_-SnapshotsInSyncHandler-c__AnonStorey5.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Action callback
[[deprecated("Use field access instead!")]] ::System::Action*& Firebase::Firestore::FirebaseFirestore::$SnapshotsInSyncHandler$c__AnonStorey5::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::$SnapshotsInSyncHandler$c__AnonStorey5::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FirebaseFirestore/Firebase.Firestore.<SnapshotsInSyncHandler>c__AnonStorey5.<>m__0
::Il2CppObject* Firebase::Firestore::FirebaseFirestore::$SnapshotsInSyncHandler$c__AnonStorey5::$$m__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FirebaseFirestore::$SnapshotsInSyncHandler$c__AnonStorey5::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.FieldValue
#include "Firebase/Firestore/FieldValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x6D869C
// Autogenerated static field getter
// Get static field: static private readonly System.Object <ServerTimestamp>k__BackingField
::Il2CppObject* Firebase::Firestore::FieldValue::_get_$ServerTimestamp$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValue::_get_$ServerTimestamp$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Il2CppObject*>("Firebase.Firestore", "FieldValue", "<ServerTimestamp>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object <ServerTimestamp>k__BackingField
void Firebase::Firestore::FieldValue::_set_$ServerTimestamp$k__BackingField(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValue::_set_$ServerTimestamp$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValue", "<ServerTimestamp>k__BackingField", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x6D86D8
// Autogenerated static field getter
// Get static field: static private readonly System.Object <Delete>k__BackingField
::Il2CppObject* Firebase::Firestore::FieldValue::_get_$Delete$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValue::_get_$Delete$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Il2CppObject*>("Firebase.Firestore", "FieldValue", "<Delete>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object <Delete>k__BackingField
void Firebase::Firestore::FieldValue::_set_$Delete$k__BackingField(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValue::_set_$Delete$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldValue", "<Delete>k__BackingField", value));
}
// Autogenerated method: Firebase.Firestore.FieldValue..cctor
void Firebase::Firestore::FieldValue::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValue::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldValue", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldValue.Increment
::Il2CppObject* Firebase::Firestore::FieldValue::Increment(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldValue::Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldValue", "Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.FieldPath
#include "Firebase/Firestore/FieldPath.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Firebase.Firestore.FieldPathProxy
#include "Firebase/Firestore/FieldPathProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] dotSplit
::ArrayW<::Il2CppChar> Firebase::Firestore::FieldPath::_get_dotSplit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::_get_dotSplit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("Firebase.Firestore", "FieldPath", "dotSplit"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] dotSplit
void Firebase::Firestore::FieldPath::_set_dotSplit(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::_set_dotSplit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldPath", "dotSplit", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] prohibitedCharacters
::ArrayW<::Il2CppChar> Firebase::Firestore::FieldPath::_get_prohibitedCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::_get_prohibitedCharacters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("Firebase.Firestore", "FieldPath", "prohibitedCharacters"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] prohibitedCharacters
void Firebase::Firestore::FieldPath::_set_prohibitedCharacters(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::_set_prohibitedCharacters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldPath", "prohibitedCharacters", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x6D8714
// Autogenerated static field getter
// Get static field: static private readonly Firebase.Firestore.FieldPath <DocumentId>k__BackingField
::Firebase::Firestore::FieldPath* Firebase::Firestore::FieldPath::_get_$DocumentId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::_get_$DocumentId$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Firebase::Firestore::FieldPath*>("Firebase.Firestore", "FieldPath", "<DocumentId>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly Firebase.Firestore.FieldPath <DocumentId>k__BackingField
void Firebase::Firestore::FieldPath::_set_$DocumentId$k__BackingField(::Firebase::Firestore::FieldPath* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::_set_$DocumentId$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldPath", "<DocumentId>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.String,System.Boolean> <>f__am$cache0
::System::Func_2<::StringW, bool>* Firebase::Firestore::FieldPath::_get_$$f__am$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::_get_$$f__am$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::StringW, bool>*>("Firebase.Firestore", "FieldPath", "<>f__am$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.String,System.Boolean> <>f__am$cache0
void Firebase::Firestore::FieldPath::_set_$$f__am$cache0(::System::Func_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::_set_$$f__am$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "FieldPath", "<>f__am$cache0", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String[] _segments
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Firebase::Firestore::FieldPath::dyn__segments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::dyn__segments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_segments"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _encodedPath
[[deprecated("Use field access instead!")]] ::StringW& Firebase::Firestore::FieldPath::dyn__encodedPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::dyn__encodedPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encodedPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.FieldPath.get_EncodedPath
::StringW Firebase::Firestore::FieldPath::get_EncodedPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::get_EncodedPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncodedPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldPath..cctor
void Firebase::Firestore::FieldPath::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldPath", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldPath.FromDotSeparatedString
::Firebase::Firestore::FieldPath* Firebase::Firestore::FieldPath::FromDotSeparatedString(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::FromDotSeparatedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldPath", "FromDotSeparatedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldPath*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Firebase.Firestore.FieldPath.GetCanonicalPath
::StringW Firebase::Firestore::FieldPath::GetCanonicalPath(::ArrayW<::StringW> fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::GetCanonicalPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldPath", "GetCanonicalPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fields);
}
// Autogenerated method: Firebase.Firestore.FieldPath.IsValidIdentifier
bool Firebase::Firestore::FieldPath::IsValidIdentifier(::StringW identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::IsValidIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldPath", "IsValidIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, identifier);
}
// Autogenerated method: Firebase.Firestore.FieldPath.Equals
bool Firebase::Firestore::FieldPath::Equals(::Firebase::Firestore::FieldPath* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::FieldPath*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.FieldPath.ConvertToProxy
::Firebase::Firestore::FieldPathProxy* Firebase::Firestore::FieldPath::ConvertToProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::ConvertToProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FieldPathProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldPath.<FieldPath>m__0
bool Firebase::Firestore::FieldPath::$FieldPath$m__0(::StringW n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::<FieldPath>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "FieldPath", "<FieldPath>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n);
}
// Autogenerated method: Firebase.Firestore.FieldPath.ToString
::StringW Firebase::Firestore::FieldPath::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.FieldPath.Equals
bool Firebase::Firestore::FieldPath::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.FieldPath.GetHashCode
int Firebase::Firestore::FieldPath::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::FieldPath::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.DocumentSnapshot
#include "Firebase/Firestore/DocumentSnapshot.hpp"
// Including type: Firebase.Firestore.DocumentSnapshotProxy
#include "Firebase/Firestore/DocumentSnapshotProxy.hpp"
// Including type: Firebase.Firestore.FirebaseFirestore
#include "Firebase/Firestore/FirebaseFirestore.hpp"
// Including type: Firebase.Firestore.DocumentReference
#include "Firebase/Firestore/DocumentReference.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Firebase.Firestore.FieldPath
#include "Firebase/Firestore/FieldPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.DocumentSnapshotProxy _proxy
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::DocumentSnapshotProxy*& Firebase::Firestore::DocumentSnapshot::dyn__proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshot::dyn__proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proxy"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::DocumentSnapshotProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.FirebaseFirestore _firestore
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::FirebaseFirestore*& Firebase::Firestore::DocumentSnapshot::dyn__firestore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshot::dyn__firestore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firestore"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirebaseFirestore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshot.get_Reference
::Firebase::Firestore::DocumentReference* Firebase::Firestore::DocumentSnapshot::get_Reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshot::get_Reference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Reference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentReference*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshot.get_Id
::StringW Firebase::Firestore::DocumentSnapshot::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshot::get_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshot.get_Exists
bool Firebase::Firestore::DocumentSnapshot::get_Exists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshot::get_Exists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshot.ToDictionary
::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* Firebase::Firestore::DocumentSnapshot::ToDictionary(::Firebase::Firestore::ServerTimestampBehavior serverTimestampBehavior) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshot::ToDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverTimestampBehavior)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>*, false>(this, ___internal__method, serverTimestampBehavior);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshot.Equals
bool Firebase::Firestore::DocumentSnapshot::Equals(::Firebase::Firestore::DocumentSnapshot* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshot::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshot.Equals
bool Firebase::Firestore::DocumentSnapshot::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshot::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.DocumentSnapshot.GetHashCode
int Firebase::Firestore::DocumentSnapshot::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentSnapshot::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.DocumentReference
#include "Firebase/Firestore/DocumentReference.hpp"
// Including type: Firebase.Firestore.DocumentReference/Firebase.Firestore.ListenerDelegate
#include "Firebase/Firestore/DocumentReference_ListenerDelegate.hpp"
// Including type: Firebase.Firestore.DocumentReferenceProxy
#include "Firebase/Firestore/DocumentReferenceProxy.hpp"
// Including type: Firebase.Firestore.FirebaseFirestore
#include "Firebase/Firestore/FirebaseFirestore.hpp"
// Including type: Firebase.Firestore.ListenerRegistrationMap`1
#include "Firebase/Firestore/ListenerRegistrationMap_1.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: Firebase.Firestore.DocumentSnapshotProxy
#include "Firebase/Firestore/DocumentSnapshotProxy.hpp"
// Including type: Firebase.Firestore.CollectionReference
#include "Firebase/Firestore/CollectionReference.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: Firebase.Firestore.SetOptions
#include "Firebase/Firestore/SetOptions.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Firebase.Firestore.DocumentSnapshot
#include "Firebase/Firestore/DocumentSnapshot.hpp"
// Including type: Firebase.Firestore.Source
#include "Firebase/Firestore/Source.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.ListenerRegistrationMap`1<System.Action`3<Firebase.Firestore.DocumentSnapshotProxy,Firebase.Firestore.FirestoreError,System.String>> snapshotListenerCallbacks
::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action_3<::Firebase::Firestore::DocumentSnapshotProxy*, ::Firebase::Firestore::FirestoreError, ::StringW>*>* Firebase::Firestore::DocumentReference::_get_snapshotListenerCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::_get_snapshotListenerCallbacks");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action_3<::Firebase::Firestore::DocumentSnapshotProxy*, ::Firebase::Firestore::FirestoreError, ::StringW>*>*>("Firebase.Firestore", "DocumentReference", "snapshotListenerCallbacks")));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.ListenerRegistrationMap`1<System.Action`3<Firebase.Firestore.DocumentSnapshotProxy,Firebase.Firestore.FirestoreError,System.String>> snapshotListenerCallbacks
void Firebase::Firestore::DocumentReference::_set_snapshotListenerCallbacks(::Firebase::Firestore::ListenerRegistrationMap_1<::System::Action_3<::Firebase::Firestore::DocumentSnapshotProxy*, ::Firebase::Firestore::FirestoreError, ::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::_set_snapshotListenerCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "DocumentReference", "snapshotListenerCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Firestore.DocumentReference/Firebase.Firestore.ListenerDelegate documentSnapshotsHandler
::Firebase::Firestore::DocumentReference::ListenerDelegate* Firebase::Firestore::DocumentReference::_get_documentSnapshotsHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::_get_documentSnapshotsHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Firestore::DocumentReference::ListenerDelegate*>("Firebase.Firestore", "DocumentReference", "documentSnapshotsHandler"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Firestore.DocumentReference/Firebase.Firestore.ListenerDelegate documentSnapshotsHandler
void Firebase::Firestore::DocumentReference::_set_documentSnapshotsHandler(::Firebase::Firestore::DocumentReference::ListenerDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::_set_documentSnapshotsHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Firestore", "DocumentReference", "documentSnapshotsHandler", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.DocumentReferenceProxy _proxy
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::DocumentReferenceProxy*& Firebase::Firestore::DocumentReference::dyn__proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::dyn__proxy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proxy"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::DocumentReferenceProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Firebase.Firestore.FirebaseFirestore _firestore
[[deprecated("Use field access instead!")]] ::Firebase::Firestore::FirebaseFirestore*& Firebase::Firestore::DocumentReference::dyn__firestore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::dyn__firestore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firestore"))->offset;
  return *reinterpret_cast<::Firebase::Firestore::FirebaseFirestore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.get_Proxy
::Firebase::Firestore::DocumentReferenceProxy* Firebase::Firestore::DocumentReference::get_Proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::get_Proxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Proxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentReferenceProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.get_Firestore
::Firebase::Firestore::FirebaseFirestore* Firebase::Firestore::DocumentReference::get_Firestore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::get_Firestore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Firestore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::FirebaseFirestore*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.get_Id
::StringW Firebase::Firestore::DocumentReference::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::get_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.get_Path
::StringW Firebase::Firestore::DocumentReference::get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::get_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentReference..cctor
void Firebase::Firestore::DocumentReference::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "DocumentReference", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.ClearCallbacksForOwner
void Firebase::Firestore::DocumentReference::ClearCallbacksForOwner(::Firebase::Firestore::FirebaseFirestore* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::ClearCallbacksForOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "DocumentReference", "ClearCallbacksForOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(owner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, owner);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.Collection
::Firebase::Firestore::CollectionReference* Firebase::Firestore::DocumentReference::Collection(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::Collection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Collection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::CollectionReference*, false>(this, ___internal__method, path);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.Equals
bool Firebase::Firestore::DocumentReference::Equals(::Firebase::Firestore::DocumentReference* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::DocumentReference*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.DeleteAsync
::System::Threading::Tasks::Task* Firebase::Firestore::DocumentReference::DeleteAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::DeleteAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.UpdateAsync
::System::Threading::Tasks::Task* Firebase::Firestore::DocumentReference::UpdateAsync(::System::Collections::Generic::IDictionary_2<::StringW, ::Il2CppObject*>* updates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::UpdateAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updates)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, updates);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.SetAsync
::System::Threading::Tasks::Task* Firebase::Firestore::DocumentReference::SetAsync(::Il2CppObject* documentData, ::Firebase::Firestore::SetOptions* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::SetAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(documentData), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, documentData, options);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.GetSnapshotAsync
::System::Threading::Tasks::Task_1<::Firebase::Firestore::DocumentSnapshot*>* Firebase::Firestore::DocumentReference::GetSnapshotAsync(::Firebase::Firestore::Source source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::GetSnapshotAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSnapshotAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Firebase::Firestore::DocumentSnapshot*>*, false>(this, ___internal__method, source);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.DocumentSnapshotsHandler
void Firebase::Firestore::DocumentReference::DocumentSnapshotsHandler(int callbackId, ::System::IntPtr snapshotPtr, ::Firebase::Firestore::FirestoreError errorCode, ::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::DocumentSnapshotsHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "DocumentReference", "DocumentSnapshotsHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackId), ::il2cpp_utils::ExtractType(snapshotPtr), ::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(errorMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callbackId, snapshotPtr, errorCode, errorMessage);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.<GetSnapshotAsync>m__0
::Firebase::Firestore::DocumentSnapshot* Firebase::Firestore::DocumentReference::$GetSnapshotAsync$m__0(::Firebase::Firestore::DocumentSnapshotProxy* taskResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::<GetSnapshotAsync>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSnapshotAsync>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(taskResult)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentSnapshot*, false>(this, ___internal__method, taskResult);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.GetHashCode
int Firebase::Firestore::DocumentReference::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.Equals
bool Firebase::Firestore::DocumentReference::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.DocumentReference.ToString
::StringW Firebase::Firestore::DocumentReference::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.DocumentReference/Firebase.Firestore.ListenerDelegate
#include "Firebase/Firestore/DocumentReference_ListenerDelegate.hpp"
// Including type: Firebase.Firestore.FirestoreError
#include "Firebase/Firestore/FirestoreError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.DocumentReference/Firebase.Firestore.ListenerDelegate.Invoke
void Firebase::Firestore::DocumentReference::ListenerDelegate::Invoke(int callbackId, ::System::IntPtr snapshotPtr, ::Firebase::Firestore::FirestoreError errorCode, ::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::ListenerDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::DocumentReference::ListenerDelegate*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callbackId, snapshotPtr, errorCode, errorMessage);
}
// Autogenerated method: Firebase.Firestore.DocumentReference/Firebase.Firestore.ListenerDelegate.BeginInvoke
::System::IAsyncResult* Firebase::Firestore::DocumentReference::ListenerDelegate::BeginInvoke(int callbackId, ::System::IntPtr snapshotPtr, ::Firebase::Firestore::FirestoreError errorCode, ::StringW errorMessage, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::ListenerDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::DocumentReference::ListenerDelegate*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callbackId, snapshotPtr, errorCode, errorMessage, callback, object);
}
// Autogenerated method: Firebase.Firestore.DocumentReference/Firebase.Firestore.ListenerDelegate.EndInvoke
void Firebase::Firestore::DocumentReference::ListenerDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::DocumentReference::ListenerDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::DocumentReference::ListenerDelegate*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.CollectionReference
#include "Firebase/Firestore/CollectionReference.hpp"
// Including type: Firebase.Firestore.CollectionReferenceProxy
#include "Firebase/Firestore/CollectionReferenceProxy.hpp"
// Including type: Firebase.Firestore.FirebaseFirestore
#include "Firebase/Firestore/FirebaseFirestore.hpp"
// Including type: Firebase.Firestore.DocumentReference
#include "Firebase/Firestore/DocumentReference.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Firestore.CollectionReference.get_Proxy
::Firebase::Firestore::CollectionReferenceProxy* Firebase::Firestore::CollectionReference::get_Proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReference::get_Proxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Proxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::CollectionReferenceProxy*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.CollectionReference.get_Path
::StringW Firebase::Firestore::CollectionReference::get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReference::get_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.CollectionReference.Document
::Firebase::Firestore::DocumentReference* Firebase::Firestore::CollectionReference::Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReference::Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentReference*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.CollectionReference.Document
::Firebase::Firestore::DocumentReference* Firebase::Firestore::CollectionReference::Document(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReference::Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::DocumentReference*, false>(this, ___internal__method, path);
}
// Autogenerated method: Firebase.Firestore.CollectionReference.AddAsync
::System::Threading::Tasks::Task_1<::Firebase::Firestore::DocumentReference*>* Firebase::Firestore::CollectionReference::AddAsync(::Il2CppObject* documentData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReference::AddAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(documentData)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Firebase::Firestore::DocumentReference*>*, false>(this, ___internal__method, documentData);
}
// Autogenerated method: Firebase.Firestore.CollectionReference.Equals
bool Firebase::Firestore::CollectionReference::Equals(::Firebase::Firestore::CollectionReference* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReference::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::CollectionReference*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.CollectionReference.GetHashCode
int Firebase::Firestore::CollectionReference::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReference::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Query*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.CollectionReference.Equals
bool Firebase::Firestore::CollectionReference::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReference::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Firestore::Query*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.CollectionReference.ToString
::StringW Firebase::Firestore::CollectionReference::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::CollectionReference::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Firestore.Blob
#include "Firebase/Firestore/Blob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _bytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Firebase::Firestore::Blob::dyn__bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::dyn__bytes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _hash
[[deprecated("Use field access instead!")]] int& Firebase::Firestore::Blob::dyn__hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::dyn__hash");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hash"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Firestore.Blob.get_Length
int Firebase::Firestore::Blob::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Blob..ctor
Firebase::Firestore::Blob::Blob(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes);
}
// Autogenerated method: Firebase.Firestore.Blob.ToBytes
::ArrayW<uint8_t> Firebase::Firestore::Blob::ToBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::ToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Blob.CopyFrom
::Firebase::Firestore::Blob Firebase::Firestore::Blob::CopyFrom(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Firestore", "Blob", "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Firestore::Blob, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: Firebase.Firestore.Blob.Equals
bool Firebase::Firestore::Blob::Equals(::Firebase::Firestore::Blob other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::Firebase::Firestore::Blob), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Firebase.Firestore.Blob.Equals
bool Firebase::Firestore::Blob::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Firebase.Firestore.Blob.GetHashCode
int Firebase::Firestore::Blob::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Firestore.Blob.ToString
::StringW Firebase::Firestore::Blob::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Firestore::Blob::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Platform.FirebaseEditorDispatcher
#include "Firebase/Platform/FirebaseEditorDispatcher.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Action <>f__mg$cache0
::System::Action* Firebase::Platform::FirebaseEditorDispatcher::_get_$$f__mg$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::_get_$$f__mg$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Firebase.Platform", "FirebaseEditorDispatcher", "<>f__mg$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Action <>f__mg$cache0
void Firebase::Platform::FirebaseEditorDispatcher::_set_$$f__mg$cache0(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::_set_$$f__mg$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseEditorDispatcher", "<>f__mg$cache0", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action <>f__mg$cache1
::System::Action* Firebase::Platform::FirebaseEditorDispatcher::_get_$$f__mg$cache1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::_get_$$f__mg$cache1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Firebase.Platform", "FirebaseEditorDispatcher", "<>f__mg$cache1")));
}
// Autogenerated static field setter
// Set static field: static private System.Action <>f__mg$cache1
void Firebase::Platform::FirebaseEditorDispatcher::_set_$$f__mg$cache1(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::_set_$$f__mg$cache1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseEditorDispatcher", "<>f__mg$cache1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action <>f__mg$cache2
::System::Action* Firebase::Platform::FirebaseEditorDispatcher::_get_$$f__mg$cache2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::_get_$$f__mg$cache2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action*>("Firebase.Platform", "FirebaseEditorDispatcher", "<>f__mg$cache2")));
}
// Autogenerated static field setter
// Set static field: static private System.Action <>f__mg$cache2
void Firebase::Platform::FirebaseEditorDispatcher::_set_$$f__mg$cache2(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::_set_$$f__mg$cache2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseEditorDispatcher", "<>f__mg$cache2", value));
}
// Autogenerated method: Firebase.Platform.FirebaseEditorDispatcher.get_EditorApplicationType
::System::Type* Firebase::Platform::FirebaseEditorDispatcher::get_EditorApplicationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::get_EditorApplicationType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseEditorDispatcher", "get_EditorApplicationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseEditorDispatcher.get_EditorIsPlaying
bool Firebase::Platform::FirebaseEditorDispatcher::get_EditorIsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::get_EditorIsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseEditorDispatcher", "get_EditorIsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseEditorDispatcher.get_EditorIsPlayingOrWillChangePlaymode
bool Firebase::Platform::FirebaseEditorDispatcher::get_EditorIsPlayingOrWillChangePlaymode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::get_EditorIsPlayingOrWillChangePlaymode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseEditorDispatcher", "get_EditorIsPlayingOrWillChangePlaymode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseEditorDispatcher.StartEditorUpdate
void Firebase::Platform::FirebaseEditorDispatcher::StartEditorUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::StartEditorUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseEditorDispatcher", "StartEditorUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseEditorDispatcher.StopEditorUpdate
void Firebase::Platform::FirebaseEditorDispatcher::StopEditorUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::StopEditorUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseEditorDispatcher", "StopEditorUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseEditorDispatcher.Update
void Firebase::Platform::FirebaseEditorDispatcher::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseEditorDispatcher", "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseEditorDispatcher.ListenToPlayState
void Firebase::Platform::FirebaseEditorDispatcher::ListenToPlayState(bool start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::ListenToPlayState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseEditorDispatcher", "ListenToPlayState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start);
}
// Autogenerated method: Firebase.Platform.FirebaseEditorDispatcher.PlayModeStateChanged
void Firebase::Platform::FirebaseEditorDispatcher::PlayModeStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::PlayModeStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseEditorDispatcher", "PlayModeStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseEditorDispatcher.AddRemoveCallbackToField
void Firebase::Platform::FirebaseEditorDispatcher::AddRemoveCallbackToField(::System::Reflection::FieldInfo* eventField, ::System::Action* callback, ::Il2CppObject* target, bool add, ::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseEditorDispatcher::AddRemoveCallbackToField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseEditorDispatcher", "AddRemoveCallbackToField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventField), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(add), ::il2cpp_utils::ExtractType(errorMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, eventField, callback, target, add, errorMessage);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.FirebaseHandler
#include "Firebase/Platform/FirebaseHandler.hpp"
// Including type: Firebase.Platform.FirebaseHandler/Firebase.Platform.ApplicationFocusChangedEventArgs
#include "Firebase/Platform/FirebaseHandler_ApplicationFocusChangedEventArgs.hpp"
// Including type: Firebase.Platform.FirebaseHandler/Firebase.Platform.<CreatePartialOnMainThread>c__AnonStorey0
#include "Firebase/Platform/FirebaseHandler_-CreatePartialOnMainThread-c__AnonStorey0.hpp"
// Including type: System.EventHandler`1
#include "System/EventHandler_1.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Firebase.Platform.FirebaseMonoBehaviour
#include "Firebase/Platform/FirebaseMonoBehaviour.hpp"
// Including type: Firebase.Platform.IFirebaseAppUtils
#include "Firebase/Platform/IFirebaseAppUtils.hpp"
// Including type: Firebase.Dispatcher
#include "Firebase/Dispatcher.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.FirebaseMonoBehaviour firebaseMonoBehaviour
::Firebase::Platform::FirebaseMonoBehaviour* Firebase::Platform::FirebaseHandler::_get_firebaseMonoBehaviour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_get_firebaseMonoBehaviour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::FirebaseMonoBehaviour*>("Firebase.Platform", "FirebaseHandler", "firebaseMonoBehaviour"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.FirebaseMonoBehaviour firebaseMonoBehaviour
void Firebase::Platform::FirebaseHandler::_set_firebaseMonoBehaviour(::Firebase::Platform::FirebaseMonoBehaviour* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_set_firebaseMonoBehaviour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseHandler", "firebaseMonoBehaviour", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x6F7CDC
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.IFirebaseAppUtils <AppUtils>k__BackingField
::Firebase::Platform::IFirebaseAppUtils* Firebase::Platform::FirebaseHandler::_get_$AppUtils$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_get_$AppUtils$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Firebase::Platform::IFirebaseAppUtils*>("Firebase.Platform", "FirebaseHandler", "<AppUtils>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.IFirebaseAppUtils <AppUtils>k__BackingField
void Firebase::Platform::FirebaseHandler::_set_$AppUtils$k__BackingField(::Firebase::Platform::IFirebaseAppUtils* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_set_$AppUtils$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseHandler", "<AppUtils>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 tickCount
int Firebase::Platform::FirebaseHandler::_get_tickCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_get_tickCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Firebase.Platform", "FirebaseHandler", "tickCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 tickCount
void Firebase::Platform::FirebaseHandler::_set_tickCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_set_tickCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseHandler", "tickCount", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x6F7D18
// Autogenerated static field getter
// Get static field: static private Firebase.Dispatcher <ThreadDispatcher>k__BackingField
::Firebase::Dispatcher* Firebase::Platform::FirebaseHandler::_get_$ThreadDispatcher$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_get_$ThreadDispatcher$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Firebase::Dispatcher*>("Firebase.Platform", "FirebaseHandler", "<ThreadDispatcher>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Dispatcher <ThreadDispatcher>k__BackingField
void Firebase::Platform::FirebaseHandler::_set_$ThreadDispatcher$k__BackingField(::Firebase::Dispatcher* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_set_$ThreadDispatcher$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseHandler", "<ThreadDispatcher>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.FirebaseHandler firebaseHandler
::Firebase::Platform::FirebaseHandler* Firebase::Platform::FirebaseHandler::_get_firebaseHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_get_firebaseHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::FirebaseHandler*>("Firebase.Platform", "FirebaseHandler", "firebaseHandler"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.FirebaseHandler firebaseHandler
void Firebase::Platform::FirebaseHandler::_set_firebaseHandler(::Firebase::Platform::FirebaseHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_set_firebaseHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseHandler", "firebaseHandler", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`1<System.Boolean> <>f__am$cache0
::System::Func_1<bool>* Firebase::Platform::FirebaseHandler::_get_$$f__am$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_get_$$f__am$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<bool>*>("Firebase.Platform", "FirebaseHandler", "<>f__am$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`1<System.Boolean> <>f__am$cache0
void Firebase::Platform::FirebaseHandler::_set_$$f__am$cache0(::System::Func_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::_set_$$f__am$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseHandler", "<>f__am$cache0", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsPlayMode>k__BackingField
[[deprecated("Use field access instead!")]] bool& Firebase::Platform::FirebaseHandler::dyn_$IsPlayMode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::dyn_$IsPlayMode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsPlayMode>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler`1<System.EventArgs> Updated
[[deprecated("Use field access instead!")]] ::System::EventHandler_1<::System::EventArgs*>*& Firebase::Platform::FirebaseHandler::dyn_Updated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::dyn_Updated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Updated"))->offset;
  return *reinterpret_cast<::System::EventHandler_1<::System::EventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Action UpdatedEventWrapper
[[deprecated("Use field access instead!")]] ::System::Action*& Firebase::Platform::FirebaseHandler::dyn_UpdatedEventWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::dyn_UpdatedEventWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UpdatedEventWrapper"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler`1<Firebase.Platform.FirebaseHandler/Firebase.Platform.ApplicationFocusChangedEventArgs> ApplicationFocusChanged
[[deprecated("Use field access instead!")]] ::System::EventHandler_1<::Firebase::Platform::FirebaseHandler::ApplicationFocusChangedEventArgs*>*& Firebase::Platform::FirebaseHandler::dyn_ApplicationFocusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::dyn_ApplicationFocusChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ApplicationFocusChanged"))->offset;
  return *reinterpret_cast<::System::EventHandler_1<::Firebase::Platform::FirebaseHandler::ApplicationFocusChangedEventArgs*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.get_AppUtils
::Firebase::Platform::IFirebaseAppUtils* Firebase::Platform::FirebaseHandler::get_AppUtils() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::get_AppUtils");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "get_AppUtils", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Platform::IFirebaseAppUtils*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.set_AppUtils
void Firebase::Platform::FirebaseHandler::set_AppUtils(::Firebase::Platform::IFirebaseAppUtils* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::set_AppUtils");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "set_AppUtils", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.get_TickCount
int Firebase::Platform::FirebaseHandler::get_TickCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::get_TickCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "get_TickCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.get_ThreadDispatcher
::Firebase::Dispatcher* Firebase::Platform::FirebaseHandler::get_ThreadDispatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::get_ThreadDispatcher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "get_ThreadDispatcher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Dispatcher*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.set_ThreadDispatcher
void Firebase::Platform::FirebaseHandler::set_ThreadDispatcher(::Firebase::Dispatcher* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::set_ThreadDispatcher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "set_ThreadDispatcher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.get_IsPlayMode
bool Firebase::Platform::FirebaseHandler::get_IsPlayMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::get_IsPlayMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPlayMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.set_IsPlayMode
void Firebase::Platform::FirebaseHandler::set_IsPlayMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::set_IsPlayMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsPlayMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.get_DefaultInstance
::Firebase::Platform::FirebaseHandler* Firebase::Platform::FirebaseHandler::get_DefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::get_DefaultInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "get_DefaultInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Platform::FirebaseHandler*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler..cctor
void Firebase::Platform::FirebaseHandler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.StartMonoBehaviour
void Firebase::Platform::FirebaseHandler::StartMonoBehaviour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::StartMonoBehaviour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMonoBehaviour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.StopMonoBehaviour
void Firebase::Platform::FirebaseHandler::StopMonoBehaviour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::StopMonoBehaviour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopMonoBehaviour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.CreatePartialOnMainThread
void Firebase::Platform::FirebaseHandler::CreatePartialOnMainThread(::Firebase::Platform::IFirebaseAppUtils* appUtils) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::CreatePartialOnMainThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "CreatePartialOnMainThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appUtils)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appUtils);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.Create
void Firebase::Platform::FirebaseHandler::Create(::Firebase::Platform::IFirebaseAppUtils* appUtils) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appUtils)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, appUtils);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.Update
void Firebase::Platform::FirebaseHandler::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.OnApplicationFocus
void Firebase::Platform::FirebaseHandler::OnApplicationFocus(bool hasFocus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::OnApplicationFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hasFocus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hasFocus);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.OnMonoBehaviourDestroyed
void Firebase::Platform::FirebaseHandler::OnMonoBehaviourDestroyed(::Firebase::Platform::FirebaseMonoBehaviour* behaviour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::OnMonoBehaviourDestroyed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "OnMonoBehaviourDestroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(behaviour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, behaviour);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.<StopMonoBehaviour>m__0
bool Firebase::Platform::FirebaseHandler::$StopMonoBehaviour$m__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::<StopMonoBehaviour>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseHandler", "<StopMonoBehaviour>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler.<Update>m__1
void Firebase::Platform::FirebaseHandler::$Update$m__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::<Update>m__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Update>m__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.FirebaseHandler/Firebase.Platform.ApplicationFocusChangedEventArgs
#include "Firebase/Platform/FirebaseHandler_ApplicationFocusChangedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <HasFocus>k__BackingField
[[deprecated("Use field access instead!")]] bool& Firebase::Platform::FirebaseHandler::ApplicationFocusChangedEventArgs::dyn_$HasFocus$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::ApplicationFocusChangedEventArgs::dyn_$HasFocus$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<HasFocus>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler/Firebase.Platform.ApplicationFocusChangedEventArgs.set_HasFocus
void Firebase::Platform::FirebaseHandler::ApplicationFocusChangedEventArgs::set_HasFocus(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::ApplicationFocusChangedEventArgs::set_HasFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HasFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.FirebaseHandler/Firebase.Platform.<CreatePartialOnMainThread>c__AnonStorey0
#include "Firebase/Platform/FirebaseHandler_-CreatePartialOnMainThread-c__AnonStorey0.hpp"
// Including type: Firebase.Platform.IFirebaseAppUtils
#include "Firebase/Platform/IFirebaseAppUtils.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: Firebase.Platform.IFirebaseAppUtils appUtils
[[deprecated("Use field access instead!")]] ::Firebase::Platform::IFirebaseAppUtils*& Firebase::Platform::FirebaseHandler::$CreatePartialOnMainThread$c__AnonStorey0::dyn_appUtils() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::$CreatePartialOnMainThread$c__AnonStorey0::dyn_appUtils");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "appUtils"))->offset;
  return *reinterpret_cast<::Firebase::Platform::IFirebaseAppUtils**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Platform.FirebaseHandler/Firebase.Platform.<CreatePartialOnMainThread>c__AnonStorey0.<>m__0
void Firebase::Platform::FirebaseHandler::$CreatePartialOnMainThread$c__AnonStorey0::$$m__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseHandler::$CreatePartialOnMainThread$c__AnonStorey0::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.FirebaseLogger
#include "Firebase/Platform/FirebaseLogger.hpp"
// Including type: Firebase.Platform.MainThreadProperty`1
#include "Firebase/Platform/MainThreadProperty_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: UnityEngine.StackTraceLogType
#include "UnityEngine/StackTraceLogType.hpp"
// Including type: Firebase.Platform.PlatformLogLevel
#include "Firebase/Platform/PlatformLogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.MainThreadProperty`1<System.Boolean> incompatibleStackUnwindingEnabled
::Firebase::Platform::MainThreadProperty_1<bool>* Firebase::Platform::FirebaseLogger::_get_incompatibleStackUnwindingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseLogger::_get_incompatibleStackUnwindingEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::MainThreadProperty_1<bool>*>("Firebase.Platform", "FirebaseLogger", "incompatibleStackUnwindingEnabled"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.MainThreadProperty`1<System.Boolean> incompatibleStackUnwindingEnabled
void Firebase::Platform::FirebaseLogger::_set_incompatibleStackUnwindingEnabled(::Firebase::Platform::MainThreadProperty_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseLogger::_set_incompatibleStackUnwindingEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseLogger", "incompatibleStackUnwindingEnabled", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`1<System.Boolean> <>f__mg$cache0
::System::Func_1<bool>* Firebase::Platform::FirebaseLogger::_get_$$f__mg$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseLogger::_get_$$f__mg$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<bool>*>("Firebase.Platform", "FirebaseLogger", "<>f__mg$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`1<System.Boolean> <>f__mg$cache0
void Firebase::Platform::FirebaseLogger::_set_$$f__mg$cache0(::System::Func_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseLogger::_set_$$f__mg$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "FirebaseLogger", "<>f__mg$cache0", value));
}
// Autogenerated method: Firebase.Platform.FirebaseLogger.get_CanRedirectNativeLogs
bool Firebase::Platform::FirebaseLogger::get_CanRedirectNativeLogs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseLogger::get_CanRedirectNativeLogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseLogger", "get_CanRedirectNativeLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseLogger..cctor
void Firebase::Platform::FirebaseLogger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseLogger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseLogger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseLogger.IsStackTraceLogTypeIncompatibleWithNativeLogs
bool Firebase::Platform::FirebaseLogger::IsStackTraceLogTypeIncompatibleWithNativeLogs(::UnityEngine::StackTraceLogType logType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseLogger::IsStackTraceLogTypeIncompatibleWithNativeLogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseLogger", "IsStackTraceLogTypeIncompatibleWithNativeLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logType);
}
// Autogenerated method: Firebase.Platform.FirebaseLogger.CurrentStackTraceLogTypeIsIncompatibleWithNativeLogs
bool Firebase::Platform::FirebaseLogger::CurrentStackTraceLogTypeIsIncompatibleWithNativeLogs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseLogger::CurrentStackTraceLogTypeIsIncompatibleWithNativeLogs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseLogger", "CurrentStackTraceLogTypeIsIncompatibleWithNativeLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseLogger.LogMessage
void Firebase::Platform::FirebaseLogger::LogMessage(::Firebase::Platform::PlatformLogLevel logLevel, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseLogger::LogMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "FirebaseLogger", "LogMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logLevel), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, logLevel, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.FirebaseMonoBehaviour
#include "Firebase/Platform/FirebaseMonoBehaviour.hpp"
// Including type: Firebase.Platform.FirebaseHandler
#include "Firebase/Platform/FirebaseHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Platform.FirebaseMonoBehaviour.GetFirebaseHandlerOrDestroyGameObject
::Firebase::Platform::FirebaseHandler* Firebase::Platform::FirebaseMonoBehaviour::GetFirebaseHandlerOrDestroyGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseMonoBehaviour::GetFirebaseHandlerOrDestroyGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirebaseHandlerOrDestroyGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Platform::FirebaseHandler*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseMonoBehaviour.OnEnable
void Firebase::Platform::FirebaseMonoBehaviour::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseMonoBehaviour::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseMonoBehaviour.Update
void Firebase::Platform::FirebaseMonoBehaviour::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseMonoBehaviour::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Platform.FirebaseMonoBehaviour.OnApplicationFocus
void Firebase::Platform::FirebaseMonoBehaviour::OnApplicationFocus(bool hasFocus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseMonoBehaviour::OnApplicationFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hasFocus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hasFocus);
}
// Autogenerated method: Firebase.Platform.FirebaseMonoBehaviour.OnDestroy
void Firebase::Platform::FirebaseMonoBehaviour::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::FirebaseMonoBehaviour::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.PlatformInformation
#include "Firebase/Platform/PlatformInformation.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String runtimeVersion
::StringW Firebase::Platform::PlatformInformation::_get_runtimeVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::_get_runtimeVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Firebase.Platform", "PlatformInformation", "runtimeVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String runtimeVersion
void Firebase::Platform::PlatformInformation::_set_runtimeVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::_set_runtimeVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformInformation", "runtimeVersion", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x6F7DEC
// Autogenerated static field getter
// Get static field: static private System.Single <RealtimeSinceStartupSafe>k__BackingField
float Firebase::Platform::PlatformInformation::_get_$RealtimeSinceStartupSafe$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::_get_$RealtimeSinceStartupSafe$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>("Firebase.Platform", "PlatformInformation", "<RealtimeSinceStartupSafe>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Single <RealtimeSinceStartupSafe>k__BackingField
void Firebase::Platform::PlatformInformation::_set_$RealtimeSinceStartupSafe$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::_set_$RealtimeSinceStartupSafe$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformInformation", "<RealtimeSinceStartupSafe>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`1<System.String> <>f__am$cache0
::System::Func_1<::StringW>* Firebase::Platform::PlatformInformation::_get_$$f__am$cache0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::_get_$$f__am$cache0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::StringW>*>("Firebase.Platform", "PlatformInformation", "<>f__am$cache0")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`1<System.String> <>f__am$cache0
void Firebase::Platform::PlatformInformation::_set_$$f__am$cache0(::System::Func_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::_set_$$f__am$cache0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformInformation", "<>f__am$cache0", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`1<System.String> <>f__am$cache1
::System::Func_1<::StringW>* Firebase::Platform::PlatformInformation::_get_$$f__am$cache1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::_get_$$f__am$cache1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_1<::StringW>*>("Firebase.Platform", "PlatformInformation", "<>f__am$cache1")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`1<System.String> <>f__am$cache1
void Firebase::Platform::PlatformInformation::_set_$$f__am$cache1(::System::Func_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::_set_$$f__am$cache1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformInformation", "<>f__am$cache1", value));
}
// Autogenerated method: Firebase.Platform.PlatformInformation.get_IsAndroid
bool Firebase::Platform::PlatformInformation::get_IsAndroid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::get_IsAndroid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "PlatformInformation", "get_IsAndroid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.PlatformInformation.get_IsIOS
bool Firebase::Platform::PlatformInformation::get_IsIOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::get_IsIOS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "PlatformInformation", "get_IsIOS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.PlatformInformation.get_DefaultConfigLocation
::StringW Firebase::Platform::PlatformInformation::get_DefaultConfigLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::get_DefaultConfigLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "PlatformInformation", "get_DefaultConfigLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.PlatformInformation.get_RealtimeSinceStartup
float Firebase::Platform::PlatformInformation::get_RealtimeSinceStartup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::get_RealtimeSinceStartup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "PlatformInformation", "get_RealtimeSinceStartup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.PlatformInformation.set_RealtimeSinceStartupSafe
void Firebase::Platform::PlatformInformation::set_RealtimeSinceStartupSafe(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::set_RealtimeSinceStartupSafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "PlatformInformation", "set_RealtimeSinceStartupSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Platform.PlatformInformation.get_RuntimeName
::StringW Firebase::Platform::PlatformInformation::get_RuntimeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::get_RuntimeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "PlatformInformation", "get_RuntimeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.PlatformInformation.get_RuntimeVersion
::StringW Firebase::Platform::PlatformInformation::get_RuntimeVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::get_RuntimeVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "PlatformInformation", "get_RuntimeVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.PlatformInformation.<get_DefaultConfigLocation>m__0
::StringW Firebase::Platform::PlatformInformation::$get_DefaultConfigLocation$m__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::<get_DefaultConfigLocation>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "PlatformInformation", "<get_DefaultConfigLocation>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.PlatformInformation.<get_RuntimeVersion>m__1
::StringW Firebase::Platform::PlatformInformation::$get_RuntimeVersion$m__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformInformation::<get_RuntimeVersion>m__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "PlatformInformation", "<get_RuntimeVersion>m__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.Default.UnityConfigExtensions
#include "Firebase/Platform/Default/UnityConfigExtensions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.Default.UnityConfigExtensions _instance
::Firebase::Platform::Default::UnityConfigExtensions* Firebase::Platform::Default::UnityConfigExtensions::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::UnityConfigExtensions::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::Default::UnityConfigExtensions*>("Firebase.Platform.Default", "UnityConfigExtensions", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.Default.UnityConfigExtensions _instance
void Firebase::Platform::Default::UnityConfigExtensions::_set__instance(::Firebase::Platform::Default::UnityConfigExtensions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::UnityConfigExtensions::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform.Default", "UnityConfigExtensions", "_instance", value));
}
// Autogenerated method: Firebase.Platform.Default.UnityConfigExtensions.get_DefaultInstance
::Firebase::Platform::IAppConfigExtensions* Firebase::Platform::Default::UnityConfigExtensions::get_DefaultInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::UnityConfigExtensions::get_DefaultInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform.Default", "UnityConfigExtensions", "get_DefaultInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Platform::IAppConfigExtensions*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.Default.UnityConfigExtensions..cctor
void Firebase::Platform::Default::UnityConfigExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::UnityConfigExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform.Default", "UnityConfigExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Unity.UnityLoggingService
#include "Firebase/Unity/UnityLoggingService.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Firebase.Unity.UnityLoggingService _instance
::Firebase::Unity::UnityLoggingService* Firebase::Unity::UnityLoggingService::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnityLoggingService::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Unity::UnityLoggingService*>("Firebase.Unity", "UnityLoggingService", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Unity.UnityLoggingService _instance
void Firebase::Unity::UnityLoggingService::_set__instance(::Firebase::Unity::UnityLoggingService* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnityLoggingService::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Unity", "UnityLoggingService", "_instance", value));
}
// Autogenerated method: Firebase.Unity.UnityLoggingService.get_Instance
::Firebase::Unity::UnityLoggingService* Firebase::Unity::UnityLoggingService::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnityLoggingService::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Unity", "UnityLoggingService", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Unity::UnityLoggingService*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnityLoggingService..cctor
void Firebase::Unity::UnityLoggingService::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnityLoggingService::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Unity", "UnityLoggingService", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Unity.UnityPlatformServices
#include "Firebase/Unity/UnityPlatformServices.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Unity.UnityPlatformServices.SetupServices
void Firebase::Unity::UnityPlatformServices::SetupServices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnityPlatformServices::SetupServices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Unity", "UnityPlatformServices", "SetupServices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Unity.UnitySynchronizationContext
#include "Firebase/Unity/UnitySynchronizationContext.hpp"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir
#include "Firebase/Unity/UnitySynchronizationContext_SynchronizationContextBehavoir.hpp"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SignaledCoroutine>c__Iterator0
#include "Firebase/Unity/UnitySynchronizationContext_-SignaledCoroutine-c__Iterator0.hpp"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SendCoroutine>c__AnonStorey1
#include "Firebase/Unity/UnitySynchronizationContext_-SendCoroutine-c__AnonStorey1.hpp"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SendCoroutine>c__AnonStorey2
#include "Firebase/Unity/UnitySynchronizationContext_-SendCoroutine-c__AnonStorey2.hpp"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<Send>c__AnonStorey3
#include "Firebase/Unity/UnitySynchronizationContext_-Send-c__AnonStorey3.hpp"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<Send>c__AnonStorey4
#include "Firebase/Unity/UnitySynchronizationContext_-Send-c__AnonStorey4.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Firebase.Unity.UnitySynchronizationContext _instance
::Firebase::Unity::UnitySynchronizationContext* Firebase::Unity::UnitySynchronizationContext::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Unity::UnitySynchronizationContext*>("Firebase.Unity", "UnitySynchronizationContext", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Unity.UnitySynchronizationContext _instance
void Firebase::Unity::UnitySynchronizationContext::_set__instance(::Firebase::Unity::UnitySynchronizationContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Unity", "UnitySynchronizationContext", "_instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Threading.ManualResetEvent> signalDictionary
::System::Collections::Generic::Dictionary_2<int, ::System::Threading::ManualResetEvent*>* Firebase::Unity::UnitySynchronizationContext::_get_signalDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::_get_signalDictionary");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::System::Threading::ManualResetEvent*>*>("Firebase.Unity", "UnitySynchronizationContext", "signalDictionary")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Threading.ManualResetEvent> signalDictionary
void Firebase::Unity::UnitySynchronizationContext::_set_signalDictionary(::System::Collections::Generic::Dictionary_2<int, ::System::Threading::ManualResetEvent*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::_set_signalDictionary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Unity", "UnitySynchronizationContext", "signalDictionary", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<System.Tuple`2<System.Threading.SendOrPostCallback,System.Object>> queue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::System::Tuple_2<::System::Threading::SendOrPostCallback*, ::Il2CppObject*>*>*& Firebase::Unity::UnitySynchronizationContext::dyn_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::dyn_queue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::System::Tuple_2<::System::Threading::SendOrPostCallback*, ::Il2CppObject*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir behavior
[[deprecated("Use field access instead!")]] ::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir*& Firebase::Unity::UnitySynchronizationContext::dyn_behavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::dyn_behavior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "behavior"))->offset;
  return *reinterpret_cast<::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 mainThreadId
[[deprecated("Use field access instead!")]] int& Firebase::Unity::UnitySynchronizationContext::dyn_mainThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::dyn_mainThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext..cctor
void Firebase::Unity::UnitySynchronizationContext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Unity", "UnitySynchronizationContext", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext.Create
void Firebase::Unity::UnitySynchronizationContext::Create(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Unity", "UnitySynchronizationContext", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObject);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext.Destroy
void Firebase::Unity::UnitySynchronizationContext::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Unity", "UnitySynchronizationContext", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext.GetThreadEvent
::System::Threading::ManualResetEvent* Firebase::Unity::UnitySynchronizationContext::GetThreadEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::GetThreadEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetThreadEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ManualResetEvent*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext.Post
void Firebase::Unity::UnitySynchronizationContext::Post(::System::Threading::SendOrPostCallback* d, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::Post");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SynchronizationContext*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, d, state);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext.Send
void Firebase::Unity::UnitySynchronizationContext::Send(::System::Threading::SendOrPostCallback* d, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::Send");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::SynchronizationContext*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, d, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir
#include "Firebase/Unity/UnitySynchronizationContext_SynchronizationContextBehavoir.hpp"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir/Firebase.Unity.<Start>c__Iterator0
#include "Firebase/Unity/UnitySynchronizationContext_SynchronizationContextBehavoir_-Start-c__Iterator0.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<System.Tuple`2<System.Threading.SendOrPostCallback,System.Object>> callbackQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::System::Tuple_2<::System::Threading::SendOrPostCallback*, ::Il2CppObject*>*>*& Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::dyn_callbackQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::dyn_callbackQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callbackQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::System::Tuple_2<::System::Threading::SendOrPostCallback*, ::Il2CppObject*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir.get_CallbackQueue
::System::Collections::Generic::Queue_1<::System::Tuple_2<::System::Threading::SendOrPostCallback*, ::Il2CppObject*>*>* Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::get_CallbackQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::get_CallbackQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CallbackQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Queue_1<::System::Tuple_2<::System::Threading::SendOrPostCallback*, ::Il2CppObject*>*>*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir.Start
::System::Collections::IEnumerator* Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir/Firebase.Unity.<Start>c__Iterator0
#include "Firebase/Unity/UnitySynchronizationContext_SynchronizationContextBehavoir_-Start-c__Iterator0.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Tuple`2<System.Threading.SendOrPostCallback,System.Object> <entry>__0
[[deprecated("Use field access instead!")]] ::System::Tuple_2<::System::Threading::SendOrPostCallback*, ::Il2CppObject*>*& Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$entry$__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$entry$__0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<entry>__0"))->offset;
  return *reinterpret_cast<::System::Tuple_2<::System::Threading::SendOrPostCallback*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object $locvar0
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$locvar0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$locvar0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$locvar0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir $this
[[deprecated("Use field access instead!")]] ::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir*& Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$this"))->offset;
  return *reinterpret_cast<::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object $current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean $disposing
[[deprecated("Use field access instead!")]] bool& Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$disposing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$disposing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$disposing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 $PC
[[deprecated("Use field access instead!")]] int& Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$PC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::dyn_$PC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$PC"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir/Firebase.Unity.<Start>c__Iterator0.System.Collections.Generic.IEnumerator<object>.get_Current
::Il2CppObject* Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::System_Collections_Generic_IEnumerator$object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::System.Collections.Generic.IEnumerator<object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir/Firebase.Unity.<Start>c__Iterator0.System.Collections.IEnumerator.get_Current
::Il2CppObject* Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir/Firebase.Unity.<Start>c__Iterator0.MoveNext
bool Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir/Firebase.Unity.<Start>c__Iterator0.Dispose
void Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.SynchronizationContextBehavoir/Firebase.Unity.<Start>c__Iterator0.Reset
void Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Unity::UnitySynchronizationContext::SynchronizationContextBehavoir::$Start$c__Iterator0*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SignaledCoroutine>c__Iterator0
#include "Firebase/Unity/UnitySynchronizationContext_-SignaledCoroutine-c__Iterator0.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Func`1<System.Collections.IEnumerator> coroutine
[[deprecated("Use field access instead!")]] ::System::Func_1<::System::Collections::IEnumerator*>*& Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_coroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_coroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coroutine"))->offset;
  return *reinterpret_cast<::System::Func_1<::System::Collections::IEnumerator*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Threading.ManualResetEvent newSignal
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_newSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_newSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newSignal"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object $current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_$current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_$current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean $disposing
[[deprecated("Use field access instead!")]] bool& Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_$disposing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_$disposing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$disposing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 $PC
[[deprecated("Use field access instead!")]] int& Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_$PC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::dyn_$PC");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "$PC"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SignaledCoroutine>c__Iterator0.System.Collections.Generic.IEnumerator<object>.get_Current
::Il2CppObject* Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::System_Collections_Generic_IEnumerator$object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::System.Collections.Generic.IEnumerator<object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SignaledCoroutine>c__Iterator0.System.Collections.IEnumerator.get_Current
::Il2CppObject* Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SignaledCoroutine>c__Iterator0.MoveNext
bool Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SignaledCoroutine>c__Iterator0.Dispose
void Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SignaledCoroutine>c__Iterator0.Reset
void Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Unity::UnitySynchronizationContext::$SignaledCoroutine$c__Iterator0*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SendCoroutine>c__AnonStorey1
#include "Firebase/Unity/UnitySynchronizationContext_-SendCoroutine-c__AnonStorey1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<SendCoroutine>c__AnonStorey2
#include "Firebase/Unity/UnitySynchronizationContext_-SendCoroutine-c__AnonStorey2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<Send>c__AnonStorey3
#include "Firebase/Unity/UnitySynchronizationContext_-Send-c__AnonStorey3.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Threading.SendOrPostCallback d
[[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey3::dyn_d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey3::dyn_d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d"))->offset;
  return *reinterpret_cast<::System::Threading::SendOrPostCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<Send>c__AnonStorey4
#include "Firebase/Unity/UnitySynchronizationContext_-Send-c__AnonStorey4.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<Send>c__AnonStorey3
#include "Firebase/Unity/UnitySynchronizationContext_-Send-c__AnonStorey3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Threading.ManualResetEvent newSignal
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey4::dyn_newSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey4::dyn_newSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newSignal"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<Send>c__AnonStorey3 <>f__ref$3
[[deprecated("Use field access instead!")]] ::Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey3*& Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey4::dyn_$$f__ref$3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey4::dyn_$$f__ref$3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>f__ref$3"))->offset;
  return *reinterpret_cast<::Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey3**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Unity.UnitySynchronizationContext/Firebase.Unity.<Send>c__AnonStorey4.<>m__0
void Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey4::$$m__0(::Il2CppObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Unity::UnitySynchronizationContext::$Send$c__AnonStorey4::<>m__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Firebase.Platform.Default.AppConfigExtensions
#include "Firebase/Platform/Default/AppConfigExtensions.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Uri DefaultUpdateUrl
::System::Uri* Firebase::Platform::Default::AppConfigExtensions::_get_DefaultUpdateUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_get_DefaultUpdateUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri*>("Firebase.Platform.Default", "AppConfigExtensions", "DefaultUpdateUrl"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Uri DefaultUpdateUrl
void Firebase::Platform::Default::AppConfigExtensions::_set_DefaultUpdateUrl(::System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_set_DefaultUpdateUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform.Default", "AppConfigExtensions", "DefaultUpdateUrl", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String Default
::StringW Firebase::Platform::Default::AppConfigExtensions::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Firebase.Platform.Default", "AppConfigExtensions", "Default"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String Default
void Firebase::Platform::Default::AppConfigExtensions::_set_Default(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform.Default", "AppConfigExtensions", "Default", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object Sync
::Il2CppObject* Firebase::Platform::Default::AppConfigExtensions::_get_Sync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_get_Sync");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Firebase.Platform.Default", "AppConfigExtensions", "Sync"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object Sync
void Firebase::Platform::Default::AppConfigExtensions::_set_Sync(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_set_Sync");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform.Default", "AppConfigExtensions", "Sync", value));
}
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.Default.AppConfigExtensions _instance
::Firebase::Platform::Default::AppConfigExtensions* Firebase::Platform::Default::AppConfigExtensions::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::Default::AppConfigExtensions*>("Firebase.Platform.Default", "AppConfigExtensions", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.Default.AppConfigExtensions _instance
void Firebase::Platform::Default::AppConfigExtensions::_set__instance(::Firebase::Platform::Default::AppConfigExtensions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform.Default", "AppConfigExtensions", "_instance", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.Dictionary`2<System.String,System.String>> SStringState
::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* Firebase::Platform::Default::AppConfigExtensions::_get_SStringState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_get_SStringState");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>*>("Firebase.Platform.Default", "AppConfigExtensions", "SStringState")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.Dictionary`2<System.String,System.String>> SStringState
void Firebase::Platform::Default::AppConfigExtensions::_set_SStringState(::System::Collections::Generic::Dictionary_2<int, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::_set_SStringState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform.Default", "AppConfigExtensions", "SStringState", value));
}
// Autogenerated method: Firebase.Platform.Default.AppConfigExtensions.get_Instance
::Firebase::Platform::IAppConfigExtensions* Firebase::Platform::Default::AppConfigExtensions::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform.Default", "AppConfigExtensions", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Platform::IAppConfigExtensions*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.Default.AppConfigExtensions..cctor
void Firebase::Platform::Default::AppConfigExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::AppConfigExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform.Default", "AppConfigExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.Default.SystemClock
#include "Firebase/Platform/Default/SystemClock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Firebase.Platform.IClockService Instance
::Firebase::Platform::IClockService* Firebase::Platform::Default::SystemClock::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::SystemClock::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::IClockService*>("Firebase.Platform.Default", "SystemClock", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly Firebase.Platform.IClockService Instance
void Firebase::Platform::Default::SystemClock::_set_Instance(::Firebase::Platform::IClockService* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::SystemClock::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform.Default", "SystemClock", "Instance", value));
}
// Autogenerated method: Firebase.Platform.Default.SystemClock..cctor
void Firebase::Platform::Default::SystemClock::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Default::SystemClock::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform.Default", "SystemClock", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.ExceptionAggregator
#include "Firebase/ExceptionAggregator.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Exception> threadLocalExceptions
::System::Collections::Generic::List_1<::System::Exception*>* Firebase::ExceptionAggregator::_get_threadLocalExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::ExceptionAggregator::_get_threadLocalExceptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::System::Exception*>*>("Firebase", "ExceptionAggregator", "threadLocalExceptions"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Exception> threadLocalExceptions
void Firebase::ExceptionAggregator::_set_threadLocalExceptions(::System::Collections::Generic::List_1<::System::Exception*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::ExceptionAggregator::_set_threadLocalExceptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase", "ExceptionAggregator", "threadLocalExceptions", value));
}
// Autogenerated method: Firebase.ExceptionAggregator.get_Exceptions
::System::Collections::Generic::List_1<::System::Exception*>* Firebase::ExceptionAggregator::get_Exceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::ExceptionAggregator::get_Exceptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase", "ExceptionAggregator", "get_Exceptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Exception*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.ExceptionAggregator.GetAndClearPendingExceptions
::System::Exception* Firebase::ExceptionAggregator::GetAndClearPendingExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::ExceptionAggregator::GetAndClearPendingExceptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase", "ExceptionAggregator", "GetAndClearPendingExceptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.ExceptionAggregator.ThrowAndClearPendingExceptions
void Firebase::ExceptionAggregator::ThrowAndClearPendingExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::ExceptionAggregator::ThrowAndClearPendingExceptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase", "ExceptionAggregator", "ThrowAndClearPendingExceptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.ExceptionAggregator.LogException
::System::Exception* Firebase::ExceptionAggregator::LogException(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::ExceptionAggregator::LogException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase", "ExceptionAggregator", "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exception);
}
// Autogenerated method: Firebase.ExceptionAggregator.Wrap
void Firebase::ExceptionAggregator::Wrap(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::ExceptionAggregator::Wrap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase", "ExceptionAggregator", "Wrap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.DebugLogger
#include "Firebase/Platform/DebugLogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.DebugLogger _instance
::Firebase::Platform::DebugLogger* Firebase::Platform::DebugLogger::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::DebugLogger::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::DebugLogger*>("Firebase.Platform", "DebugLogger", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.DebugLogger _instance
void Firebase::Platform::DebugLogger::_set__instance(::Firebase::Platform::DebugLogger* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::DebugLogger::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "DebugLogger", "_instance", value));
}
// Autogenerated method: Firebase.Platform.DebugLogger.get_Instance
::Firebase::Platform::DebugLogger* Firebase::Platform::DebugLogger::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::DebugLogger::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "DebugLogger", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Platform::DebugLogger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Firebase.Platform.DebugLogger..cctor
void Firebase::Platform::DebugLogger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::DebugLogger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "DebugLogger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.Services
#include "Firebase/Platform/Services.hpp"
// Including type: Firebase.Platform.IAppConfigExtensions
#include "Firebase/Platform/IAppConfigExtensions.hpp"
// Including type: Firebase.Platform.IClockService
#include "Firebase/Platform/IClockService.hpp"
// Including type: Firebase.Platform.ILoggingService
#include "Firebase/Platform/ILoggingService.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0x6F7E58
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.IAppConfigExtensions <AppConfig>k__BackingField
::Firebase::Platform::IAppConfigExtensions* Firebase::Platform::Services::_get_$AppConfig$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::_get_$AppConfig$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Firebase::Platform::IAppConfigExtensions*>("Firebase.Platform", "Services", "<AppConfig>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.IAppConfigExtensions <AppConfig>k__BackingField
void Firebase::Platform::Services::_set_$AppConfig$k__BackingField(::Firebase::Platform::IAppConfigExtensions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::_set_$AppConfig$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "Services", "<AppConfig>k__BackingField", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x6F7E94
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.IClockService <Clock>k__BackingField
::Firebase::Platform::IClockService* Firebase::Platform::Services::_get_$Clock$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::_get_$Clock$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Firebase::Platform::IClockService*>("Firebase.Platform", "Services", "<Clock>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.IClockService <Clock>k__BackingField
void Firebase::Platform::Services::_set_$Clock$k__BackingField(::Firebase::Platform::IClockService* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::_set_$Clock$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "Services", "<Clock>k__BackingField", value));
}
// [DebuggerBrowsableAttribute] Offset: 0x6F7ED0
// Autogenerated static field getter
// Get static field: static private Firebase.Platform.ILoggingService <Logging>k__BackingField
::Firebase::Platform::ILoggingService* Firebase::Platform::Services::_get_$Logging$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::_get_$Logging$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Firebase::Platform::ILoggingService*>("Firebase.Platform", "Services", "<Logging>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private Firebase.Platform.ILoggingService <Logging>k__BackingField
void Firebase::Platform::Services::_set_$Logging$k__BackingField(::Firebase::Platform::ILoggingService* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::_set_$Logging$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "Services", "<Logging>k__BackingField", value));
}
// Autogenerated method: Firebase.Platform.Services.set_AppConfig
void Firebase::Platform::Services::set_AppConfig(::Firebase::Platform::IAppConfigExtensions* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::set_AppConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "Services", "set_AppConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Platform.Services.set_Clock
void Firebase::Platform::Services::set_Clock(::Firebase::Platform::IClockService* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::set_Clock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "Services", "set_Clock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Platform.Services.set_Logging
void Firebase::Platform::Services::set_Logging(::Firebase::Platform::ILoggingService* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::set_Logging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "Services", "set_Logging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Firebase.Platform.Services..cctor
void Firebase::Platform::Services::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::Services::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Firebase.Platform", "Services", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Dispatcher
#include "Firebase/Dispatcher.hpp"
// Including type: Firebase.Dispatcher/Firebase.CallbackStorage`1
#include "Firebase/Dispatcher_CallbackStorage_1.hpp"
// Including type: Firebase.Dispatcher/Firebase.<Run>c__AnonStorey0`1
#include "Firebase/Dispatcher_-Run-c__AnonStorey0_1.hpp"
// Including type: Firebase.Dispatcher/Firebase.<RunAsync>c__AnonStorey1`1
#include "Firebase/Dispatcher_-RunAsync-c__AnonStorey1_1.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 ownerThreadId
[[deprecated("Use field access instead!")]] int& Firebase::Dispatcher::dyn_ownerThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Dispatcher::dyn_ownerThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<System.Action> queue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::System::Action*>*& Firebase::Dispatcher::dyn_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Dispatcher::dyn_queue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "queue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::System::Action*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Firebase.Dispatcher.ManagesThisThread
bool Firebase::Dispatcher::ManagesThisThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Dispatcher::ManagesThisThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManagesThisThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Dispatcher.PollJobs
void Firebase::Dispatcher::PollJobs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Dispatcher::PollJobs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollJobs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.PlatformLogLevel
#include "Firebase/Platform/PlatformLogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Firebase.Platform.PlatformLogLevel Verbose
::Firebase::Platform::PlatformLogLevel Firebase::Platform::PlatformLogLevel::_get_Verbose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_get_Verbose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::PlatformLogLevel>("Firebase.Platform", "PlatformLogLevel", "Verbose"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Platform.PlatformLogLevel Verbose
void Firebase::Platform::PlatformLogLevel::_set_Verbose(::Firebase::Platform::PlatformLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_set_Verbose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformLogLevel", "Verbose", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Platform.PlatformLogLevel Debug
::Firebase::Platform::PlatformLogLevel Firebase::Platform::PlatformLogLevel::_get_Debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_get_Debug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::PlatformLogLevel>("Firebase.Platform", "PlatformLogLevel", "Debug"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Platform.PlatformLogLevel Debug
void Firebase::Platform::PlatformLogLevel::_set_Debug(::Firebase::Platform::PlatformLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_set_Debug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformLogLevel", "Debug", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Platform.PlatformLogLevel Info
::Firebase::Platform::PlatformLogLevel Firebase::Platform::PlatformLogLevel::_get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_get_Info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::PlatformLogLevel>("Firebase.Platform", "PlatformLogLevel", "Info"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Platform.PlatformLogLevel Info
void Firebase::Platform::PlatformLogLevel::_set_Info(::Firebase::Platform::PlatformLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_set_Info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformLogLevel", "Info", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Platform.PlatformLogLevel Warning
::Firebase::Platform::PlatformLogLevel Firebase::Platform::PlatformLogLevel::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::PlatformLogLevel>("Firebase.Platform", "PlatformLogLevel", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Platform.PlatformLogLevel Warning
void Firebase::Platform::PlatformLogLevel::_set_Warning(::Firebase::Platform::PlatformLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformLogLevel", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Platform.PlatformLogLevel Error
::Firebase::Platform::PlatformLogLevel Firebase::Platform::PlatformLogLevel::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::PlatformLogLevel>("Firebase.Platform", "PlatformLogLevel", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Platform.PlatformLogLevel Error
void Firebase::Platform::PlatformLogLevel::_set_Error(::Firebase::Platform::PlatformLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformLogLevel", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public Firebase.Platform.PlatformLogLevel Assert
::Firebase::Platform::PlatformLogLevel Firebase::Platform::PlatformLogLevel::_get_Assert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_get_Assert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Firebase::Platform::PlatformLogLevel>("Firebase.Platform", "PlatformLogLevel", "Assert"));
}
// Autogenerated static field setter
// Set static field: static public Firebase.Platform.PlatformLogLevel Assert
void Firebase::Platform::PlatformLogLevel::_set_Assert(::Firebase::Platform::PlatformLogLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::_set_Assert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Firebase.Platform", "PlatformLogLevel", "Assert", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Firebase::Platform::PlatformLogLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::PlatformLogLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Firebase.Platform.IFirebaseAppUtils
#include "Firebase/Platform/IFirebaseAppUtils.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: Firebase.Platform.PlatformLogLevel
#include "Firebase/Platform/PlatformLogLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Firebase.Platform.IFirebaseAppUtils.TranslateDllNotFoundException
void Firebase::Platform::IFirebaseAppUtils::TranslateDllNotFoundException(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::IFirebaseAppUtils::TranslateDllNotFoundException");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Platform::IFirebaseAppUtils*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: Firebase.Platform.IFirebaseAppUtils.PollCallbacks
void Firebase::Platform::IFirebaseAppUtils::PollCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::IFirebaseAppUtils::PollCallbacks");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Platform::IFirebaseAppUtils*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Firebase.Platform.IFirebaseAppUtils.GetLogLevel
::Firebase::Platform::PlatformLogLevel Firebase::Platform::IFirebaseAppUtils::GetLogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Firebase::Platform::IFirebaseAppUtils::GetLogLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Firebase::Platform::IFirebaseAppUtils*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Firebase::Platform::PlatformLogLevel, false>(this, ___internal__method);
}
