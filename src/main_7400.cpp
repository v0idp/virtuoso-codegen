// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_month
#include "System/Xml/Schema/Datatype_month.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_month.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_month::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_month::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_dateTimeBase*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_hexBinary
#include "System/Xml/Schema/Datatype_hexBinary.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_hexBinary::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_hexBinary", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_hexBinary::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_hexBinary", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_hexBinary::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_hexBinary", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_hexBinary::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_hexBinary", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_hexBinary::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_hexBinary::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_ValueType
::System::Type* System::Xml::Schema::Datatype_hexBinary::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_hexBinary::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_hexBinary::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.get_ValidRestrictionFlags
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_hexBinary::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary..cctor
void System::Xml::Schema::Datatype_hexBinary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_hexBinary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_hexBinary::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.Compare
int System::Xml::Schema::Datatype_hexBinary::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_hexBinary.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_hexBinary::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_hexBinary::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_base64Binary
#include "System/Xml/Schema/Datatype_base64Binary.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_base64Binary::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_base64Binary", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_base64Binary::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_base64Binary", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_base64Binary::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_base64Binary", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_base64Binary::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_base64Binary", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_base64Binary::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_base64Binary::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_ValueType
::System::Type* System::Xml::Schema::Datatype_base64Binary::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_base64Binary::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_base64Binary::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.get_ValidRestrictionFlags
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_base64Binary::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary..cctor
void System::Xml::Schema::Datatype_base64Binary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_base64Binary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_base64Binary::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.Compare
int System::Xml::Schema::Datatype_base64Binary::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_base64Binary.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_base64Binary::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_base64Binary::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_anyURI
#include "System/Xml/Schema/Datatype_anyURI.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_anyURI::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_anyURI", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_anyURI::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_anyURI", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_anyURI::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_anyURI", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_anyURI::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_anyURI", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_anyURI::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_anyURI::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_ValueType
::System::Type* System::Xml::Schema::Datatype_anyURI::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_HasValueFacets
bool System::Xml::Schema::Datatype_anyURI::get_HasValueFacets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_HasValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_anyURI::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_anyURI::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.get_ValidRestrictionFlags
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_anyURI::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI..cctor
void System::Xml::Schema::Datatype_anyURI::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_anyURI", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_anyURI::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.Compare
int System::Xml::Schema::Datatype_anyURI::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_anyURI.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_anyURI::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_anyURI::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_QName
#include "System/Xml/Schema/Datatype_QName.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_QName::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_QName", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_QName::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_QName", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_QName::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_QName", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_QName::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_QName", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_QName::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_QName::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_QName::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_ValidRestrictionFlags
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_QName::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_ValueType
::System::Type* System::Xml::Schema::Datatype_QName::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_QName::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_QName::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName..cctor
void System::Xml::Schema::Datatype_QName::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_QName", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_QName::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_QName.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_QName::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QName::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_normalizedString
#include "System/Xml/Schema/Datatype_normalizedString.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_normalizedString.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_normalizedString::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_normalizedString::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_string*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_normalizedString.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_normalizedString::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_normalizedString::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_string*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_normalizedString.get_HasValueFacets
bool System::Xml::Schema::Datatype_normalizedString::get_HasValueFacets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_normalizedString::get_HasValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_normalizedStringV1Compat
#include "System/Xml/Schema/Datatype_normalizedStringV1Compat.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_normalizedStringV1Compat.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_normalizedStringV1Compat::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_normalizedStringV1Compat::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_string*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_normalizedStringV1Compat.get_HasValueFacets
bool System::Xml::Schema::Datatype_normalizedStringV1Compat::get_HasValueFacets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_normalizedStringV1Compat::get_HasValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_token
#include "System/Xml/Schema/Datatype_token.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_token.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_token::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_token::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_normalizedString*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_token.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_token::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_token::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_normalizedString*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_tokenV1Compat
#include "System/Xml/Schema/Datatype_tokenV1Compat.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_tokenV1Compat.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_tokenV1Compat::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_tokenV1Compat::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_normalizedStringV1Compat*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_language
#include "System/Xml/Schema/Datatype_language.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_language.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_language::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_language::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_token*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_NMTOKEN
#include "System/Xml/Schema/Datatype_NMTOKEN.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_NMTOKEN.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_NMTOKEN::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NMTOKEN::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_token*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NMTOKEN.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_NMTOKEN::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NMTOKEN::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_string*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_Name
#include "System/Xml/Schema/Datatype_Name.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_Name.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_Name::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_Name::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_token*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_NCName
#include "System/Xml/Schema/Datatype_NCName.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_NCName.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_NCName::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NCName::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_Name*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NCName.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_NCName::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NCName::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_string*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_ID
#include "System/Xml/Schema/Datatype_ID.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_ID.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_ID::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_ID::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_NCName*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_ID.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_ID::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_ID::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_string*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_IDREF
#include "System/Xml/Schema/Datatype_IDREF.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_IDREF.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_IDREF::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_IDREF::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_NCName*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_IDREF.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_IDREF::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_IDREF::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_string*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_ENTITY
#include "System/Xml/Schema/Datatype_ENTITY.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_ENTITY.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_ENTITY::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_ENTITY::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_NCName*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_ENTITY.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_ENTITY::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_ENTITY::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_string*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_NOTATION
#include "System/Xml/Schema/Datatype_NOTATION.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.Schema.XmlSchemaWhiteSpace
#include "System/Xml/Schema/XmlSchemaWhiteSpace.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectTable
#include "System/Xml/Schema/XmlSchemaObjectTable.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_NOTATION::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_NOTATION", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_NOTATION::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_NOTATION", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_NOTATION::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_NOTATION", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_NOTATION::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_NOTATION", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_NOTATION::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_NOTATION::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_NOTATION::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_ValidRestrictionFlags
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_NOTATION::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_ValueType
::System::Type* System::Xml::Schema::Datatype_NOTATION::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_NOTATION::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.get_BuiltInWhitespaceFacet
::System::Xml::Schema::XmlSchemaWhiteSpace System::Xml::Schema::Datatype_NOTATION::get_BuiltInWhitespaceFacet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::get_BuiltInWhitespaceFacet");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaWhiteSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION..cctor
void System::Xml::Schema::Datatype_NOTATION::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_NOTATION", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.CreateValueConverter
::System::Xml::Schema::XmlValueConverter* System::Xml::Schema::Datatype_NOTATION::CreateValueConverter(::System::Xml::Schema::XmlSchemaType* schemaType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::CreateValueConverter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlValueConverter*, false>(this, ___internal__method, schemaType);
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_NOTATION::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated method: System.Xml.Schema.Datatype_NOTATION.VerifySchemaValid
void System::Xml::Schema::Datatype_NOTATION::VerifySchemaValid(::System::Xml::Schema::XmlSchemaObjectTable* notations, ::System::Xml::Schema::XmlSchemaObject* caller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_NOTATION::VerifySchemaValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, notations, caller);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_integer
#include "System/Xml/Schema/Datatype_integer.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_integer.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_integer::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_integer::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_integer.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_integer::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_integer::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_nonPositiveInteger
#include "System/Xml/Schema/Datatype_nonPositiveInteger.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_nonPositiveInteger::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_nonPositiveInteger", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_nonPositiveInteger::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_nonPositiveInteger", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_nonPositiveInteger.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_nonPositiveInteger::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonPositiveInteger.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_nonPositiveInteger::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_integer*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonPositiveInteger.get_HasValueFacets
bool System::Xml::Schema::Datatype_nonPositiveInteger::get_HasValueFacets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::get_HasValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonPositiveInteger..cctor
void System::Xml::Schema::Datatype_nonPositiveInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonPositiveInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_nonPositiveInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_negativeInteger
#include "System/Xml/Schema/Datatype_negativeInteger.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_negativeInteger::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_negativeInteger", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_negativeInteger::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_negativeInteger", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_negativeInteger.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_negativeInteger::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_nonPositiveInteger*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_negativeInteger.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_negativeInteger::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_nonPositiveInteger*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_negativeInteger..cctor
void System::Xml::Schema::Datatype_negativeInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_negativeInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_negativeInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_long
#include "System/Xml/Schema/Datatype_long.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_long::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_long", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_long::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_long", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_long::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_long", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_long::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_long", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_long::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_long", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_long::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_long", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_long::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_HasValueFacets
bool System::Xml::Schema::Datatype_long::get_HasValueFacets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::get_HasValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_long::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_integer*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_ValueType
::System::Type* System::Xml::Schema::Datatype_long::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_long::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long..cctor
void System::Xml::Schema::Datatype_long::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_long", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.Compare
int System::Xml::Schema::Datatype_long::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_long.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_long::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_long::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_integer*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_int
#include "System/Xml/Schema/Datatype_int.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_int::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_int", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_int::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_int", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_int::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_int", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_int::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_int", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_int::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_int", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_int::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_int", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_int::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_long*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_int::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_long*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_ValueType
::System::Type* System::Xml::Schema::Datatype_int::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_long*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_int::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_long*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int..cctor
void System::Xml::Schema::Datatype_int::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_int", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.Compare
int System::Xml::Schema::Datatype_int::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_long*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_int.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_int::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_int::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_long*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_short
#include "System/Xml/Schema/Datatype_short.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_short::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_short", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_short::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_short", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_short::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_short", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_short::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_short", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_short::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_short", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_short::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_short", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_short::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_int*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_short::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_int*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_ValueType
::System::Type* System::Xml::Schema::Datatype_short::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_int*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_short::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_int*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short..cctor
void System::Xml::Schema::Datatype_short::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_short", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.Compare
int System::Xml::Schema::Datatype_short::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_int*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_short.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_short::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_short::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_int*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_byte
#include "System/Xml/Schema/Datatype_byte.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_byte::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_byte", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_byte::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_byte", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_byte::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_byte", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_byte::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_byte", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_byte::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_byte", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_byte::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_byte", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_byte::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_short*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_byte::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_short*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.get_ValueType
::System::Type* System::Xml::Schema::Datatype_byte::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_short*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_byte::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_short*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte..cctor
void System::Xml::Schema::Datatype_byte::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_byte", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.Compare
int System::Xml::Schema::Datatype_byte::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_short*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_byte.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_byte::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_byte::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_short*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_nonNegativeInteger
#include "System/Xml/Schema/Datatype_nonNegativeInteger.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_nonNegativeInteger::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonNegativeInteger::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_nonNegativeInteger", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_nonNegativeInteger::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonNegativeInteger::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_nonNegativeInteger", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_nonNegativeInteger.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_nonNegativeInteger::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonNegativeInteger::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonNegativeInteger.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_nonNegativeInteger::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonNegativeInteger::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_integer*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonNegativeInteger.get_HasValueFacets
bool System::Xml::Schema::Datatype_nonNegativeInteger::get_HasValueFacets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonNegativeInteger::get_HasValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_nonNegativeInteger..cctor
void System::Xml::Schema::Datatype_nonNegativeInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_nonNegativeInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_nonNegativeInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_unsignedLong
#include "System/Xml/Schema/Datatype_unsignedLong.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_unsignedLong::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedLong", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_unsignedLong::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedLong", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_unsignedLong::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedLong", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_unsignedLong::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedLong", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedLong::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_unsignedLong", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_unsignedLong::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedLong", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedLong::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_nonNegativeInteger*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_unsignedLong::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_nonNegativeInteger*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.get_ValueType
::System::Type* System::Xml::Schema::Datatype_unsignedLong::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_unsignedLong::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong..cctor
void System::Xml::Schema::Datatype_unsignedLong::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_unsignedLong", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.Compare
int System::Xml::Schema::Datatype_unsignedLong::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedLong.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_unsignedLong::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedLong::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_integer*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_unsignedInt
#include "System/Xml/Schema/Datatype_unsignedInt.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_unsignedInt::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedInt", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_unsignedInt::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedInt", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_unsignedInt::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedInt", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_unsignedInt::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedInt", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedInt::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_unsignedInt", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_unsignedInt::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedInt", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedInt::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedLong*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_unsignedInt::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedLong*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt.get_ValueType
::System::Type* System::Xml::Schema::Datatype_unsignedInt::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedLong*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_unsignedInt::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedLong*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt..cctor
void System::Xml::Schema::Datatype_unsignedInt::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_unsignedInt", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt.Compare
int System::Xml::Schema::Datatype_unsignedInt::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedLong*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedInt.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_unsignedInt::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedInt::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedLong*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_unsignedShort
#include "System/Xml/Schema/Datatype_unsignedShort.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_unsignedShort::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedShort", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_unsignedShort::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedShort", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_unsignedShort::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedShort", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_unsignedShort::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedShort", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedShort::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_unsignedShort", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_unsignedShort::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedShort", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedShort::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedInt*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_unsignedShort::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedInt*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort.get_ValueType
::System::Type* System::Xml::Schema::Datatype_unsignedShort::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedInt*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_unsignedShort::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedInt*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort..cctor
void System::Xml::Schema::Datatype_unsignedShort::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_unsignedShort", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort.Compare
int System::Xml::Schema::Datatype_unsignedShort::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedInt*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedShort.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_unsignedShort::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedShort::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedInt*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_unsignedByte
#include "System/Xml/Schema/Datatype_unsignedByte.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_unsignedByte::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedByte", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_unsignedByte::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedByte", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_unsignedByte::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_unsignedByte", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_unsignedByte::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedByte", "listValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedByte::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_unsignedByte", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_unsignedByte::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_unsignedByte", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_unsignedByte::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedShort*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_unsignedByte::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedShort*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte.get_ValueType
::System::Type* System::Xml::Schema::Datatype_unsignedByte::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedShort*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_unsignedByte::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedShort*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte..cctor
void System::Xml::Schema::Datatype_unsignedByte::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_unsignedByte", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte.Compare
int System::Xml::Schema::Datatype_unsignedByte::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedShort*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_unsignedByte.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_unsignedByte::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_unsignedByte::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_unsignedShort*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_positiveInteger
#include "System/Xml/Schema/Datatype_positiveInteger.hpp"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_positiveInteger::_get_numeric10FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_positiveInteger::_get_numeric10FacetsChecker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::FacetsChecker*>("System.Xml.Schema", "Datatype_positiveInteger", "numeric10FacetsChecker"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker numeric10FacetsChecker
void System::Xml::Schema::Datatype_positiveInteger::_set_numeric10FacetsChecker(::System::Xml::Schema::FacetsChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_positiveInteger::_set_numeric10FacetsChecker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_positiveInteger", "numeric10FacetsChecker", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_positiveInteger.get_FacetsChecker
::System::Xml::Schema::FacetsChecker* System::Xml::Schema::Datatype_positiveInteger::get_FacetsChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_positiveInteger::get_FacetsChecker");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_nonNegativeInteger*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::FacetsChecker*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_positiveInteger.get_TypeCode
::System::Xml::Schema::XmlTypeCode System::Xml::Schema::Datatype_positiveInteger::get_TypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_positiveInteger::get_TypeCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_nonNegativeInteger*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlTypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_positiveInteger..cctor
void System::Xml::Schema::Datatype_positiveInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_positiveInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_positiveInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_doubleXdr
#include "System/Xml/Schema/Datatype_doubleXdr.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_doubleXdr.ParseValue
::Il2CppObject* System::Xml::Schema::Datatype_doubleXdr::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_doubleXdr::ParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_floatXdr
#include "System/Xml/Schema/Datatype_floatXdr.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_floatXdr.ParseValue
::Il2CppObject* System::Xml::Schema::Datatype_floatXdr::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_floatXdr::ParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_QNameXdr
#include "System/Xml/Schema/Datatype_QNameXdr.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_QNameXdr::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_QNameXdr", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_QNameXdr::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_QNameXdr", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_QNameXdr::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_QNameXdr", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_QNameXdr::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_QNameXdr", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_QNameXdr.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_QNameXdr::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QNameXdr.get_ValueType
::System::Type* System::Xml::Schema::Datatype_QNameXdr::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QNameXdr.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_QNameXdr::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QNameXdr..cctor
void System::Xml::Schema::Datatype_QNameXdr::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_QNameXdr", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_QNameXdr.ParseValue
::Il2CppObject* System::Xml::Schema::Datatype_QNameXdr::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_QNameXdr::ParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Datatype_ENUMERATION
#include "System/Xml/Schema/Datatype_ENUMERATION.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_ENUMERATION.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::Datatype_ENUMERATION::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_ENUMERATION::get_TokenizedType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_NMTOKEN*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_char
#include "System/Xml/Schema/Datatype_char.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_char::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_char", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_char::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_char", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_char::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_char", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_char::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_char", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_char.get_ValueType
::System::Type* System::Xml::Schema::Datatype_char::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_char.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_char::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_char.get_ValidRestrictionFlags
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_char::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_char..cctor
void System::Xml::Schema::Datatype_char::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_char", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_char.Compare
int System::Xml::Schema::Datatype_char::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_char.ParseValue
::Il2CppObject* System::Xml::Schema::Datatype_char::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::ParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated method: System.Xml.Schema.Datatype_char.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_char::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_char::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_fixed
#include "System/Xml/Schema/Datatype_fixed.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Datatype_fixed.ParseValue
::Il2CppObject* System::Xml::Schema::Datatype_fixed::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_fixed::ParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated method: System.Xml.Schema.Datatype_fixed.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_fixed::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_fixed::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_decimal*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Datatype_uuid
#include "System/Xml/Schema/Datatype_uuid.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.Schema.RestrictionFlags
#include "System/Xml/Schema/RestrictionFlags.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type atomicValueType
::System::Type* System::Xml::Schema::Datatype_uuid::_get_atomicValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::_get_atomicValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_uuid", "atomicValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type atomicValueType
void System::Xml::Schema::Datatype_uuid::_set_atomicValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::_set_atomicValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_uuid", "atomicValueType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type listValueType
::System::Type* System::Xml::Schema::Datatype_uuid::_get_listValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::_get_listValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml.Schema", "Datatype_uuid", "listValueType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type listValueType
void System::Xml::Schema::Datatype_uuid::_set_listValueType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::_set_listValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Datatype_uuid", "listValueType", value));
}
// Autogenerated method: System.Xml.Schema.Datatype_uuid.get_ValueType
::System::Type* System::Xml::Schema::Datatype_uuid::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_uuid.get_ListValueType
::System::Type* System::Xml::Schema::Datatype_uuid::get_ListValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::get_ListValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_uuid.get_ValidRestrictionFlags
::System::Xml::Schema::RestrictionFlags System::Xml::Schema::Datatype_uuid::get_ValidRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::get_ValidRestrictionFlags");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::RestrictionFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_uuid..cctor
void System::Xml::Schema::Datatype_uuid::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Datatype_uuid", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Datatype_uuid.Compare
int System::Xml::Schema::Datatype_uuid::Compare(::Il2CppObject* value1, ::Il2CppObject* value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::Compare");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value1, value2);
}
// Autogenerated method: System.Xml.Schema.Datatype_uuid.ParseValue
::Il2CppObject* System::Xml::Schema::Datatype_uuid::ParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::ParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::DatatypeImplementation*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, s, nameTable, nsmgr);
}
// Autogenerated method: System.Xml.Schema.Datatype_uuid.TryParseValue
::System::Exception* System::Xml::Schema::Datatype_uuid::TryParseValue(::StringW s, ::System::Xml::XmlNameTable* nameTable, ::System::Xml::IXmlNamespaceResolver* nsmgr, ByRef<::Il2CppObject*> typedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Datatype_uuid::TryParseValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::Datatype_anySimpleType*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, nameTable, nsmgr, byref(typedValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.DtdValidator
#include "System/Xml/Schema/DtdValidator.hpp"
// Including type: System.Xml.Schema.DtdValidator/System.Xml.Schema.NamespaceManager
#include "System/Xml/Schema/DtdValidator_NamespaceManager.hpp"
// Including type: System.Xml.HWStack
#include "System/Xml/HWStack.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.IdRefNode
#include "System/Xml/Schema/IdRefNode.hpp"
// Including type: System.Xml.XmlValidatingReaderImpl
#include "System/Xml/XmlValidatingReaderImpl.hpp"
// Including type: System.Xml.IValidationEventHandling
#include "System/Xml/IValidationEventHandling.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.SchemaAttDef
#include "System/Xml/Schema/SchemaAttDef.hpp"
// Including type: System.Xml.Schema.SchemaEntity
#include "System/Xml/Schema/SchemaEntity.hpp"
// Including type: System.Xml.IDtdParserAdapter
#include "System/Xml/IDtdParserAdapter.hpp"
// Including type: System.Xml.Schema.SchemaInfo
#include "System/Xml/Schema/SchemaInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.DtdValidator/System.Xml.Schema.NamespaceManager namespaceManager
::System::Xml::Schema::DtdValidator::NamespaceManager* System::Xml::Schema::DtdValidator::_get_namespaceManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::_get_namespaceManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::DtdValidator::NamespaceManager*>("System.Xml.Schema", "DtdValidator", "namespaceManager"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.DtdValidator/System.Xml.Schema.NamespaceManager namespaceManager
void System::Xml::Schema::DtdValidator::_set_namespaceManager(::System::Xml::Schema::DtdValidator::NamespaceManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::_set_namespaceManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "DtdValidator", "namespaceManager", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.HWStack validationStack
[[deprecated]] ::System::Xml::HWStack*& System::Xml::Schema::DtdValidator::dyn_validationStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::dyn_validationStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validationStack"))->offset;
  return *reinterpret_cast<::System::Xml::HWStack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable attPresence
[[deprecated]] ::System::Collections::Hashtable*& System::Xml::Schema::DtdValidator::dyn_attPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::dyn_attPresence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attPresence"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName name
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::DtdValidator::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable IDs
[[deprecated]] ::System::Collections::Hashtable*& System::Xml::Schema::DtdValidator::dyn_IDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::dyn_IDs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IDs"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.IdRefNode idRefListHead
[[deprecated]] ::System::Xml::Schema::IdRefNode*& System::Xml::Schema::DtdValidator::dyn_idRefListHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::dyn_idRefListHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idRefListHead"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::IdRefNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean processIdentityConstraints
[[deprecated]] bool& System::Xml::Schema::DtdValidator::dyn_processIdentityConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::dyn_processIdentityConstraints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "processIdentityConstraints"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.DtdValidator..cctor
void System::Xml::Schema::DtdValidator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DtdValidator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.Init
void System::Xml::Schema::DtdValidator::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.MeetsStandAloneConstraint
bool System::Xml::Schema::DtdValidator::MeetsStandAloneConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::MeetsStandAloneConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MeetsStandAloneConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.ValidatePIComment
void System::Xml::Schema::DtdValidator::ValidatePIComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::ValidatePIComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidatePIComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.ValidateElement
void System::Xml::Schema::DtdValidator::ValidateElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::ValidateElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.ValidateChildElement
void System::Xml::Schema::DtdValidator::ValidateChildElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::ValidateChildElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateChildElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.ValidateStartElement
void System::Xml::Schema::DtdValidator::ValidateStartElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::ValidateStartElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.ValidateEndStartElement
void System::Xml::Schema::DtdValidator::ValidateEndStartElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::ValidateEndStartElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateEndStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.ProcessElement
void System::Xml::Schema::DtdValidator::ProcessElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::ProcessElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.ValidateEndElement
void System::Xml::Schema::DtdValidator::ValidateEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::ValidateEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.ProcessTokenizedType
void System::Xml::Schema::DtdValidator::ProcessTokenizedType(::System::Xml::XmlTokenizedType ttype, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::ProcessTokenizedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessTokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ttype), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ttype, name);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.CheckValue
void System::Xml::Schema::DtdValidator::CheckValue(::StringW value, ::System::Xml::Schema::SchemaAttDef* attdef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::CheckValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(attdef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, attdef);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.AddID
void System::Xml::Schema::DtdValidator::AddID(::StringW name, ::Il2CppObject* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::AddID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, node);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.GenEntity
bool System::Xml::Schema::DtdValidator::GenEntity(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::GenEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.GetEntity
::System::Xml::Schema::SchemaEntity* System::Xml::Schema::DtdValidator::GetEntity(::System::Xml::XmlQualifiedName* qname, bool fParameterEntity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::GetEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname), ::il2cpp_utils::ExtractType(fParameterEntity)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaEntity*, false>(this, ___internal__method, qname, fParameterEntity);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.CheckForwardRefs
void System::Xml::Schema::DtdValidator::CheckForwardRefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::CheckForwardRefs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForwardRefs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.Push
void System::Xml::Schema::DtdValidator::Push(::System::Xml::XmlQualifiedName* elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::Push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, elementName);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.Pop
bool System::Xml::Schema::DtdValidator::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.SetDefaultTypedValue
void System::Xml::Schema::DtdValidator::SetDefaultTypedValue(::System::Xml::Schema::SchemaAttDef* attdef, ::System::Xml::IDtdParserAdapter* readerAdapter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::SetDefaultTypedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DtdValidator", "SetDefaultTypedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attdef), ::il2cpp_utils::ExtractType(readerAdapter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, attdef, readerAdapter);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.CheckDefaultValue
void System::Xml::Schema::DtdValidator::CheckDefaultValue(::System::Xml::Schema::SchemaAttDef* attdef, ::System::Xml::Schema::SchemaInfo* sinfo, ::System::Xml::IValidationEventHandling* eventHandling, ::StringW baseUriStr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::CheckDefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "DtdValidator", "CheckDefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attdef), ::il2cpp_utils::ExtractType(sinfo), ::il2cpp_utils::ExtractType(eventHandling), ::il2cpp_utils::ExtractType(baseUriStr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, attdef, sinfo, eventHandling, baseUriStr);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.get_PreserveWhitespace
bool System::Xml::Schema::DtdValidator::get_PreserveWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::get_PreserveWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.Validate
void System::Xml::Schema::DtdValidator::Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::Validate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.CompleteValidation
void System::Xml::Schema::DtdValidator::CompleteValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::CompleteValidation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.DtdValidator.FindId
::Il2CppObject* System::Xml::Schema::DtdValidator::FindId(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::FindId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.DtdValidator/System.Xml.Schema.NamespaceManager
#include "System/Xml/Schema/DtdValidator_NamespaceManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.DtdValidator/System.Xml.Schema.NamespaceManager.LookupNamespace
::StringW System::Xml::Schema::DtdValidator::NamespaceManager::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DtdValidator::NamespaceManager::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNamespaceManager*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.FacetsChecker
#include "System/Xml/Schema/FacetsChecker.hpp"
// Including type: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler
#include "System/Xml/Schema/FacetsChecker_FacetsCompiler.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.RestrictionFacets
#include "System/Xml/Schema/RestrictionFacets.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.DatatypeImplementation
#include "System/Xml/Schema/DatatypeImplementation.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckLexicalFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckLexicalFacets(ByRef<::StringW> parseString, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckLexicalFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, byref(parseString), datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::System::Decimal value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(int64_t value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(int value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(int16_t value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::System::DateTime value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(double value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(float value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::StringW value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::ArrayW<uint8_t> value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::System::TimeSpan value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckValueFacets(::System::Xml::XmlQualifiedName* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckWhitespaceFacets
void System::Xml::Schema::FacetsChecker::CheckWhitespaceFacets(ByRef<::StringW> s, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckWhitespaceFacets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckWhitespaceFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(datatype)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(s), datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.CheckPatternFacets
::System::Exception* System::Xml::Schema::FacetsChecker::CheckPatternFacets(::System::Xml::Schema::RestrictionFacets* restriction, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::CheckPatternFacets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckPatternFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(restriction), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, restriction, value);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.MatchEnumeration
bool System::Xml::Schema::FacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.ConstructRestriction
::System::Xml::Schema::RestrictionFacets* System::Xml::Schema::FacetsChecker::ConstructRestriction(::System::Xml::Schema::DatatypeImplementation* datatype, ::System::Xml::Schema::XmlSchemaObjectCollection* facets, ::System::Xml::XmlNameTable* nameTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::ConstructRestriction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::RestrictionFacets*, false>(this, ___internal__method, datatype, facets, nameTable);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker.Power
::System::Decimal System::Xml::Schema::FacetsChecker::Power(int x, int y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::Power");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "FacetsChecker", "Power", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler
#include "System/Xml/Schema/FacetsChecker_FacetsCompiler.hpp"
// Including type: System.Xml.Schema.XmlSchemaFacet
#include "System/Xml/Schema/XmlSchemaFacet.hpp"
// Including type: System.Xml.Schema.DatatypeImplementation
#include "System/Xml/Schema/DatatypeImplementation.hpp"
// Including type: System.Xml.Schema.RestrictionFacets
#include "System/Xml/Schema/RestrictionFacets.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Xml.Schema.XmlSchemaPatternFacet
#include "System/Xml/Schema/XmlSchemaPatternFacet.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler/System.Xml.Schema.Map[] c_map
::ArrayW<::System::Xml::Schema::FacetsChecker::FacetsCompiler::Map> System::Xml::Schema::FacetsChecker::FacetsCompiler::_get_c_map() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::_get_c_map");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::FacetsChecker::FacetsCompiler::Map>>("System.Xml.Schema", "FacetsChecker/FacetsCompiler", "c_map"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler/System.Xml.Schema.Map[] c_map
void System::Xml::Schema::FacetsChecker::FacetsCompiler::_set_c_map(::ArrayW<::System::Xml::Schema::FacetsChecker::FacetsCompiler::Map> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::_set_c_map");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "FacetsChecker/FacetsCompiler", "c_map", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.DatatypeImplementation datatype
[[deprecated]] ::System::Xml::Schema::DatatypeImplementation*& System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_datatype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_datatype");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "datatype"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::DatatypeImplementation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.RestrictionFacets derivedRestriction
[[deprecated]] ::System::Xml::Schema::RestrictionFacets*& System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_derivedRestriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_derivedRestriction");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "derivedRestriction"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::RestrictionFacets**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.RestrictionFlags baseFlags
[[deprecated]] ::System::Xml::Schema::RestrictionFlags& System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_baseFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_baseFlags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseFlags"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::RestrictionFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.RestrictionFlags baseFixedFlags
[[deprecated]] ::System::Xml::Schema::RestrictionFlags& System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_baseFixedFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_baseFixedFlags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseFixedFlags"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::RestrictionFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.RestrictionFlags validRestrictionFlags
[[deprecated]] ::System::Xml::Schema::RestrictionFlags& System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_validRestrictionFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_validRestrictionFlags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validRestrictionFlags"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::RestrictionFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDatatype nonNegativeInt
[[deprecated]] ::System::Xml::Schema::XmlSchemaDatatype*& System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_nonNegativeInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_nonNegativeInt");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nonNegativeInt"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDatatype**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDatatype builtInType
[[deprecated]] ::System::Xml::Schema::XmlSchemaDatatype*& System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_builtInType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_builtInType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "builtInType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDatatype**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlTypeCode builtInEnum
[[deprecated]] ::System::Xml::Schema::XmlTypeCode& System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_builtInEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_builtInEnum");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "builtInEnum"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlTypeCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean firstPattern
[[deprecated]] bool& System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_firstPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_firstPattern");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstPattern"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder regStr
[[deprecated]] ::System::Text::StringBuilder*& System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_regStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_regStr");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "regStr"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaPatternFacet pattern_facet
[[deprecated]] ::System::Xml::Schema::XmlSchemaPatternFacet*& System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_pattern_facet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::dyn_pattern_facet");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pattern_facet"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaPatternFacet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler..ctor
System::Xml::Schema::FacetsChecker::FacetsCompiler::FacetsCompiler(::System::Xml::Schema::DatatypeImplementation* baseDatatype, ::System::Xml::Schema::RestrictionFacets* restriction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseDatatype), ::il2cpp_utils::ExtractType(restriction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseDatatype, restriction);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler..cctor
void System::Xml::Schema::FacetsChecker::FacetsCompiler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "FacetsChecker/FacetsCompiler", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.CompileLengthFacet
void System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileLengthFacet(::System::Xml::Schema::XmlSchemaFacet* facet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileLengthFacet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompileLengthFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, facet);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.CompileMinLengthFacet
void System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileMinLengthFacet(::System::Xml::Schema::XmlSchemaFacet* facet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileMinLengthFacet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompileMinLengthFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, facet);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.CompileMaxLengthFacet
void System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileMaxLengthFacet(::System::Xml::Schema::XmlSchemaFacet* facet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileMaxLengthFacet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompileMaxLengthFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, facet);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.CompilePatternFacet
void System::Xml::Schema::FacetsChecker::FacetsCompiler::CompilePatternFacet(::System::Xml::Schema::XmlSchemaPatternFacet* facet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::CompilePatternFacet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompilePatternFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, facet);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.CompileEnumerationFacet
void System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileEnumerationFacet(::System::Xml::Schema::XmlSchemaFacet* facet, ::System::Xml::IXmlNamespaceResolver* nsmgr, ::System::Xml::XmlNameTable* nameTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileEnumerationFacet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompileEnumerationFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facet), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractType(nameTable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, facet, nsmgr, nameTable);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.CompileWhitespaceFacet
void System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileWhitespaceFacet(::System::Xml::Schema::XmlSchemaFacet* facet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileWhitespaceFacet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompileWhitespaceFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, facet);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.CompileMaxInclusiveFacet
void System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileMaxInclusiveFacet(::System::Xml::Schema::XmlSchemaFacet* facet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileMaxInclusiveFacet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompileMaxInclusiveFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, facet);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.CompileMaxExclusiveFacet
void System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileMaxExclusiveFacet(::System::Xml::Schema::XmlSchemaFacet* facet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileMaxExclusiveFacet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompileMaxExclusiveFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, facet);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.CompileMinInclusiveFacet
void System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileMinInclusiveFacet(::System::Xml::Schema::XmlSchemaFacet* facet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileMinInclusiveFacet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompileMinInclusiveFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, facet);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.CompileMinExclusiveFacet
void System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileMinExclusiveFacet(::System::Xml::Schema::XmlSchemaFacet* facet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileMinExclusiveFacet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompileMinExclusiveFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, facet);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.CompileTotalDigitsFacet
void System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileTotalDigitsFacet(::System::Xml::Schema::XmlSchemaFacet* facet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileTotalDigitsFacet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompileTotalDigitsFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, facet);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.CompileFractionDigitsFacet
void System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileFractionDigitsFacet(::System::Xml::Schema::XmlSchemaFacet* facet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileFractionDigitsFacet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompileFractionDigitsFacet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, facet);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.FinishFacetCompile
void System::Xml::Schema::FacetsChecker::FacetsCompiler::FinishFacetCompile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::FinishFacetCompile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "FinishFacetCompile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.CheckValue
void System::Xml::Schema::FacetsChecker::FacetsCompiler::CheckValue(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaFacet* facet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::CheckValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(facet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, facet);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.CompileFacetCombinations
void System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileFacetCombinations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::CompileFacetCombinations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompileFacetCombinations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.CopyFacetsFromBaseType
void System::Xml::Schema::FacetsChecker::FacetsCompiler::CopyFacetsFromBaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::CopyFacetsFromBaseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CopyFacetsFromBaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.ParseFacetValue
::Il2CppObject* System::Xml::Schema::FacetsChecker::FacetsCompiler::ParseFacetValue(::System::Xml::Schema::XmlSchemaDatatype* datatype, ::System::Xml::Schema::XmlSchemaFacet* facet, ::StringW code, ::System::Xml::IXmlNamespaceResolver* nsmgr, ::System::Xml::XmlNameTable* nameTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::ParseFacetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ParseFacetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(datatype), ::il2cpp_utils::ExtractType(facet), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(nsmgr), ::il2cpp_utils::ExtractType(nameTable)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, datatype, facet, code, nsmgr, nameTable);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.Preprocess
::StringW System::Xml::Schema::FacetsChecker::FacetsCompiler::Preprocess(::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::Preprocess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "FacetsChecker/FacetsCompiler", "Preprocess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pattern);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.CheckProhibitedFlag
void System::Xml::Schema::FacetsChecker::FacetsCompiler::CheckProhibitedFlag(::System::Xml::Schema::XmlSchemaFacet* facet, ::System::Xml::Schema::RestrictionFlags flag, ::StringW errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::CheckProhibitedFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckProhibitedFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facet), ::il2cpp_utils::ExtractType(flag), ::il2cpp_utils::ExtractType(errorCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, facet, flag, errorCode);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.CheckDupFlag
void System::Xml::Schema::FacetsChecker::FacetsCompiler::CheckDupFlag(::System::Xml::Schema::XmlSchemaFacet* facet, ::System::Xml::Schema::RestrictionFlags flag, ::StringW errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::CheckDupFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckDupFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facet), ::il2cpp_utils::ExtractType(flag), ::il2cpp_utils::ExtractType(errorCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, facet, flag, errorCode);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.SetFlag
void System::Xml::Schema::FacetsChecker::FacetsCompiler::SetFlag(::System::Xml::Schema::XmlSchemaFacet* facet, ::System::Xml::Schema::RestrictionFlags flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::SetFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(facet), ::il2cpp_utils::ExtractType(flag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, facet, flag);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler.SetFlag
void System::Xml::Schema::FacetsChecker::FacetsCompiler::SetFlag(::System::Xml::Schema::RestrictionFlags flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::SetFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flag);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler/System.Xml.Schema.Map
#include "System/Xml/Schema/FacetsChecker_FacetsCompiler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Char match
[[deprecated]] ::Il2CppChar& System::Xml::Schema::FacetsChecker::FacetsCompiler::Map::dyn_match() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::Map::dyn_match");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "match"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String replacement
[[deprecated]] ::StringW& System::Xml::Schema::FacetsChecker::FacetsCompiler::Map::dyn_replacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::FacetsChecker::FacetsCompiler::Map::dyn_replacement");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "replacement"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.FacetsChecker/System.Xml.Schema.FacetsCompiler/System.Xml.Schema.Map..ctor
// ABORTED elsewhere.  System::Xml::Schema::FacetsChecker::FacetsCompiler::Map::Map(::Il2CppChar m, ::StringW r)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Numeric10FacetsChecker
#include "System/Xml/Schema/Numeric10FacetsChecker.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] signs
::ArrayW<::Il2CppChar> System::Xml::Schema::Numeric10FacetsChecker::_get_signs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::_get_signs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Xml.Schema", "Numeric10FacetsChecker", "signs"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] signs
void System::Xml::Schema::Numeric10FacetsChecker::_set_signs(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::_set_signs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Numeric10FacetsChecker", "signs", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Decimal maxValue
[[deprecated]] ::System::Decimal& System::Xml::Schema::Numeric10FacetsChecker::dyn_maxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::dyn_maxValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxValue"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Decimal minValue
[[deprecated]] ::System::Decimal& System::Xml::Schema::Numeric10FacetsChecker::dyn_minValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::dyn_minValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minValue"))->offset;
  return *reinterpret_cast<::System::Decimal*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker..cctor
void System::Xml::Schema::Numeric10FacetsChecker::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Numeric10FacetsChecker", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.MatchEnumeration
bool System::Xml::Schema::Numeric10FacetsChecker::MatchEnumeration(::System::Decimal value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlValueConverter* valueConverter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(valueConverter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, valueConverter);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.CheckTotalAndFractionDigits
::System::Exception* System::Xml::Schema::Numeric10FacetsChecker::CheckTotalAndFractionDigits(::System::Decimal value, int totalDigits, int fractionDigits, bool checkTotal, bool checkFraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::CheckTotalAndFractionDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckTotalAndFractionDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(totalDigits), ::il2cpp_utils::ExtractType(fractionDigits), ::il2cpp_utils::ExtractType(checkTotal), ::il2cpp_utils::ExtractType(checkFraction)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, totalDigits, fractionDigits, checkTotal, checkFraction);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets(::System::Decimal value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets(int64_t value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets(int value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets(int16_t value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric10FacetsChecker.MatchEnumeration
bool System::Xml::Schema::Numeric10FacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric10FacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Numeric2FacetsChecker
#include "System/Xml/Schema/Numeric2FacetsChecker.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlValueConverter
#include "System/Xml/Schema/XmlValueConverter.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.Numeric2FacetsChecker.MatchEnumeration
bool System::Xml::Schema::Numeric2FacetsChecker::MatchEnumeration(double value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlValueConverter* valueConverter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric2FacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(valueConverter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, valueConverter);
}
// Autogenerated method: System.Xml.Schema.Numeric2FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric2FacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric2FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric2FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric2FacetsChecker::CheckValueFacets(double value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric2FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric2FacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::Numeric2FacetsChecker::CheckValueFacets(float value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric2FacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.Numeric2FacetsChecker.MatchEnumeration
bool System::Xml::Schema::Numeric2FacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Numeric2FacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.DurationFacetsChecker
#include "System/Xml/Schema/DurationFacetsChecker.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.DurationFacetsChecker.MatchEnumeration
bool System::Xml::Schema::DurationFacetsChecker::MatchEnumeration(::System::TimeSpan value, ::System::Collections::ArrayList* enumeration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DurationFacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration);
}
// Autogenerated method: System.Xml.Schema.DurationFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::DurationFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DurationFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.DurationFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::DurationFacetsChecker::CheckValueFacets(::System::TimeSpan value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DurationFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.DurationFacetsChecker.MatchEnumeration
bool System::Xml::Schema::DurationFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DurationFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.DateTimeFacetsChecker
#include "System/Xml/Schema/DateTimeFacetsChecker.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.DateTimeFacetsChecker.MatchEnumeration
bool System::Xml::Schema::DateTimeFacetsChecker::MatchEnumeration(::System::DateTime value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DateTimeFacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated method: System.Xml.Schema.DateTimeFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::DateTimeFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DateTimeFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.DateTimeFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::DateTimeFacetsChecker::CheckValueFacets(::System::DateTime value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DateTimeFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.DateTimeFacetsChecker.MatchEnumeration
bool System::Xml::Schema::DateTimeFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::DateTimeFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.StringFacetsChecker
#include "System/Xml/Schema/StringFacetsChecker.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlTypeCode
#include "System/Xml/Schema/XmlTypeCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Text.RegularExpressions.Regex languagePattern
::System::Text::RegularExpressions::Regex* System::Xml::Schema::StringFacetsChecker::_get_languagePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::_get_languagePattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Regex*>("System.Xml.Schema", "StringFacetsChecker", "languagePattern"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.RegularExpressions.Regex languagePattern
void System::Xml::Schema::StringFacetsChecker::_set_languagePattern(::System::Text::RegularExpressions::Regex* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::_set_languagePattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "StringFacetsChecker", "languagePattern", value));
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.get_LanguagePattern
::System::Text::RegularExpressions::Regex* System::Xml::Schema::StringFacetsChecker::get_LanguagePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::get_LanguagePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "StringFacetsChecker", "get_LanguagePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Regex*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::StringFacetsChecker::CheckValueFacets(::StringW value, ::System::Xml::Schema::XmlSchemaDatatype* datatype, bool verifyUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::CheckValueFacets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(datatype), ::il2cpp_utils::ExtractType(verifyUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype, verifyUri);
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.MatchEnumeration
bool System::Xml::Schema::StringFacetsChecker::MatchEnumeration(::StringW value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.CheckBuiltInFacets
::System::Exception* System::Xml::Schema::StringFacetsChecker::CheckBuiltInFacets(::StringW s, ::System::Xml::Schema::XmlTypeCode typeCode, bool verifyUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::CheckBuiltInFacets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckBuiltInFacets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(typeCode), ::il2cpp_utils::ExtractType(verifyUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, s, typeCode, verifyUri);
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::StringFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::StringFacetsChecker::CheckValueFacets(::StringW value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.StringFacetsChecker.MatchEnumeration
bool System::Xml::Schema::StringFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::StringFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.QNameFacetsChecker
#include "System/Xml/Schema/QNameFacetsChecker.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.QNameFacetsChecker.MatchEnumeration
bool System::Xml::Schema::QNameFacetsChecker::MatchEnumeration(::System::Xml::XmlQualifiedName* value, ::System::Collections::ArrayList* enumeration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::QNameFacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration);
}
// Autogenerated method: System.Xml.Schema.QNameFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::QNameFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::QNameFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.QNameFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::QNameFacetsChecker::CheckValueFacets(::System::Xml::XmlQualifiedName* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::QNameFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.QNameFacetsChecker.MatchEnumeration
bool System::Xml::Schema::QNameFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::QNameFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.MiscFacetsChecker
#include "System/Xml/Schema/MiscFacetsChecker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.BinaryFacetsChecker
#include "System/Xml/Schema/BinaryFacetsChecker.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.BinaryFacetsChecker.MatchEnumeration
bool System::Xml::Schema::BinaryFacetsChecker::MatchEnumeration(::ArrayW<uint8_t> value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BinaryFacetsChecker::MatchEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(enumeration), ::il2cpp_utils::ExtractType(datatype)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated method: System.Xml.Schema.BinaryFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::BinaryFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BinaryFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.BinaryFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::BinaryFacetsChecker::CheckValueFacets(::ArrayW<uint8_t> value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BinaryFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.BinaryFacetsChecker.MatchEnumeration
bool System::Xml::Schema::BinaryFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::BinaryFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.ListFacetsChecker
#include "System/Xml/Schema/ListFacetsChecker.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.ListFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::ListFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ListFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.ListFacetsChecker.MatchEnumeration
bool System::Xml::Schema::ListFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ListFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.UnionFacetsChecker
#include "System/Xml/Schema/UnionFacetsChecker.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.UnionFacetsChecker.CheckValueFacets
::System::Exception* System::Xml::Schema::UnionFacetsChecker::CheckValueFacets(::Il2CppObject* value, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::UnionFacetsChecker::CheckValueFacets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, datatype);
}
// Autogenerated method: System.Xml.Schema.UnionFacetsChecker.MatchEnumeration
bool System::Xml::Schema::UnionFacetsChecker::MatchEnumeration(::Il2CppObject* value, ::System::Collections::ArrayList* enumeration, ::System::Xml::Schema::XmlSchemaDatatype* datatype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::UnionFacetsChecker::MatchEnumeration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::FacetsChecker*), 17));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value, enumeration, datatype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.IXmlSchemaInfo
#include "System/Xml/Schema/IXmlSchemaInfo.hpp"
// Including type: System.Xml.Schema.XmlSchemaValidity
#include "System/Xml/Schema/XmlSchemaValidity.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.XmlSchemaElement
#include "System/Xml/Schema/XmlSchemaElement.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttribute
#include "System/Xml/Schema/XmlSchemaAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.IXmlSchemaInfo.get_Validity
::System::Xml::Schema::XmlSchemaValidity System::Xml::Schema::IXmlSchemaInfo::get_Validity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IXmlSchemaInfo::get_Validity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::IXmlSchemaInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaValidity, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.IXmlSchemaInfo.get_IsDefault
bool System::Xml::Schema::IXmlSchemaInfo::get_IsDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IXmlSchemaInfo::get_IsDefault");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::IXmlSchemaInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.IXmlSchemaInfo.get_IsNil
bool System::Xml::Schema::IXmlSchemaInfo::get_IsNil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IXmlSchemaInfo::get_IsNil");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::IXmlSchemaInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.IXmlSchemaInfo.get_MemberType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::IXmlSchemaInfo::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IXmlSchemaInfo::get_MemberType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::IXmlSchemaInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.IXmlSchemaInfo.get_SchemaType
::System::Xml::Schema::XmlSchemaType* System::Xml::Schema::IXmlSchemaInfo::get_SchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IXmlSchemaInfo::get_SchemaType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::IXmlSchemaInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.IXmlSchemaInfo.get_SchemaElement
::System::Xml::Schema::XmlSchemaElement* System::Xml::Schema::IXmlSchemaInfo::get_SchemaElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IXmlSchemaInfo::get_SchemaElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::IXmlSchemaInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.IXmlSchemaInfo.get_SchemaAttribute
::System::Xml::Schema::XmlSchemaAttribute* System::Xml::Schema::IXmlSchemaInfo::get_SchemaAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::IXmlSchemaInfo::get_SchemaAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::IXmlSchemaInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaAttribute*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaInference
#include "System/Xml/Schema/XmlSchemaInference.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.NameTable
#include "System/Xml/NameTable.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttribute
#include "System/Xml/Schema/XmlSchemaAttribute.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectTable
#include "System/Xml/Schema/XmlSchemaObjectTable.hpp"
// Including type: System.Xml.Schema.XmlSchemaElement
#include "System/Xml/Schema/XmlSchemaElement.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleContentExtension
#include "System/Xml/Schema/XmlSchemaSimpleContentExtension.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexType
#include "System/Xml/Schema/XmlSchemaComplexType.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_boolean
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_boolean"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_boolean
void System::Xml::Schema::XmlSchemaInference::_set_ST_boolean(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_boolean", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_byte
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_byte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_byte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_byte"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_byte
void System::Xml::Schema::XmlSchemaInference::_set_ST_byte(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_byte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_byte", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_unsignedByte
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_unsignedByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_unsignedByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_unsignedByte"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_unsignedByte
void System::Xml::Schema::XmlSchemaInference::_set_ST_unsignedByte(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_unsignedByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_unsignedByte", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_short
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_short() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_short");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_short"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_short
void System::Xml::Schema::XmlSchemaInference::_set_ST_short(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_short");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_short", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_unsignedShort
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_unsignedShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_unsignedShort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_unsignedShort"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_unsignedShort
void System::Xml::Schema::XmlSchemaInference::_set_ST_unsignedShort(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_unsignedShort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_unsignedShort", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_int
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_int"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_int
void System::Xml::Schema::XmlSchemaInference::_set_ST_int(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_int", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_unsignedInt
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_unsignedInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_unsignedInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_unsignedInt"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_unsignedInt
void System::Xml::Schema::XmlSchemaInference::_set_ST_unsignedInt(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_unsignedInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_unsignedInt", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_long
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_long() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_long");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_long"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_long
void System::Xml::Schema::XmlSchemaInference::_set_ST_long(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_long");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_long", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_unsignedLong
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_unsignedLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_unsignedLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_unsignedLong"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_unsignedLong
void System::Xml::Schema::XmlSchemaInference::_set_ST_unsignedLong(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_unsignedLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_unsignedLong", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_integer
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_integer"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_integer
void System::Xml::Schema::XmlSchemaInference::_set_ST_integer(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_integer", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_decimal
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_decimal"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_decimal
void System::Xml::Schema::XmlSchemaInference::_set_ST_decimal(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_decimal", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_float
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_float"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_float
void System::Xml::Schema::XmlSchemaInference::_set_ST_float(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_float", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_double
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_double"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_double
void System::Xml::Schema::XmlSchemaInference::_set_ST_double(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_double", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_duration
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_duration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_duration"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_duration
void System::Xml::Schema::XmlSchemaInference::_set_ST_duration(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_duration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_duration", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_dateTime
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_dateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_dateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_dateTime"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_dateTime
void System::Xml::Schema::XmlSchemaInference::_set_ST_dateTime(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_dateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_dateTime", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_time
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_time");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_time"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_time
void System::Xml::Schema::XmlSchemaInference::_set_ST_time(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_time");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_time", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_date
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_date"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_date
void System::Xml::Schema::XmlSchemaInference::_set_ST_date(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_date", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_gYearMonth
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_gYearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_gYearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_gYearMonth"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_gYearMonth
void System::Xml::Schema::XmlSchemaInference::_set_ST_gYearMonth(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_gYearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_gYearMonth", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_string
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_string() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_string");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_string"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_string
void System::Xml::Schema::XmlSchemaInference::_set_ST_string(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_string");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_string", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName ST_anySimpleType
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::_get_ST_anySimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_ST_anySimpleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlQualifiedName*>("System.Xml.Schema", "XmlSchemaInference", "ST_anySimpleType"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName ST_anySimpleType
void System::Xml::Schema::XmlSchemaInference::_set_ST_anySimpleType(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_ST_anySimpleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "ST_anySimpleType", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.XmlQualifiedName[] SimpleTypes
::ArrayW<::System::Xml::XmlQualifiedName*> System::Xml::Schema::XmlSchemaInference::_get_SimpleTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_get_SimpleTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XmlQualifiedName*>>("System.Xml.Schema", "XmlSchemaInference", "SimpleTypes"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XmlQualifiedName[] SimpleTypes
void System::Xml::Schema::XmlSchemaInference::_set_SimpleTypes(::ArrayW<::System::Xml::XmlQualifiedName*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::_set_SimpleTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference", "SimpleTypes", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchema rootSchema
[[deprecated]] ::System::Xml::Schema::XmlSchema*& System::Xml::Schema::XmlSchemaInference::dyn_rootSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::dyn_rootSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootSchema"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchema**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSet schemaSet
[[deprecated]] ::System::Xml::Schema::XmlSchemaSet*& System::Xml::Schema::XmlSchemaInference::dyn_schemaSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::dyn_schemaSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaSet"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlReader xtr
[[deprecated]] ::System::Xml::XmlReader*& System::Xml::Schema::XmlSchemaInference::dyn_xtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::dyn_xtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xtr"))->offset;
  return *reinterpret_cast<::System::Xml::XmlReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.NameTable nametable
[[deprecated]] ::System::Xml::NameTable*& System::Xml::Schema::XmlSchemaInference::dyn_nametable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::dyn_nametable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nametable"))->offset;
  return *reinterpret_cast<::System::Xml::NameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String TargetNamespace
[[deprecated]] ::StringW& System::Xml::Schema::XmlSchemaInference::dyn_TargetNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::dyn_TargetNamespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TargetNamespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNamespaceManager NamespaceManager
[[deprecated]] ::System::Xml::XmlNamespaceManager*& System::Xml::Schema::XmlSchemaInference::dyn_NamespaceManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::dyn_NamespaceManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NamespaceManager"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNamespaceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList schemaList
[[deprecated]] ::System::Collections::ArrayList*& System::Xml::Schema::XmlSchemaInference::dyn_schemaList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::dyn_schemaList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaList"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaInference/System.Xml.Schema.InferenceOption occurrence
[[deprecated]] ::System::Xml::Schema::XmlSchemaInference::InferenceOption& System::Xml::Schema::XmlSchemaInference::dyn_occurrence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::dyn_occurrence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "occurrence"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaInference::InferenceOption*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaInference/System.Xml.Schema.InferenceOption typeInference
[[deprecated]] ::System::Xml::Schema::XmlSchemaInference::InferenceOption& System::Xml::Schema::XmlSchemaInference::dyn_typeInference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::dyn_typeInference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeInference"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaInference::InferenceOption*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.get_Occurrence
::System::Xml::Schema::XmlSchemaInference::InferenceOption System::Xml::Schema::XmlSchemaInference::get_Occurrence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::get_Occurrence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Occurrence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaInference::InferenceOption, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.set_Occurrence
void System::Xml::Schema::XmlSchemaInference::set_Occurrence(::System::Xml::Schema::XmlSchemaInference::InferenceOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::set_Occurrence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Occurrence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.set_TypeInference
void System::Xml::Schema::XmlSchemaInference::set_TypeInference(::System::Xml::Schema::XmlSchemaInference::InferenceOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::set_TypeInference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TypeInference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference..cctor
void System::Xml::Schema::XmlSchemaInference::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaInference", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.InferSchema
::System::Xml::Schema::XmlSchemaSet* System::Xml::Schema::XmlSchemaInference::InferSchema(::System::Xml::XmlReader* instanceDocument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::InferSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InferSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceDocument)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSet*, false>(this, ___internal__method, instanceDocument);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.InferSchema1
::System::Xml::Schema::XmlSchemaSet* System::Xml::Schema::XmlSchemaInference::InferSchema1(::System::Xml::XmlReader* instanceDocument, ::System::Xml::Schema::XmlSchemaSet* schemas) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::InferSchema1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InferSchema1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceDocument), ::il2cpp_utils::ExtractType(schemas)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSet*, false>(this, ___internal__method, instanceDocument, schemas);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.AddAttribute
::System::Xml::Schema::XmlSchemaAttribute* System::Xml::Schema::XmlSchemaInference::AddAttribute(::StringW localName, ::StringW prefix, ::StringW childURI, ::StringW attrValue, bool bCreatingNewType, ::System::Xml::Schema::XmlSchema* parentSchema, ::System::Xml::Schema::XmlSchemaObjectCollection* addLocation, ::System::Xml::Schema::XmlSchemaObjectTable* compiledAttributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::AddAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(childURI), ::il2cpp_utils::ExtractType(attrValue), ::il2cpp_utils::ExtractType(bCreatingNewType), ::il2cpp_utils::ExtractType(parentSchema), ::il2cpp_utils::ExtractType(addLocation), ::il2cpp_utils::ExtractType(compiledAttributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaAttribute*, false>(this, ___internal__method, localName, prefix, childURI, attrValue, bCreatingNewType, parentSchema, addLocation, compiledAttributes);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.CreateXmlSchema
::System::Xml::Schema::XmlSchema* System::Xml::Schema::XmlSchemaInference::CreateXmlSchema(::StringW targetNS) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::CreateXmlSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateXmlSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetNS)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method, targetNS);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.AddElement
::System::Xml::Schema::XmlSchemaElement* System::Xml::Schema::XmlSchemaInference::AddElement(::StringW localName, ::StringW prefix, ::StringW childURI, ::System::Xml::Schema::XmlSchema* parentSchema, ::System::Xml::Schema::XmlSchemaObjectCollection* addLocation, int positionWithinCollection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::AddElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(childURI), ::il2cpp_utils::ExtractType(parentSchema), ::il2cpp_utils::ExtractType(addLocation), ::il2cpp_utils::ExtractType(positionWithinCollection)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaElement*, false>(this, ___internal__method, localName, prefix, childURI, parentSchema, addLocation, positionWithinCollection);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.InferElement
void System::Xml::Schema::XmlSchemaInference::InferElement(::System::Xml::Schema::XmlSchemaElement* xse, bool bCreatingNewType, ::System::Xml::Schema::XmlSchema* parentSchema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::InferElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InferElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xse), ::il2cpp_utils::ExtractType(bCreatingNewType), ::il2cpp_utils::ExtractType(parentSchema)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xse, bCreatingNewType, parentSchema);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.CheckSimpleContentExtension
::System::Xml::Schema::XmlSchemaSimpleContentExtension* System::Xml::Schema::XmlSchemaInference::CheckSimpleContentExtension(::System::Xml::Schema::XmlSchemaComplexType* ct) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::CheckSimpleContentExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckSimpleContentExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ct)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleContentExtension*, false>(this, ___internal__method, ct);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.GetEffectiveSchemaType
::System::Xml::Schema::XmlSchemaType* System::Xml::Schema::XmlSchemaInference::GetEffectiveSchemaType(::System::Xml::Schema::XmlSchemaElement* elem, bool bCreatingNewType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::GetEffectiveSchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEffectiveSchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elem), ::il2cpp_utils::ExtractType(bCreatingNewType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method, elem, bCreatingNewType);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.FindMatchingElement
::System::Xml::Schema::XmlSchemaElement* System::Xml::Schema::XmlSchemaInference::FindMatchingElement(bool bCreatingNewType, ::System::Xml::XmlReader* xtr, ::System::Xml::Schema::XmlSchemaComplexType* ct, ByRef<int> lastUsedSeqItem, ByRef<bool> bParticleChanged, ::System::Xml::Schema::XmlSchema* parentSchema, bool setMaxoccurs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::FindMatchingElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindMatchingElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bCreatingNewType), ::il2cpp_utils::ExtractType(xtr), ::il2cpp_utils::ExtractType(ct), ::il2cpp_utils::ExtractType(lastUsedSeqItem), ::il2cpp_utils::ExtractType(bParticleChanged), ::il2cpp_utils::ExtractType(parentSchema), ::il2cpp_utils::ExtractType(setMaxoccurs)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaElement*, false>(this, ___internal__method, bCreatingNewType, xtr, ct, byref(lastUsedSeqItem), byref(bParticleChanged), parentSchema, setMaxoccurs);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.ProcessAttributes
void System::Xml::Schema::XmlSchemaInference::ProcessAttributes(ByRef<::System::Xml::Schema::XmlSchemaElement*> xse, ::System::Xml::Schema::XmlSchemaType* effectiveSchemaType, bool bCreatingNewType, ::System::Xml::Schema::XmlSchema* parentSchema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::ProcessAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xse), ::il2cpp_utils::ExtractType(effectiveSchemaType), ::il2cpp_utils::ExtractType(bCreatingNewType), ::il2cpp_utils::ExtractType(parentSchema)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(xse), effectiveSchemaType, bCreatingNewType, parentSchema);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.MoveAttributes
void System::Xml::Schema::XmlSchemaInference::MoveAttributes(::System::Xml::Schema::XmlSchemaSimpleContentExtension* scExtension, ::System::Xml::Schema::XmlSchemaComplexType* ct) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::MoveAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scExtension), ::il2cpp_utils::ExtractType(ct)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scExtension, ct);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.MoveAttributes
void System::Xml::Schema::XmlSchemaInference::MoveAttributes(::System::Xml::Schema::XmlSchemaComplexType* ct, ::System::Xml::Schema::XmlSchemaSimpleContentExtension* simpleContentExtension, bool bCreatingNewType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::MoveAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ct), ::il2cpp_utils::ExtractType(simpleContentExtension), ::il2cpp_utils::ExtractType(bCreatingNewType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ct, simpleContentExtension, bCreatingNewType);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.FindAttribute
::System::Xml::Schema::XmlSchemaAttribute* System::Xml::Schema::XmlSchemaInference::FindAttribute(::System::Collections::ICollection* attributes, ::StringW attrName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::FindAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes), ::il2cpp_utils::ExtractType(attrName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaAttribute*, false>(this, ___internal__method, attributes, attrName);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.FindGlobalElement
::System::Xml::Schema::XmlSchemaElement* System::Xml::Schema::XmlSchemaInference::FindGlobalElement(::StringW namespaceURI, ::StringW localName, ByRef<::System::Xml::Schema::XmlSchema*> parentSchema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::FindGlobalElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindGlobalElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceURI), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractIndependentType<::System::Xml::Schema::XmlSchema*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaElement*, false>(this, ___internal__method, namespaceURI, localName, byref(parentSchema));
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.FindElement
::System::Xml::Schema::XmlSchemaElement* System::Xml::Schema::XmlSchemaInference::FindElement(::System::Xml::Schema::XmlSchemaObjectCollection* elements, ::StringW elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::FindElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elements), ::il2cpp_utils::ExtractType(elementName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaElement*, false>(this, ___internal__method, elements, elementName);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.FindAttributeRef
::System::Xml::Schema::XmlSchemaAttribute* System::Xml::Schema::XmlSchemaInference::FindAttributeRef(::System::Collections::ICollection* attributes, ::StringW attributeName, ::StringW nsURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::FindAttributeRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindAttributeRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes), ::il2cpp_utils::ExtractType(attributeName), ::il2cpp_utils::ExtractType(nsURI)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaAttribute*, false>(this, ___internal__method, attributes, attributeName, nsURI);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.FindElementRef
::System::Xml::Schema::XmlSchemaElement* System::Xml::Schema::XmlSchemaInference::FindElementRef(::System::Xml::Schema::XmlSchemaObjectCollection* elements, ::StringW elementName, ::StringW nsURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::FindElementRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindElementRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elements), ::il2cpp_utils::ExtractType(elementName), ::il2cpp_utils::ExtractType(nsURI)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaElement*, false>(this, ___internal__method, elements, elementName, nsURI);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.MakeExistingAttributesOptional
void System::Xml::Schema::XmlSchemaInference::MakeExistingAttributesOptional(::System::Xml::Schema::XmlSchemaComplexType* ct, ::System::Xml::Schema::XmlSchemaObjectCollection* attributesInInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::MakeExistingAttributesOptional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeExistingAttributesOptional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ct), ::il2cpp_utils::ExtractType(attributesInInstance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ct, attributesInInstance);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.SwitchUseToOptional
void System::Xml::Schema::XmlSchemaInference::SwitchUseToOptional(::System::Xml::Schema::XmlSchemaObjectCollection* attributes, ::System::Xml::Schema::XmlSchemaObjectCollection* attributesInInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::SwitchUseToOptional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchUseToOptional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes), ::il2cpp_utils::ExtractType(attributesInInstance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributes, attributesInInstance);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.RefineSimpleType
::System::Xml::XmlQualifiedName* System::Xml::Schema::XmlSchemaInference::RefineSimpleType(::StringW s, ByRef<int> iTypeFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::RefineSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefineSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(iTypeFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method, s, byref(iTypeFlags));
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.InferSimpleType
int System::Xml::Schema::XmlSchemaInference::InferSimpleType(::StringW s, ByRef<bool> bNeedsRangeCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::InferSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaInference", "InferSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(bNeedsRangeCheck)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(bNeedsRangeCheck));
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.DateTime
int System::Xml::Schema::XmlSchemaInference::DateTime(::StringW s, bool bDate, bool bTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::DateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaInference", "DateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(bDate), ::il2cpp_utils::ExtractType(bTime)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, bDate, bTime);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.CreateNewElementforChoice
::System::Xml::Schema::XmlSchemaElement* System::Xml::Schema::XmlSchemaInference::CreateNewElementforChoice(::System::Xml::Schema::XmlSchemaElement* copyElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::CreateNewElementforChoice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNewElementforChoice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(copyElement)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaElement*, false>(this, ___internal__method, copyElement);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.GetSchemaType
int System::Xml::Schema::XmlSchemaInference::GetSchemaType(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::GetSchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XmlSchemaInference", "GetSchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.XmlSchemaInference.SetMinMaxOccurs
void System::Xml::Schema::XmlSchemaInference::SetMinMaxOccurs(::System::Xml::Schema::XmlSchemaElement* el, bool setMaxOccurs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::SetMinMaxOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMinMaxOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(el), ::il2cpp_utils::ExtractType(setMaxOccurs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, el, setMaxOccurs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaInference/System.Xml.Schema.InferenceOption
#include "System/Xml/Schema/XmlSchemaInference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaInference/System.Xml.Schema.InferenceOption Restricted
::System::Xml::Schema::XmlSchemaInference::InferenceOption System::Xml::Schema::XmlSchemaInference::InferenceOption::_get_Restricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::InferenceOption::_get_Restricted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaInference::InferenceOption>("System.Xml.Schema", "XmlSchemaInference/InferenceOption", "Restricted"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaInference/System.Xml.Schema.InferenceOption Restricted
void System::Xml::Schema::XmlSchemaInference::InferenceOption::_set_Restricted(::System::Xml::Schema::XmlSchemaInference::InferenceOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::InferenceOption::_set_Restricted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference/InferenceOption", "Restricted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.XmlSchemaInference/System.Xml.Schema.InferenceOption Relaxed
::System::Xml::Schema::XmlSchemaInference::InferenceOption System::Xml::Schema::XmlSchemaInference::InferenceOption::_get_Relaxed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::InferenceOption::_get_Relaxed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchemaInference::InferenceOption>("System.Xml.Schema", "XmlSchemaInference/InferenceOption", "Relaxed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.XmlSchemaInference/System.Xml.Schema.InferenceOption Relaxed
void System::Xml::Schema::XmlSchemaInference::InferenceOption::_set_Relaxed(::System::Xml::Schema::XmlSchemaInference::InferenceOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::InferenceOption::_set_Relaxed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XmlSchemaInference/InferenceOption", "Relaxed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Xml::Schema::XmlSchemaInference::InferenceOption::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInference::InferenceOption::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlSchemaInferenceException
#include "System/Xml/Schema/XmlSchemaInferenceException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XmlSchemaInferenceException.GetObjectData
void System::Xml::Schema::XmlSchemaInferenceException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlSchemaInferenceException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlSchemaException*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.NamespaceList
#include "System/Xml/Schema/NamespaceList.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.NamespaceList/System.Xml.Schema.ListType type
[[deprecated]] ::System::Xml::Schema::NamespaceList::ListType& System::Xml::Schema::NamespaceList::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::NamespaceList::ListType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable set
[[deprecated]] ::System::Collections::Hashtable*& System::Xml::Schema::NamespaceList::dyn_set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::dyn_set");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "set"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String targetNamespace
[[deprecated]] ::StringW& System::Xml::Schema::NamespaceList::dyn_targetNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::dyn_targetNamespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetNamespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.get_Type
::System::Xml::Schema::NamespaceList::ListType System::Xml::Schema::NamespaceList::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::NamespaceList::ListType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.get_Excluded
::StringW System::Xml::Schema::NamespaceList::get_Excluded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::get_Excluded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Excluded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.get_Enumerate
::System::Collections::ICollection* System::Xml::Schema::NamespaceList::get_Enumerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::get_Enumerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Enumerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.Clone
::System::Xml::Schema::NamespaceList* System::Xml::Schema::NamespaceList::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::NamespaceList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.Allows
bool System::Xml::Schema::NamespaceList::Allows(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::Allows");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::NamespaceList*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ns);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.Allows
bool System::Xml::Schema::NamespaceList::Allows(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::Allows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Allows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.IsSubset
bool System::Xml::Schema::NamespaceList::IsSubset(::System::Xml::Schema::NamespaceList* sub, ::System::Xml::Schema::NamespaceList* super) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::IsSubset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "NamespaceList", "IsSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sub), ::il2cpp_utils::ExtractType(super)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sub, super);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.Union
::System::Xml::Schema::NamespaceList* System::Xml::Schema::NamespaceList::Union(::System::Xml::Schema::NamespaceList* o1, ::System::Xml::Schema::NamespaceList* o2, bool v1Compat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::Union");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "NamespaceList", "Union", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o1), ::il2cpp_utils::ExtractType(o2), ::il2cpp_utils::ExtractType(v1Compat)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::NamespaceList*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, o1, o2, v1Compat);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.CompareSetToOther
::System::Xml::Schema::NamespaceList* System::Xml::Schema::NamespaceList::CompareSetToOther(::System::Xml::Schema::NamespaceList* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::CompareSetToOther");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareSetToOther", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::NamespaceList*, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.Intersection
::System::Xml::Schema::NamespaceList* System::Xml::Schema::NamespaceList::Intersection(::System::Xml::Schema::NamespaceList* o1, ::System::Xml::Schema::NamespaceList* o2, bool v1Compat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::Intersection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "NamespaceList", "Intersection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o1), ::il2cpp_utils::ExtractType(o2), ::il2cpp_utils::ExtractType(v1Compat)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::NamespaceList*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, o1, o2, v1Compat);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.RemoveNamespace
void System::Xml::Schema::NamespaceList::RemoveNamespace(::StringW tns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::RemoveNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tns);
}
// Autogenerated method: System.Xml.Schema.NamespaceList.ToString
::StringW System::Xml::Schema::NamespaceList::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.NamespaceList/System.Xml.Schema.ListType
#include "System/Xml/Schema/NamespaceList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.NamespaceList/System.Xml.Schema.ListType Any
::System::Xml::Schema::NamespaceList::ListType System::Xml::Schema::NamespaceList::ListType::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::ListType::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::NamespaceList::ListType>("System.Xml.Schema", "NamespaceList/ListType", "Any"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.NamespaceList/System.Xml.Schema.ListType Any
void System::Xml::Schema::NamespaceList::ListType::_set_Any(::System::Xml::Schema::NamespaceList::ListType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::ListType::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "NamespaceList/ListType", "Any", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.NamespaceList/System.Xml.Schema.ListType Other
::System::Xml::Schema::NamespaceList::ListType System::Xml::Schema::NamespaceList::ListType::_get_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::ListType::_get_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::NamespaceList::ListType>("System.Xml.Schema", "NamespaceList/ListType", "Other"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.NamespaceList/System.Xml.Schema.ListType Other
void System::Xml::Schema::NamespaceList::ListType::_set_Other(::System::Xml::Schema::NamespaceList::ListType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::ListType::_set_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "NamespaceList/ListType", "Other", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.NamespaceList/System.Xml.Schema.ListType Set
::System::Xml::Schema::NamespaceList::ListType System::Xml::Schema::NamespaceList::ListType::_get_Set() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::ListType::_get_Set");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::NamespaceList::ListType>("System.Xml.Schema", "NamespaceList/ListType", "Set"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.NamespaceList/System.Xml.Schema.ListType Set
void System::Xml::Schema::NamespaceList::ListType::_set_Set(::System::Xml::Schema::NamespaceList::ListType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::ListType::_set_Set");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "NamespaceList/ListType", "Set", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Xml::Schema::NamespaceList::ListType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceList::ListType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.NamespaceListV1Compat
#include "System/Xml/Schema/NamespaceListV1Compat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.NamespaceListV1Compat.Allows
bool System::Xml::Schema::NamespaceListV1Compat::Allows(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::NamespaceListV1Compat::Allows");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::NamespaceList*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ns);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Parser
#include "System/Xml/Schema/Parser.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.Schema.SchemaNames
#include "System/Xml/Schema/SchemaNames.hpp"
// Including type: System.Xml.Schema.ValidationEventHandler
#include "System/Xml/Schema/ValidationEventHandler.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.PositionInfo
#include "System/Xml/PositionInfo.hpp"
// Including type: System.Xml.Schema.SchemaBuilder
#include "System/Xml/Schema/SchemaBuilder.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.Schema.SchemaInfo
#include "System/Xml/Schema/SchemaInfo.hpp"
// Including type: System.Xml.XmlResolver
#include "System/Xml/XmlResolver.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Xml.XmlElement
#include "System/Xml/XmlElement.hpp"
// Including type: System.Xml.XmlAttribute
#include "System/Xml/XmlAttribute.hpp"
// Including type: System.Xml.XmlEntityReference
#include "System/Xml/XmlEntityReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaType schemaType
[[deprecated]] ::System::Xml::Schema::SchemaType& System::Xml::Schema::Parser::dyn_schemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_schemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
[[deprecated]] ::System::Xml::XmlNameTable*& System::Xml::Schema::Parser::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaNames schemaNames
[[deprecated]] ::System::Xml::Schema::SchemaNames*& System::Xml::Schema::Parser::dyn_schemaNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_schemaNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaNames"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaNames**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ValidationEventHandler eventHandler
[[deprecated]] ::System::Xml::Schema::ValidationEventHandler*& System::Xml::Schema::Parser::dyn_eventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_eventHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventHandler"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::ValidationEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNamespaceManager namespaceManager
[[deprecated]] ::System::Xml::XmlNamespaceManager*& System::Xml::Schema::Parser::dyn_namespaceManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_namespaceManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceManager"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNamespaceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlReader reader
[[deprecated]] ::System::Xml::XmlReader*& System::Xml::Schema::Parser::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::Xml::XmlReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.PositionInfo positionInfo
[[deprecated]] ::System::Xml::PositionInfo*& System::Xml::Schema::Parser::dyn_positionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_positionInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionInfo"))->offset;
  return *reinterpret_cast<::System::Xml::PositionInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isProcessNamespaces
[[deprecated]] bool& System::Xml::Schema::Parser::dyn_isProcessNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_isProcessNamespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isProcessNamespaces"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 schemaXmlDepth
[[deprecated]] int& System::Xml::Schema::Parser::dyn_schemaXmlDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_schemaXmlDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaXmlDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 markupDepth
[[deprecated]] int& System::Xml::Schema::Parser::dyn_markupDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_markupDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "markupDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaBuilder builder
[[deprecated]] ::System::Xml::Schema::SchemaBuilder*& System::Xml::Schema::Parser::dyn_builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_builder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "builder"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchema schema
[[deprecated]] ::System::Xml::Schema::XmlSchema*& System::Xml::Schema::Parser::dyn_schema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_schema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schema"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchema**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaInfo xdrSchema
[[deprecated]] ::System::Xml::Schema::SchemaInfo*& System::Xml::Schema::Parser::dyn_xdrSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_xdrSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xdrSchema"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlResolver xmlResolver
[[deprecated]] ::System::Xml::XmlResolver*& System::Xml::Schema::Parser::dyn_xmlResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_xmlResolver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlResolver"))->offset;
  return *reinterpret_cast<::System::Xml::XmlResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlDocument dummyDocument
[[deprecated]] ::System::Xml::XmlDocument*& System::Xml::Schema::Parser::dyn_dummyDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_dummyDocument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dummyDocument"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean processMarkup
[[deprecated]] bool& System::Xml::Schema::Parser::dyn_processMarkup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_processMarkup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "processMarkup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNode parentNode
[[deprecated]] ::System::Xml::XmlNode*& System::Xml::Schema::Parser::dyn_parentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_parentNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentNode"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNamespaceManager annotationNSManager
[[deprecated]] ::System::Xml::XmlNamespaceManager*& System::Xml::Schema::Parser::dyn_annotationNSManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_annotationNSManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "annotationNSManager"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNamespaceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String xmlns
[[deprecated]] ::StringW& System::Xml::Schema::Parser::dyn_xmlns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_xmlns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlCharType xmlCharType
[[deprecated]] ::System::Xml::XmlCharType& System::Xml::Schema::Parser::dyn_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::dyn_xmlCharType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlCharType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlCharType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Parser.get_XmlSchema
::System::Xml::Schema::XmlSchema* System::Xml::Schema::Parser::get_XmlSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::get_XmlSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Parser.set_XmlResolver
void System::Xml::Schema::Parser::set_XmlResolver(::System::Xml::XmlResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::set_XmlResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XmlResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.Parser.get_XdrSchema
::System::Xml::Schema::SchemaInfo* System::Xml::Schema::Parser::get_XdrSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::get_XdrSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XdrSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Parser.Parse
::System::Xml::Schema::SchemaType System::Xml::Schema::Parser::Parse(::System::Xml::XmlReader* reader, ::StringW targetNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(targetNamespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaType, false>(this, ___internal__method, reader, targetNamespace);
}
// Autogenerated method: System.Xml.Schema.Parser.StartParsing
void System::Xml::Schema::Parser::StartParsing(::System::Xml::XmlReader* reader, ::StringW targetNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::StartParsing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartParsing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(targetNamespace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, targetNamespace);
}
// Autogenerated method: System.Xml.Schema.Parser.CheckSchemaRoot
bool System::Xml::Schema::Parser::CheckSchemaRoot(::System::Xml::Schema::SchemaType rootType, ByRef<::StringW> code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::CheckSchemaRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckSchemaRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootType), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rootType, byref(code));
}
// Autogenerated method: System.Xml.Schema.Parser.FinishParsing
::System::Xml::Schema::SchemaType System::Xml::Schema::Parser::FinishParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::FinishParsing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishParsing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Parser.ParseReaderNode
bool System::Xml::Schema::Parser::ParseReaderNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::ParseReaderNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseReaderNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Parser.ProcessAppInfoDocMarkup
void System::Xml::Schema::Parser::ProcessAppInfoDocMarkup(bool root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::ProcessAppInfoDocMarkup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAppInfoDocMarkup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, root);
}
// Autogenerated method: System.Xml.Schema.Parser.LoadElementNode
::System::Xml::XmlElement* System::Xml::Schema::Parser::LoadElementNode(bool root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::LoadElementNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadElementNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlElement*, false>(this, ___internal__method, root);
}
// Autogenerated method: System.Xml.Schema.Parser.CreateXmlNsAttribute
::System::Xml::XmlAttribute* System::Xml::Schema::Parser::CreateXmlNsAttribute(::StringW prefix, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::CreateXmlNsAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateXmlNsAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlAttribute*, false>(this, ___internal__method, prefix, value);
}
// Autogenerated method: System.Xml.Schema.Parser.LoadAttributeNode
::System::Xml::XmlAttribute* System::Xml::Schema::Parser::LoadAttributeNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::LoadAttributeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAttributeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Parser.LoadEntityReferenceInAttribute
::System::Xml::XmlEntityReference* System::Xml::Schema::Parser::LoadEntityReferenceInAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Parser::LoadEntityReferenceInAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadEntityReferenceInAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlEntityReference*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Compositor
#include "System/Xml/Schema/Compositor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.Compositor Root
::System::Xml::Schema::Compositor System::Xml::Schema::Compositor::_get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compositor::_get_Root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::Compositor>("System.Xml.Schema", "Compositor", "Root"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.Compositor Root
void System::Xml::Schema::Compositor::_set_Root(::System::Xml::Schema::Compositor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compositor::_set_Root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Compositor", "Root", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.Compositor Include
::System::Xml::Schema::Compositor System::Xml::Schema::Compositor::_get_Include() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compositor::_get_Include");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::Compositor>("System.Xml.Schema", "Compositor", "Include"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.Compositor Include
void System::Xml::Schema::Compositor::_set_Include(::System::Xml::Schema::Compositor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compositor::_set_Include");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Compositor", "Include", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.Compositor Import
::System::Xml::Schema::Compositor System::Xml::Schema::Compositor::_get_Import() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compositor::_get_Import");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::Compositor>("System.Xml.Schema", "Compositor", "Import"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.Compositor Import
void System::Xml::Schema::Compositor::_set_Import(::System::Xml::Schema::Compositor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compositor::_set_Import");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Compositor", "Import", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.Compositor Redefine
::System::Xml::Schema::Compositor System::Xml::Schema::Compositor::_get_Redefine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compositor::_get_Redefine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::Compositor>("System.Xml.Schema", "Compositor", "Redefine"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.Compositor Redefine
void System::Xml::Schema::Compositor::_set_Redefine(::System::Xml::Schema::Compositor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compositor::_set_Redefine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Compositor", "Redefine", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Xml::Schema::Compositor::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compositor::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.RedefineEntry
#include "System/Xml/Schema/RedefineEntry.hpp"
// Including type: System.Xml.Schema.XmlSchemaRedefine
#include "System/Xml/Schema/XmlSchemaRedefine.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.XmlSchemaRedefine redefine
[[deprecated]] ::System::Xml::Schema::XmlSchemaRedefine*& System::Xml::Schema::RedefineEntry::dyn_redefine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RedefineEntry::dyn_redefine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "redefine"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaRedefine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.XmlSchema schemaToUpdate
[[deprecated]] ::System::Xml::Schema::XmlSchema*& System::Xml::Schema::RedefineEntry::dyn_schemaToUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::RedefineEntry::dyn_schemaToUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaToUpdate"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchema**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.Preprocessor
#include "System/Xml/Schema/Preprocessor.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.SortedList
#include "System/Collections/SortedList.hpp"
// Including type: System.Xml.XmlReaderSettings
#include "System/Xml/XmlReaderSettings.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.XmlResolver
#include "System/Xml/XmlResolver.hpp"
// Including type: System.Xml.Schema.XmlSchemaExternal
#include "System/Xml/Schema/XmlSchemaExternal.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
// Including type: System.Xml.Schema.RedefineEntry
#include "System/Xml/Schema/RedefineEntry.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaGroup
#include "System/Xml/Schema/XmlSchemaGroup.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttributeGroup
#include "System/Xml/Schema/XmlSchemaAttributeGroup.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexType
#include "System/Xml/Schema/XmlSchemaComplexType.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttribute
#include "System/Xml/Schema/XmlSchemaAttribute.hpp"
// Including type: System.Xml.Schema.XmlSchemaElement
#include "System/Xml/Schema/XmlSchemaElement.hpp"
// Including type: System.Xml.Schema.XmlSchemaIdentityConstraint
#include "System/Xml/Schema/XmlSchemaIdentityConstraint.hpp"
// Including type: System.Xml.Schema.XmlSchemaNotation
#include "System/Xml/Schema/XmlSchemaNotation.hpp"
// Including type: System.Xml.Schema.XmlSchemaParticle
#include "System/Xml/Schema/XmlSchemaParticle.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnyAttribute
#include "System/Xml/Schema/XmlSchemaAnyAttribute.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnnotation
#include "System/Xml/Schema/XmlSchemaAnnotation.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.Schema.SchemaNames
#include "System/Xml/Schema/SchemaNames.hpp"
// Including type: System.Xml.Schema.ValidationEventHandler
#include "System/Xml/Schema/ValidationEventHandler.hpp"
// Including type: System.Xml.Schema.XmlSchemaCompilationSettings
#include "System/Xml/Schema/XmlSchemaCompilationSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.Schema.XmlSchema builtInSchemaForXmlNS
::System::Xml::Schema::XmlSchema* System::Xml::Schema::Preprocessor::_get_builtInSchemaForXmlNS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::_get_builtInSchemaForXmlNS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::XmlSchema*>("System.Xml.Schema", "Preprocessor", "builtInSchemaForXmlNS"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.Schema.XmlSchema builtInSchemaForXmlNS
void System::Xml::Schema::Preprocessor::_set_builtInSchemaForXmlNS(::System::Xml::Schema::XmlSchema* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::_set_builtInSchemaForXmlNS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "Preprocessor", "builtInSchemaForXmlNS", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String Xmlns
[[deprecated]] ::StringW& System::Xml::Schema::Preprocessor::dyn_Xmlns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::dyn_Xmlns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Xmlns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String NsXsi
[[deprecated]] ::StringW& System::Xml::Schema::Preprocessor::dyn_NsXsi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::dyn_NsXsi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NsXsi"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String targetNamespace
[[deprecated]] ::StringW& System::Xml::Schema::Preprocessor::dyn_targetNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::dyn_targetNamespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetNamespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchema rootSchema
[[deprecated]] ::System::Xml::Schema::XmlSchema*& System::Xml::Schema::Preprocessor::dyn_rootSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::dyn_rootSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootSchema"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchema**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchema currentSchema
[[deprecated]] ::System::Xml::Schema::XmlSchema*& System::Xml::Schema::Preprocessor::dyn_currentSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::dyn_currentSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSchema"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchema**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaForm elementFormDefault
[[deprecated]] ::System::Xml::Schema::XmlSchemaForm& System::Xml::Schema::Preprocessor::dyn_elementFormDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::dyn_elementFormDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementFormDefault"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaForm*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaForm attributeFormDefault
[[deprecated]] ::System::Xml::Schema::XmlSchemaForm& System::Xml::Schema::Preprocessor::dyn_attributeFormDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::dyn_attributeFormDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeFormDefault"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaForm*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDerivationMethod blockDefault
[[deprecated]] ::System::Xml::Schema::XmlSchemaDerivationMethod& System::Xml::Schema::Preprocessor::dyn_blockDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::dyn_blockDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blockDefault"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDerivationMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDerivationMethod finalDefault
[[deprecated]] ::System::Xml::Schema::XmlSchemaDerivationMethod& System::Xml::Schema::Preprocessor::dyn_finalDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::dyn_finalDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finalDefault"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDerivationMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable schemaLocations
[[deprecated]] ::System::Collections::Hashtable*& System::Xml::Schema::Preprocessor::dyn_schemaLocations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::dyn_schemaLocations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaLocations"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable chameleonSchemas
[[deprecated]] ::System::Collections::Hashtable*& System::Xml::Schema::Preprocessor::dyn_chameleonSchemas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::dyn_chameleonSchemas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chameleonSchemas"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable referenceNamespaces
[[deprecated]] ::System::Collections::Hashtable*& System::Xml::Schema::Preprocessor::dyn_referenceNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::dyn_referenceNamespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referenceNamespaces"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable processedExternals
[[deprecated]] ::System::Collections::Hashtable*& System::Xml::Schema::Preprocessor::dyn_processedExternals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::dyn_processedExternals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "processedExternals"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.SortedList lockList
[[deprecated]] ::System::Collections::SortedList*& System::Xml::Schema::Preprocessor::dyn_lockList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::dyn_lockList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lockList"))->offset;
  return *reinterpret_cast<::System::Collections::SortedList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlReaderSettings readerSettings
[[deprecated]] ::System::Xml::XmlReaderSettings*& System::Xml::Schema::Preprocessor::dyn_readerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::dyn_readerSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readerSettings"))->offset;
  return *reinterpret_cast<::System::Xml::XmlReaderSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchema rootSchemaForRedefine
[[deprecated]] ::System::Xml::Schema::XmlSchema*& System::Xml::Schema::Preprocessor::dyn_rootSchemaForRedefine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::dyn_rootSchemaForRedefine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rootSchemaForRedefine"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchema**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList redefinedList
[[deprecated]] ::System::Collections::ArrayList*& System::Xml::Schema::Preprocessor::dyn_redefinedList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::dyn_redefinedList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "redefinedList"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlResolver xmlResolver
[[deprecated]] ::System::Xml::XmlResolver*& System::Xml::Schema::Preprocessor::dyn_xmlResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::dyn_xmlResolver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlResolver"))->offset;
  return *reinterpret_cast<::System::Xml::XmlResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.set_XmlResolver
void System::Xml::Schema::Preprocessor::set_XmlResolver(::System::Xml::XmlResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::set_XmlResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XmlResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.set_ReaderSettings
void System::Xml::Schema::Preprocessor::set_ReaderSettings(::System::Xml::XmlReaderSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::set_ReaderSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReaderSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.set_SchemaLocations
void System::Xml::Schema::Preprocessor::set_SchemaLocations(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::set_SchemaLocations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SchemaLocations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.set_ChameleonSchemas
void System::Xml::Schema::Preprocessor::set_ChameleonSchemas(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::set_ChameleonSchemas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChameleonSchemas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.get_RootSchema
::System::Xml::Schema::XmlSchema* System::Xml::Schema::Preprocessor::get_RootSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::get_RootSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RootSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.Execute
bool System::Xml::Schema::Preprocessor::Execute(::System::Xml::Schema::XmlSchema* schema, ::StringW targetNamespace, bool loadExternals) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema), ::il2cpp_utils::ExtractType(targetNamespace), ::il2cpp_utils::ExtractType(loadExternals)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, schema, targetNamespace, loadExternals);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.Cleanup
void System::Xml::Schema::Preprocessor::Cleanup(::System::Xml::Schema::XmlSchema* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schema);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.CleanupRedefine
void System::Xml::Schema::Preprocessor::CleanupRedefine(::System::Xml::Schema::XmlSchemaExternal* include) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::CleanupRedefine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanupRedefine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(include)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, include);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.BuildSchemaList
void System::Xml::Schema::Preprocessor::BuildSchemaList(::System::Xml::Schema::XmlSchema* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::BuildSchemaList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildSchemaList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schema);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.LoadExternals
void System::Xml::Schema::Preprocessor::LoadExternals(::System::Xml::Schema::XmlSchema* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::LoadExternals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadExternals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schema);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.GetBuildInSchema
::System::Xml::Schema::XmlSchema* System::Xml::Schema::Preprocessor::GetBuildInSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::GetBuildInSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Preprocessor", "GetBuildInSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.BuildRefNamespaces
void System::Xml::Schema::Preprocessor::BuildRefNamespaces(::System::Xml::Schema::XmlSchema* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::BuildRefNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildRefNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schema);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.ParseUri
void System::Xml::Schema::Preprocessor::ParseUri(::StringW uri, ::StringW code, ::System::Xml::Schema::XmlSchemaObject* sourceSchemaObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::ParseUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(sourceSchemaObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri, code, sourceSchemaObject);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.Preprocess
void System::Xml::Schema::Preprocessor::Preprocess(::System::Xml::Schema::XmlSchema* schema, ::StringW targetNamespace, ::System::Collections::ArrayList* imports) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::Preprocess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Preprocess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema), ::il2cpp_utils::ExtractType(targetNamespace), ::il2cpp_utils::ExtractType(imports)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schema, targetNamespace, imports);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.CopyIncludedComponents
void System::Xml::Schema::Preprocessor::CopyIncludedComponents(::System::Xml::Schema::XmlSchema* includedSchema, ::System::Xml::Schema::XmlSchema* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::CopyIncludedComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIncludedComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includedSchema), ::il2cpp_utils::ExtractType(schema)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, includedSchema, schema);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.PreprocessRedefine
void System::Xml::Schema::Preprocessor::PreprocessRedefine(::System::Xml::Schema::RedefineEntry* redefineEntry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::PreprocessRedefine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessRedefine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(redefineEntry)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, redefineEntry);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.GetIncludedSet
void System::Xml::Schema::Preprocessor::GetIncludedSet(::System::Xml::Schema::XmlSchema* schema, ::System::Collections::ArrayList* includesList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::GetIncludedSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIncludedSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema), ::il2cpp_utils::ExtractType(includesList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schema, includesList);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.GetParentSchema
::System::Xml::Schema::XmlSchema* System::Xml::Schema::Preprocessor::GetParentSchema(::System::Xml::Schema::XmlSchemaObject* currentSchemaObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::GetParentSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "Preprocessor", "GetParentSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentSchemaObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, currentSchemaObject);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.SetSchemaDefaults
void System::Xml::Schema::Preprocessor::SetSchemaDefaults(::System::Xml::Schema::XmlSchema* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::SetSchemaDefaults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSchemaDefaults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schema);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.CountGroupSelfReference
int System::Xml::Schema::Preprocessor::CountGroupSelfReference(::System::Xml::Schema::XmlSchemaObjectCollection* items, ::System::Xml::XmlQualifiedName* name, ::System::Xml::Schema::XmlSchemaGroup* redefined) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::CountGroupSelfReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CountGroupSelfReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(items), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(redefined)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, items, name, redefined);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.CheckRefinedGroup
void System::Xml::Schema::Preprocessor::CheckRefinedGroup(::System::Xml::Schema::XmlSchemaGroup* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::CheckRefinedGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRefinedGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.CheckRefinedAttributeGroup
void System::Xml::Schema::Preprocessor::CheckRefinedAttributeGroup(::System::Xml::Schema::XmlSchemaAttributeGroup* attributeGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::CheckRefinedAttributeGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRefinedAttributeGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributeGroup);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.CheckRefinedSimpleType
void System::Xml::Schema::Preprocessor::CheckRefinedSimpleType(::System::Xml::Schema::XmlSchemaSimpleType* stype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::CheckRefinedSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRefinedSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stype)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stype);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.CheckRefinedComplexType
void System::Xml::Schema::Preprocessor::CheckRefinedComplexType(::System::Xml::Schema::XmlSchemaComplexType* ctype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::CheckRefinedComplexType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRefinedComplexType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctype)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctype);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.PreprocessAttribute
void System::Xml::Schema::Preprocessor::PreprocessAttribute(::System::Xml::Schema::XmlSchemaAttribute* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::PreprocessAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.PreprocessLocalAttribute
void System::Xml::Schema::Preprocessor::PreprocessLocalAttribute(::System::Xml::Schema::XmlSchemaAttribute* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::PreprocessLocalAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessLocalAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.PreprocessAttributeContent
void System::Xml::Schema::Preprocessor::PreprocessAttributeContent(::System::Xml::Schema::XmlSchemaAttribute* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::PreprocessAttributeContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessAttributeContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.PreprocessAttributeGroup
void System::Xml::Schema::Preprocessor::PreprocessAttributeGroup(::System::Xml::Schema::XmlSchemaAttributeGroup* attributeGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::PreprocessAttributeGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessAttributeGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributeGroup);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.PreprocessElement
void System::Xml::Schema::Preprocessor::PreprocessElement(::System::Xml::Schema::XmlSchemaElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::PreprocessElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.PreprocessLocalElement
void System::Xml::Schema::Preprocessor::PreprocessLocalElement(::System::Xml::Schema::XmlSchemaElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::PreprocessLocalElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessLocalElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.PreprocessElementContent
void System::Xml::Schema::Preprocessor::PreprocessElementContent(::System::Xml::Schema::XmlSchemaElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::PreprocessElementContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.PreprocessIdentityConstraint
void System::Xml::Schema::Preprocessor::PreprocessIdentityConstraint(::System::Xml::Schema::XmlSchemaIdentityConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::PreprocessIdentityConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessIdentityConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constraint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, constraint);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.PreprocessSimpleType
void System::Xml::Schema::Preprocessor::PreprocessSimpleType(::System::Xml::Schema::XmlSchemaSimpleType* simpleType, bool local) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::PreprocessSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(simpleType), ::il2cpp_utils::ExtractType(local)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, simpleType, local);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.PreprocessComplexType
void System::Xml::Schema::Preprocessor::PreprocessComplexType(::System::Xml::Schema::XmlSchemaComplexType* complexType, bool local) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::PreprocessComplexType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessComplexType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType), ::il2cpp_utils::ExtractType(local)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType, local);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.PreprocessGroup
void System::Xml::Schema::Preprocessor::PreprocessGroup(::System::Xml::Schema::XmlSchemaGroup* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::PreprocessGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.PreprocessNotation
void System::Xml::Schema::Preprocessor::PreprocessNotation(::System::Xml::Schema::XmlSchemaNotation* notation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::PreprocessNotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessNotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, notation);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.PreprocessParticle
void System::Xml::Schema::Preprocessor::PreprocessParticle(::System::Xml::Schema::XmlSchemaParticle* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::PreprocessParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, particle);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.PreprocessAttributes
void System::Xml::Schema::Preprocessor::PreprocessAttributes(::System::Xml::Schema::XmlSchemaObjectCollection* attributes, ::System::Xml::Schema::XmlSchemaAnyAttribute* anyAttribute, ::System::Xml::Schema::XmlSchemaObject* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::PreprocessAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes), ::il2cpp_utils::ExtractType(anyAttribute), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributes, anyAttribute, parent);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.ValidateIdAttribute
void System::Xml::Schema::Preprocessor::ValidateIdAttribute(::System::Xml::Schema::XmlSchemaObject* xso) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::ValidateIdAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateIdAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xso)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xso);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.ValidateNameAttribute
void System::Xml::Schema::Preprocessor::ValidateNameAttribute(::System::Xml::Schema::XmlSchemaObject* xso) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::ValidateNameAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateNameAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xso)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xso);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.ValidateQNameAttribute
void System::Xml::Schema::Preprocessor::ValidateQNameAttribute(::System::Xml::Schema::XmlSchemaObject* xso, ::StringW attributeName, ::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::ValidateQNameAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateQNameAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xso), ::il2cpp_utils::ExtractType(attributeName), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xso, attributeName, value);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.ResolveSchemaLocationUri
::System::Uri* System::Xml::Schema::Preprocessor::ResolveSchemaLocationUri(::System::Xml::Schema::XmlSchema* enclosingSchema, ::StringW location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::ResolveSchemaLocationUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveSchemaLocationUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enclosingSchema), ::il2cpp_utils::ExtractType(location)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, enclosingSchema, location);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.GetSchemaEntity
::Il2CppObject* System::Xml::Schema::Preprocessor::GetSchemaEntity(::System::Uri* ruri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::GetSchemaEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSchemaEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ruri)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, ruri);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.GetChameleonSchema
::System::Xml::Schema::XmlSchema* System::Xml::Schema::Preprocessor::GetChameleonSchema(::StringW targetNamespace, ::System::Xml::Schema::XmlSchema* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::GetChameleonSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChameleonSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetNamespace), ::il2cpp_utils::ExtractType(schema)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchema*, false>(this, ___internal__method, targetNamespace, schema);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.SetParent
void System::Xml::Schema::Preprocessor::SetParent(::System::Xml::Schema::XmlSchemaObject* child, ::System::Xml::Schema::XmlSchemaObject* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::SetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, child, parent);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.PreprocessAnnotation
void System::Xml::Schema::Preprocessor::PreprocessAnnotation(::System::Xml::Schema::XmlSchemaObject* schemaObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::PreprocessAnnotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessAnnotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schemaObject);
}
// Autogenerated method: System.Xml.Schema.Preprocessor.PreprocessAnnotation
void System::Xml::Schema::Preprocessor::PreprocessAnnotation(::System::Xml::Schema::XmlSchemaAnnotation* annotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Preprocessor::PreprocessAnnotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessAnnotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(annotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, annotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.SchemaAttDef
#include "System/Xml/Schema/SchemaAttDef.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttribute
#include "System/Xml/Schema/XmlSchemaAttribute.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.IValidationEventHandling
#include "System/Xml/IValidationEventHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Xml.Schema.SchemaAttDef Empty
::System::Xml::Schema::SchemaAttDef* System::Xml::Schema::SchemaAttDef::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaAttDef*>("System.Xml.Schema", "SchemaAttDef", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Xml.Schema.SchemaAttDef Empty
void System::Xml::Schema::SchemaAttDef::_set_Empty(::System::Xml::Schema::SchemaAttDef* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaAttDef", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String defExpanded
[[deprecated]] ::StringW& System::Xml::Schema::SchemaAttDef::dyn_defExpanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::dyn_defExpanded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defExpanded"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lineNum
[[deprecated]] int& System::Xml::Schema::SchemaAttDef::dyn_lineNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::dyn_lineNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 linePos
[[deprecated]] int& System::Xml::Schema::SchemaAttDef::dyn_linePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::dyn_linePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 valueLineNum
[[deprecated]] int& System::Xml::Schema::SchemaAttDef::dyn_valueLineNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::dyn_valueLineNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueLineNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 valueLinePos
[[deprecated]] int& System::Xml::Schema::SchemaAttDef::dyn_valueLinePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::dyn_valueLinePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueLinePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaAttDef/System.Xml.Schema.Reserve reserved
[[deprecated]] ::System::Xml::Schema::SchemaAttDef::Reserve& System::Xml::Schema::SchemaAttDef::dyn_reserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::dyn_reserved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reserved"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaAttDef::Reserve*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean defaultValueChecked
[[deprecated]] bool& System::Xml::Schema::SchemaAttDef::dyn_defaultValueChecked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::dyn_defaultValueChecked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultValueChecked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaAttribute schemaAttribute
[[deprecated]] ::System::Xml::Schema::XmlSchemaAttribute*& System::Xml::Schema::SchemaAttDef::dyn_schemaAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::dyn_schemaAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaAttribute"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdAttributeInfo.get_Prefix
::StringW System::Xml::Schema::SchemaAttDef::System_Xml_IDtdAttributeInfo_get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdAttributeInfo.get_Prefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdAttributeInfo.get_LocalName
::StringW System::Xml::Schema::SchemaAttDef::System_Xml_IDtdAttributeInfo_get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdAttributeInfo.get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdAttributeInfo.get_LineNumber
int System::Xml::Schema::SchemaAttDef::System_Xml_IDtdAttributeInfo_get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdAttributeInfo.get_LineNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdAttributeInfo.get_LinePosition
int System::Xml::Schema::SchemaAttDef::System_Xml_IDtdAttributeInfo_get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdAttributeInfo.get_LinePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdAttributeInfo.get_IsNonCDataType
bool System::Xml::Schema::SchemaAttDef::System_Xml_IDtdAttributeInfo_get_IsNonCDataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdAttributeInfo.get_IsNonCDataType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdAttributeInfo.get_IsDeclaredInExternal
bool System::Xml::Schema::SchemaAttDef::System_Xml_IDtdAttributeInfo_get_IsDeclaredInExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdAttributeInfo.get_IsDeclaredInExternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdAttributeInfo.get_IsXmlAttribute
bool System::Xml::Schema::SchemaAttDef::System_Xml_IDtdAttributeInfo_get_IsXmlAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdAttributeInfo.get_IsXmlAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdDefaultAttributeInfo.get_DefaultValueExpanded
::StringW System::Xml::Schema::SchemaAttDef::System_Xml_IDtdDefaultAttributeInfo_get_DefaultValueExpanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdDefaultAttributeInfo.get_DefaultValueExpanded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdDefaultAttributeInfo.get_DefaultValueTyped
::Il2CppObject* System::Xml::Schema::SchemaAttDef::System_Xml_IDtdDefaultAttributeInfo_get_DefaultValueTyped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdDefaultAttributeInfo.get_DefaultValueTyped");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdDefaultAttributeInfo.get_ValueLineNumber
int System::Xml::Schema::SchemaAttDef::System_Xml_IDtdDefaultAttributeInfo_get_ValueLineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdDefaultAttributeInfo.get_ValueLineNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.System.Xml.IDtdDefaultAttributeInfo.get_ValueLinePosition
int System::Xml::Schema::SchemaAttDef::System_Xml_IDtdDefaultAttributeInfo_get_ValueLinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::System.Xml.IDtdDefaultAttributeInfo.get_ValueLinePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaAttDef*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.get_LinePosition
int System::Xml::Schema::SchemaAttDef::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::get_LinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.set_LinePosition
void System::Xml::Schema::SchemaAttDef::set_LinePosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::set_LinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.get_LineNumber
int System::Xml::Schema::SchemaAttDef::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::get_LineNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.set_LineNumber
void System::Xml::Schema::SchemaAttDef::set_LineNumber(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::set_LineNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.get_ValueLinePosition
int System::Xml::Schema::SchemaAttDef::get_ValueLinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::get_ValueLinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueLinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.set_ValueLinePosition
void System::Xml::Schema::SchemaAttDef::set_ValueLinePosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::set_ValueLinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ValueLinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.get_ValueLineNumber
int System::Xml::Schema::SchemaAttDef::get_ValueLineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::get_ValueLineNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueLineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.set_ValueLineNumber
void System::Xml::Schema::SchemaAttDef::set_ValueLineNumber(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::set_ValueLineNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ValueLineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.get_DefaultValueExpanded
::StringW System::Xml::Schema::SchemaAttDef::get_DefaultValueExpanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::get_DefaultValueExpanded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultValueExpanded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.set_DefaultValueExpanded
void System::Xml::Schema::SchemaAttDef::set_DefaultValueExpanded(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::set_DefaultValueExpanded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DefaultValueExpanded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.get_TokenizedType
::System::Xml::XmlTokenizedType System::Xml::Schema::SchemaAttDef::get_TokenizedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::get_TokenizedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTokenizedType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.set_TokenizedType
void System::Xml::Schema::SchemaAttDef::set_TokenizedType(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::set_TokenizedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.get_Reserved
::System::Xml::Schema::SchemaAttDef::Reserve System::Xml::Schema::SchemaAttDef::get_Reserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::get_Reserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Reserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaAttDef::Reserve, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.set_Reserved
void System::Xml::Schema::SchemaAttDef::set_Reserved(::System::Xml::Schema::SchemaAttDef::Reserve value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::set_Reserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Reserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.get_DefaultValueChecked
bool System::Xml::Schema::SchemaAttDef::get_DefaultValueChecked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::get_DefaultValueChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultValueChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.get_SchemaAttribute
::System::Xml::Schema::XmlSchemaAttribute* System::Xml::Schema::SchemaAttDef::get_SchemaAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::get_SchemaAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.set_SchemaAttribute
void System::Xml::Schema::SchemaAttDef::set_SchemaAttribute(::System::Xml::Schema::XmlSchemaAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::set_SchemaAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SchemaAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef..cctor
void System::Xml::Schema::SchemaAttDef::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "SchemaAttDef", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.CheckXmlSpace
void System::Xml::Schema::SchemaAttDef::CheckXmlSpace(::System::Xml::IValidationEventHandling* validationEventHandling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::CheckXmlSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckXmlSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(validationEventHandling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, validationEventHandling);
}
// Autogenerated method: System.Xml.Schema.SchemaAttDef.Clone
::System::Xml::Schema::SchemaAttDef* System::Xml::Schema::SchemaAttDef::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaAttDef*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaAttDef/System.Xml.Schema.Reserve
#include "System/Xml/Schema/SchemaAttDef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaAttDef/System.Xml.Schema.Reserve None
::System::Xml::Schema::SchemaAttDef::Reserve System::Xml::Schema::SchemaAttDef::Reserve::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::Reserve::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaAttDef::Reserve>("System.Xml.Schema", "SchemaAttDef/Reserve", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaAttDef/System.Xml.Schema.Reserve None
void System::Xml::Schema::SchemaAttDef::Reserve::_set_None(::System::Xml::Schema::SchemaAttDef::Reserve value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::Reserve::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaAttDef/Reserve", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaAttDef/System.Xml.Schema.Reserve XmlSpace
::System::Xml::Schema::SchemaAttDef::Reserve System::Xml::Schema::SchemaAttDef::Reserve::_get_XmlSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::Reserve::_get_XmlSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaAttDef::Reserve>("System.Xml.Schema", "SchemaAttDef/Reserve", "XmlSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaAttDef/System.Xml.Schema.Reserve XmlSpace
void System::Xml::Schema::SchemaAttDef::Reserve::_set_XmlSpace(::System::Xml::Schema::SchemaAttDef::Reserve value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::Reserve::_set_XmlSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaAttDef/Reserve", "XmlSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaAttDef/System.Xml.Schema.Reserve XmlLang
::System::Xml::Schema::SchemaAttDef::Reserve System::Xml::Schema::SchemaAttDef::Reserve::_get_XmlLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::Reserve::_get_XmlLang");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaAttDef::Reserve>("System.Xml.Schema", "SchemaAttDef/Reserve", "XmlLang"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaAttDef/System.Xml.Schema.Reserve XmlLang
void System::Xml::Schema::SchemaAttDef::Reserve::_set_XmlLang(::System::Xml::Schema::SchemaAttDef::Reserve value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::Reserve::_set_XmlLang");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaAttDef/Reserve", "XmlLang", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Xml::Schema::SchemaAttDef::Reserve::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaAttDef::Reserve::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaBuilder
#include "System/Xml/Schema/SchemaBuilder.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.SchemaBuilder.ProcessElement
bool System::Xml::Schema::SchemaBuilder::ProcessElement(::StringW prefix, ::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaBuilder::ProcessElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, prefix, name, ns);
}
// Autogenerated method: System.Xml.Schema.SchemaBuilder.ProcessAttribute
void System::Xml::Schema::SchemaBuilder::ProcessAttribute(::StringW prefix, ::StringW name, ::StringW ns, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaBuilder::ProcessAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, name, ns, value);
}
// Autogenerated method: System.Xml.Schema.SchemaBuilder.IsContentParsed
bool System::Xml::Schema::SchemaBuilder::IsContentParsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaBuilder::IsContentParsed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaBuilder.ProcessMarkup
void System::Xml::Schema::SchemaBuilder::ProcessMarkup(::ArrayW<::System::Xml::XmlNode*> markup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaBuilder::ProcessMarkup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, markup);
}
// Autogenerated method: System.Xml.Schema.SchemaBuilder.ProcessCData
void System::Xml::Schema::SchemaBuilder::ProcessCData(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaBuilder::ProcessCData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaBuilder.StartChildren
void System::Xml::Schema::SchemaBuilder::StartChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaBuilder::StartChildren");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaBuilder.EndChildren
void System::Xml::Schema::SchemaBuilder::EndChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaBuilder::EndChildren");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaCollectionCompiler
#include "System/Xml/Schema/SchemaCollectionCompiler.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectTable
#include "System/Xml/Schema/XmlSchemaObjectTable.hpp"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.Schema.ValidationEventHandler
#include "System/Xml/Schema/ValidationEventHandler.hpp"
// Including type: System.Xml.Schema.SchemaInfo
#include "System/Xml/Schema/SchemaInfo.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttribute
#include "System/Xml/Schema/XmlSchemaAttribute.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttributeGroup
#include "System/Xml/Schema/XmlSchemaAttributeGroup.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexType
#include "System/Xml/Schema/XmlSchemaComplexType.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.Schema.XmlSchemaElement
#include "System/Xml/Schema/XmlSchemaElement.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
// Including type: System.Xml.Schema.XmlSchemaGroup
#include "System/Xml/Schema/XmlSchemaGroup.hpp"
// Including type: System.Xml.Schema.XmlSchemaParticle
#include "System/Xml/Schema/XmlSchemaParticle.hpp"
// Including type: System.Xml.Schema.XmlSchemaSubstitutionGroupV1Compat
#include "System/Xml/Schema/XmlSchemaSubstitutionGroupV1Compat.hpp"
// Including type: System.Xml.Schema.XmlSchemaSubstitutionGroup
#include "System/Xml/Schema/XmlSchemaSubstitutionGroup.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleContentExtension
#include "System/Xml/Schema/XmlSchemaSimpleContentExtension.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleContentRestriction
#include "System/Xml/Schema/XmlSchemaSimpleContentRestriction.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexContent
#include "System/Xml/Schema/XmlSchemaComplexContent.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexContentExtension
#include "System/Xml/Schema/XmlSchemaComplexContentExtension.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexContentRestriction
#include "System/Xml/Schema/XmlSchemaComplexContentRestriction.hpp"
// Including type: System.Xml.Schema.XmlSchemaGroupRef
#include "System/Xml/Schema/XmlSchemaGroupRef.hpp"
// Including type: System.Xml.Schema.XmlSchemaAll
#include "System/Xml/Schema/XmlSchemaAll.hpp"
// Including type: System.Xml.Schema.XmlSchemaChoice
#include "System/Xml/Schema/XmlSchemaChoice.hpp"
// Including type: System.Xml.Schema.XmlSchemaSequence
#include "System/Xml/Schema/XmlSchemaSequence.hpp"
// Including type: System.Xml.Schema.XmlSchemaAny
#include "System/Xml/Schema/XmlSchemaAny.hpp"
// Including type: System.Xml.Schema.XmlSchemaGroupBase
#include "System/Xml/Schema/XmlSchemaGroupBase.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.Xml.Schema.XmlSchemaContentType
#include "System/Xml/Schema/XmlSchemaContentType.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnyAttribute
#include "System/Xml/Schema/XmlSchemaAnyAttribute.hpp"
// Including type: System.Xml.Schema.XmlSchemaDerivationMethod
#include "System/Xml/Schema/XmlSchemaDerivationMethod.hpp"
// Including type: System.Xml.Schema.XmlSchemaIdentityConstraint
#include "System/Xml/Schema/XmlSchemaIdentityConstraint.hpp"
// Including type: System.Xml.Schema.ContentValidator
#include "System/Xml/Schema/ContentValidator.hpp"
// Including type: System.Xml.Schema.ParticleContentValidator
#include "System/Xml/Schema/ParticleContentValidator.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean compileContentModel
[[deprecated]] bool& System::Xml::Schema::SchemaCollectionCompiler::dyn_compileContentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::dyn_compileContentModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compileContentModel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectTable examplars
[[deprecated]] ::System::Xml::Schema::XmlSchemaObjectTable*& System::Xml::Schema::SchemaCollectionCompiler::dyn_examplars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::dyn_examplars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "examplars"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Stack complexTypeStack
[[deprecated]] ::System::Collections::Stack*& System::Xml::Schema::SchemaCollectionCompiler::dyn_complexTypeStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::dyn_complexTypeStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "complexTypeStack"))->offset;
  return *reinterpret_cast<::System::Collections::Stack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchema schema
[[deprecated]] ::System::Xml::Schema::XmlSchema*& System::Xml::Schema::SchemaCollectionCompiler::dyn_schema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::dyn_schema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schema"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchema**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.Execute
bool System::Xml::Schema::SchemaCollectionCompiler::Execute(::System::Xml::Schema::XmlSchema* schema, ::System::Xml::Schema::SchemaInfo* schemaInfo, bool compileContentModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema), ::il2cpp_utils::ExtractType(schemaInfo), ::il2cpp_utils::ExtractType(compileContentModel)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, schema, schemaInfo, compileContentModel);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.Prepare
void System::Xml::Schema::SchemaCollectionCompiler::Prepare() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::Prepare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Prepare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.Cleanup
void System::Xml::Schema::SchemaCollectionCompiler::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.Cleanup
void System::Xml::Schema::SchemaCollectionCompiler::Cleanup(::System::Xml::Schema::XmlSchema* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "SchemaCollectionCompiler", "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schema);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.Compile
void System::Xml::Schema::SchemaCollectionCompiler::Compile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::Compile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.Output
void System::Xml::Schema::SchemaCollectionCompiler::Output(::System::Xml::Schema::SchemaInfo* schemaInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::Output");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Output", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schemaInfo);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CleanupAttribute
void System::Xml::Schema::SchemaCollectionCompiler::CleanupAttribute(::System::Xml::Schema::XmlSchemaAttribute* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CleanupAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "SchemaCollectionCompiler", "CleanupAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, attribute);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CleanupAttributeGroup
void System::Xml::Schema::SchemaCollectionCompiler::CleanupAttributeGroup(::System::Xml::Schema::XmlSchemaAttributeGroup* attributeGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CleanupAttributeGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "SchemaCollectionCompiler", "CleanupAttributeGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, attributeGroup);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CleanupComplexType
void System::Xml::Schema::SchemaCollectionCompiler::CleanupComplexType(::System::Xml::Schema::XmlSchemaComplexType* complexType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CleanupComplexType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "SchemaCollectionCompiler", "CleanupComplexType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, complexType);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CleanupSimpleType
void System::Xml::Schema::SchemaCollectionCompiler::CleanupSimpleType(::System::Xml::Schema::XmlSchemaSimpleType* simpleType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CleanupSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "SchemaCollectionCompiler", "CleanupSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(simpleType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, simpleType);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CleanupElement
void System::Xml::Schema::SchemaCollectionCompiler::CleanupElement(::System::Xml::Schema::XmlSchemaElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CleanupElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "SchemaCollectionCompiler", "CleanupElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, element);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CleanupAttributes
void System::Xml::Schema::SchemaCollectionCompiler::CleanupAttributes(::System::Xml::Schema::XmlSchemaObjectCollection* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CleanupAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "SchemaCollectionCompiler", "CleanupAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, attributes);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CleanupGroup
void System::Xml::Schema::SchemaCollectionCompiler::CleanupGroup(::System::Xml::Schema::XmlSchemaGroup* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CleanupGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "SchemaCollectionCompiler", "CleanupGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, group);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CleanupParticle
void System::Xml::Schema::SchemaCollectionCompiler::CleanupParticle(::System::Xml::Schema::XmlSchemaParticle* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CleanupParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "SchemaCollectionCompiler", "CleanupParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, particle);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileSubstitutionGroup
void System::Xml::Schema::SchemaCollectionCompiler::CompileSubstitutionGroup(::System::Xml::Schema::XmlSchemaSubstitutionGroupV1Compat* substitutionGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileSubstitutionGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileSubstitutionGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(substitutionGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, substitutionGroup);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CheckSubstitutionGroup
void System::Xml::Schema::SchemaCollectionCompiler::CheckSubstitutionGroup(::System::Xml::Schema::XmlSchemaSubstitutionGroup* substitutionGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CheckSubstitutionGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckSubstitutionGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(substitutionGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, substitutionGroup);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileGroup
void System::Xml::Schema::SchemaCollectionCompiler::CompileGroup(::System::Xml::Schema::XmlSchemaGroup* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileSimpleType
void System::Xml::Schema::SchemaCollectionCompiler::CompileSimpleType(::System::Xml::Schema::XmlSchemaSimpleType* simpleType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(simpleType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, simpleType);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileBaseMemberTypes
::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*> System::Xml::Schema::SchemaCollectionCompiler::CompileBaseMemberTypes(::System::Xml::Schema::XmlSchemaSimpleType* simpleType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileBaseMemberTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileBaseMemberTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(simpleType)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>, false>(this, ___internal__method, simpleType);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CheckUnionType
void System::Xml::Schema::SchemaCollectionCompiler::CheckUnionType(::System::Xml::Schema::XmlSchemaSimpleType* unionMember, ::System::Collections::ArrayList* memberTypeDefinitions, ::System::Xml::Schema::XmlSchemaSimpleType* parentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CheckUnionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckUnionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unionMember), ::il2cpp_utils::ExtractType(memberTypeDefinitions), ::il2cpp_utils::ExtractType(parentType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unionMember, memberTypeDefinitions, parentType);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileComplexType
void System::Xml::Schema::SchemaCollectionCompiler::CompileComplexType(::System::Xml::Schema::XmlSchemaComplexType* complexType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileComplexType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileComplexType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileSimpleContentExtension
void System::Xml::Schema::SchemaCollectionCompiler::CompileSimpleContentExtension(::System::Xml::Schema::XmlSchemaComplexType* complexType, ::System::Xml::Schema::XmlSchemaSimpleContentExtension* simpleExtension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileSimpleContentExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileSimpleContentExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType), ::il2cpp_utils::ExtractType(simpleExtension)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType, simpleExtension);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileSimpleContentRestriction
void System::Xml::Schema::SchemaCollectionCompiler::CompileSimpleContentRestriction(::System::Xml::Schema::XmlSchemaComplexType* complexType, ::System::Xml::Schema::XmlSchemaSimpleContentRestriction* simpleRestriction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileSimpleContentRestriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileSimpleContentRestriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType), ::il2cpp_utils::ExtractType(simpleRestriction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType, simpleRestriction);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileComplexContentExtension
void System::Xml::Schema::SchemaCollectionCompiler::CompileComplexContentExtension(::System::Xml::Schema::XmlSchemaComplexType* complexType, ::System::Xml::Schema::XmlSchemaComplexContent* complexContent, ::System::Xml::Schema::XmlSchemaComplexContentExtension* complexExtension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileComplexContentExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileComplexContentExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType), ::il2cpp_utils::ExtractType(complexContent), ::il2cpp_utils::ExtractType(complexExtension)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType, complexContent, complexExtension);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileComplexContentRestriction
void System::Xml::Schema::SchemaCollectionCompiler::CompileComplexContentRestriction(::System::Xml::Schema::XmlSchemaComplexType* complexType, ::System::Xml::Schema::XmlSchemaComplexContent* complexContent, ::System::Xml::Schema::XmlSchemaComplexContentRestriction* complexRestriction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileComplexContentRestriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileComplexContentRestriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType), ::il2cpp_utils::ExtractType(complexContent), ::il2cpp_utils::ExtractType(complexRestriction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType, complexContent, complexRestriction);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CheckParticleDerivation
void System::Xml::Schema::SchemaCollectionCompiler::CheckParticleDerivation(::System::Xml::Schema::XmlSchemaComplexType* complexType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CheckParticleDerivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckParticleDerivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileContentTypeParticle
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::SchemaCollectionCompiler::CompileContentTypeParticle(::System::Xml::Schema::XmlSchemaParticle* particle, bool substitution) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileContentTypeParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileContentTypeParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle), ::il2cpp_utils::ExtractType(substitution)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaParticle*, false>(this, ___internal__method, particle, substitution);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CannonicalizeParticle
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::SchemaCollectionCompiler::CannonicalizeParticle(::System::Xml::Schema::XmlSchemaParticle* particle, bool root, bool substitution) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CannonicalizeParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CannonicalizeParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(substitution)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaParticle*, false>(this, ___internal__method, particle, root, substitution);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CannonicalizeElement
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::SchemaCollectionCompiler::CannonicalizeElement(::System::Xml::Schema::XmlSchemaElement* element, bool substitution) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CannonicalizeElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CannonicalizeElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(substitution)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaParticle*, false>(this, ___internal__method, element, substitution);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CannonicalizeGroupRef
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::SchemaCollectionCompiler::CannonicalizeGroupRef(::System::Xml::Schema::XmlSchemaGroupRef* groupRef, bool root, bool substitution) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CannonicalizeGroupRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CannonicalizeGroupRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupRef), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(substitution)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaParticle*, false>(this, ___internal__method, groupRef, root, substitution);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CannonicalizeAll
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::SchemaCollectionCompiler::CannonicalizeAll(::System::Xml::Schema::XmlSchemaAll* all, bool root, bool substitution) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CannonicalizeAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CannonicalizeAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(all), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(substitution)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaParticle*, false>(this, ___internal__method, all, root, substitution);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CannonicalizeChoice
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::SchemaCollectionCompiler::CannonicalizeChoice(::System::Xml::Schema::XmlSchemaChoice* choice, bool root, bool substitution) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CannonicalizeChoice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CannonicalizeChoice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(choice), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(substitution)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaParticle*, false>(this, ___internal__method, choice, root, substitution);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CannonicalizeSequence
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::SchemaCollectionCompiler::CannonicalizeSequence(::System::Xml::Schema::XmlSchemaSequence* sequence, bool root, bool substitution) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CannonicalizeSequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CannonicalizeSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequence), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(substitution)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaParticle*, false>(this, ___internal__method, sequence, root, substitution);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.IsValidRestriction
bool System::Xml::Schema::SchemaCollectionCompiler::IsValidRestriction(::System::Xml::Schema::XmlSchemaParticle* derivedParticle, ::System::Xml::Schema::XmlSchemaParticle* baseParticle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::IsValidRestriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidRestriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedParticle), ::il2cpp_utils::ExtractType(baseParticle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedParticle, baseParticle);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.IsElementFromElement
bool System::Xml::Schema::SchemaCollectionCompiler::IsElementFromElement(::System::Xml::Schema::XmlSchemaElement* derivedElement, ::System::Xml::Schema::XmlSchemaElement* baseElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::IsElementFromElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsElementFromElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedElement), ::il2cpp_utils::ExtractType(baseElement)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedElement, baseElement);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.IsElementFromAny
bool System::Xml::Schema::SchemaCollectionCompiler::IsElementFromAny(::System::Xml::Schema::XmlSchemaElement* derivedElement, ::System::Xml::Schema::XmlSchemaAny* baseAny) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::IsElementFromAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsElementFromAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedElement), ::il2cpp_utils::ExtractType(baseAny)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedElement, baseAny);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.IsAnyFromAny
bool System::Xml::Schema::SchemaCollectionCompiler::IsAnyFromAny(::System::Xml::Schema::XmlSchemaAny* derivedAny, ::System::Xml::Schema::XmlSchemaAny* baseAny) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::IsAnyFromAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAnyFromAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedAny), ::il2cpp_utils::ExtractType(baseAny)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedAny, baseAny);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.IsGroupBaseFromAny
bool System::Xml::Schema::SchemaCollectionCompiler::IsGroupBaseFromAny(::System::Xml::Schema::XmlSchemaGroupBase* derivedGroupBase, ::System::Xml::Schema::XmlSchemaAny* baseAny) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::IsGroupBaseFromAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsGroupBaseFromAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedGroupBase), ::il2cpp_utils::ExtractType(baseAny)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedGroupBase, baseAny);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.IsElementFromGroupBase
bool System::Xml::Schema::SchemaCollectionCompiler::IsElementFromGroupBase(::System::Xml::Schema::XmlSchemaElement* derivedElement, ::System::Xml::Schema::XmlSchemaGroupBase* baseGroupBase, bool skipEmptableOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::IsElementFromGroupBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsElementFromGroupBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedElement), ::il2cpp_utils::ExtractType(baseGroupBase), ::il2cpp_utils::ExtractType(skipEmptableOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedElement, baseGroupBase, skipEmptableOnly);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.IsGroupBaseFromGroupBase
bool System::Xml::Schema::SchemaCollectionCompiler::IsGroupBaseFromGroupBase(::System::Xml::Schema::XmlSchemaGroupBase* derivedGroupBase, ::System::Xml::Schema::XmlSchemaGroupBase* baseGroupBase, bool skipEmptableOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::IsGroupBaseFromGroupBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsGroupBaseFromGroupBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedGroupBase), ::il2cpp_utils::ExtractType(baseGroupBase), ::il2cpp_utils::ExtractType(skipEmptableOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedGroupBase, baseGroupBase, skipEmptableOnly);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.IsSequenceFromAll
bool System::Xml::Schema::SchemaCollectionCompiler::IsSequenceFromAll(::System::Xml::Schema::XmlSchemaSequence* derivedSequence, ::System::Xml::Schema::XmlSchemaAll* baseAll) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::IsSequenceFromAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSequenceFromAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedSequence), ::il2cpp_utils::ExtractType(baseAll)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedSequence, baseAll);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.IsSequenceFromChoice
bool System::Xml::Schema::SchemaCollectionCompiler::IsSequenceFromChoice(::System::Xml::Schema::XmlSchemaSequence* derivedSequence, ::System::Xml::Schema::XmlSchemaChoice* baseChoice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::IsSequenceFromChoice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSequenceFromChoice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedSequence), ::il2cpp_utils::ExtractType(baseChoice)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedSequence, baseChoice);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CalculateSequenceRange
void System::Xml::Schema::SchemaCollectionCompiler::CalculateSequenceRange(::System::Xml::Schema::XmlSchemaSequence* sequence, ByRef<::System::Decimal> minOccurs, ByRef<::System::Decimal> maxOccurs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CalculateSequenceRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateSequenceRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequence), ::il2cpp_utils::ExtractIndependentType<::System::Decimal&>(), ::il2cpp_utils::ExtractIndependentType<::System::Decimal&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sequence, byref(minOccurs), byref(maxOccurs));
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.IsValidOccurrenceRangeRestriction
bool System::Xml::Schema::SchemaCollectionCompiler::IsValidOccurrenceRangeRestriction(::System::Xml::Schema::XmlSchemaParticle* derivedParticle, ::System::Xml::Schema::XmlSchemaParticle* baseParticle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::IsValidOccurrenceRangeRestriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidOccurrenceRangeRestriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedParticle), ::il2cpp_utils::ExtractType(baseParticle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedParticle, baseParticle);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.IsValidOccurrenceRangeRestriction
bool System::Xml::Schema::SchemaCollectionCompiler::IsValidOccurrenceRangeRestriction(::System::Decimal minOccurs, ::System::Decimal maxOccurs, ::System::Decimal baseMinOccurs, ::System::Decimal baseMaxOccurs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::IsValidOccurrenceRangeRestriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidOccurrenceRangeRestriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minOccurs), ::il2cpp_utils::ExtractType(maxOccurs), ::il2cpp_utils::ExtractType(baseMinOccurs), ::il2cpp_utils::ExtractType(baseMaxOccurs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, minOccurs, maxOccurs, baseMinOccurs, baseMaxOccurs);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.GetMappingParticle
int System::Xml::Schema::SchemaCollectionCompiler::GetMappingParticle(::System::Xml::Schema::XmlSchemaParticle* particle, ::System::Xml::Schema::XmlSchemaObjectCollection* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::GetMappingParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMappingParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle), ::il2cpp_utils::ExtractType(collection)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, particle, collection);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.IsParticleEmptiable
bool System::Xml::Schema::SchemaCollectionCompiler::IsParticleEmptiable(::System::Xml::Schema::XmlSchemaParticle* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::IsParticleEmptiable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsParticleEmptiable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, particle);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CalculateEffectiveTotalRange
void System::Xml::Schema::SchemaCollectionCompiler::CalculateEffectiveTotalRange(::System::Xml::Schema::XmlSchemaParticle* particle, ByRef<::System::Decimal> minOccurs, ByRef<::System::Decimal> maxOccurs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CalculateEffectiveTotalRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateEffectiveTotalRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle), ::il2cpp_utils::ExtractIndependentType<::System::Decimal&>(), ::il2cpp_utils::ExtractIndependentType<::System::Decimal&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, particle, byref(minOccurs), byref(maxOccurs));
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.PushComplexType
void System::Xml::Schema::SchemaCollectionCompiler::PushComplexType(::System::Xml::Schema::XmlSchemaComplexType* complexType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::PushComplexType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushComplexType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.GetSchemaContentType
::System::Xml::Schema::XmlSchemaContentType System::Xml::Schema::SchemaCollectionCompiler::GetSchemaContentType(::System::Xml::Schema::XmlSchemaComplexType* complexType, ::System::Xml::Schema::XmlSchemaComplexContent* complexContent, ::System::Xml::Schema::XmlSchemaParticle* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::GetSchemaContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSchemaContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType), ::il2cpp_utils::ExtractType(complexContent), ::il2cpp_utils::ExtractType(particle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaContentType, false>(this, ___internal__method, complexType, complexContent, particle);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileAttributeGroup
void System::Xml::Schema::SchemaCollectionCompiler::CompileAttributeGroup(::System::Xml::Schema::XmlSchemaAttributeGroup* attributeGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileAttributeGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileAttributeGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributeGroup);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileLocalAttributes
void System::Xml::Schema::SchemaCollectionCompiler::CompileLocalAttributes(::System::Xml::Schema::XmlSchemaComplexType* baseType, ::System::Xml::Schema::XmlSchemaComplexType* derivedType, ::System::Xml::Schema::XmlSchemaObjectCollection* attributes, ::System::Xml::Schema::XmlSchemaAnyAttribute* anyAttribute, ::System::Xml::Schema::XmlSchemaDerivationMethod derivedBy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileLocalAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileLocalAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseType), ::il2cpp_utils::ExtractType(derivedType), ::il2cpp_utils::ExtractType(attributes), ::il2cpp_utils::ExtractType(anyAttribute), ::il2cpp_utils::ExtractType(derivedBy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseType, derivedType, attributes, anyAttribute, derivedBy);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileAnyAttributeUnion
::System::Xml::Schema::XmlSchemaAnyAttribute* System::Xml::Schema::SchemaCollectionCompiler::CompileAnyAttributeUnion(::System::Xml::Schema::XmlSchemaAnyAttribute* a, ::System::Xml::Schema::XmlSchemaAnyAttribute* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileAnyAttributeUnion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileAnyAttributeUnion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaAnyAttribute*, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileAnyAttributeIntersection
::System::Xml::Schema::XmlSchemaAnyAttribute* System::Xml::Schema::SchemaCollectionCompiler::CompileAnyAttributeIntersection(::System::Xml::Schema::XmlSchemaAnyAttribute* a, ::System::Xml::Schema::XmlSchemaAnyAttribute* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileAnyAttributeIntersection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileAnyAttributeIntersection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaAnyAttribute*, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileAttribute
void System::Xml::Schema::SchemaCollectionCompiler::CompileAttribute(::System::Xml::Schema::XmlSchemaAttribute* xa) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xa)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xa);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileIdentityConstraint
void System::Xml::Schema::SchemaCollectionCompiler::CompileIdentityConstraint(::System::Xml::Schema::XmlSchemaIdentityConstraint* xi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileIdentityConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileIdentityConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xi);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileElement
void System::Xml::Schema::SchemaCollectionCompiler::CompileElement(::System::Xml::Schema::XmlSchemaElement* xe) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xe)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xe);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileComplexContent
::System::Xml::Schema::ContentValidator* System::Xml::Schema::SchemaCollectionCompiler::CompileComplexContent(::System::Xml::Schema::XmlSchemaComplexType* complexType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileComplexContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileComplexContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::ContentValidator*, false>(this, ___internal__method, complexType);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.BuildParticleContentModel
void System::Xml::Schema::SchemaCollectionCompiler::BuildParticleContentModel(::System::Xml::Schema::ParticleContentValidator* contentValidator, ::System::Xml::Schema::XmlSchemaParticle* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::BuildParticleContentModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildParticleContentModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentValidator), ::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, contentValidator, particle);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileParticleElements
void System::Xml::Schema::SchemaCollectionCompiler::CompileParticleElements(::System::Xml::Schema::XmlSchemaComplexType* complexType, ::System::Xml::Schema::XmlSchemaParticle* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileParticleElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileParticleElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType), ::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType, particle);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.CompileCompexTypeElements
void System::Xml::Schema::SchemaCollectionCompiler::CompileCompexTypeElements(::System::Xml::Schema::XmlSchemaComplexType* complexType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::CompileCompexTypeElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileCompexTypeElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.GetSimpleType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::SchemaCollectionCompiler::GetSimpleType(::System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::GetSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.GetComplexType
::System::Xml::Schema::XmlSchemaComplexType* System::Xml::Schema::SchemaCollectionCompiler::GetComplexType(::System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::GetComplexType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComplexType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaComplexType*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionCompiler.GetAnySchemaType
::System::Xml::Schema::XmlSchemaType* System::Xml::Schema::SchemaCollectionCompiler::GetAnySchemaType(::System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionCompiler::GetAnySchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAnySchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaCollectionPreprocessor
#include "System/Xml/Schema/SchemaCollectionPreprocessor.hpp"
// Including type: System.Xml.Schema.SchemaCollectionPreprocessor/System.Xml.Schema.Compositor
#include "System/Xml/Schema/SchemaCollectionPreprocessor_Compositor.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.XmlResolver
#include "System/Xml/XmlResolver.hpp"
// Including type: System.Xml.Schema.XmlSchemaCollection
#include "System/Xml/Schema/XmlSchemaCollection.hpp"
// Including type: System.Xml.Schema.XmlSchemaRedefine
#include "System/Xml/Schema/XmlSchemaRedefine.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaGroup
#include "System/Xml/Schema/XmlSchemaGroup.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttributeGroup
#include "System/Xml/Schema/XmlSchemaAttributeGroup.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexType
#include "System/Xml/Schema/XmlSchemaComplexType.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttribute
#include "System/Xml/Schema/XmlSchemaAttribute.hpp"
// Including type: System.Xml.Schema.XmlSchemaElement
#include "System/Xml/Schema/XmlSchemaElement.hpp"
// Including type: System.Xml.Schema.XmlSchemaIdentityConstraint
#include "System/Xml/Schema/XmlSchemaIdentityConstraint.hpp"
// Including type: System.Xml.Schema.XmlSchemaNotation
#include "System/Xml/Schema/XmlSchemaNotation.hpp"
// Including type: System.Xml.Schema.XmlSchemaParticle
#include "System/Xml/Schema/XmlSchemaParticle.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnyAttribute
#include "System/Xml/Schema/XmlSchemaAnyAttribute.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.Schema.SchemaNames
#include "System/Xml/Schema/SchemaNames.hpp"
// Including type: System.Xml.Schema.ValidationEventHandler
#include "System/Xml/Schema/ValidationEventHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchema schema
[[deprecated]] ::System::Xml::Schema::XmlSchema*& System::Xml::Schema::SchemaCollectionPreprocessor::dyn_schema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::dyn_schema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schema"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchema**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String targetNamespace
[[deprecated]] ::StringW& System::Xml::Schema::SchemaCollectionPreprocessor::dyn_targetNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::dyn_targetNamespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetNamespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean buildinIncluded
[[deprecated]] bool& System::Xml::Schema::SchemaCollectionPreprocessor::dyn_buildinIncluded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::dyn_buildinIncluded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buildinIncluded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaForm elementFormDefault
[[deprecated]] ::System::Xml::Schema::XmlSchemaForm& System::Xml::Schema::SchemaCollectionPreprocessor::dyn_elementFormDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::dyn_elementFormDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementFormDefault"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaForm*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaForm attributeFormDefault
[[deprecated]] ::System::Xml::Schema::XmlSchemaForm& System::Xml::Schema::SchemaCollectionPreprocessor::dyn_attributeFormDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::dyn_attributeFormDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeFormDefault"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaForm*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDerivationMethod blockDefault
[[deprecated]] ::System::Xml::Schema::XmlSchemaDerivationMethod& System::Xml::Schema::SchemaCollectionPreprocessor::dyn_blockDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::dyn_blockDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blockDefault"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDerivationMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDerivationMethod finalDefault
[[deprecated]] ::System::Xml::Schema::XmlSchemaDerivationMethod& System::Xml::Schema::SchemaCollectionPreprocessor::dyn_finalDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::dyn_finalDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finalDefault"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDerivationMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable schemaLocations
[[deprecated]] ::System::Collections::Hashtable*& System::Xml::Schema::SchemaCollectionPreprocessor::dyn_schemaLocations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::dyn_schemaLocations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaLocations"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable referenceNamespaces
[[deprecated]] ::System::Collections::Hashtable*& System::Xml::Schema::SchemaCollectionPreprocessor::dyn_referenceNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::dyn_referenceNamespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referenceNamespaces"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String Xmlns
[[deprecated]] ::StringW& System::Xml::Schema::SchemaCollectionPreprocessor::dyn_Xmlns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::dyn_Xmlns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Xmlns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlResolver xmlResolver
[[deprecated]] ::System::Xml::XmlResolver*& System::Xml::Schema::SchemaCollectionPreprocessor::dyn_xmlResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::dyn_xmlResolver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlResolver"))->offset;
  return *reinterpret_cast<::System::Xml::XmlResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.set_XmlResolver
void System::Xml::Schema::SchemaCollectionPreprocessor::set_XmlResolver(::System::Xml::XmlResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::set_XmlResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XmlResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.Execute
bool System::Xml::Schema::SchemaCollectionPreprocessor::Execute(::System::Xml::Schema::XmlSchema* schema, ::StringW targetNamespace, bool loadExternals, ::System::Xml::Schema::XmlSchemaCollection* xsc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema), ::il2cpp_utils::ExtractType(targetNamespace), ::il2cpp_utils::ExtractType(loadExternals), ::il2cpp_utils::ExtractType(xsc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, schema, targetNamespace, loadExternals, xsc);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.Cleanup
void System::Xml::Schema::SchemaCollectionPreprocessor::Cleanup(::System::Xml::Schema::XmlSchema* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schema);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.LoadExternals
void System::Xml::Schema::SchemaCollectionPreprocessor::LoadExternals(::System::Xml::Schema::XmlSchema* schema, ::System::Xml::Schema::XmlSchemaCollection* xsc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::LoadExternals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadExternals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema), ::il2cpp_utils::ExtractType(xsc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schema, xsc);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.BuildRefNamespaces
void System::Xml::Schema::SchemaCollectionPreprocessor::BuildRefNamespaces(::System::Xml::Schema::XmlSchema* schema) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::BuildRefNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildRefNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schema);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.Preprocess
void System::Xml::Schema::SchemaCollectionPreprocessor::Preprocess(::System::Xml::Schema::XmlSchema* schema, ::StringW targetNamespace, ::System::Xml::Schema::SchemaCollectionPreprocessor::Compositor compositor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::Preprocess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Preprocess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema), ::il2cpp_utils::ExtractType(targetNamespace), ::il2cpp_utils::ExtractType(compositor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schema, targetNamespace, compositor);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessRedefine
void System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessRedefine(::System::Xml::Schema::XmlSchemaRedefine* redefine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessRedefine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessRedefine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(redefine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, redefine);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.CountGroupSelfReference
int System::Xml::Schema::SchemaCollectionPreprocessor::CountGroupSelfReference(::System::Xml::Schema::XmlSchemaObjectCollection* items, ::System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::CountGroupSelfReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CountGroupSelfReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(items), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, items, name);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.CheckRefinedGroup
void System::Xml::Schema::SchemaCollectionPreprocessor::CheckRefinedGroup(::System::Xml::Schema::XmlSchemaGroup* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::CheckRefinedGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRefinedGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.CheckRefinedAttributeGroup
void System::Xml::Schema::SchemaCollectionPreprocessor::CheckRefinedAttributeGroup(::System::Xml::Schema::XmlSchemaAttributeGroup* attributeGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::CheckRefinedAttributeGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRefinedAttributeGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributeGroup);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.CheckRefinedSimpleType
void System::Xml::Schema::SchemaCollectionPreprocessor::CheckRefinedSimpleType(::System::Xml::Schema::XmlSchemaSimpleType* stype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::CheckRefinedSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRefinedSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stype)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stype);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.CheckRefinedComplexType
void System::Xml::Schema::SchemaCollectionPreprocessor::CheckRefinedComplexType(::System::Xml::Schema::XmlSchemaComplexType* ctype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::CheckRefinedComplexType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRefinedComplexType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctype)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ctype);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessAttribute
void System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessAttribute(::System::Xml::Schema::XmlSchemaAttribute* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessLocalAttribute
void System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessLocalAttribute(::System::Xml::Schema::XmlSchemaAttribute* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessLocalAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessLocalAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessAttributeContent
void System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessAttributeContent(::System::Xml::Schema::XmlSchemaAttribute* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessAttributeContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessAttributeContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessAttributeGroup
void System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessAttributeGroup(::System::Xml::Schema::XmlSchemaAttributeGroup* attributeGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessAttributeGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessAttributeGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributeGroup);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessElement
void System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessElement(::System::Xml::Schema::XmlSchemaElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessLocalElement
void System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessLocalElement(::System::Xml::Schema::XmlSchemaElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessLocalElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessLocalElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessElementContent
void System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessElementContent(::System::Xml::Schema::XmlSchemaElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessElementContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessIdentityConstraint
void System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessIdentityConstraint(::System::Xml::Schema::XmlSchemaIdentityConstraint* constraint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessIdentityConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessIdentityConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constraint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, constraint);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessSimpleType
void System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessSimpleType(::System::Xml::Schema::XmlSchemaSimpleType* simpleType, bool local) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(simpleType), ::il2cpp_utils::ExtractType(local)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, simpleType, local);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessComplexType
void System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessComplexType(::System::Xml::Schema::XmlSchemaComplexType* complexType, bool local) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessComplexType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessComplexType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType), ::il2cpp_utils::ExtractType(local)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType, local);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessGroup
void System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessGroup(::System::Xml::Schema::XmlSchemaGroup* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessNotation
void System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessNotation(::System::Xml::Schema::XmlSchemaNotation* notation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessNotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessNotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, notation);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessParticle
void System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessParticle(::System::Xml::Schema::XmlSchemaParticle* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, particle);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessAttributes
void System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessAttributes(::System::Xml::Schema::XmlSchemaObjectCollection* attributes, ::System::Xml::Schema::XmlSchemaAnyAttribute* anyAttribute, ::System::Xml::Schema::XmlSchemaObject* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes), ::il2cpp_utils::ExtractType(anyAttribute), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributes, anyAttribute, parent);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.ValidateIdAttribute
void System::Xml::Schema::SchemaCollectionPreprocessor::ValidateIdAttribute(::System::Xml::Schema::XmlSchemaObject* xso) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::ValidateIdAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateIdAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xso)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xso);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.ValidateNameAttribute
void System::Xml::Schema::SchemaCollectionPreprocessor::ValidateNameAttribute(::System::Xml::Schema::XmlSchemaObject* xso) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::ValidateNameAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateNameAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xso)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xso);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.ValidateQNameAttribute
void System::Xml::Schema::SchemaCollectionPreprocessor::ValidateQNameAttribute(::System::Xml::Schema::XmlSchemaObject* xso, ::StringW attributeName, ::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::ValidateQNameAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateQNameAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xso), ::il2cpp_utils::ExtractType(attributeName), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xso, attributeName, value);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.SetParent
void System::Xml::Schema::SchemaCollectionPreprocessor::SetParent(::System::Xml::Schema::XmlSchemaObject* child, ::System::Xml::Schema::XmlSchemaObject* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::SetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, child, parent);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessAnnotation
void System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessAnnotation(::System::Xml::Schema::XmlSchemaObject* schemaObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::PreprocessAnnotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreprocessAnnotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schemaObject);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.ResolveSchemaLocationUri
::System::Uri* System::Xml::Schema::SchemaCollectionPreprocessor::ResolveSchemaLocationUri(::System::Xml::Schema::XmlSchema* enclosingSchema, ::StringW location) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::ResolveSchemaLocationUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveSchemaLocationUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enclosingSchema), ::il2cpp_utils::ExtractType(location)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method, enclosingSchema, location);
}
// Autogenerated method: System.Xml.Schema.SchemaCollectionPreprocessor.GetSchemaEntity
::System::IO::Stream* System::Xml::Schema::SchemaCollectionPreprocessor::GetSchemaEntity(::System::Uri* ruri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::GetSchemaEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSchemaEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ruri)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, ruri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaCollectionPreprocessor/System.Xml.Schema.Compositor
#include "System/Xml/Schema/SchemaCollectionPreprocessor_Compositor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaCollectionPreprocessor/System.Xml.Schema.Compositor Root
::System::Xml::Schema::SchemaCollectionPreprocessor::Compositor System::Xml::Schema::SchemaCollectionPreprocessor::Compositor::_get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::Compositor::_get_Root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaCollectionPreprocessor::Compositor>("System.Xml.Schema", "SchemaCollectionPreprocessor/Compositor", "Root"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaCollectionPreprocessor/System.Xml.Schema.Compositor Root
void System::Xml::Schema::SchemaCollectionPreprocessor::Compositor::_set_Root(::System::Xml::Schema::SchemaCollectionPreprocessor::Compositor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::Compositor::_set_Root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaCollectionPreprocessor/Compositor", "Root", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaCollectionPreprocessor/System.Xml.Schema.Compositor Include
::System::Xml::Schema::SchemaCollectionPreprocessor::Compositor System::Xml::Schema::SchemaCollectionPreprocessor::Compositor::_get_Include() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::Compositor::_get_Include");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaCollectionPreprocessor::Compositor>("System.Xml.Schema", "SchemaCollectionPreprocessor/Compositor", "Include"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaCollectionPreprocessor/System.Xml.Schema.Compositor Include
void System::Xml::Schema::SchemaCollectionPreprocessor::Compositor::_set_Include(::System::Xml::Schema::SchemaCollectionPreprocessor::Compositor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::Compositor::_set_Include");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaCollectionPreprocessor/Compositor", "Include", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaCollectionPreprocessor/System.Xml.Schema.Compositor Import
::System::Xml::Schema::SchemaCollectionPreprocessor::Compositor System::Xml::Schema::SchemaCollectionPreprocessor::Compositor::_get_Import() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::Compositor::_get_Import");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaCollectionPreprocessor::Compositor>("System.Xml.Schema", "SchemaCollectionPreprocessor/Compositor", "Import"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaCollectionPreprocessor/System.Xml.Schema.Compositor Import
void System::Xml::Schema::SchemaCollectionPreprocessor::Compositor::_set_Import(::System::Xml::Schema::SchemaCollectionPreprocessor::Compositor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::Compositor::_set_Import");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaCollectionPreprocessor/Compositor", "Import", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Xml::Schema::SchemaCollectionPreprocessor::Compositor::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaCollectionPreprocessor::Compositor::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.SchemaDeclBase
#include "System/Xml/Schema/SchemaDeclBase.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Xml.XmlQualifiedName name
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaDeclBase::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String prefix
[[deprecated]] ::StringW& System::Xml::Schema::SchemaDeclBase::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean isDeclaredInExternal
[[deprecated]] bool& System::Xml::Schema::SchemaDeclBase::dyn_isDeclaredInExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_isDeclaredInExternal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDeclaredInExternal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.Schema.SchemaDeclBase/System.Xml.Schema.Use presence
[[deprecated]] ::System::Xml::Schema::SchemaDeclBase::Use& System::Xml::Schema::SchemaDeclBase::dyn_presence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_presence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "presence"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaDeclBase::Use*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.Schema.XmlSchemaType schemaType
[[deprecated]] ::System::Xml::Schema::XmlSchemaType*& System::Xml::Schema::SchemaDeclBase::dyn_schemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_schemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.Schema.XmlSchemaDatatype datatype
[[deprecated]] ::System::Xml::Schema::XmlSchemaDatatype*& System::Xml::Schema::SchemaDeclBase::dyn_datatype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_datatype");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "datatype"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDatatype**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String defaultValueRaw
[[deprecated]] ::StringW& System::Xml::Schema::SchemaDeclBase::dyn_defaultValueRaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_defaultValueRaw");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultValueRaw"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Object defaultValueTyped
[[deprecated]] ::Il2CppObject*& System::Xml::Schema::SchemaDeclBase::dyn_defaultValueTyped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_defaultValueTyped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultValueTyped"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int64 maxLength
[[deprecated]] int64_t& System::Xml::Schema::SchemaDeclBase::dyn_maxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_maxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxLength"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int64 minLength
[[deprecated]] int64_t& System::Xml::Schema::SchemaDeclBase::dyn_minLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_minLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minLength"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<System.String> values
[[deprecated]] ::System::Collections::Generic::List_1<::StringW>*& System::Xml::Schema::SchemaDeclBase::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.get_Name
::System::Xml::XmlQualifiedName* System::Xml::Schema::SchemaDeclBase::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.set_Name
void System::Xml::Schema::SchemaDeclBase::set_Name(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.get_Prefix
::StringW System::Xml::Schema::SchemaDeclBase::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.set_Prefix
void System::Xml::Schema::SchemaDeclBase::set_Prefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::set_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.get_IsDeclaredInExternal
bool System::Xml::Schema::SchemaDeclBase::get_IsDeclaredInExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::get_IsDeclaredInExternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDeclaredInExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.set_IsDeclaredInExternal
void System::Xml::Schema::SchemaDeclBase::set_IsDeclaredInExternal(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::set_IsDeclaredInExternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsDeclaredInExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.get_Presence
::System::Xml::Schema::SchemaDeclBase::Use System::Xml::Schema::SchemaDeclBase::get_Presence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::get_Presence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Presence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaDeclBase::Use, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.set_Presence
void System::Xml::Schema::SchemaDeclBase::set_Presence(::System::Xml::Schema::SchemaDeclBase::Use value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::set_Presence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Presence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.get_MaxLength
int64_t System::Xml::Schema::SchemaDeclBase::get_MaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::get_MaxLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.set_MaxLength
void System::Xml::Schema::SchemaDeclBase::set_MaxLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::set_MaxLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.get_MinLength
int64_t System::Xml::Schema::SchemaDeclBase::get_MinLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::get_MinLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.set_MinLength
void System::Xml::Schema::SchemaDeclBase::set_MinLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::set_MinLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MinLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.get_SchemaType
::System::Xml::Schema::XmlSchemaType* System::Xml::Schema::SchemaDeclBase::get_SchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::get_SchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.set_SchemaType
void System::Xml::Schema::SchemaDeclBase::set_SchemaType(::System::Xml::Schema::XmlSchemaType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::set_SchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.get_Datatype
::System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::SchemaDeclBase::get_Datatype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::get_Datatype");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Datatype", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaDatatype*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.set_Datatype
void System::Xml::Schema::SchemaDeclBase::set_Datatype(::System::Xml::Schema::XmlSchemaDatatype* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::set_Datatype");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Datatype", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.get_Values
::System::Collections::Generic::List_1<::StringW>* System::Xml::Schema::SchemaDeclBase::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::get_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.set_Values
void System::Xml::Schema::SchemaDeclBase::set_Values(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::set_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.get_DefaultValueRaw
::StringW System::Xml::Schema::SchemaDeclBase::get_DefaultValueRaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::get_DefaultValueRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultValueRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.set_DefaultValueRaw
void System::Xml::Schema::SchemaDeclBase::set_DefaultValueRaw(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::set_DefaultValueRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DefaultValueRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.get_DefaultValueTyped
::Il2CppObject* System::Xml::Schema::SchemaDeclBase::get_DefaultValueTyped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::get_DefaultValueTyped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultValueTyped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.set_DefaultValueTyped
void System::Xml::Schema::SchemaDeclBase::set_DefaultValueTyped(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::set_DefaultValueTyped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DefaultValueTyped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.AddValue
void System::Xml::Schema::SchemaDeclBase::AddValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.CheckEnumeration
bool System::Xml::Schema::SchemaDeclBase::CheckEnumeration(::Il2CppObject* pVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::CheckEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pVal)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pVal);
}
// Autogenerated method: System.Xml.Schema.SchemaDeclBase.CheckValue
bool System::Xml::Schema::SchemaDeclBase::CheckValue(::Il2CppObject* pVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::CheckValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pVal)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pVal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaDeclBase/System.Xml.Schema.Use
#include "System/Xml/Schema/SchemaDeclBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaDeclBase/System.Xml.Schema.Use Default
::System::Xml::Schema::SchemaDeclBase::Use System::Xml::Schema::SchemaDeclBase::Use::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaDeclBase::Use>("System.Xml.Schema", "SchemaDeclBase/Use", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaDeclBase/System.Xml.Schema.Use Default
void System::Xml::Schema::SchemaDeclBase::Use::_set_Default(::System::Xml::Schema::SchemaDeclBase::Use value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaDeclBase/Use", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaDeclBase/System.Xml.Schema.Use Required
::System::Xml::Schema::SchemaDeclBase::Use System::Xml::Schema::SchemaDeclBase::Use::_get_Required() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_get_Required");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaDeclBase::Use>("System.Xml.Schema", "SchemaDeclBase/Use", "Required"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaDeclBase/System.Xml.Schema.Use Required
void System::Xml::Schema::SchemaDeclBase::Use::_set_Required(::System::Xml::Schema::SchemaDeclBase::Use value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_set_Required");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaDeclBase/Use", "Required", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaDeclBase/System.Xml.Schema.Use Implied
::System::Xml::Schema::SchemaDeclBase::Use System::Xml::Schema::SchemaDeclBase::Use::_get_Implied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_get_Implied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaDeclBase::Use>("System.Xml.Schema", "SchemaDeclBase/Use", "Implied"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaDeclBase/System.Xml.Schema.Use Implied
void System::Xml::Schema::SchemaDeclBase::Use::_set_Implied(::System::Xml::Schema::SchemaDeclBase::Use value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_set_Implied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaDeclBase/Use", "Implied", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaDeclBase/System.Xml.Schema.Use Fixed
::System::Xml::Schema::SchemaDeclBase::Use System::Xml::Schema::SchemaDeclBase::Use::_get_Fixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_get_Fixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaDeclBase::Use>("System.Xml.Schema", "SchemaDeclBase/Use", "Fixed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaDeclBase/System.Xml.Schema.Use Fixed
void System::Xml::Schema::SchemaDeclBase::Use::_set_Fixed(::System::Xml::Schema::SchemaDeclBase::Use value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_set_Fixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaDeclBase/Use", "Fixed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaDeclBase/System.Xml.Schema.Use RequiredFixed
::System::Xml::Schema::SchemaDeclBase::Use System::Xml::Schema::SchemaDeclBase::Use::_get_RequiredFixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_get_RequiredFixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaDeclBase::Use>("System.Xml.Schema", "SchemaDeclBase/Use", "RequiredFixed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaDeclBase/System.Xml.Schema.Use RequiredFixed
void System::Xml::Schema::SchemaDeclBase::Use::_set_RequiredFixed(::System::Xml::Schema::SchemaDeclBase::Use value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::_set_RequiredFixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaDeclBase/Use", "RequiredFixed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Xml::Schema::SchemaDeclBase::Use::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaDeclBase::Use::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaElementDecl
#include "System/Xml/Schema/SchemaElementDecl.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.SchemaAttDef
#include "System/Xml/Schema/SchemaAttDef.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.IDtdDefaultAttributeInfo
#include "System/Xml/IDtdDefaultAttributeInfo.hpp"
// Including type: System.Xml.Schema.ContentValidator
#include "System/Xml/Schema/ContentValidator.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnyAttribute
#include "System/Xml/Schema/XmlSchemaAnyAttribute.hpp"
// Including type: System.Xml.Schema.CompiledIdentityConstraint
#include "System/Xml/Schema/CompiledIdentityConstraint.hpp"
// Including type: System.Xml.Schema.XmlSchemaElement
#include "System/Xml/Schema/XmlSchemaElement.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Xml.IDtdAttributeInfo
#include "System/Xml/IDtdAttributeInfo.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Xml.Schema.SchemaElementDecl Empty
::System::Xml::Schema::SchemaElementDecl* System::Xml::Schema::SchemaElementDecl::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaElementDecl*>("System.Xml.Schema", "SchemaElementDecl", "Empty"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Xml.Schema.SchemaElementDecl Empty
void System::Xml::Schema::SchemaElementDecl::_set_Empty(::System::Xml::Schema::SchemaElementDecl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaElementDecl", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.XmlQualifiedName,System.Xml.Schema.SchemaAttDef> attdefs
[[deprecated]] ::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaAttDef*>*& System::Xml::Schema::SchemaElementDecl::dyn_attdefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_attdefs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attdefs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaAttDef*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Xml.IDtdDefaultAttributeInfo> defaultAttdefs
[[deprecated]] ::System::Collections::Generic::List_1<::System::Xml::IDtdDefaultAttributeInfo*>*& System::Xml::Schema::SchemaElementDecl::dyn_defaultAttdefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_defaultAttdefs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultAttdefs"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Xml::IDtdDefaultAttributeInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isIdDeclared
[[deprecated]] bool& System::Xml::Schema::SchemaElementDecl::dyn_isIdDeclared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_isIdDeclared");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isIdDeclared"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasNonCDataAttribute
[[deprecated]] bool& System::Xml::Schema::SchemaElementDecl::dyn_hasNonCDataAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_hasNonCDataAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasNonCDataAttribute"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isAbstract
[[deprecated]] bool& System::Xml::Schema::SchemaElementDecl::dyn_isAbstract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_isAbstract");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isAbstract"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isNillable
[[deprecated]] bool& System::Xml::Schema::SchemaElementDecl::dyn_isNillable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_isNillable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isNillable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasRequiredAttribute
[[deprecated]] bool& System::Xml::Schema::SchemaElementDecl::dyn_hasRequiredAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_hasRequiredAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasRequiredAttribute"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isNotationDeclared
[[deprecated]] bool& System::Xml::Schema::SchemaElementDecl::dyn_isNotationDeclared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_isNotationDeclared");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isNotationDeclared"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName> prohibitedAttributes
[[deprecated]] ::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::XmlQualifiedName*>*& System::Xml::Schema::SchemaElementDecl::dyn_prohibitedAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_prohibitedAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prohibitedAttributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::XmlQualifiedName*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ContentValidator contentValidator
[[deprecated]] ::System::Xml::Schema::ContentValidator*& System::Xml::Schema::SchemaElementDecl::dyn_contentValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_contentValidator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentValidator"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::ContentValidator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaAnyAttribute anyAttribute
[[deprecated]] ::System::Xml::Schema::XmlSchemaAnyAttribute*& System::Xml::Schema::SchemaElementDecl::dyn_anyAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_anyAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anyAttribute"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaAnyAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaDerivationMethod block
[[deprecated]] ::System::Xml::Schema::XmlSchemaDerivationMethod& System::Xml::Schema::SchemaElementDecl::dyn_block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_block");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "block"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDerivationMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.CompiledIdentityConstraint[] constraints
[[deprecated]] ::ArrayW<::System::Xml::Schema::CompiledIdentityConstraint*>& System::Xml::Schema::SchemaElementDecl::dyn_constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_constraints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constraints"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::CompiledIdentityConstraint*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaElement schemaElement
[[deprecated]] ::System::Xml::Schema::XmlSchemaElement*& System::Xml::Schema::SchemaElementDecl::dyn_schemaElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::dyn_schemaElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaElement"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.System.Xml.IDtdAttributeListInfo.get_HasNonCDataAttributes
bool System::Xml::Schema::SchemaElementDecl::System_Xml_IDtdAttributeListInfo_get_HasNonCDataAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::System.Xml.IDtdAttributeListInfo.get_HasNonCDataAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaElementDecl*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_IsIdDeclared
bool System::Xml::Schema::SchemaElementDecl::get_IsIdDeclared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_IsIdDeclared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsIdDeclared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.set_IsIdDeclared
void System::Xml::Schema::SchemaElementDecl::set_IsIdDeclared(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::set_IsIdDeclared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsIdDeclared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_HasNonCDataAttribute
bool System::Xml::Schema::SchemaElementDecl::get_HasNonCDataAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_HasNonCDataAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasNonCDataAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.set_HasNonCDataAttribute
void System::Xml::Schema::SchemaElementDecl::set_HasNonCDataAttribute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::set_HasNonCDataAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HasNonCDataAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_IsAbstract
bool System::Xml::Schema::SchemaElementDecl::get_IsAbstract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_IsAbstract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAbstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.set_IsAbstract
void System::Xml::Schema::SchemaElementDecl::set_IsAbstract(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::set_IsAbstract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsAbstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_IsNillable
bool System::Xml::Schema::SchemaElementDecl::get_IsNillable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_IsNillable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNillable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.set_IsNillable
void System::Xml::Schema::SchemaElementDecl::set_IsNillable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::set_IsNillable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsNillable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_Block
::System::Xml::Schema::XmlSchemaDerivationMethod System::Xml::Schema::SchemaElementDecl::get_Block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaDerivationMethod, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.set_Block
void System::Xml::Schema::SchemaElementDecl::set_Block(::System::Xml::Schema::XmlSchemaDerivationMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::set_Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_IsNotationDeclared
bool System::Xml::Schema::SchemaElementDecl::get_IsNotationDeclared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_IsNotationDeclared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNotationDeclared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.set_IsNotationDeclared
void System::Xml::Schema::SchemaElementDecl::set_IsNotationDeclared(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::set_IsNotationDeclared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsNotationDeclared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_HasDefaultAttribute
bool System::Xml::Schema::SchemaElementDecl::get_HasDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_HasDefaultAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_HasRequiredAttribute
bool System::Xml::Schema::SchemaElementDecl::get_HasRequiredAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_HasRequiredAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasRequiredAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_ContentValidator
::System::Xml::Schema::ContentValidator* System::Xml::Schema::SchemaElementDecl::get_ContentValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_ContentValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::ContentValidator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.set_ContentValidator
void System::Xml::Schema::SchemaElementDecl::set_ContentValidator(::System::Xml::Schema::ContentValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::set_ContentValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_AnyAttribute
::System::Xml::Schema::XmlSchemaAnyAttribute* System::Xml::Schema::SchemaElementDecl::get_AnyAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_AnyAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AnyAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaAnyAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.set_AnyAttribute
void System::Xml::Schema::SchemaElementDecl::set_AnyAttribute(::System::Xml::Schema::XmlSchemaAnyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::set_AnyAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AnyAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_Constraints
::ArrayW<::System::Xml::Schema::CompiledIdentityConstraint*> System::Xml::Schema::SchemaElementDecl::get_Constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_Constraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Constraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Xml::Schema::CompiledIdentityConstraint*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.set_Constraints
void System::Xml::Schema::SchemaElementDecl::set_Constraints(::ArrayW<::System::Xml::Schema::CompiledIdentityConstraint*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::set_Constraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Constraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_SchemaElement
::System::Xml::Schema::XmlSchemaElement* System::Xml::Schema::SchemaElementDecl::get_SchemaElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_SchemaElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.set_SchemaElement
void System::Xml::Schema::SchemaElementDecl::set_SchemaElement(::System::Xml::Schema::XmlSchemaElement* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::set_SchemaElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SchemaElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_DefaultAttDefs
::System::Collections::Generic::IList_1<::System::Xml::IDtdDefaultAttributeInfo*>* System::Xml::Schema::SchemaElementDecl::get_DefaultAttDefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_DefaultAttDefs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultAttDefs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IList_1<::System::Xml::IDtdDefaultAttributeInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_AttDefs
::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaAttDef*>* System::Xml::Schema::SchemaElementDecl::get_AttDefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_AttDefs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AttDefs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaAttDef*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.get_ProhibitedAttributes
::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::XmlQualifiedName*>* System::Xml::Schema::SchemaElementDecl::get_ProhibitedAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::get_ProhibitedAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProhibitedAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::XmlQualifiedName*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl..cctor
void System::Xml::Schema::SchemaElementDecl::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "SchemaElementDecl", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.CreateAnyTypeElementDecl
::System::Xml::Schema::SchemaElementDecl* System::Xml::Schema::SchemaElementDecl::CreateAnyTypeElementDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::CreateAnyTypeElementDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "SchemaElementDecl", "CreateAnyTypeElementDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaElementDecl*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.System.Xml.IDtdAttributeListInfo.LookupAttribute
::System::Xml::IDtdAttributeInfo* System::Xml::Schema::SchemaElementDecl::System_Xml_IDtdAttributeListInfo_LookupAttribute(::StringW prefix, ::StringW localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::System.Xml.IDtdAttributeListInfo.LookupAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaElementDecl*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdAttributeInfo*, false>(this, ___internal__method, prefix, localName);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.System.Xml.IDtdAttributeListInfo.LookupDefaultAttributes
::System::Collections::Generic::IEnumerable_1<::System::Xml::IDtdDefaultAttributeInfo*>* System::Xml::Schema::SchemaElementDecl::System_Xml_IDtdAttributeListInfo_LookupDefaultAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::System.Xml.IDtdAttributeListInfo.LookupDefaultAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaElementDecl*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Xml::IDtdDefaultAttributeInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.Clone
::System::Xml::Schema::SchemaElementDecl* System::Xml::Schema::SchemaElementDecl::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaElementDecl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.AddAttDef
void System::Xml::Schema::SchemaElementDecl::AddAttDef(::System::Xml::Schema::SchemaAttDef* attdef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::AddAttDef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttDef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attdef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attdef);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.GetAttDef
::System::Xml::Schema::SchemaAttDef* System::Xml::Schema::SchemaElementDecl::GetAttDef(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::GetAttDef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttDef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaAttDef*, false>(this, ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.SchemaElementDecl.CheckAttributes
void System::Xml::Schema::SchemaElementDecl::CheckAttributes(::System::Collections::Hashtable* presence, bool standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaElementDecl::CheckAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(presence), ::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, presence, standalone);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaEntity
#include "System/Xml/Schema/SchemaEntity.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName qname
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaEntity::dyn_qname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_qname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qname"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String url
[[deprecated]] ::StringW& System::Xml::Schema::SchemaEntity::dyn_url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_url");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "url"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String pubid
[[deprecated]] ::StringW& System::Xml::Schema::SchemaEntity::dyn_pubid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_pubid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pubid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String text
[[deprecated]] ::StringW& System::Xml::Schema::SchemaEntity::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName ndata
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaEntity::dyn_ndata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_ndata");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ndata"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lineNumber
[[deprecated]] int& System::Xml::Schema::SchemaEntity::dyn_lineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_lineNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 linePosition
[[deprecated]] int& System::Xml::Schema::SchemaEntity::dyn_linePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_linePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isParameter
[[deprecated]] bool& System::Xml::Schema::SchemaEntity::dyn_isParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_isParameter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isParameter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isExternal
[[deprecated]] bool& System::Xml::Schema::SchemaEntity::dyn_isExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_isExternal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isExternal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean parsingInProgress
[[deprecated]] bool& System::Xml::Schema::SchemaEntity::dyn_parsingInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_parsingInProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parsingInProgress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isDeclaredInExternal
[[deprecated]] bool& System::Xml::Schema::SchemaEntity::dyn_isDeclaredInExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_isDeclaredInExternal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDeclaredInExternal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String baseURI
[[deprecated]] ::StringW& System::Xml::Schema::SchemaEntity::dyn_baseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_baseURI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseURI"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String declaredURI
[[deprecated]] ::StringW& System::Xml::Schema::SchemaEntity::dyn_declaredURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::dyn_declaredURI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "declaredURI"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_Name
::StringW System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_IsExternal
bool System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_IsExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_IsExternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_IsDeclaredInExternal
bool System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_IsDeclaredInExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_IsDeclaredInExternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_IsUnparsedEntity
bool System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_IsUnparsedEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_IsUnparsedEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_IsParameterEntity
bool System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_IsParameterEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_IsParameterEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_BaseUriString
::StringW System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_BaseUriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_BaseUriString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_DeclaredUriString
::StringW System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_DeclaredUriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_DeclaredUriString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_SystemId
::StringW System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_SystemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_SystemId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_PublicId
::StringW System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_PublicId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_PublicId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_Text
::StringW System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_Text");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_LineNumber
int System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_LineNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.System.Xml.IDtdEntityInfo.get_LinePosition
int System::Xml::Schema::SchemaEntity::System_Xml_IDtdEntityInfo_get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::System.Xml.IDtdEntityInfo.get_LinePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaEntity*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_Name
::System::Xml::XmlQualifiedName* System::Xml::Schema::SchemaEntity::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_Url
::StringW System::Xml::Schema::SchemaEntity::get_Url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_Url");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Url", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_Url
void System::Xml::Schema::SchemaEntity::set_Url(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_Url");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Url", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_Pubid
::StringW System::Xml::Schema::SchemaEntity::get_Pubid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_Pubid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pubid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_Pubid
void System::Xml::Schema::SchemaEntity::set_Pubid(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_Pubid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pubid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_IsExternal
bool System::Xml::Schema::SchemaEntity::get_IsExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_IsExternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_IsExternal
void System::Xml::Schema::SchemaEntity::set_IsExternal(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_IsExternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_DeclaredInExternal
bool System::Xml::Schema::SchemaEntity::get_DeclaredInExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_DeclaredInExternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaredInExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_DeclaredInExternal
void System::Xml::Schema::SchemaEntity::set_DeclaredInExternal(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_DeclaredInExternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DeclaredInExternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_NData
::System::Xml::XmlQualifiedName* System::Xml::Schema::SchemaEntity::get_NData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_NData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_NData
void System::Xml::Schema::SchemaEntity::set_NData(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_NData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_Text
::StringW System::Xml::Schema::SchemaEntity::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_Text
void System::Xml::Schema::SchemaEntity::set_Text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_Line
int System::Xml::Schema::SchemaEntity::get_Line() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_Line");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Line", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_Line
void System::Xml::Schema::SchemaEntity::set_Line(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_Line");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Line", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_Pos
int System::Xml::Schema::SchemaEntity::get_Pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_Pos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_Pos
void System::Xml::Schema::SchemaEntity::set_Pos(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_Pos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_BaseURI
::StringW System::Xml::Schema::SchemaEntity::get_BaseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_BaseURI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_BaseURI
void System::Xml::Schema::SchemaEntity::set_BaseURI(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_BaseURI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BaseURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_ParsingInProgress
bool System::Xml::Schema::SchemaEntity::get_ParsingInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_ParsingInProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParsingInProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_ParsingInProgress
void System::Xml::Schema::SchemaEntity::set_ParsingInProgress(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_ParsingInProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParsingInProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.get_DeclaredURI
::StringW System::Xml::Schema::SchemaEntity::get_DeclaredURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::get_DeclaredURI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaredURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.set_DeclaredURI
void System::Xml::Schema::SchemaEntity::set_DeclaredURI(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::set_DeclaredURI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DeclaredURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaEntity.IsPredefinedEntity
bool System::Xml::Schema::SchemaEntity::IsPredefinedEntity(::StringW n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaEntity::IsPredefinedEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "SchemaEntity", "IsPredefinedEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.AttributeMatchState
#include "System/Xml/Schema/AttributeMatchState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.AttributeMatchState AttributeFound
::System::Xml::Schema::AttributeMatchState System::Xml::Schema::AttributeMatchState::_get_AttributeFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_get_AttributeFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::AttributeMatchState>("System.Xml.Schema", "AttributeMatchState", "AttributeFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.AttributeMatchState AttributeFound
void System::Xml::Schema::AttributeMatchState::_set_AttributeFound(::System::Xml::Schema::AttributeMatchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_set_AttributeFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "AttributeMatchState", "AttributeFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.AttributeMatchState AnyIdAttributeFound
::System::Xml::Schema::AttributeMatchState System::Xml::Schema::AttributeMatchState::_get_AnyIdAttributeFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_get_AnyIdAttributeFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::AttributeMatchState>("System.Xml.Schema", "AttributeMatchState", "AnyIdAttributeFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.AttributeMatchState AnyIdAttributeFound
void System::Xml::Schema::AttributeMatchState::_set_AnyIdAttributeFound(::System::Xml::Schema::AttributeMatchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_set_AnyIdAttributeFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "AttributeMatchState", "AnyIdAttributeFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.AttributeMatchState UndeclaredElementAndAttribute
::System::Xml::Schema::AttributeMatchState System::Xml::Schema::AttributeMatchState::_get_UndeclaredElementAndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_get_UndeclaredElementAndAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::AttributeMatchState>("System.Xml.Schema", "AttributeMatchState", "UndeclaredElementAndAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.AttributeMatchState UndeclaredElementAndAttribute
void System::Xml::Schema::AttributeMatchState::_set_UndeclaredElementAndAttribute(::System::Xml::Schema::AttributeMatchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_set_UndeclaredElementAndAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "AttributeMatchState", "UndeclaredElementAndAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.AttributeMatchState UndeclaredAttribute
::System::Xml::Schema::AttributeMatchState System::Xml::Schema::AttributeMatchState::_get_UndeclaredAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_get_UndeclaredAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::AttributeMatchState>("System.Xml.Schema", "AttributeMatchState", "UndeclaredAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.AttributeMatchState UndeclaredAttribute
void System::Xml::Schema::AttributeMatchState::_set_UndeclaredAttribute(::System::Xml::Schema::AttributeMatchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_set_UndeclaredAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "AttributeMatchState", "UndeclaredAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.AttributeMatchState AnyAttributeLax
::System::Xml::Schema::AttributeMatchState System::Xml::Schema::AttributeMatchState::_get_AnyAttributeLax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_get_AnyAttributeLax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::AttributeMatchState>("System.Xml.Schema", "AttributeMatchState", "AnyAttributeLax"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.AttributeMatchState AnyAttributeLax
void System::Xml::Schema::AttributeMatchState::_set_AnyAttributeLax(::System::Xml::Schema::AttributeMatchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_set_AnyAttributeLax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "AttributeMatchState", "AnyAttributeLax", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.AttributeMatchState AnyAttributeSkip
::System::Xml::Schema::AttributeMatchState System::Xml::Schema::AttributeMatchState::_get_AnyAttributeSkip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_get_AnyAttributeSkip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::AttributeMatchState>("System.Xml.Schema", "AttributeMatchState", "AnyAttributeSkip"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.AttributeMatchState AnyAttributeSkip
void System::Xml::Schema::AttributeMatchState::_set_AnyAttributeSkip(::System::Xml::Schema::AttributeMatchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_set_AnyAttributeSkip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "AttributeMatchState", "AnyAttributeSkip", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.AttributeMatchState ProhibitedAnyAttribute
::System::Xml::Schema::AttributeMatchState System::Xml::Schema::AttributeMatchState::_get_ProhibitedAnyAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_get_ProhibitedAnyAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::AttributeMatchState>("System.Xml.Schema", "AttributeMatchState", "ProhibitedAnyAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.AttributeMatchState ProhibitedAnyAttribute
void System::Xml::Schema::AttributeMatchState::_set_ProhibitedAnyAttribute(::System::Xml::Schema::AttributeMatchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_set_ProhibitedAnyAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "AttributeMatchState", "ProhibitedAnyAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.AttributeMatchState ProhibitedAttribute
::System::Xml::Schema::AttributeMatchState System::Xml::Schema::AttributeMatchState::_get_ProhibitedAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_get_ProhibitedAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::AttributeMatchState>("System.Xml.Schema", "AttributeMatchState", "ProhibitedAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.AttributeMatchState ProhibitedAttribute
void System::Xml::Schema::AttributeMatchState::_set_ProhibitedAttribute(::System::Xml::Schema::AttributeMatchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_set_ProhibitedAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "AttributeMatchState", "ProhibitedAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.AttributeMatchState AttributeNameMismatch
::System::Xml::Schema::AttributeMatchState System::Xml::Schema::AttributeMatchState::_get_AttributeNameMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_get_AttributeNameMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::AttributeMatchState>("System.Xml.Schema", "AttributeMatchState", "AttributeNameMismatch"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.AttributeMatchState AttributeNameMismatch
void System::Xml::Schema::AttributeMatchState::_set_AttributeNameMismatch(::System::Xml::Schema::AttributeMatchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_set_AttributeNameMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "AttributeMatchState", "AttributeNameMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.AttributeMatchState ValidateAttributeInvalidCall
::System::Xml::Schema::AttributeMatchState System::Xml::Schema::AttributeMatchState::_get_ValidateAttributeInvalidCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_get_ValidateAttributeInvalidCall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::AttributeMatchState>("System.Xml.Schema", "AttributeMatchState", "ValidateAttributeInvalidCall"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.AttributeMatchState ValidateAttributeInvalidCall
void System::Xml::Schema::AttributeMatchState::_set_ValidateAttributeInvalidCall(::System::Xml::Schema::AttributeMatchState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::_set_ValidateAttributeInvalidCall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "AttributeMatchState", "ValidateAttributeInvalidCall", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Xml::Schema::AttributeMatchState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::AttributeMatchState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaInfo
#include "System/Xml/Schema/SchemaInfo.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.SchemaElementDecl
#include "System/Xml/Schema/SchemaElementDecl.hpp"
// Including type: System.Xml.Schema.SchemaEntity
#include "System/Xml/Schema/SchemaEntity.hpp"
// Including type: System.Xml.Schema.SchemaAttDef
#include "System/Xml/Schema/SchemaAttDef.hpp"
// Including type: System.Xml.Schema.SchemaNotation
#include "System/Xml/Schema/SchemaNotation.hpp"
// Including type: System.Xml.Schema.XmlSchemaElement
#include "System/Xml/Schema/XmlSchemaElement.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
// Including type: System.Xml.Schema.AttributeMatchState
#include "System/Xml/Schema/AttributeMatchState.hpp"
// Including type: System.Xml.Schema.ValidationEventHandler
#include "System/Xml/Schema/ValidationEventHandler.hpp"
// Including type: System.Xml.IDtdAttributeListInfo
#include "System/Xml/IDtdAttributeListInfo.hpp"
// Including type: System.Xml.IDtdEntityInfo
#include "System/Xml/IDtdEntityInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.XmlQualifiedName,System.Xml.Schema.SchemaElementDecl> elementDecls
[[deprecated]] ::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>*& System::Xml::Schema::SchemaInfo::dyn_elementDecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_elementDecls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementDecls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.XmlQualifiedName,System.Xml.Schema.SchemaElementDecl> undeclaredElementDecls
[[deprecated]] ::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>*& System::Xml::Schema::SchemaInfo::dyn_undeclaredElementDecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_undeclaredElementDecls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "undeclaredElementDecls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.XmlQualifiedName,System.Xml.Schema.SchemaEntity> generalEntities
[[deprecated]] ::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaEntity*>*& System::Xml::Schema::SchemaInfo::dyn_generalEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_generalEntities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "generalEntities"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaEntity*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.XmlQualifiedName,System.Xml.Schema.SchemaEntity> parameterEntities
[[deprecated]] ::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaEntity*>*& System::Xml::Schema::SchemaInfo::dyn_parameterEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_parameterEntities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parameterEntities"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaEntity*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName docTypeName
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaInfo::dyn_docTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_docTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "docTypeName"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String internalDtdSubset
[[deprecated]] ::StringW& System::Xml::Schema::SchemaInfo::dyn_internalDtdSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_internalDtdSubset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalDtdSubset"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasNonCDataAttributes
[[deprecated]] bool& System::Xml::Schema::SchemaInfo::dyn_hasNonCDataAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_hasNonCDataAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasNonCDataAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasDefaultAttributes
[[deprecated]] bool& System::Xml::Schema::SchemaInfo::dyn_hasDefaultAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_hasDefaultAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasDefaultAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Boolean> targetNamespaces
[[deprecated]] ::System::Collections::Generic::Dictionary_2<::StringW, bool>*& System::Xml::Schema::SchemaInfo::dyn_targetNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_targetNamespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetNamespaces"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.XmlQualifiedName,System.Xml.Schema.SchemaAttDef> attributeDecls
[[deprecated]] ::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaAttDef*>*& System::Xml::Schema::SchemaInfo::dyn_attributeDecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_attributeDecls");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeDecls"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaAttDef*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 errorCount
[[deprecated]] int& System::Xml::Schema::SchemaInfo::dyn_errorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_errorCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "errorCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaType schemaType
[[deprecated]] ::System::Xml::Schema::SchemaType& System::Xml::Schema::SchemaInfo::dyn_schemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_schemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Xml.XmlQualifiedName,System.Xml.Schema.SchemaElementDecl> elementDeclsByType
[[deprecated]] ::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>*& System::Xml::Schema::SchemaInfo::dyn_elementDeclsByType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_elementDeclsByType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementDeclsByType"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Xml.Schema.SchemaNotation> notations
[[deprecated]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Xml::Schema::SchemaNotation*>*& System::Xml::Schema::SchemaInfo::dyn_notations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::dyn_notations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Xml::Schema::SchemaNotation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.get_DocTypeName
::System::Xml::XmlQualifiedName* System::Xml::Schema::SchemaInfo::get_DocTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::get_DocTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DocTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.set_DocTypeName
void System::Xml::Schema::SchemaInfo::set_DocTypeName(::System::Xml::XmlQualifiedName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::set_DocTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DocTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.set_InternalDtdSubset
void System::Xml::Schema::SchemaInfo::set_InternalDtdSubset(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::set_InternalDtdSubset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InternalDtdSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.get_ElementDecls
::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>* System::Xml::Schema::SchemaInfo::get_ElementDecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::get_ElementDecls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementDecls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.get_UndeclaredElementDecls
::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>* System::Xml::Schema::SchemaInfo::get_UndeclaredElementDecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::get_UndeclaredElementDecls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UndeclaredElementDecls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.get_GeneralEntities
::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaEntity*>* System::Xml::Schema::SchemaInfo::get_GeneralEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::get_GeneralEntities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GeneralEntities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaEntity*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.get_ParameterEntities
::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaEntity*>* System::Xml::Schema::SchemaInfo::get_ParameterEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::get_ParameterEntities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParameterEntities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaEntity*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.get_SchemaType
::System::Xml::Schema::SchemaType System::Xml::Schema::SchemaInfo::get_SchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::get_SchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.set_SchemaType
void System::Xml::Schema::SchemaInfo::set_SchemaType(::System::Xml::Schema::SchemaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::set_SchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.get_TargetNamespaces
::System::Collections::Generic::Dictionary_2<::StringW, bool>* System::Xml::Schema::SchemaInfo::get_TargetNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::get_TargetNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, bool>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.get_ElementDeclsByType
::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>* System::Xml::Schema::SchemaInfo::get_ElementDeclsByType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::get_ElementDeclsByType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElementDeclsByType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaElementDecl*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.get_AttributeDecls
::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaAttDef*>* System::Xml::Schema::SchemaInfo::get_AttributeDecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::get_AttributeDecls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AttributeDecls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::System::Xml::XmlQualifiedName*, ::System::Xml::Schema::SchemaAttDef*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.get_Notations
::System::Collections::Generic::Dictionary_2<::StringW, ::System::Xml::Schema::SchemaNotation*>* System::Xml::Schema::SchemaInfo::get_Notations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::get_Notations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Notations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Xml::Schema::SchemaNotation*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.get_ErrorCount
int System::Xml::Schema::SchemaInfo::get_ErrorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::get_ErrorCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ErrorCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.set_ErrorCount
void System::Xml::Schema::SchemaInfo::set_ErrorCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::set_ErrorCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ErrorCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.System.Xml.IDtdInfo.get_HasDefaultAttributes
bool System::Xml::Schema::SchemaInfo::System_Xml_IDtdInfo_get_HasDefaultAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::System.Xml.IDtdInfo.get_HasDefaultAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaInfo*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.System.Xml.IDtdInfo.get_HasNonCDataAttributes
bool System::Xml::Schema::SchemaInfo::System_Xml_IDtdInfo_get_HasNonCDataAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::System.Xml.IDtdInfo.get_HasNonCDataAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaInfo*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.System.Xml.IDtdInfo.get_Name
::System::Xml::XmlQualifiedName* System::Xml::Schema::SchemaInfo::System_Xml_IDtdInfo_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::System.Xml.IDtdInfo.get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaInfo*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.System.Xml.IDtdInfo.get_InternalDtdSubset
::StringW System::Xml::Schema::SchemaInfo::System_Xml_IDtdInfo_get_InternalDtdSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::System.Xml.IDtdInfo.get_InternalDtdSubset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaInfo*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.GetElementDecl
::System::Xml::Schema::SchemaElementDecl* System::Xml::Schema::SchemaInfo::GetElementDecl(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::GetElementDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElementDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaElementDecl*, false>(this, ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.GetTypeDecl
::System::Xml::Schema::SchemaElementDecl* System::Xml::Schema::SchemaInfo::GetTypeDecl(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::GetTypeDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaElementDecl*, false>(this, ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.GetElement
::System::Xml::Schema::XmlSchemaElement* System::Xml::Schema::SchemaInfo::GetElement(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaElement*, false>(this, ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.HasSchema
bool System::Xml::Schema::SchemaInfo::HasSchema(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::HasSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ns);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.Contains
bool System::Xml::Schema::SchemaInfo::Contains(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ns);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.GetAttributeXdr
::System::Xml::Schema::SchemaAttDef* System::Xml::Schema::SchemaInfo::GetAttributeXdr(::System::Xml::Schema::SchemaElementDecl* ed, ::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::GetAttributeXdr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributeXdr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ed), ::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaAttDef*, false>(this, ___internal__method, ed, qname);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.GetAttributeXsd
::System::Xml::Schema::SchemaAttDef* System::Xml::Schema::SchemaInfo::GetAttributeXsd(::System::Xml::Schema::SchemaElementDecl* ed, ::System::Xml::XmlQualifiedName* qname, ::System::Xml::Schema::XmlSchemaObject* partialValidationType, ByRef<::System::Xml::Schema::AttributeMatchState> attributeMatchState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::GetAttributeXsd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributeXsd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ed), ::il2cpp_utils::ExtractType(qname), ::il2cpp_utils::ExtractType(partialValidationType), ::il2cpp_utils::ExtractIndependentType<::System::Xml::Schema::AttributeMatchState&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaAttDef*, false>(this, ___internal__method, ed, qname, partialValidationType, byref(attributeMatchState));
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.GetAttributeXsd
::System::Xml::Schema::SchemaAttDef* System::Xml::Schema::SchemaInfo::GetAttributeXsd(::System::Xml::Schema::SchemaElementDecl* ed, ::System::Xml::XmlQualifiedName* qname, ByRef<bool> skip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::GetAttributeXsd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributeXsd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ed), ::il2cpp_utils::ExtractType(qname), ::il2cpp_utils::ExtractType(skip)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaAttDef*, false>(this, ___internal__method, ed, qname, byref(skip));
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.Add
void System::Xml::Schema::SchemaInfo::Add(::System::Xml::Schema::SchemaInfo* sinfo, ::System::Xml::Schema::ValidationEventHandler* eventhandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sinfo), ::il2cpp_utils::ExtractType(eventhandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sinfo, eventhandler);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.Finish
void System::Xml::Schema::SchemaInfo::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.System.Xml.IDtdInfo.LookupAttributeList
::System::Xml::IDtdAttributeListInfo* System::Xml::Schema::SchemaInfo::System_Xml_IDtdInfo_LookupAttributeList(::StringW prefix, ::StringW localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::System.Xml.IDtdInfo.LookupAttributeList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaInfo*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdAttributeListInfo*, false>(this, ___internal__method, prefix, localName);
}
// Autogenerated method: System.Xml.Schema.SchemaInfo.System.Xml.IDtdInfo.LookupEntity
::System::Xml::IDtdEntityInfo* System::Xml::Schema::SchemaInfo::System_Xml_IDtdInfo_LookupEntity(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaInfo::System.Xml.IDtdInfo.LookupEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaInfo*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdEntityInfo*, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaNames
#include "System/Xml/Schema/SchemaNames.hpp"
// Including type: System.Xml.Schema.SchemaNames/System.Xml.Schema.Token
#include "System/Xml/Schema/SchemaNames_Token.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.SchemaType
#include "System/Xml/Schema/SchemaType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
[[deprecated]] ::System::Xml::XmlNameTable*& System::Xml::Schema::SchemaNames::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String NsDataType
[[deprecated]] ::StringW& System::Xml::Schema::SchemaNames::dyn_NsDataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_NsDataType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NsDataType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String NsDataTypeAlias
[[deprecated]] ::StringW& System::Xml::Schema::SchemaNames::dyn_NsDataTypeAlias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_NsDataTypeAlias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NsDataTypeAlias"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String NsDataTypeOld
[[deprecated]] ::StringW& System::Xml::Schema::SchemaNames::dyn_NsDataTypeOld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_NsDataTypeOld");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NsDataTypeOld"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String NsXml
[[deprecated]] ::StringW& System::Xml::Schema::SchemaNames::dyn_NsXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_NsXml");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NsXml"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String NsXmlNs
[[deprecated]] ::StringW& System::Xml::Schema::SchemaNames::dyn_NsXmlNs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_NsXmlNs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NsXmlNs"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String NsXdr
[[deprecated]] ::StringW& System::Xml::Schema::SchemaNames::dyn_NsXdr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_NsXdr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NsXdr"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String NsXdrAlias
[[deprecated]] ::StringW& System::Xml::Schema::SchemaNames::dyn_NsXdrAlias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_NsXdrAlias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NsXdrAlias"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String NsXs
[[deprecated]] ::StringW& System::Xml::Schema::SchemaNames::dyn_NsXs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_NsXs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NsXs"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String NsXsi
[[deprecated]] ::StringW& System::Xml::Schema::SchemaNames::dyn_NsXsi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_NsXsi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NsXsi"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String XsiType
[[deprecated]] ::StringW& System::Xml::Schema::SchemaNames::dyn_XsiType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_XsiType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XsiType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String XsiNil
[[deprecated]] ::StringW& System::Xml::Schema::SchemaNames::dyn_XsiNil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_XsiNil");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XsiNil"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String XsiSchemaLocation
[[deprecated]] ::StringW& System::Xml::Schema::SchemaNames::dyn_XsiSchemaLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_XsiSchemaLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XsiSchemaLocation"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String XsiNoNamespaceSchemaLocation
[[deprecated]] ::StringW& System::Xml::Schema::SchemaNames::dyn_XsiNoNamespaceSchemaLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_XsiNoNamespaceSchemaLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XsiNoNamespaceSchemaLocation"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String XsdSchema
[[deprecated]] ::StringW& System::Xml::Schema::SchemaNames::dyn_XsdSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_XsdSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XsdSchema"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String XdrSchema
[[deprecated]] ::StringW& System::Xml::Schema::SchemaNames::dyn_XdrSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_XdrSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "XdrSchema"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnPCData
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnPCData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnPCData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnPCData"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXml
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXml");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXml"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXmlNs
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXmlNs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXmlNs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXmlNs"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnDtDt
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnDtDt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnDtDt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnDtDt"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXmlLang
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXmlLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXmlLang");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXmlLang"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnName
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnName"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnType
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnMaxOccurs
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnMaxOccurs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnMaxOccurs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnMaxOccurs"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnMinOccurs
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnMinOccurs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnMinOccurs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnMinOccurs"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnInfinite
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnInfinite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnInfinite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnInfinite"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnModel
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnModel"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnOpen
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnOpen"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnClosed
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnClosed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnClosed"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnContent
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnContent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnContent"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnMixed
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnMixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnMixed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnMixed"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnEmpty
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnEmpty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnEmpty"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnEltOnly
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnEltOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnEltOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnEltOnly"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnTextOnly
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnTextOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnTextOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnTextOnly"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnOrder
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnOrder"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnSeq
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnSeq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnSeq");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnSeq"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnOne
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnOne() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnOne");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnOne"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnMany
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnMany() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnMany");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnMany"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnRequired
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnRequired"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnYes
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnYes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnYes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnYes"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnNo
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnNo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnNo"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnString
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnString"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnID
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnID"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnIDRef
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnIDRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnIDRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnIDRef"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnIDRefs
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnIDRefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnIDRefs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnIDRefs"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnEntity
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnEntity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnEntity"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnEntities
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnEntities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnEntities"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnNmToken
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnNmToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnNmToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnNmToken"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnNmTokens
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnNmTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnNmTokens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnNmTokens"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnEnumeration
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnEnumeration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnEnumeration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnEnumeration"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnDefault
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnDefault"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXdrSchema
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXdrSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXdrSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXdrSchema"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXdrElementType
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXdrElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXdrElementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXdrElementType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXdrElement
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXdrElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXdrElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXdrElement"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXdrGroup
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXdrGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXdrGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXdrGroup"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXdrAttributeType
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXdrAttributeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXdrAttributeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXdrAttributeType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXdrAttribute
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXdrAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXdrAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXdrAttribute"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXdrDataType
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXdrDataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXdrDataType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXdrDataType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXdrDescription
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXdrDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXdrDescription");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXdrDescription"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXdrExtends
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXdrExtends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXdrExtends");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXdrExtends"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXdrAliasSchema
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXdrAliasSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXdrAliasSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXdrAliasSchema"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnDtType
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnDtType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnDtType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnDtType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnDtValues
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnDtValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnDtValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnDtValues"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnDtMaxLength
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnDtMaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnDtMaxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnDtMaxLength"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnDtMinLength
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnDtMinLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnDtMinLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnDtMinLength"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnDtMax
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnDtMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnDtMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnDtMax"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnDtMin
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnDtMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnDtMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnDtMin"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnDtMinExclusive
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnDtMinExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnDtMinExclusive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnDtMinExclusive"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnDtMaxExclusive
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnDtMaxExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnDtMaxExclusive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnDtMaxExclusive"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnTargetNamespace
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnTargetNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnTargetNamespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnTargetNamespace"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnVersion
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnVersion"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnFinalDefault
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnFinalDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnFinalDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnFinalDefault"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnBlockDefault
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnBlockDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnBlockDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnBlockDefault"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnFixed
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnFixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnFixed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnFixed"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnAbstract
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnAbstract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnAbstract");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnAbstract"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnBlock
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnBlock"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnSubstitutionGroup
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnSubstitutionGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnSubstitutionGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnSubstitutionGroup"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnFinal
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnFinal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnFinal"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnNillable
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnNillable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnNillable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnNillable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnRef
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnRef"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnBase
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnBase"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnDerivedBy
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnDerivedBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnDerivedBy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnDerivedBy"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnNamespace
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnNamespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnNamespace"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnProcessContents
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnProcessContents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnProcessContents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnProcessContents"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnRefer
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnRefer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnRefer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnRefer"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnPublic
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnPublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnPublic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnPublic"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnSystem
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnSystem"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnSchemaLocation
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnSchemaLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnSchemaLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnSchemaLocation"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnValue
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnValue"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnUse
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnUse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnUse"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnForm
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnForm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnForm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnForm"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnElementFormDefault
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnElementFormDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnElementFormDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnElementFormDefault"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnAttributeFormDefault
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnAttributeFormDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnAttributeFormDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnAttributeFormDefault"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnItemType
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnItemType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnItemType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnMemberTypes
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnMemberTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnMemberTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnMemberTypes"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXPath
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXPath"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdSchema
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdSchema"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdAnnotation
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdAnnotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdAnnotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdAnnotation"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdInclude
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdInclude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdInclude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdInclude"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdImport
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdImport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdImport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdImport"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdElement
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdElement"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdAttribute
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdAttribute"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdAttributeGroup
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdAttributeGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdAttributeGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdAttributeGroup"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdAnyAttribute
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdAnyAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdAnyAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdAnyAttribute"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdGroup
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdGroup"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdAll
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdAll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdAll"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdChoice
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdChoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdChoice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdChoice"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdSequence
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdSequence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdSequence"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdAny
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdAny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdAny");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdAny"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdNotation
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdNotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdNotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdNotation"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdSimpleType
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdSimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdSimpleType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdSimpleType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdComplexType
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdComplexType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdComplexType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdComplexType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdUnique
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdUnique() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdUnique");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdUnique"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdKey
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdKey"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdKeyRef
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdKeyRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdKeyRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdKeyRef"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdSelector
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdSelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdSelector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdSelector"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdField
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdField"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdMinExclusive
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdMinExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdMinExclusive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdMinExclusive"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdMinInclusive
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdMinInclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdMinInclusive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdMinInclusive"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdMaxInclusive
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdMaxInclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdMaxInclusive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdMaxInclusive"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdMaxExclusive
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdMaxExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdMaxExclusive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdMaxExclusive"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdTotalDigits
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdTotalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdTotalDigits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdTotalDigits"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdFractionDigits
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdFractionDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdFractionDigits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdFractionDigits"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdLength
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdLength"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdMinLength
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdMinLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdMinLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdMinLength"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdMaxLength
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdMaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdMaxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdMaxLength"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdEnumeration
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdEnumeration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdEnumeration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdEnumeration"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdPattern
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdPattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdPattern"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdDocumentation
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdDocumentation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdDocumentation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdDocumentation"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdAppinfo
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdAppinfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdAppinfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdAppinfo"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnSource
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnSource"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdComplexContent
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdComplexContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdComplexContent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdComplexContent"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdSimpleContent
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdSimpleContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdSimpleContent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdSimpleContent"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdRestriction
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdRestriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdRestriction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdRestriction"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdExtension
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdExtension");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdExtension"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdUnion
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdUnion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdUnion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdUnion"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdList
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdList"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdWhiteSpace
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdWhiteSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdWhiteSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdWhiteSpace"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdRedefine
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdRedefine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdRedefine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdRedefine"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlQualifiedName QnXsdAnyType
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNames::dyn_QnXsdAnyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_QnXsdAnyType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QnXsdAnyType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlQualifiedName[] TokenToQName
[[deprecated]] ::ArrayW<::System::Xml::XmlQualifiedName*>& System::Xml::Schema::SchemaNames::dyn_TokenToQName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::dyn_TokenToQName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TokenToQName"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlQualifiedName*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SchemaNames.CreateTokenToQNameTable
void System::Xml::Schema::SchemaNames::CreateTokenToQNameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::CreateTokenToQNameTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTokenToQNameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaNames.SchemaTypeFromRoot
::System::Xml::Schema::SchemaType System::Xml::Schema::SchemaNames::SchemaTypeFromRoot(::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::SchemaTypeFromRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SchemaTypeFromRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaType, false>(this, ___internal__method, localName, ns);
}
// Autogenerated method: System.Xml.Schema.SchemaNames.IsXSDRoot
bool System::Xml::Schema::SchemaNames::IsXSDRoot(::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::IsXSDRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsXSDRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, localName, ns);
}
// Autogenerated method: System.Xml.Schema.SchemaNames.IsXDRRoot
bool System::Xml::Schema::SchemaNames::IsXDRRoot(::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::IsXDRRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsXDRRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, localName, ns);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaNames/System.Xml.Schema.Token
#include "System/Xml/Schema/SchemaNames_Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token Empty
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token Empty
void System::Xml::Schema::SchemaNames::Token::_set_Empty(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaName
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaName"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaName
void System::Xml::Schema::SchemaNames::Token::_set_SchemaName(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaType
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaType"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaType
void System::Xml::Schema::SchemaNames::Token::_set_SchemaType(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaMaxOccurs
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaMaxOccurs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaMaxOccurs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaMaxOccurs"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaMaxOccurs
void System::Xml::Schema::SchemaNames::Token::_set_SchemaMaxOccurs(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaMaxOccurs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaMaxOccurs", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaMinOccurs
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaMinOccurs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaMinOccurs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaMinOccurs"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaMinOccurs
void System::Xml::Schema::SchemaNames::Token::_set_SchemaMinOccurs(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaMinOccurs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaMinOccurs", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaInfinite
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaInfinite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaInfinite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaInfinite"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaInfinite
void System::Xml::Schema::SchemaNames::Token::_set_SchemaInfinite(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaInfinite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaInfinite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaModel
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaModel"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaModel
void System::Xml::Schema::SchemaNames::Token::_set_SchemaModel(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaModel", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaOpen
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaOpen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaOpen"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaOpen
void System::Xml::Schema::SchemaNames::Token::_set_SchemaOpen(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaOpen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaOpen", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaClosed
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaClosed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaClosed
void System::Xml::Schema::SchemaNames::Token::_set_SchemaClosed(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaClosed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaContent
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaContent
void System::Xml::Schema::SchemaNames::Token::_set_SchemaContent(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaMixed
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaMixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaMixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaMixed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaMixed
void System::Xml::Schema::SchemaNames::Token::_set_SchemaMixed(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaMixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaMixed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaEmpty
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaEmpty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaEmpty"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaEmpty
void System::Xml::Schema::SchemaNames::Token::_set_SchemaEmpty(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaEmpty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaEmpty", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaElementOnly
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaElementOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaElementOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaElementOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaElementOnly
void System::Xml::Schema::SchemaNames::Token::_set_SchemaElementOnly(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaElementOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaElementOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaTextOnly
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaTextOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaTextOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaTextOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaTextOnly
void System::Xml::Schema::SchemaNames::Token::_set_SchemaTextOnly(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaTextOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaTextOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaOrder
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaOrder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaOrder"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaOrder
void System::Xml::Schema::SchemaNames::Token::_set_SchemaOrder(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaOrder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaOrder", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaSeq
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaSeq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaSeq");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaSeq"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaSeq
void System::Xml::Schema::SchemaNames::Token::_set_SchemaSeq(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaSeq");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaSeq", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaOne
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaOne() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaOne");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaOne"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaOne
void System::Xml::Schema::SchemaNames::Token::_set_SchemaOne(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaOne");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaOne", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaMany
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaMany() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaMany");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaMany"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaMany
void System::Xml::Schema::SchemaNames::Token::_set_SchemaMany(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaMany");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaMany", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaRequired
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaRequired"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaRequired
void System::Xml::Schema::SchemaNames::Token::_set_SchemaRequired(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaRequired", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaYes
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaYes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaYes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaYes"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaYes
void System::Xml::Schema::SchemaNames::Token::_set_SchemaYes(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaYes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaYes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaNo
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaNo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaNo"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaNo
void System::Xml::Schema::SchemaNames::Token::_set_SchemaNo(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaNo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaNo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaString
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaString"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaString
void System::Xml::Schema::SchemaNames::Token::_set_SchemaString(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaId
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaId"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaId
void System::Xml::Schema::SchemaNames::Token::_set_SchemaId(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaIdref
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaIdref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaIdref");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaIdref"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaIdref
void System::Xml::Schema::SchemaNames::Token::_set_SchemaIdref(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaIdref");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaIdref", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaIdrefs
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaIdrefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaIdrefs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaIdrefs"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaIdrefs
void System::Xml::Schema::SchemaNames::Token::_set_SchemaIdrefs(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaIdrefs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaIdrefs", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaEntity
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaEntity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaEntity"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaEntity
void System::Xml::Schema::SchemaNames::Token::_set_SchemaEntity(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaEntity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaEntity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaEntities
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaEntities");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaEntities"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaEntities
void System::Xml::Schema::SchemaNames::Token::_set_SchemaEntities(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaEntities");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaEntities", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaNmtoken
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaNmtoken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaNmtoken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaNmtoken"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaNmtoken
void System::Xml::Schema::SchemaNames::Token::_set_SchemaNmtoken(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaNmtoken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaNmtoken", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaNmtokens
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaNmtokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaNmtokens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaNmtokens"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaNmtokens
void System::Xml::Schema::SchemaNames::Token::_set_SchemaNmtokens(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaNmtokens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaNmtokens", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaEnumeration
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaEnumeration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaEnumeration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaEnumeration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaEnumeration
void System::Xml::Schema::SchemaNames::Token::_set_SchemaEnumeration(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaEnumeration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaEnumeration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDefault
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDefault
void System::Xml::Schema::SchemaNames::Token::_set_SchemaDefault(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XdrRoot
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XdrRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XdrRoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XdrRoot"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XdrRoot
void System::Xml::Schema::SchemaNames::Token::_set_XdrRoot(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XdrRoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XdrRoot", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XdrElementType
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XdrElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XdrElementType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XdrElementType"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XdrElementType
void System::Xml::Schema::SchemaNames::Token::_set_XdrElementType(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XdrElementType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XdrElementType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XdrElement
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XdrElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XdrElement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XdrElement"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XdrElement
void System::Xml::Schema::SchemaNames::Token::_set_XdrElement(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XdrElement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XdrElement", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XdrGroup
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XdrGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XdrGroup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XdrGroup"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XdrGroup
void System::Xml::Schema::SchemaNames::Token::_set_XdrGroup(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XdrGroup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XdrGroup", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XdrAttributeType
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XdrAttributeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XdrAttributeType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XdrAttributeType"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XdrAttributeType
void System::Xml::Schema::SchemaNames::Token::_set_XdrAttributeType(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XdrAttributeType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XdrAttributeType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XdrAttribute
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XdrAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XdrAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XdrAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XdrAttribute
void System::Xml::Schema::SchemaNames::Token::_set_XdrAttribute(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XdrAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XdrAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XdrDatatype
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XdrDatatype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XdrDatatype");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XdrDatatype"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XdrDatatype
void System::Xml::Schema::SchemaNames::Token::_set_XdrDatatype(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XdrDatatype");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XdrDatatype", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XdrDescription
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XdrDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XdrDescription");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XdrDescription"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XdrDescription
void System::Xml::Schema::SchemaNames::Token::_set_XdrDescription(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XdrDescription");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XdrDescription", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XdrExtends
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XdrExtends() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XdrExtends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XdrExtends"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XdrExtends
void System::Xml::Schema::SchemaNames::Token::_set_XdrExtends(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XdrExtends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XdrExtends", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaXdrRootAlias
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaXdrRootAlias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaXdrRootAlias");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaXdrRootAlias"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaXdrRootAlias
void System::Xml::Schema::SchemaNames::Token::_set_SchemaXdrRootAlias(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaXdrRootAlias");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaXdrRootAlias", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDtType
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaDtType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaDtType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaDtType"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDtType
void System::Xml::Schema::SchemaNames::Token::_set_SchemaDtType(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaDtType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaDtType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDtValues
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaDtValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaDtValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaDtValues"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDtValues
void System::Xml::Schema::SchemaNames::Token::_set_SchemaDtValues(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaDtValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaDtValues", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDtMaxLength
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaDtMaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaDtMaxLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaDtMaxLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDtMaxLength
void System::Xml::Schema::SchemaNames::Token::_set_SchemaDtMaxLength(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaDtMaxLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaDtMaxLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDtMinLength
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaDtMinLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaDtMinLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaDtMinLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDtMinLength
void System::Xml::Schema::SchemaNames::Token::_set_SchemaDtMinLength(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaDtMinLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaDtMinLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDtMax
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaDtMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaDtMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaDtMax"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDtMax
void System::Xml::Schema::SchemaNames::Token::_set_SchemaDtMax(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaDtMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaDtMax", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDtMin
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaDtMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaDtMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaDtMin"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDtMin
void System::Xml::Schema::SchemaNames::Token::_set_SchemaDtMin(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaDtMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaDtMin", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDtMinExclusive
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaDtMinExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaDtMinExclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaDtMinExclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDtMinExclusive
void System::Xml::Schema::SchemaNames::Token::_set_SchemaDtMinExclusive(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaDtMinExclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaDtMinExclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDtMaxExclusive
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaDtMaxExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaDtMaxExclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaDtMaxExclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDtMaxExclusive
void System::Xml::Schema::SchemaNames::Token::_set_SchemaDtMaxExclusive(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaDtMaxExclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaDtMaxExclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaTargetNamespace
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaTargetNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaTargetNamespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaTargetNamespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaTargetNamespace
void System::Xml::Schema::SchemaNames::Token::_set_SchemaTargetNamespace(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaTargetNamespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaTargetNamespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaVersion
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaVersion
void System::Xml::Schema::SchemaNames::Token::_set_SchemaVersion(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaFinalDefault
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaFinalDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaFinalDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaFinalDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaFinalDefault
void System::Xml::Schema::SchemaNames::Token::_set_SchemaFinalDefault(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaFinalDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaFinalDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaBlockDefault
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaBlockDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaBlockDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaBlockDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaBlockDefault
void System::Xml::Schema::SchemaNames::Token::_set_SchemaBlockDefault(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaBlockDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaBlockDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaFixed
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaFixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaFixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaFixed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaFixed
void System::Xml::Schema::SchemaNames::Token::_set_SchemaFixed(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaFixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaFixed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaAbstract
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaAbstract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaAbstract");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaAbstract"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaAbstract
void System::Xml::Schema::SchemaNames::Token::_set_SchemaAbstract(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaAbstract");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaAbstract", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaBlock
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaBlock"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaBlock
void System::Xml::Schema::SchemaNames::Token::_set_SchemaBlock(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaBlock", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaSubstitutionGroup
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaSubstitutionGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaSubstitutionGroup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaSubstitutionGroup"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaSubstitutionGroup
void System::Xml::Schema::SchemaNames::Token::_set_SchemaSubstitutionGroup(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaSubstitutionGroup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaSubstitutionGroup", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaFinal
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaFinal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaFinal"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaFinal
void System::Xml::Schema::SchemaNames::Token::_set_SchemaFinal(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaFinal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaFinal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaNillable
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaNillable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaNillable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaNillable"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaNillable
void System::Xml::Schema::SchemaNames::Token::_set_SchemaNillable(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaNillable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaNillable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaRef
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaRef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaRef"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaRef
void System::Xml::Schema::SchemaNames::Token::_set_SchemaRef(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaRef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaRef", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaBase
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaBase"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaBase
void System::Xml::Schema::SchemaNames::Token::_set_SchemaBase(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaBase", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDerivedBy
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaDerivedBy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaDerivedBy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaDerivedBy"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaDerivedBy
void System::Xml::Schema::SchemaNames::Token::_set_SchemaDerivedBy(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaDerivedBy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaDerivedBy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaNamespace
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaNamespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaNamespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaNamespace
void System::Xml::Schema::SchemaNames::Token::_set_SchemaNamespace(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaNamespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaNamespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaProcessContents
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaProcessContents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaProcessContents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaProcessContents"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaProcessContents
void System::Xml::Schema::SchemaNames::Token::_set_SchemaProcessContents(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaProcessContents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaProcessContents", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaRefer
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaRefer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaRefer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaRefer"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaRefer
void System::Xml::Schema::SchemaNames::Token::_set_SchemaRefer(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaRefer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaRefer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaPublic
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaPublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaPublic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaPublic"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaPublic
void System::Xml::Schema::SchemaNames::Token::_set_SchemaPublic(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaPublic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaPublic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaSystem
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaSystem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaSystem"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaSystem
void System::Xml::Schema::SchemaNames::Token::_set_SchemaSystem(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaSystem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaSystem", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaSchemaLocation
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaSchemaLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaSchemaLocation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaSchemaLocation"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaSchemaLocation
void System::Xml::Schema::SchemaNames::Token::_set_SchemaSchemaLocation(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaSchemaLocation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaSchemaLocation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaValue
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaValue
void System::Xml::Schema::SchemaNames::Token::_set_SchemaValue(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaSource
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaSource"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaSource
void System::Xml::Schema::SchemaNames::Token::_set_SchemaSource(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaSource", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaAttributeFormDefault
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaAttributeFormDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaAttributeFormDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaAttributeFormDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaAttributeFormDefault
void System::Xml::Schema::SchemaNames::Token::_set_SchemaAttributeFormDefault(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaAttributeFormDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaAttributeFormDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaElementFormDefault
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaElementFormDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaElementFormDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaElementFormDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaElementFormDefault
void System::Xml::Schema::SchemaNames::Token::_set_SchemaElementFormDefault(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaElementFormDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaElementFormDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaUse
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaUse"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaUse
void System::Xml::Schema::SchemaNames::Token::_set_SchemaUse(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaUse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaForm
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaForm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaForm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaForm"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaForm
void System::Xml::Schema::SchemaNames::Token::_set_SchemaForm(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaForm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaForm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSchema
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdSchema");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdSchema"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSchema
void System::Xml::Schema::SchemaNames::Token::_set_XsdSchema(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdSchema");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdSchema", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdAnnotation
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdAnnotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdAnnotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdAnnotation"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdAnnotation
void System::Xml::Schema::SchemaNames::Token::_set_XsdAnnotation(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdAnnotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdAnnotation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdInclude
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdInclude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdInclude");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdInclude"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdInclude
void System::Xml::Schema::SchemaNames::Token::_set_XsdInclude(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdInclude");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdInclude", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdImport
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdImport() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdImport");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdImport"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdImport
void System::Xml::Schema::SchemaNames::Token::_set_XsdImport(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdImport");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdImport", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdElement
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdElement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdElement"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdElement
void System::Xml::Schema::SchemaNames::Token::_set_XsdElement(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdElement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdElement", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdAttribute
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdAttribute
void System::Xml::Schema::SchemaNames::Token::_set_XsdAttribute(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token xsdAttributeGroup
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_xsdAttributeGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_xsdAttributeGroup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "xsdAttributeGroup"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token xsdAttributeGroup
void System::Xml::Schema::SchemaNames::Token::_set_xsdAttributeGroup(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_xsdAttributeGroup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "xsdAttributeGroup", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdAnyAttribute
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdAnyAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdAnyAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdAnyAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdAnyAttribute
void System::Xml::Schema::SchemaNames::Token::_set_XsdAnyAttribute(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdAnyAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdAnyAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdGroup
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdGroup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdGroup"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdGroup
void System::Xml::Schema::SchemaNames::Token::_set_XsdGroup(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdGroup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdGroup", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdAll
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdAll"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdAll
void System::Xml::Schema::SchemaNames::Token::_set_XsdAll(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdAll", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdChoice
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdChoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdChoice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdChoice"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdChoice
void System::Xml::Schema::SchemaNames::Token::_set_XsdChoice(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdChoice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdChoice", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSequence
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdSequence");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdSequence"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSequence
void System::Xml::Schema::SchemaNames::Token::_set_XsdSequence(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdSequence");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdSequence", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdAny
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdAny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdAny");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdAny"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdAny
void System::Xml::Schema::SchemaNames::Token::_set_XsdAny(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdAny");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdAny", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdNotation
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdNotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdNotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdNotation"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdNotation
void System::Xml::Schema::SchemaNames::Token::_set_XsdNotation(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdNotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdNotation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSimpleType
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdSimpleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdSimpleType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdSimpleType"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSimpleType
void System::Xml::Schema::SchemaNames::Token::_set_XsdSimpleType(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdSimpleType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdSimpleType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdComplexType
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdComplexType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdComplexType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdComplexType"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdComplexType
void System::Xml::Schema::SchemaNames::Token::_set_XsdComplexType(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdComplexType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdComplexType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdUnique
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdUnique() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdUnique");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdUnique"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdUnique
void System::Xml::Schema::SchemaNames::Token::_set_XsdUnique(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdUnique");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdUnique", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdKey
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdKey"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdKey
void System::Xml::Schema::SchemaNames::Token::_set_XsdKey(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdKey", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdKeyref
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdKeyref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdKeyref");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdKeyref"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdKeyref
void System::Xml::Schema::SchemaNames::Token::_set_XsdKeyref(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdKeyref");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdKeyref", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSelector
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdSelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdSelector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdSelector"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSelector
void System::Xml::Schema::SchemaNames::Token::_set_XsdSelector(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdSelector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdSelector", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdField
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdField"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdField
void System::Xml::Schema::SchemaNames::Token::_set_XsdField(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdField", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdMinExclusive
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdMinExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdMinExclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdMinExclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdMinExclusive
void System::Xml::Schema::SchemaNames::Token::_set_XsdMinExclusive(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdMinExclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdMinExclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdMinInclusive
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdMinInclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdMinInclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdMinInclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdMinInclusive
void System::Xml::Schema::SchemaNames::Token::_set_XsdMinInclusive(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdMinInclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdMinInclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdMaxExclusive
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdMaxExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdMaxExclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdMaxExclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdMaxExclusive
void System::Xml::Schema::SchemaNames::Token::_set_XsdMaxExclusive(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdMaxExclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdMaxExclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdMaxInclusive
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdMaxInclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdMaxInclusive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdMaxInclusive"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdMaxInclusive
void System::Xml::Schema::SchemaNames::Token::_set_XsdMaxInclusive(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdMaxInclusive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdMaxInclusive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdTotalDigits
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdTotalDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdTotalDigits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdTotalDigits"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdTotalDigits
void System::Xml::Schema::SchemaNames::Token::_set_XsdTotalDigits(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdTotalDigits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdTotalDigits", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdFractionDigits
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdFractionDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdFractionDigits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdFractionDigits"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdFractionDigits
void System::Xml::Schema::SchemaNames::Token::_set_XsdFractionDigits(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdFractionDigits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdFractionDigits", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdLength
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdLength
void System::Xml::Schema::SchemaNames::Token::_set_XsdLength(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdMinLength
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdMinLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdMinLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdMinLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdMinLength
void System::Xml::Schema::SchemaNames::Token::_set_XsdMinLength(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdMinLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdMinLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdMaxLength
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdMaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdMaxLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdMaxLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdMaxLength
void System::Xml::Schema::SchemaNames::Token::_set_XsdMaxLength(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdMaxLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdMaxLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdEnumeration
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdEnumeration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdEnumeration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdEnumeration"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdEnumeration
void System::Xml::Schema::SchemaNames::Token::_set_XsdEnumeration(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdEnumeration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdEnumeration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdPattern
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdPattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdPattern"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdPattern
void System::Xml::Schema::SchemaNames::Token::_set_XsdPattern(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdPattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdPattern", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdDocumentation
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdDocumentation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdDocumentation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdDocumentation"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdDocumentation
void System::Xml::Schema::SchemaNames::Token::_set_XsdDocumentation(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdDocumentation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdDocumentation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdAppInfo
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdAppInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdAppInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdAppInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdAppInfo
void System::Xml::Schema::SchemaNames::Token::_set_XsdAppInfo(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdAppInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdAppInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdComplexContent
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdComplexContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdComplexContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdComplexContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdComplexContent
void System::Xml::Schema::SchemaNames::Token::_set_XsdComplexContent(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdComplexContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdComplexContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdComplexContentExtension
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdComplexContentExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdComplexContentExtension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdComplexContentExtension"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdComplexContentExtension
void System::Xml::Schema::SchemaNames::Token::_set_XsdComplexContentExtension(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdComplexContentExtension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdComplexContentExtension", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdComplexContentRestriction
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdComplexContentRestriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdComplexContentRestriction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdComplexContentRestriction"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdComplexContentRestriction
void System::Xml::Schema::SchemaNames::Token::_set_XsdComplexContentRestriction(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdComplexContentRestriction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdComplexContentRestriction", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSimpleContent
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdSimpleContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdSimpleContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdSimpleContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSimpleContent
void System::Xml::Schema::SchemaNames::Token::_set_XsdSimpleContent(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdSimpleContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdSimpleContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSimpleContentExtension
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdSimpleContentExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdSimpleContentExtension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdSimpleContentExtension"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSimpleContentExtension
void System::Xml::Schema::SchemaNames::Token::_set_XsdSimpleContentExtension(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdSimpleContentExtension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdSimpleContentExtension", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSimpleContentRestriction
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdSimpleContentRestriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdSimpleContentRestriction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdSimpleContentRestriction"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSimpleContentRestriction
void System::Xml::Schema::SchemaNames::Token::_set_XsdSimpleContentRestriction(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdSimpleContentRestriction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdSimpleContentRestriction", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSimpleTypeList
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdSimpleTypeList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdSimpleTypeList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdSimpleTypeList"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSimpleTypeList
void System::Xml::Schema::SchemaNames::Token::_set_XsdSimpleTypeList(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdSimpleTypeList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdSimpleTypeList", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSimpleTypeRestriction
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdSimpleTypeRestriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdSimpleTypeRestriction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdSimpleTypeRestriction"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSimpleTypeRestriction
void System::Xml::Schema::SchemaNames::Token::_set_XsdSimpleTypeRestriction(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdSimpleTypeRestriction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdSimpleTypeRestriction", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSimpleTypeUnion
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdSimpleTypeUnion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdSimpleTypeUnion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdSimpleTypeUnion"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdSimpleTypeUnion
void System::Xml::Schema::SchemaNames::Token::_set_XsdSimpleTypeUnion(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdSimpleTypeUnion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdSimpleTypeUnion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdWhitespace
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdWhitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdWhitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdWhitespace
void System::Xml::Schema::SchemaNames::Token::_set_XsdWhitespace(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdWhitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdWhitespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdRedefine
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XsdRedefine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XsdRedefine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XsdRedefine"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XsdRedefine
void System::Xml::Schema::SchemaNames::Token::_set_XsdRedefine(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XsdRedefine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XsdRedefine", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaItemType
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaItemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaItemType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaItemType"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaItemType
void System::Xml::Schema::SchemaNames::Token::_set_SchemaItemType(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaItemType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaItemType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaMemberTypes
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaMemberTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaMemberTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaMemberTypes"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaMemberTypes
void System::Xml::Schema::SchemaNames::Token::_set_SchemaMemberTypes(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaMemberTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaMemberTypes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaXPath
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_SchemaXPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_SchemaXPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "SchemaXPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token SchemaXPath
void System::Xml::Schema::SchemaNames::Token::_set_SchemaXPath(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_SchemaXPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "SchemaXPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XmlLang
::System::Xml::Schema::SchemaNames::Token System::Xml::Schema::SchemaNames::Token::_get_XmlLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_get_XmlLang");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaNames::Token>("System.Xml.Schema", "SchemaNames/Token", "XmlLang"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaNames/System.Xml.Schema.Token XmlLang
void System::Xml::Schema::SchemaNames::Token::_set_XmlLang(::System::Xml::Schema::SchemaNames::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::_set_XmlLang");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaNames/Token", "XmlLang", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Xml::Schema::SchemaNames::Token::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNames::Token::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaNamespaceManager
#include "System/Xml/Schema/SchemaNamespaceManager.hpp"
// Including type: System.Xml.Schema.XmlSchemaObject
#include "System/Xml/Schema/XmlSchemaObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObject node
[[deprecated]] ::System::Xml::Schema::XmlSchemaObject*& System::Xml::Schema::SchemaNamespaceManager::dyn_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNamespaceManager::dyn_node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "node"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SchemaNamespaceManager.LookupNamespace
::StringW System::Xml::Schema::SchemaNamespaceManager::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNamespaceManager::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNamespaceManager*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.Schema.SchemaNamespaceManager.LookupPrefix
::StringW System::Xml::Schema::SchemaNamespaceManager::LookupPrefix(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNamespaceManager::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlNamespaceManager*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ns);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaNotation
#include "System/Xml/Schema/SchemaNotation.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName name
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::SchemaNotation::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNotation::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String systemLiteral
[[deprecated]] ::StringW& System::Xml::Schema::SchemaNotation::dyn_systemLiteral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNotation::dyn_systemLiteral");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "systemLiteral"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String pubid
[[deprecated]] ::StringW& System::Xml::Schema::SchemaNotation::dyn_pubid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNotation::dyn_pubid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pubid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.SchemaNotation.get_Name
::System::Xml::XmlQualifiedName* System::Xml::Schema::SchemaNotation::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNotation::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaNotation.get_SystemLiteral
::StringW System::Xml::Schema::SchemaNotation::get_SystemLiteral() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNotation::get_SystemLiteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SystemLiteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaNotation.set_SystemLiteral
void System::Xml::Schema::SchemaNotation::set_SystemLiteral(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNotation::set_SystemLiteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SystemLiteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.SchemaNotation.get_Pubid
::StringW System::Xml::Schema::SchemaNotation::get_Pubid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNotation::get_Pubid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pubid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.SchemaNotation.set_Pubid
void System::Xml::Schema::SchemaNotation::set_Pubid(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaNotation::set_Pubid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pubid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.Compiler
#include "System/Xml/Schema/Compiler.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectTable
#include "System/Xml/Schema/XmlSchemaObjectTable.hpp"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.Schema.XmlSchema
#include "System/Xml/Schema/XmlSchema.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.Schema.ValidationEventHandler
#include "System/Xml/Schema/ValidationEventHandler.hpp"
// Including type: System.Xml.Schema.XmlSchemaCompilationSettings
#include "System/Xml/Schema/XmlSchemaCompilationSettings.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
// Including type: System.Xml.Schema.SchemaInfo
#include "System/Xml/Schema/SchemaInfo.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttribute
#include "System/Xml/Schema/XmlSchemaAttribute.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttributeGroup
#include "System/Xml/Schema/XmlSchemaAttributeGroup.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexType
#include "System/Xml/Schema/XmlSchemaComplexType.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.Schema.XmlSchemaElement
#include "System/Xml/Schema/XmlSchemaElement.hpp"
// Including type: System.Xml.Schema.XmlSchemaObjectCollection
#include "System/Xml/Schema/XmlSchemaObjectCollection.hpp"
// Including type: System.Xml.Schema.XmlSchemaGroup
#include "System/Xml/Schema/XmlSchemaGroup.hpp"
// Including type: System.Xml.Schema.XmlSchemaParticle
#include "System/Xml/Schema/XmlSchemaParticle.hpp"
// Including type: System.Xml.Schema.XmlSchemaSubstitutionGroup
#include "System/Xml/Schema/XmlSchemaSubstitutionGroup.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleContentExtension
#include "System/Xml/Schema/XmlSchemaSimpleContentExtension.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleContentRestriction
#include "System/Xml/Schema/XmlSchemaSimpleContentRestriction.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexContent
#include "System/Xml/Schema/XmlSchemaComplexContent.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexContentExtension
#include "System/Xml/Schema/XmlSchemaComplexContentExtension.hpp"
// Including type: System.Xml.Schema.XmlSchemaComplexContentRestriction
#include "System/Xml/Schema/XmlSchemaComplexContentRestriction.hpp"
// Including type: System.Xml.Schema.XmlSchemaGroupRef
#include "System/Xml/Schema/XmlSchemaGroupRef.hpp"
// Including type: System.Xml.Schema.XmlSchemaAll
#include "System/Xml/Schema/XmlSchemaAll.hpp"
// Including type: System.Xml.Schema.XmlSchemaChoice
#include "System/Xml/Schema/XmlSchemaChoice.hpp"
// Including type: System.Xml.Schema.XmlSchemaSequence
#include "System/Xml/Schema/XmlSchemaSequence.hpp"
// Including type: System.Xml.Schema.XmlSchemaAny
#include "System/Xml/Schema/XmlSchemaAny.hpp"
// Including type: System.Xml.Schema.XmlSchemaGroupBase
#include "System/Xml/Schema/XmlSchemaGroupBase.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.Xml.Schema.XmlSchemaContentType
#include "System/Xml/Schema/XmlSchemaContentType.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnyAttribute
#include "System/Xml/Schema/XmlSchemaAnyAttribute.hpp"
// Including type: System.Xml.Schema.XmlSchemaDerivationMethod
#include "System/Xml/Schema/XmlSchemaDerivationMethod.hpp"
// Including type: System.Xml.Schema.SchemaAttDef
#include "System/Xml/Schema/SchemaAttDef.hpp"
// Including type: System.Xml.Schema.XmlSchemaIdentityConstraint
#include "System/Xml/Schema/XmlSchemaIdentityConstraint.hpp"
// Including type: System.Xml.Schema.ContentValidator
#include "System/Xml/Schema/ContentValidator.hpp"
// Including type: System.Xml.Schema.ParticleContentValidator
#include "System/Xml/Schema/ParticleContentValidator.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.XmlSchemaAnnotated
#include "System/Xml/Schema/XmlSchemaAnnotated.hpp"
// Including type: System.Xml.Schema.SchemaDeclBase
#include "System/Xml/Schema/SchemaDeclBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String restrictionErrorMsg
[[deprecated]] ::StringW& System::Xml::Schema::Compiler::dyn_restrictionErrorMsg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::dyn_restrictionErrorMsg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "restrictionErrorMsg"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectTable attributes
[[deprecated]] ::System::Xml::Schema::XmlSchemaObjectTable*& System::Xml::Schema::Compiler::dyn_attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::dyn_attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributes"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectTable attributeGroups
[[deprecated]] ::System::Xml::Schema::XmlSchemaObjectTable*& System::Xml::Schema::Compiler::dyn_attributeGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::dyn_attributeGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeGroups"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectTable elements
[[deprecated]] ::System::Xml::Schema::XmlSchemaObjectTable*& System::Xml::Schema::Compiler::dyn_elements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::dyn_elements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elements"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectTable schemaTypes
[[deprecated]] ::System::Xml::Schema::XmlSchemaObjectTable*& System::Xml::Schema::Compiler::dyn_schemaTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::dyn_schemaTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaTypes"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectTable groups
[[deprecated]] ::System::Xml::Schema::XmlSchemaObjectTable*& System::Xml::Schema::Compiler::dyn_groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::dyn_groups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groups"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectTable notations
[[deprecated]] ::System::Xml::Schema::XmlSchemaObjectTable*& System::Xml::Schema::Compiler::dyn_notations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::dyn_notations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notations"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectTable examplars
[[deprecated]] ::System::Xml::Schema::XmlSchemaObjectTable*& System::Xml::Schema::Compiler::dyn_examplars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::dyn_examplars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "examplars"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaObjectTable identityConstraints
[[deprecated]] ::System::Xml::Schema::XmlSchemaObjectTable*& System::Xml::Schema::Compiler::dyn_identityConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::dyn_identityConstraints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "identityConstraints"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaObjectTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Stack complexTypeStack
[[deprecated]] ::System::Collections::Stack*& System::Xml::Schema::Compiler::dyn_complexTypeStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::dyn_complexTypeStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "complexTypeStack"))->offset;
  return *reinterpret_cast<::System::Collections::Stack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable schemasToCompile
[[deprecated]] ::System::Collections::Hashtable*& System::Xml::Schema::Compiler::dyn_schemasToCompile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::dyn_schemasToCompile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemasToCompile"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable importedSchemas
[[deprecated]] ::System::Collections::Hashtable*& System::Xml::Schema::Compiler::dyn_importedSchemas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::dyn_importedSchemas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "importedSchemas"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchema schemaForSchema
[[deprecated]] ::System::Xml::Schema::XmlSchema*& System::Xml::Schema::Compiler::dyn_schemaForSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::dyn_schemaForSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaForSchema"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchema**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.Compiler.Execute
bool System::Xml::Schema::Compiler::Execute(::System::Xml::Schema::XmlSchemaSet* schemaSet, ::System::Xml::Schema::SchemaInfo* schemaCompiledInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet), ::il2cpp_utils::ExtractType(schemaCompiledInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, schemaSet, schemaCompiledInfo);
}
// Autogenerated method: System.Xml.Schema.Compiler.Prepare
void System::Xml::Schema::Compiler::Prepare(::System::Xml::Schema::XmlSchema* schema, bool cleanup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::Prepare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Prepare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schema), ::il2cpp_utils::ExtractType(cleanup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schema, cleanup);
}
// Autogenerated method: System.Xml.Schema.Compiler.UpdateSForSSimpleTypes
void System::Xml::Schema::Compiler::UpdateSForSSimpleTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::UpdateSForSSimpleTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSForSSimpleTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Compiler.Output
void System::Xml::Schema::Compiler::Output(::System::Xml::Schema::SchemaInfo* schemaInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::Output");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Output", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schemaInfo);
}
// Autogenerated method: System.Xml.Schema.Compiler.ImportAllCompiledSchemas
void System::Xml::Schema::Compiler::ImportAllCompiledSchemas(::System::Xml::Schema::XmlSchemaSet* schemaSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::ImportAllCompiledSchemas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportAllCompiledSchemas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaSet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, schemaSet);
}
// Autogenerated method: System.Xml.Schema.Compiler.Compile
bool System::Xml::Schema::Compiler::Compile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::Compile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Compiler.CleanupAttribute
void System::Xml::Schema::Compiler::CleanupAttribute(::System::Xml::Schema::XmlSchemaAttribute* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CleanupAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanupAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: System.Xml.Schema.Compiler.CleanupAttributeGroup
void System::Xml::Schema::Compiler::CleanupAttributeGroup(::System::Xml::Schema::XmlSchemaAttributeGroup* attributeGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CleanupAttributeGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanupAttributeGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributeGroup);
}
// Autogenerated method: System.Xml.Schema.Compiler.CleanupComplexType
void System::Xml::Schema::Compiler::CleanupComplexType(::System::Xml::Schema::XmlSchemaComplexType* complexType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CleanupComplexType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanupComplexType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType);
}
// Autogenerated method: System.Xml.Schema.Compiler.CleanupSimpleType
void System::Xml::Schema::Compiler::CleanupSimpleType(::System::Xml::Schema::XmlSchemaSimpleType* simpleType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CleanupSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanupSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(simpleType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, simpleType);
}
// Autogenerated method: System.Xml.Schema.Compiler.CleanupElement
void System::Xml::Schema::Compiler::CleanupElement(::System::Xml::Schema::XmlSchemaElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CleanupElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanupElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: System.Xml.Schema.Compiler.CleanupAttributes
void System::Xml::Schema::Compiler::CleanupAttributes(::System::Xml::Schema::XmlSchemaObjectCollection* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CleanupAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanupAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributes);
}
// Autogenerated method: System.Xml.Schema.Compiler.CleanupGroup
void System::Xml::Schema::Compiler::CleanupGroup(::System::Xml::Schema::XmlSchemaGroup* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CleanupGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanupGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group);
}
// Autogenerated method: System.Xml.Schema.Compiler.CleanupParticle
void System::Xml::Schema::Compiler::CleanupParticle(::System::Xml::Schema::XmlSchemaParticle* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CleanupParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanupParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, particle);
}
// Autogenerated method: System.Xml.Schema.Compiler.ProcessSubstitutionGroups
void System::Xml::Schema::Compiler::ProcessSubstitutionGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::ProcessSubstitutionGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSubstitutionGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileSubstitutionGroup
void System::Xml::Schema::Compiler::CompileSubstitutionGroup(::System::Xml::Schema::XmlSchemaSubstitutionGroup* substitutionGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileSubstitutionGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileSubstitutionGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(substitutionGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, substitutionGroup);
}
// Autogenerated method: System.Xml.Schema.Compiler.RecursivelyCheckRedefinedGroups
void System::Xml::Schema::Compiler::RecursivelyCheckRedefinedGroups(::System::Xml::Schema::XmlSchemaGroup* redefinedGroup, ::System::Xml::Schema::XmlSchemaGroup* baseGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::RecursivelyCheckRedefinedGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecursivelyCheckRedefinedGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(redefinedGroup), ::il2cpp_utils::ExtractType(baseGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, redefinedGroup, baseGroup);
}
// Autogenerated method: System.Xml.Schema.Compiler.RecursivelyCheckRedefinedAttributeGroups
void System::Xml::Schema::Compiler::RecursivelyCheckRedefinedAttributeGroups(::System::Xml::Schema::XmlSchemaAttributeGroup* attributeGroup, ::System::Xml::Schema::XmlSchemaAttributeGroup* baseAttributeGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::RecursivelyCheckRedefinedAttributeGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecursivelyCheckRedefinedAttributeGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeGroup), ::il2cpp_utils::ExtractType(baseAttributeGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributeGroup, baseAttributeGroup);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileGroup
void System::Xml::Schema::Compiler::CompileGroup(::System::Xml::Schema::XmlSchemaGroup* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileSimpleType
void System::Xml::Schema::Compiler::CompileSimpleType(::System::Xml::Schema::XmlSchemaSimpleType* simpleType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(simpleType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, simpleType);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileBaseMemberTypes
::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*> System::Xml::Schema::Compiler::CompileBaseMemberTypes(::System::Xml::Schema::XmlSchemaSimpleType* simpleType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileBaseMemberTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileBaseMemberTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(simpleType)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Xml::Schema::XmlSchemaSimpleType*>, false>(this, ___internal__method, simpleType);
}
// Autogenerated method: System.Xml.Schema.Compiler.CheckUnionType
void System::Xml::Schema::Compiler::CheckUnionType(::System::Xml::Schema::XmlSchemaSimpleType* unionMember, ::System::Collections::ArrayList* memberTypeDefinitions, ::System::Xml::Schema::XmlSchemaSimpleType* parentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CheckUnionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckUnionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unionMember), ::il2cpp_utils::ExtractType(memberTypeDefinitions), ::il2cpp_utils::ExtractType(parentType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unionMember, memberTypeDefinitions, parentType);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileComplexType
void System::Xml::Schema::Compiler::CompileComplexType(::System::Xml::Schema::XmlSchemaComplexType* complexType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileComplexType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileComplexType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileSimpleContentExtension
void System::Xml::Schema::Compiler::CompileSimpleContentExtension(::System::Xml::Schema::XmlSchemaComplexType* complexType, ::System::Xml::Schema::XmlSchemaSimpleContentExtension* simpleExtension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileSimpleContentExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileSimpleContentExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType), ::il2cpp_utils::ExtractType(simpleExtension)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType, simpleExtension);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileSimpleContentRestriction
void System::Xml::Schema::Compiler::CompileSimpleContentRestriction(::System::Xml::Schema::XmlSchemaComplexType* complexType, ::System::Xml::Schema::XmlSchemaSimpleContentRestriction* simpleRestriction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileSimpleContentRestriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileSimpleContentRestriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType), ::il2cpp_utils::ExtractType(simpleRestriction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType, simpleRestriction);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileComplexContentExtension
void System::Xml::Schema::Compiler::CompileComplexContentExtension(::System::Xml::Schema::XmlSchemaComplexType* complexType, ::System::Xml::Schema::XmlSchemaComplexContent* complexContent, ::System::Xml::Schema::XmlSchemaComplexContentExtension* complexExtension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileComplexContentExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileComplexContentExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType), ::il2cpp_utils::ExtractType(complexContent), ::il2cpp_utils::ExtractType(complexExtension)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType, complexContent, complexExtension);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileComplexContentRestriction
void System::Xml::Schema::Compiler::CompileComplexContentRestriction(::System::Xml::Schema::XmlSchemaComplexType* complexType, ::System::Xml::Schema::XmlSchemaComplexContent* complexContent, ::System::Xml::Schema::XmlSchemaComplexContentRestriction* complexRestriction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileComplexContentRestriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileComplexContentRestriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType), ::il2cpp_utils::ExtractType(complexContent), ::il2cpp_utils::ExtractType(complexRestriction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType, complexContent, complexRestriction);
}
// Autogenerated method: System.Xml.Schema.Compiler.CheckParticleDerivation
void System::Xml::Schema::Compiler::CheckParticleDerivation(::System::Xml::Schema::XmlSchemaComplexType* complexType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CheckParticleDerivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckParticleDerivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType);
}
// Autogenerated method: System.Xml.Schema.Compiler.CheckParticleDerivation
void System::Xml::Schema::Compiler::CheckParticleDerivation(::System::Xml::Schema::XmlSchemaParticle* derivedParticle, ::System::Xml::Schema::XmlSchemaParticle* baseParticle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CheckParticleDerivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckParticleDerivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedParticle), ::il2cpp_utils::ExtractType(baseParticle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, derivedParticle, baseParticle);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileContentTypeParticle
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::Compiler::CompileContentTypeParticle(::System::Xml::Schema::XmlSchemaParticle* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileContentTypeParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileContentTypeParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaParticle*, false>(this, ___internal__method, particle);
}
// Autogenerated method: System.Xml.Schema.Compiler.CannonicalizeParticle
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::Compiler::CannonicalizeParticle(::System::Xml::Schema::XmlSchemaParticle* particle, bool root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CannonicalizeParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CannonicalizeParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle), ::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaParticle*, false>(this, ___internal__method, particle, root);
}
// Autogenerated method: System.Xml.Schema.Compiler.CannonicalizeElement
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::Compiler::CannonicalizeElement(::System::Xml::Schema::XmlSchemaElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CannonicalizeElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CannonicalizeElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaParticle*, false>(this, ___internal__method, element);
}
// Autogenerated method: System.Xml.Schema.Compiler.CannonicalizeGroupRef
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::Compiler::CannonicalizeGroupRef(::System::Xml::Schema::XmlSchemaGroupRef* groupRef, bool root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CannonicalizeGroupRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CannonicalizeGroupRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupRef), ::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaParticle*, false>(this, ___internal__method, groupRef, root);
}
// Autogenerated method: System.Xml.Schema.Compiler.CannonicalizeAll
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::Compiler::CannonicalizeAll(::System::Xml::Schema::XmlSchemaAll* all, bool root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CannonicalizeAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CannonicalizeAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(all), ::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaParticle*, false>(this, ___internal__method, all, root);
}
// Autogenerated method: System.Xml.Schema.Compiler.CannonicalizeChoice
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::Compiler::CannonicalizeChoice(::System::Xml::Schema::XmlSchemaChoice* choice, bool root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CannonicalizeChoice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CannonicalizeChoice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(choice), ::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaParticle*, false>(this, ___internal__method, choice, root);
}
// Autogenerated method: System.Xml.Schema.Compiler.CannonicalizeSequence
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::Compiler::CannonicalizeSequence(::System::Xml::Schema::XmlSchemaSequence* sequence, bool root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CannonicalizeSequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CannonicalizeSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequence), ::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaParticle*, false>(this, ___internal__method, sequence, root);
}
// Autogenerated method: System.Xml.Schema.Compiler.CannonicalizePointlessRoot
::System::Xml::Schema::XmlSchemaParticle* System::Xml::Schema::Compiler::CannonicalizePointlessRoot(::System::Xml::Schema::XmlSchemaParticle* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CannonicalizePointlessRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CannonicalizePointlessRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaParticle*, false>(this, ___internal__method, particle);
}
// Autogenerated method: System.Xml.Schema.Compiler.IsValidRestriction
bool System::Xml::Schema::Compiler::IsValidRestriction(::System::Xml::Schema::XmlSchemaParticle* derivedParticle, ::System::Xml::Schema::XmlSchemaParticle* baseParticle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::IsValidRestriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidRestriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedParticle), ::il2cpp_utils::ExtractType(baseParticle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedParticle, baseParticle);
}
// Autogenerated method: System.Xml.Schema.Compiler.IsElementFromElement
bool System::Xml::Schema::Compiler::IsElementFromElement(::System::Xml::Schema::XmlSchemaElement* derivedElement, ::System::Xml::Schema::XmlSchemaElement* baseElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::IsElementFromElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsElementFromElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedElement), ::il2cpp_utils::ExtractType(baseElement)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedElement, baseElement);
}
// Autogenerated method: System.Xml.Schema.Compiler.IsElementFromAny
bool System::Xml::Schema::Compiler::IsElementFromAny(::System::Xml::Schema::XmlSchemaElement* derivedElement, ::System::Xml::Schema::XmlSchemaAny* baseAny) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::IsElementFromAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsElementFromAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedElement), ::il2cpp_utils::ExtractType(baseAny)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedElement, baseAny);
}
// Autogenerated method: System.Xml.Schema.Compiler.IsAnyFromAny
bool System::Xml::Schema::Compiler::IsAnyFromAny(::System::Xml::Schema::XmlSchemaAny* derivedAny, ::System::Xml::Schema::XmlSchemaAny* baseAny) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::IsAnyFromAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAnyFromAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedAny), ::il2cpp_utils::ExtractType(baseAny)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedAny, baseAny);
}
// Autogenerated method: System.Xml.Schema.Compiler.IsGroupBaseFromAny
bool System::Xml::Schema::Compiler::IsGroupBaseFromAny(::System::Xml::Schema::XmlSchemaGroupBase* derivedGroupBase, ::System::Xml::Schema::XmlSchemaAny* baseAny) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::IsGroupBaseFromAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsGroupBaseFromAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedGroupBase), ::il2cpp_utils::ExtractType(baseAny)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedGroupBase, baseAny);
}
// Autogenerated method: System.Xml.Schema.Compiler.IsElementFromGroupBase
bool System::Xml::Schema::Compiler::IsElementFromGroupBase(::System::Xml::Schema::XmlSchemaElement* derivedElement, ::System::Xml::Schema::XmlSchemaGroupBase* baseGroupBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::IsElementFromGroupBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsElementFromGroupBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedElement), ::il2cpp_utils::ExtractType(baseGroupBase)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedElement, baseGroupBase);
}
// Autogenerated method: System.Xml.Schema.Compiler.IsChoiceFromChoiceSubstGroup
bool System::Xml::Schema::Compiler::IsChoiceFromChoiceSubstGroup(::System::Xml::Schema::XmlSchemaChoice* derivedChoice, ::System::Xml::Schema::XmlSchemaChoice* baseChoice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::IsChoiceFromChoiceSubstGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsChoiceFromChoiceSubstGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedChoice), ::il2cpp_utils::ExtractType(baseChoice)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedChoice, baseChoice);
}
// Autogenerated method: System.Xml.Schema.Compiler.IsGroupBaseFromGroupBase
bool System::Xml::Schema::Compiler::IsGroupBaseFromGroupBase(::System::Xml::Schema::XmlSchemaGroupBase* derivedGroupBase, ::System::Xml::Schema::XmlSchemaGroupBase* baseGroupBase, bool skipEmptableOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::IsGroupBaseFromGroupBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsGroupBaseFromGroupBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedGroupBase), ::il2cpp_utils::ExtractType(baseGroupBase), ::il2cpp_utils::ExtractType(skipEmptableOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedGroupBase, baseGroupBase, skipEmptableOnly);
}
// Autogenerated method: System.Xml.Schema.Compiler.IsSequenceFromAll
bool System::Xml::Schema::Compiler::IsSequenceFromAll(::System::Xml::Schema::XmlSchemaSequence* derivedSequence, ::System::Xml::Schema::XmlSchemaAll* baseAll) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::IsSequenceFromAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSequenceFromAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedSequence), ::il2cpp_utils::ExtractType(baseAll)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedSequence, baseAll);
}
// Autogenerated method: System.Xml.Schema.Compiler.IsSequenceFromChoice
bool System::Xml::Schema::Compiler::IsSequenceFromChoice(::System::Xml::Schema::XmlSchemaSequence* derivedSequence, ::System::Xml::Schema::XmlSchemaChoice* baseChoice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::IsSequenceFromChoice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSequenceFromChoice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedSequence), ::il2cpp_utils::ExtractType(baseChoice)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedSequence, baseChoice);
}
// Autogenerated method: System.Xml.Schema.Compiler.IsValidOccurrenceRangeRestriction
bool System::Xml::Schema::Compiler::IsValidOccurrenceRangeRestriction(::System::Xml::Schema::XmlSchemaParticle* derivedParticle, ::System::Xml::Schema::XmlSchemaParticle* baseParticle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::IsValidOccurrenceRangeRestriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidOccurrenceRangeRestriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(derivedParticle), ::il2cpp_utils::ExtractType(baseParticle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, derivedParticle, baseParticle);
}
// Autogenerated method: System.Xml.Schema.Compiler.IsValidOccurrenceRangeRestriction
bool System::Xml::Schema::Compiler::IsValidOccurrenceRangeRestriction(::System::Decimal minOccurs, ::System::Decimal maxOccurs, ::System::Decimal baseMinOccurs, ::System::Decimal baseMaxOccurs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::IsValidOccurrenceRangeRestriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidOccurrenceRangeRestriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(minOccurs), ::il2cpp_utils::ExtractType(maxOccurs), ::il2cpp_utils::ExtractType(baseMinOccurs), ::il2cpp_utils::ExtractType(baseMaxOccurs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, minOccurs, maxOccurs, baseMinOccurs, baseMaxOccurs);
}
// Autogenerated method: System.Xml.Schema.Compiler.GetMappingParticle
int System::Xml::Schema::Compiler::GetMappingParticle(::System::Xml::Schema::XmlSchemaParticle* particle, ::System::Xml::Schema::XmlSchemaObjectCollection* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::GetMappingParticle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMappingParticle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle), ::il2cpp_utils::ExtractType(collection)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, particle, collection);
}
// Autogenerated method: System.Xml.Schema.Compiler.IsParticleEmptiable
bool System::Xml::Schema::Compiler::IsParticleEmptiable(::System::Xml::Schema::XmlSchemaParticle* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::IsParticleEmptiable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsParticleEmptiable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, particle);
}
// Autogenerated method: System.Xml.Schema.Compiler.CalculateEffectiveTotalRange
void System::Xml::Schema::Compiler::CalculateEffectiveTotalRange(::System::Xml::Schema::XmlSchemaParticle* particle, ByRef<::System::Decimal> minOccurs, ByRef<::System::Decimal> maxOccurs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CalculateEffectiveTotalRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateEffectiveTotalRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle), ::il2cpp_utils::ExtractIndependentType<::System::Decimal&>(), ::il2cpp_utils::ExtractIndependentType<::System::Decimal&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, particle, byref(minOccurs), byref(maxOccurs));
}
// Autogenerated method: System.Xml.Schema.Compiler.PushComplexType
void System::Xml::Schema::Compiler::PushComplexType(::System::Xml::Schema::XmlSchemaComplexType* complexType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::PushComplexType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushComplexType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType);
}
// Autogenerated method: System.Xml.Schema.Compiler.GetSchemaContentType
::System::Xml::Schema::XmlSchemaContentType System::Xml::Schema::Compiler::GetSchemaContentType(::System::Xml::Schema::XmlSchemaComplexType* complexType, ::System::Xml::Schema::XmlSchemaComplexContent* complexContent, ::System::Xml::Schema::XmlSchemaParticle* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::GetSchemaContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSchemaContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType), ::il2cpp_utils::ExtractType(complexContent), ::il2cpp_utils::ExtractType(particle)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaContentType, false>(this, ___internal__method, complexType, complexContent, particle);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileAttributeGroup
void System::Xml::Schema::Compiler::CompileAttributeGroup(::System::Xml::Schema::XmlSchemaAttributeGroup* attributeGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileAttributeGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileAttributeGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributeGroup);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileLocalAttributes
void System::Xml::Schema::Compiler::CompileLocalAttributes(::System::Xml::Schema::XmlSchemaComplexType* baseType, ::System::Xml::Schema::XmlSchemaComplexType* derivedType, ::System::Xml::Schema::XmlSchemaObjectCollection* attributes, ::System::Xml::Schema::XmlSchemaAnyAttribute* anyAttribute, ::System::Xml::Schema::XmlSchemaDerivationMethod derivedBy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileLocalAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileLocalAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseType), ::il2cpp_utils::ExtractType(derivedType), ::il2cpp_utils::ExtractType(attributes), ::il2cpp_utils::ExtractType(anyAttribute), ::il2cpp_utils::ExtractType(derivedBy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseType, derivedType, attributes, anyAttribute, derivedBy);
}
// Autogenerated method: System.Xml.Schema.Compiler.CheckAtrributeGroupRestriction
void System::Xml::Schema::Compiler::CheckAtrributeGroupRestriction(::System::Xml::Schema::XmlSchemaAttributeGroup* baseAttributeGroup, ::System::Xml::Schema::XmlSchemaAttributeGroup* derivedAttributeGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CheckAtrributeGroupRestriction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAtrributeGroupRestriction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseAttributeGroup), ::il2cpp_utils::ExtractType(derivedAttributeGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseAttributeGroup, derivedAttributeGroup);
}
// Autogenerated method: System.Xml.Schema.Compiler.IsProcessContentsRestricted
bool System::Xml::Schema::Compiler::IsProcessContentsRestricted(::System::Xml::Schema::XmlSchemaComplexType* baseType, ::System::Xml::Schema::XmlSchemaAnyAttribute* derivedAttributeWildcard, ::System::Xml::Schema::XmlSchemaAnyAttribute* baseAttributeWildcard) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::IsProcessContentsRestricted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsProcessContentsRestricted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseType), ::il2cpp_utils::ExtractType(derivedAttributeWildcard), ::il2cpp_utils::ExtractType(baseAttributeWildcard)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, baseType, derivedAttributeWildcard, baseAttributeWildcard);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileAnyAttributeUnion
::System::Xml::Schema::XmlSchemaAnyAttribute* System::Xml::Schema::Compiler::CompileAnyAttributeUnion(::System::Xml::Schema::XmlSchemaAnyAttribute* a, ::System::Xml::Schema::XmlSchemaAnyAttribute* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileAnyAttributeUnion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileAnyAttributeUnion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaAnyAttribute*, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileAnyAttributeIntersection
::System::Xml::Schema::XmlSchemaAnyAttribute* System::Xml::Schema::Compiler::CompileAnyAttributeIntersection(::System::Xml::Schema::XmlSchemaAnyAttribute* a, ::System::Xml::Schema::XmlSchemaAnyAttribute* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileAnyAttributeIntersection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileAnyAttributeIntersection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaAnyAttribute*, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileAttribute
void System::Xml::Schema::Compiler::CompileAttribute(::System::Xml::Schema::XmlSchemaAttribute* xa) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xa)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xa);
}
// Autogenerated method: System.Xml.Schema.Compiler.SetDefaultFixed
void System::Xml::Schema::Compiler::SetDefaultFixed(::System::Xml::Schema::XmlSchemaAttribute* xa, ::System::Xml::Schema::SchemaAttDef* decl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::SetDefaultFixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultFixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xa), ::il2cpp_utils::ExtractType(decl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xa, decl);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileIdentityConstraint
void System::Xml::Schema::Compiler::CompileIdentityConstraint(::System::Xml::Schema::XmlSchemaIdentityConstraint* xi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileIdentityConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileIdentityConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xi);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileElement
void System::Xml::Schema::Compiler::CompileElement(::System::Xml::Schema::XmlSchemaElement* xe) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xe)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xe);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileComplexContent
::System::Xml::Schema::ContentValidator* System::Xml::Schema::Compiler::CompileComplexContent(::System::Xml::Schema::XmlSchemaComplexType* complexType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileComplexContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileComplexContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::ContentValidator*, false>(this, ___internal__method, complexType);
}
// Autogenerated method: System.Xml.Schema.Compiler.BuildParticleContentModel
bool System::Xml::Schema::Compiler::BuildParticleContentModel(::System::Xml::Schema::ParticleContentValidator* contentValidator, ::System::Xml::Schema::XmlSchemaParticle* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::BuildParticleContentModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildParticleContentModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentValidator), ::il2cpp_utils::ExtractType(particle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, contentValidator, particle);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileParticleElements
void System::Xml::Schema::Compiler::CompileParticleElements(::System::Xml::Schema::XmlSchemaComplexType* complexType, ::System::Xml::Schema::XmlSchemaParticle* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileParticleElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileParticleElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType), ::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType, particle);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileParticleElements
void System::Xml::Schema::Compiler::CompileParticleElements(::System::Xml::Schema::XmlSchemaParticle* particle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileParticleElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileParticleElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(particle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, particle);
}
// Autogenerated method: System.Xml.Schema.Compiler.CompileComplexTypeElements
void System::Xml::Schema::Compiler::CompileComplexTypeElements(::System::Xml::Schema::XmlSchemaComplexType* complexType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CompileComplexTypeElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileComplexTypeElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(complexType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, complexType);
}
// Autogenerated method: System.Xml.Schema.Compiler.GetSimpleType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::Schema::Compiler::GetSimpleType(::System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::GetSimpleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSimpleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.Compiler.GetComplexType
::System::Xml::Schema::XmlSchemaComplexType* System::Xml::Schema::Compiler::GetComplexType(::System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::GetComplexType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComplexType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaComplexType*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.Compiler.GetAnySchemaType
::System::Xml::Schema::XmlSchemaType* System::Xml::Schema::Compiler::GetAnySchemaType(::System::Xml::XmlQualifiedName* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::GetAnySchemaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAnySchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.Schema.Compiler.CopyPosition
void System::Xml::Schema::Compiler::CopyPosition(::System::Xml::Schema::XmlSchemaAnnotated* to, ::System::Xml::Schema::XmlSchemaAnnotated* from, bool copyParent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::CopyPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(copyParent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, to, from, copyParent);
}
// Autogenerated method: System.Xml.Schema.Compiler.IsFixedEqual
bool System::Xml::Schema::Compiler::IsFixedEqual(::System::Xml::Schema::SchemaDeclBase* baseDecl, ::System::Xml::Schema::SchemaDeclBase* derivedDecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::Compiler::IsFixedEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsFixedEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseDecl), ::il2cpp_utils::ExtractType(derivedDecl)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, baseDecl, derivedDecl);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.SchemaType
#include "System/Xml/Schema/SchemaType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaType None
::System::Xml::Schema::SchemaType System::Xml::Schema::SchemaType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaType>("System.Xml.Schema", "SchemaType", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaType None
void System::Xml::Schema::SchemaType::_set_None(::System::Xml::Schema::SchemaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaType DTD
::System::Xml::Schema::SchemaType System::Xml::Schema::SchemaType::_get_DTD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaType::_get_DTD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaType>("System.Xml.Schema", "SchemaType", "DTD"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaType DTD
void System::Xml::Schema::SchemaType::_set_DTD(::System::Xml::Schema::SchemaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaType::_set_DTD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaType", "DTD", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaType XDR
::System::Xml::Schema::SchemaType System::Xml::Schema::SchemaType::_get_XDR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaType::_get_XDR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaType>("System.Xml.Schema", "SchemaType", "XDR"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaType XDR
void System::Xml::Schema::SchemaType::_set_XDR(::System::Xml::Schema::SchemaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaType::_set_XDR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaType", "XDR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.Schema.SchemaType XSD
::System::Xml::Schema::SchemaType System::Xml::Schema::SchemaType::_get_XSD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaType::_get_XSD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::SchemaType>("System.Xml.Schema", "SchemaType", "XSD"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.Schema.SchemaType XSD
void System::Xml::Schema::SchemaType::_set_XSD(::System::Xml::Schema::SchemaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaType::_set_XSD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "SchemaType", "XSD", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated]] int& System::Xml::Schema::SchemaType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::SchemaType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.ValidationEventArgs
#include "System/Xml/Schema/ValidationEventArgs.hpp"
// Including type: System.Xml.Schema.XmlSchemaException
#include "System/Xml/Schema/XmlSchemaException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaException ex
[[deprecated]] ::System::Xml::Schema::XmlSchemaException*& System::Xml::Schema::ValidationEventArgs::dyn_ex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationEventArgs::dyn_ex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ex"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaException**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSeverityType severity
[[deprecated]] ::System::Xml::Schema::XmlSeverityType& System::Xml::Schema::ValidationEventArgs::dyn_severity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationEventArgs::dyn_severity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "severity"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSeverityType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.ValidationEventArgs.get_Severity
::System::Xml::Schema::XmlSeverityType System::Xml::Schema::ValidationEventArgs::get_Severity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationEventArgs::get_Severity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Severity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSeverityType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.ValidationEventArgs.get_Exception
::System::Xml::Schema::XmlSchemaException* System::Xml::Schema::ValidationEventArgs::get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationEventArgs::get_Exception");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaException*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.ValidationEventHandler
#include "System/Xml/Schema/ValidationEventHandler.hpp"
// Including type: System.Xml.Schema.ValidationEventArgs
#include "System/Xml/Schema/ValidationEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.ValidationEventHandler.Invoke
void System::Xml::Schema::ValidationEventHandler::Invoke(::Il2CppObject* sender, ::System::Xml::Schema::ValidationEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::ValidationEventHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Xml.Schema.ValidationEventHandler.BeginInvoke
::System::IAsyncResult* System::Xml::Schema::ValidationEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::Xml::Schema::ValidationEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::ValidationEventHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.Xml.Schema.ValidationEventHandler.EndInvoke
void System::Xml::Schema::ValidationEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::ValidationEventHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.ValidationState
#include "System/Xml/Schema/ValidationState.hpp"
// Including type: System.Xml.Schema.SchemaElementDecl
#include "System/Xml/Schema/SchemaElementDecl.hpp"
// Including type: System.Xml.Schema.ConstraintStruct
#include "System/Xml/Schema/ConstraintStruct.hpp"
// Including type: System.Xml.Schema.BitSet
#include "System/Xml/Schema/BitSet.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsNill
[[deprecated]] bool& System::Xml::Schema::ValidationState::dyn_IsNill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationState::dyn_IsNill");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsNill"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsDefault
[[deprecated]] bool& System::Xml::Schema::ValidationState::dyn_IsDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationState::dyn_IsDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsDefault"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean NeedValidateChildren
[[deprecated]] bool& System::Xml::Schema::ValidationState::dyn_NeedValidateChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationState::dyn_NeedValidateChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NeedValidateChildren"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean CheckRequiredAttribute
[[deprecated]] bool& System::Xml::Schema::ValidationState::dyn_CheckRequiredAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationState::dyn_CheckRequiredAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CheckRequiredAttribute"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ValidationSkipped
[[deprecated]] bool& System::Xml::Schema::ValidationState::dyn_ValidationSkipped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationState::dyn_ValidationSkipped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ValidationSkipped"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.XmlSchemaContentProcessing ProcessContents
[[deprecated]] ::System::Xml::Schema::XmlSchemaContentProcessing& System::Xml::Schema::ValidationState::dyn_ProcessContents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationState::dyn_ProcessContents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProcessContents"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaContentProcessing*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.XmlSchemaValidity Validity
[[deprecated]] ::System::Xml::Schema::XmlSchemaValidity& System::Xml::Schema::ValidationState::dyn_Validity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationState::dyn_Validity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Validity"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaValidity*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.SchemaElementDecl ElementDecl
[[deprecated]] ::System::Xml::Schema::SchemaElementDecl*& System::Xml::Schema::ValidationState::dyn_ElementDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationState::dyn_ElementDecl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ElementDecl"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaElementDecl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.SchemaElementDecl ElementDeclBeforeXsi
[[deprecated]] ::System::Xml::Schema::SchemaElementDecl*& System::Xml::Schema::ValidationState::dyn_ElementDeclBeforeXsi() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationState::dyn_ElementDeclBeforeXsi");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ElementDeclBeforeXsi"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaElementDecl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String LocalName
[[deprecated]] ::StringW& System::Xml::Schema::ValidationState::dyn_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationState::dyn_LocalName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LocalName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Namespace
[[deprecated]] ::StringW& System::Xml::Schema::ValidationState::dyn_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationState::dyn_Namespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Namespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.ConstraintStruct[] Constr
[[deprecated]] ::ArrayW<::System::Xml::Schema::ConstraintStruct*>& System::Xml::Schema::ValidationState::dyn_Constr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationState::dyn_Constr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Constr"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::ConstraintStruct*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.StateUnion CurrentState
[[deprecated]] ::System::Xml::Schema::StateUnion& System::Xml::Schema::ValidationState::dyn_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationState::dyn_CurrentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurrentState"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::StateUnion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean HasMatched
[[deprecated]] bool& System::Xml::Schema::ValidationState::dyn_HasMatched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationState::dyn_HasMatched");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HasMatched"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.BitSet[] CurPos
[[deprecated]] ::ArrayW<::System::Xml::Schema::BitSet*>& System::Xml::Schema::ValidationState::dyn_CurPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationState::dyn_CurPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CurPos"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::BitSet*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.Schema.BitSet AllElementsSet
[[deprecated]] ::System::Xml::Schema::BitSet*& System::Xml::Schema::ValidationState::dyn_AllElementsSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationState::dyn_AllElementsSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AllElementsSet"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::BitSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Xml.Schema.RangePositionInfo> RunningPositions
[[deprecated]] ::System::Collections::Generic::List_1<::System::Xml::Schema::RangePositionInfo>*& System::Xml::Schema::ValidationState::dyn_RunningPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationState::dyn_RunningPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RunningPositions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Xml::Schema::RangePositionInfo>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean TooComplex
[[deprecated]] bool& System::Xml::Schema::ValidationState::dyn_TooComplex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::ValidationState::dyn_TooComplex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TooComplex"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XdrBuilder
#include "System/Xml/Schema/XdrBuilder.hpp"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.DeclBaseInfo
#include "System/Xml/Schema/XdrBuilder_DeclBaseInfo.hpp"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.GroupContent
#include "System/Xml/Schema/XdrBuilder_GroupContent.hpp"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.ElementContent
#include "System/Xml/Schema/XdrBuilder_ElementContent.hpp"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.AttributeContent
#include "System/Xml/Schema/XdrBuilder_AttributeContent.hpp"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrBuildFunction
#include "System/Xml/Schema/XdrBuilder_XdrBuildFunction.hpp"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrInitFunction
#include "System/Xml/Schema/XdrBuilder_XdrInitFunction.hpp"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrBeginChildFunction
#include "System/Xml/Schema/XdrBuilder_XdrBeginChildFunction.hpp"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrEndChildFunction
#include "System/Xml/Schema/XdrBuilder_XdrEndChildFunction.hpp"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry
#include "System/Xml/Schema/XdrBuilder_XdrAttributeEntry.hpp"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrEntry
#include "System/Xml/Schema/XdrBuilder_XdrEntry.hpp"
// Including type: System.Xml.Schema.SchemaInfo
#include "System/Xml/Schema/SchemaInfo.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.PositionInfo
#include "System/Xml/PositionInfo.hpp"
// Including type: System.Xml.Schema.ParticleContentValidator
#include "System/Xml/Schema/ParticleContentValidator.hpp"
// Including type: System.Xml.HWStack
#include "System/Xml/HWStack.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.Schema.SchemaNames
#include "System/Xml/Schema/SchemaNames.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
// Including type: System.Xml.Schema.ValidationEventHandler
#include "System/Xml/Schema/ValidationEventHandler.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.XmlResolver
#include "System/Xml/XmlResolver.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.SchemaAttDef
#include "System/Xml/Schema/SchemaAttDef.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Xml.Schema.XmlSeverityType
#include "System/Xml/Schema/XmlSeverityType.hpp"
// Including type: System.Xml.Schema.XmlSchemaException
#include "System/Xml/Schema/XmlSchemaException.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] S_XDR_Root_Element
::ArrayW<int> System::Xml::Schema::XdrBuilder::_get_S_XDR_Root_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_get_S_XDR_Root_Element");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Xml.Schema", "XdrBuilder", "S_XDR_Root_Element"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] S_XDR_Root_Element
void System::Xml::Schema::XdrBuilder::_set_S_XDR_Root_Element(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_set_S_XDR_Root_Element");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XdrBuilder", "S_XDR_Root_Element", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] S_XDR_Root_SubElements
::ArrayW<int> System::Xml::Schema::XdrBuilder::_get_S_XDR_Root_SubElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_get_S_XDR_Root_SubElements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Xml.Schema", "XdrBuilder", "S_XDR_Root_SubElements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] S_XDR_Root_SubElements
void System::Xml::Schema::XdrBuilder::_set_S_XDR_Root_SubElements(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_set_S_XDR_Root_SubElements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XdrBuilder", "S_XDR_Root_SubElements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] S_XDR_ElementType_SubElements
::ArrayW<int> System::Xml::Schema::XdrBuilder::_get_S_XDR_ElementType_SubElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_get_S_XDR_ElementType_SubElements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Xml.Schema", "XdrBuilder", "S_XDR_ElementType_SubElements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] S_XDR_ElementType_SubElements
void System::Xml::Schema::XdrBuilder::_set_S_XDR_ElementType_SubElements(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_set_S_XDR_ElementType_SubElements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XdrBuilder", "S_XDR_ElementType_SubElements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] S_XDR_AttributeType_SubElements
::ArrayW<int> System::Xml::Schema::XdrBuilder::_get_S_XDR_AttributeType_SubElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_get_S_XDR_AttributeType_SubElements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Xml.Schema", "XdrBuilder", "S_XDR_AttributeType_SubElements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] S_XDR_AttributeType_SubElements
void System::Xml::Schema::XdrBuilder::_set_S_XDR_AttributeType_SubElements(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_set_S_XDR_AttributeType_SubElements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XdrBuilder", "S_XDR_AttributeType_SubElements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] S_XDR_Group_SubElements
::ArrayW<int> System::Xml::Schema::XdrBuilder::_get_S_XDR_Group_SubElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_get_S_XDR_Group_SubElements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Xml.Schema", "XdrBuilder", "S_XDR_Group_SubElements"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] S_XDR_Group_SubElements
void System::Xml::Schema::XdrBuilder::_set_S_XDR_Group_SubElements(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_set_S_XDR_Group_SubElements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XdrBuilder", "S_XDR_Group_SubElements", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_Root_Attributes
::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> System::Xml::Schema::XdrBuilder::_get_S_XDR_Root_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_get_S_XDR_Root_Attributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*>>("System.Xml.Schema", "XdrBuilder", "S_XDR_Root_Attributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_Root_Attributes
void System::Xml::Schema::XdrBuilder::_set_S_XDR_Root_Attributes(::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_set_S_XDR_Root_Attributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XdrBuilder", "S_XDR_Root_Attributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_ElementType_Attributes
::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> System::Xml::Schema::XdrBuilder::_get_S_XDR_ElementType_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_get_S_XDR_ElementType_Attributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*>>("System.Xml.Schema", "XdrBuilder", "S_XDR_ElementType_Attributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_ElementType_Attributes
void System::Xml::Schema::XdrBuilder::_set_S_XDR_ElementType_Attributes(::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_set_S_XDR_ElementType_Attributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XdrBuilder", "S_XDR_ElementType_Attributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_AttributeType_Attributes
::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> System::Xml::Schema::XdrBuilder::_get_S_XDR_AttributeType_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_get_S_XDR_AttributeType_Attributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*>>("System.Xml.Schema", "XdrBuilder", "S_XDR_AttributeType_Attributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_AttributeType_Attributes
void System::Xml::Schema::XdrBuilder::_set_S_XDR_AttributeType_Attributes(::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_set_S_XDR_AttributeType_Attributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XdrBuilder", "S_XDR_AttributeType_Attributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_Element_Attributes
::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> System::Xml::Schema::XdrBuilder::_get_S_XDR_Element_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_get_S_XDR_Element_Attributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*>>("System.Xml.Schema", "XdrBuilder", "S_XDR_Element_Attributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_Element_Attributes
void System::Xml::Schema::XdrBuilder::_set_S_XDR_Element_Attributes(::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_set_S_XDR_Element_Attributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XdrBuilder", "S_XDR_Element_Attributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_Attribute_Attributes
::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> System::Xml::Schema::XdrBuilder::_get_S_XDR_Attribute_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_get_S_XDR_Attribute_Attributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*>>("System.Xml.Schema", "XdrBuilder", "S_XDR_Attribute_Attributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_Attribute_Attributes
void System::Xml::Schema::XdrBuilder::_set_S_XDR_Attribute_Attributes(::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_set_S_XDR_Attribute_Attributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XdrBuilder", "S_XDR_Attribute_Attributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_Group_Attributes
::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> System::Xml::Schema::XdrBuilder::_get_S_XDR_Group_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_get_S_XDR_Group_Attributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*>>("System.Xml.Schema", "XdrBuilder", "S_XDR_Group_Attributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_Group_Attributes
void System::Xml::Schema::XdrBuilder::_set_S_XDR_Group_Attributes(::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_set_S_XDR_Group_Attributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XdrBuilder", "S_XDR_Group_Attributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_ElementDataType_Attributes
::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> System::Xml::Schema::XdrBuilder::_get_S_XDR_ElementDataType_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_get_S_XDR_ElementDataType_Attributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*>>("System.Xml.Schema", "XdrBuilder", "S_XDR_ElementDataType_Attributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_ElementDataType_Attributes
void System::Xml::Schema::XdrBuilder::_set_S_XDR_ElementDataType_Attributes(::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_set_S_XDR_ElementDataType_Attributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XdrBuilder", "S_XDR_ElementDataType_Attributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_AttributeDataType_Attributes
::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> System::Xml::Schema::XdrBuilder::_get_S_XDR_AttributeDataType_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_get_S_XDR_AttributeDataType_Attributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*>>("System.Xml.Schema", "XdrBuilder", "S_XDR_AttributeDataType_Attributes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] S_XDR_AttributeDataType_Attributes
void System::Xml::Schema::XdrBuilder::_set_S_XDR_AttributeDataType_Attributes(::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_set_S_XDR_AttributeDataType_Attributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XdrBuilder", "S_XDR_AttributeDataType_Attributes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrEntry[] S_SchemaEntries
::ArrayW<::System::Xml::Schema::XdrBuilder::XdrEntry*> System::Xml::Schema::XdrBuilder::_get_S_SchemaEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_get_S_SchemaEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::Schema::XdrBuilder::XdrEntry*>>("System.Xml.Schema", "XdrBuilder", "S_SchemaEntries"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrEntry[] S_SchemaEntries
void System::Xml::Schema::XdrBuilder::_set_S_SchemaEntries(::ArrayW<::System::Xml::Schema::XdrBuilder::XdrEntry*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::_set_S_SchemaEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml.Schema", "XdrBuilder", "S_SchemaEntries", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaInfo _SchemaInfo
[[deprecated]] ::System::Xml::Schema::SchemaInfo*& System::Xml::Schema::XdrBuilder::dyn__SchemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__SchemaInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_SchemaInfo"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _TargetNamespace
[[deprecated]] ::StringW& System::Xml::Schema::XdrBuilder::dyn__TargetNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__TargetNamespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_TargetNamespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlReader _reader
[[deprecated]] ::System::Xml::XmlReader*& System::Xml::Schema::XdrBuilder::dyn__reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reader"))->offset;
  return *reinterpret_cast<::System::Xml::XmlReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.PositionInfo positionInfo
[[deprecated]] ::System::Xml::PositionInfo*& System::Xml::Schema::XdrBuilder::dyn_positionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn_positionInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionInfo"))->offset;
  return *reinterpret_cast<::System::Xml::PositionInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ParticleContentValidator _contentValidator
[[deprecated]] ::System::Xml::Schema::ParticleContentValidator*& System::Xml::Schema::XdrBuilder::dyn__contentValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__contentValidator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentValidator"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::ParticleContentValidator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrEntry _CurState
[[deprecated]] ::System::Xml::Schema::XdrBuilder::XdrEntry*& System::Xml::Schema::XdrBuilder::dyn__CurState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__CurState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_CurState"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XdrBuilder::XdrEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrEntry _NextState
[[deprecated]] ::System::Xml::Schema::XdrBuilder::XdrEntry*& System::Xml::Schema::XdrBuilder::dyn__NextState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__NextState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_NextState"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XdrBuilder::XdrEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.HWStack _StateHistory
[[deprecated]] ::System::Xml::HWStack*& System::Xml::Schema::XdrBuilder::dyn__StateHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__StateHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_StateHistory"))->offset;
  return *reinterpret_cast<::System::Xml::HWStack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.HWStack _GroupStack
[[deprecated]] ::System::Xml::HWStack*& System::Xml::Schema::XdrBuilder::dyn__GroupStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__GroupStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_GroupStack"))->offset;
  return *reinterpret_cast<::System::Xml::HWStack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _XdrName
[[deprecated]] ::StringW& System::Xml::Schema::XdrBuilder::dyn__XdrName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__XdrName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_XdrName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _XdrPrefix
[[deprecated]] ::StringW& System::Xml::Schema::XdrBuilder::dyn__XdrPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__XdrPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_XdrPrefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XdrBuilder/System.Xml.Schema.ElementContent _ElementDef
[[deprecated]] ::System::Xml::Schema::XdrBuilder::ElementContent*& System::Xml::Schema::XdrBuilder::dyn__ElementDef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__ElementDef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ElementDef"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XdrBuilder::ElementContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XdrBuilder/System.Xml.Schema.GroupContent _GroupDef
[[deprecated]] ::System::Xml::Schema::XdrBuilder::GroupContent*& System::Xml::Schema::XdrBuilder::dyn__GroupDef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__GroupDef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_GroupDef"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XdrBuilder::GroupContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XdrBuilder/System.Xml.Schema.AttributeContent _AttributeDef
[[deprecated]] ::System::Xml::Schema::XdrBuilder::AttributeContent*& System::Xml::Schema::XdrBuilder::dyn__AttributeDef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__AttributeDef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_AttributeDef"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XdrBuilder::AttributeContent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XdrBuilder/System.Xml.Schema.DeclBaseInfo _UndefinedAttributeTypes
[[deprecated]] ::System::Xml::Schema::XdrBuilder::DeclBaseInfo*& System::Xml::Schema::XdrBuilder::dyn__UndefinedAttributeTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__UndefinedAttributeTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_UndefinedAttributeTypes"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XdrBuilder::DeclBaseInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XdrBuilder/System.Xml.Schema.DeclBaseInfo _BaseDecl
[[deprecated]] ::System::Xml::Schema::XdrBuilder::DeclBaseInfo*& System::Xml::Schema::XdrBuilder::dyn__BaseDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__BaseDecl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_BaseDecl"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XdrBuilder::DeclBaseInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable _NameTable
[[deprecated]] ::System::Xml::XmlNameTable*& System::Xml::Schema::XdrBuilder::dyn__NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__NameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_NameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaNames _SchemaNames
[[deprecated]] ::System::Xml::Schema::SchemaNames*& System::Xml::Schema::XdrBuilder::dyn__SchemaNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__SchemaNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_SchemaNames"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaNames**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNamespaceManager _CurNsMgr
[[deprecated]] ::System::Xml::XmlNamespaceManager*& System::Xml::Schema::XdrBuilder::dyn__CurNsMgr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__CurNsMgr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_CurNsMgr"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNamespaceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _Text
[[deprecated]] ::StringW& System::Xml::Schema::XdrBuilder::dyn__Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.ValidationEventHandler validationEventHandler
[[deprecated]] ::System::Xml::Schema::ValidationEventHandler*& System::Xml::Schema::XdrBuilder::dyn_validationEventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn_validationEventHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validationEventHandler"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::ValidationEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _UndeclaredElements
[[deprecated]] ::System::Collections::Hashtable*& System::Xml::Schema::XdrBuilder::dyn__UndeclaredElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn__UndeclaredElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_UndeclaredElements"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlResolver xmlResolver
[[deprecated]] ::System::Xml::XmlResolver*& System::Xml::Schema::XdrBuilder::dyn_xmlResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::dyn_xmlResolver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlResolver"))->offset;
  return *reinterpret_cast<::System::Xml::XmlResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.set_XmlResolver
void System::Xml::Schema::XdrBuilder::set_XmlResolver(::System::Xml::XmlResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::set_XmlResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XmlResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder..cctor
void System::Xml::Schema::XdrBuilder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.LoadSchema
bool System::Xml::Schema::XdrBuilder::LoadSchema(::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::LoadSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.IsXdrSchema
bool System::Xml::Schema::XdrBuilder::IsXdrSchema(::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::IsXdrSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "IsXdrSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.Push
void System::Xml::Schema::XdrBuilder::Push() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::Push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.Pop
void System::Xml::Schema::XdrBuilder::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.PushGroupInfo
void System::Xml::Schema::XdrBuilder::PushGroupInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::PushGroupInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushGroupInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.PopGroupInfo
void System::Xml::Schema::XdrBuilder::PopGroupInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::PopGroupInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopGroupInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_InitRoot
void System::Xml::Schema::XdrBuilder::XDR_InitRoot(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_InitRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_InitRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildRoot_Name
void System::Xml::Schema::XdrBuilder::XDR_BuildRoot_Name(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildRoot_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildRoot_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildRoot_ID
void System::Xml::Schema::XdrBuilder::XDR_BuildRoot_ID(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildRoot_ID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildRoot_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BeginRoot
void System::Xml::Schema::XdrBuilder::XDR_BeginRoot(::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BeginRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BeginRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_EndRoot
void System::Xml::Schema::XdrBuilder::XDR_EndRoot(::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_EndRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_EndRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_InitElementType
void System::Xml::Schema::XdrBuilder::XDR_InitElementType(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_InitElementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_InitElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildElementType_Name
void System::Xml::Schema::XdrBuilder::XDR_BuildElementType_Name(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildElementType_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildElementType_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildElementType_Content
void System::Xml::Schema::XdrBuilder::XDR_BuildElementType_Content(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildElementType_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildElementType_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildElementType_Model
void System::Xml::Schema::XdrBuilder::XDR_BuildElementType_Model(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildElementType_Model");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildElementType_Model", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildElementType_Order
void System::Xml::Schema::XdrBuilder::XDR_BuildElementType_Order(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildElementType_Order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildElementType_Order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildElementType_DtType
void System::Xml::Schema::XdrBuilder::XDR_BuildElementType_DtType(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildElementType_DtType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildElementType_DtType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildElementType_DtValues
void System::Xml::Schema::XdrBuilder::XDR_BuildElementType_DtValues(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildElementType_DtValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildElementType_DtValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildElementType_DtMaxLength
void System::Xml::Schema::XdrBuilder::XDR_BuildElementType_DtMaxLength(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildElementType_DtMaxLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildElementType_DtMaxLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildElementType_DtMinLength
void System::Xml::Schema::XdrBuilder::XDR_BuildElementType_DtMinLength(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildElementType_DtMinLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildElementType_DtMinLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BeginElementType
void System::Xml::Schema::XdrBuilder::XDR_BeginElementType(::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BeginElementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BeginElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_EndElementType
void System::Xml::Schema::XdrBuilder::XDR_EndElementType(::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_EndElementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_EndElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_InitAttributeType
void System::Xml::Schema::XdrBuilder::XDR_InitAttributeType(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_InitAttributeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_InitAttributeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildAttributeType_Name
void System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_Name(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildAttributeType_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildAttributeType_Required
void System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_Required(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_Required");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildAttributeType_Required", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildAttributeType_Default
void System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_Default(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildAttributeType_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildAttributeType_DtType
void System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_DtType(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_DtType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildAttributeType_DtType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildAttributeType_DtValues
void System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_DtValues(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_DtValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildAttributeType_DtValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildAttributeType_DtMaxLength
void System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_DtMaxLength(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_DtMaxLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildAttributeType_DtMaxLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildAttributeType_DtMinLength
void System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_DtMinLength(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildAttributeType_DtMinLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildAttributeType_DtMinLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BeginAttributeType
void System::Xml::Schema::XdrBuilder::XDR_BeginAttributeType(::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BeginAttributeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BeginAttributeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_EndAttributeType
void System::Xml::Schema::XdrBuilder::XDR_EndAttributeType(::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_EndAttributeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_EndAttributeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_InitElement
void System::Xml::Schema::XdrBuilder::XDR_InitElement(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_InitElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_InitElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildElement_Type
void System::Xml::Schema::XdrBuilder::XDR_BuildElement_Type(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildElement_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildElement_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildElement_MinOccurs
void System::Xml::Schema::XdrBuilder::XDR_BuildElement_MinOccurs(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildElement_MinOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildElement_MinOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildElement_MaxOccurs
void System::Xml::Schema::XdrBuilder::XDR_BuildElement_MaxOccurs(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildElement_MaxOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildElement_MaxOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_EndElement
void System::Xml::Schema::XdrBuilder::XDR_EndElement(::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_EndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_EndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_InitAttribute
void System::Xml::Schema::XdrBuilder::XDR_InitAttribute(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_InitAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_InitAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildAttribute_Type
void System::Xml::Schema::XdrBuilder::XDR_BuildAttribute_Type(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildAttribute_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildAttribute_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildAttribute_Required
void System::Xml::Schema::XdrBuilder::XDR_BuildAttribute_Required(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildAttribute_Required");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildAttribute_Required", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildAttribute_Default
void System::Xml::Schema::XdrBuilder::XDR_BuildAttribute_Default(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildAttribute_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildAttribute_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BeginAttribute
void System::Xml::Schema::XdrBuilder::XDR_BeginAttribute(::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BeginAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BeginAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_EndAttribute
void System::Xml::Schema::XdrBuilder::XDR_EndAttribute(::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_EndAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_EndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_InitGroup
void System::Xml::Schema::XdrBuilder::XDR_InitGroup(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_InitGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_InitGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildGroup_Order
void System::Xml::Schema::XdrBuilder::XDR_BuildGroup_Order(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildGroup_Order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildGroup_Order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildGroup_MinOccurs
void System::Xml::Schema::XdrBuilder::XDR_BuildGroup_MinOccurs(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildGroup_MinOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildGroup_MinOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_BuildGroup_MaxOccurs
void System::Xml::Schema::XdrBuilder::XDR_BuildGroup_MaxOccurs(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_BuildGroup_MaxOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_BuildGroup_MaxOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_EndGroup
void System::Xml::Schema::XdrBuilder::XDR_EndGroup(::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_EndGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_EndGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_InitElementDtType
void System::Xml::Schema::XdrBuilder::XDR_InitElementDtType(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_InitElementDtType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_InitElementDtType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_EndElementDtType
void System::Xml::Schema::XdrBuilder::XDR_EndElementDtType(::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_EndElementDtType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_EndElementDtType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_InitAttributeDtType
void System::Xml::Schema::XdrBuilder::XDR_InitAttributeDtType(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_InitAttributeDtType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_InitAttributeDtType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder, obj);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_EndAttributeDtType
void System::Xml::Schema::XdrBuilder::XDR_EndAttributeDtType(::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_EndAttributeDtType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "XDR_EndAttributeDtType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.GetNextState
bool System::Xml::Schema::XdrBuilder::GetNextState(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::GetNextState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.IsSkipableElement
bool System::Xml::Schema::XdrBuilder::IsSkipableElement(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::IsSkipableElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSkipableElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.IsSkipableAttribute
bool System::Xml::Schema::XdrBuilder::IsSkipableAttribute(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::IsSkipableAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSkipableAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.GetOrder
int System::Xml::Schema::XdrBuilder::GetOrder(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::GetOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.AddOrder
void System::Xml::Schema::XdrBuilder::AddOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::AddOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.IsYes
bool System::Xml::Schema::XdrBuilder::IsYes(::Il2CppObject* obj, ::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::IsYes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "IsYes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(builder)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.ParseMinOccurs
uint System::Xml::Schema::XdrBuilder::ParseMinOccurs(::Il2CppObject* obj, ::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ParseMinOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "ParseMinOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(builder)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.ParseMaxOccurs
uint System::Xml::Schema::XdrBuilder::ParseMaxOccurs(::Il2CppObject* obj, ::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ParseMaxOccurs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "ParseMaxOccurs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(builder)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.HandleMinMax
void System::Xml::Schema::XdrBuilder::HandleMinMax(::System::Xml::Schema::ParticleContentValidator* pContent, uint cMin, uint cMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::HandleMinMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "HandleMinMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pContent), ::il2cpp_utils::ExtractType(cMin), ::il2cpp_utils::ExtractType(cMax)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pContent, cMin, cMax);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.ParseDtMaxLength
void System::Xml::Schema::XdrBuilder::ParseDtMaxLength(ByRef<uint> cVal, ::Il2CppObject* obj, ::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ParseDtMaxLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "ParseDtMaxLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cVal), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(cVal), obj, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.ParseDtMinLength
void System::Xml::Schema::XdrBuilder::ParseDtMinLength(ByRef<uint> cVal, ::Il2CppObject* obj, ::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ParseDtMinLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "ParseDtMinLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cVal), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(cVal), obj, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.CompareMinMaxLength
void System::Xml::Schema::XdrBuilder::CompareMinMaxLength(uint cMin, uint cMax, ::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::CompareMinMaxLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "CompareMinMaxLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cMin), ::il2cpp_utils::ExtractType(cMax), ::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cMin, cMax, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.ParseInteger
bool System::Xml::Schema::XdrBuilder::ParseInteger(::StringW str, ByRef<uint> n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ParseInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder", "ParseInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, byref(n));
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.XDR_CheckAttributeDefault
void System::Xml::Schema::XdrBuilder::XDR_CheckAttributeDefault(::System::Xml::Schema::XdrBuilder::DeclBaseInfo* decl, ::System::Xml::Schema::SchemaAttDef* pAttdef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XDR_CheckAttributeDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "XDR_CheckAttributeDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(decl), ::il2cpp_utils::ExtractType(pAttdef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, decl, pAttdef);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.SetAttributePresence
void System::Xml::Schema::XdrBuilder::SetAttributePresence(::System::Xml::Schema::SchemaAttDef* pAttdef, bool fRequired) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::SetAttributePresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAttributePresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pAttdef), ::il2cpp_utils::ExtractType(fRequired)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pAttdef, fRequired);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.GetContent
int System::Xml::Schema::XdrBuilder::GetContent(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::GetContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.GetModel
bool System::Xml::Schema::XdrBuilder::GetModel(::System::Xml::XmlQualifiedName* qname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::GetModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qname)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, qname);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.CheckDatatype
::System::Xml::Schema::XmlSchemaDatatype* System::Xml::Schema::XdrBuilder::CheckDatatype(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::CheckDatatype");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDatatype", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaDatatype*, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.CheckDefaultAttValue
void System::Xml::Schema::XdrBuilder::CheckDefaultAttValue(::System::Xml::Schema::SchemaAttDef* attDef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::CheckDefaultAttValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDefaultAttValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attDef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attDef);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.IsGlobal
bool System::Xml::Schema::XdrBuilder::IsGlobal(int flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::IsGlobal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsGlobal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.SendValidationEvent
void System::Xml::Schema::XdrBuilder::SendValidationEvent(::StringW code, ::ArrayW<::StringW> args, ::System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, args, severity);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.SendValidationEvent
void System::Xml::Schema::XdrBuilder::SendValidationEvent(::StringW code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.SendValidationEvent
void System::Xml::Schema::XdrBuilder::SendValidationEvent(::StringW code, ::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, msg);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.SendValidationEvent
void System::Xml::Schema::XdrBuilder::SendValidationEvent(::System::Xml::Schema::XmlSchemaException* e, ::System::Xml::Schema::XmlSeverityType severity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(severity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e, severity);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.ProcessElement
bool System::Xml::Schema::XdrBuilder::ProcessElement(::StringW prefix, ::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ProcessElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, prefix, name, ns);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.ProcessAttribute
void System::Xml::Schema::XdrBuilder::ProcessAttribute(::StringW prefix, ::StringW name, ::StringW ns, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ProcessAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, name, ns, value);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.IsContentParsed
bool System::Xml::Schema::XdrBuilder::IsContentParsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::IsContentParsed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.ProcessMarkup
void System::Xml::Schema::XdrBuilder::ProcessMarkup(::ArrayW<::System::Xml::XmlNode*> markup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ProcessMarkup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, markup);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.ProcessCData
void System::Xml::Schema::XdrBuilder::ProcessCData(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ProcessCData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.StartChildren
void System::Xml::Schema::XdrBuilder::StartChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::StartChildren");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder.EndChildren
void System::Xml::Schema::XdrBuilder::EndChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::EndChildren");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::SchemaBuilder*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.DeclBaseInfo
#include "System/Xml/Schema/XdrBuilder_DeclBaseInfo.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.SchemaElementDecl
#include "System/Xml/Schema/SchemaElementDecl.hpp"
// Including type: System.Xml.Schema.SchemaAttDef
#include "System/Xml/Schema/SchemaAttDef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlQualifiedName _Name
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Name"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _Prefix
[[deprecated]] ::StringW& System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__Prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlQualifiedName _TypeName
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__TypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_TypeName"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _TypePrefix
[[deprecated]] ::StringW& System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__TypePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__TypePrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_TypePrefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object _Default
[[deprecated]] ::Il2CppObject*& System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__Default");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Default"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object _Revises
[[deprecated]] ::Il2CppObject*& System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__Revises() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__Revises");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Revises"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 _MaxOccurs
[[deprecated]] uint& System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__MaxOccurs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__MaxOccurs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MaxOccurs"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 _MinOccurs
[[deprecated]] uint& System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__MinOccurs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__MinOccurs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MinOccurs"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _Checking
[[deprecated]] bool& System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__Checking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__Checking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Checking"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.SchemaElementDecl _ElementDecl
[[deprecated]] ::System::Xml::Schema::SchemaElementDecl*& System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__ElementDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__ElementDecl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ElementDecl"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaElementDecl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.SchemaAttDef _Attdef
[[deprecated]] ::System::Xml::Schema::SchemaAttDef*& System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__Attdef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__Attdef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Attdef"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaAttDef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.XdrBuilder/System.Xml.Schema.DeclBaseInfo _Next
[[deprecated]] ::System::Xml::Schema::XdrBuilder::DeclBaseInfo*& System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::DeclBaseInfo::dyn__Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Next"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XdrBuilder::DeclBaseInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder/System.Xml.Schema.DeclBaseInfo.Reset
void System::Xml::Schema::XdrBuilder::DeclBaseInfo::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::DeclBaseInfo::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.GroupContent
#include "System/Xml/Schema/XdrBuilder_GroupContent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.UInt32 _MinVal
[[deprecated]] uint& System::Xml::Schema::XdrBuilder::GroupContent::dyn__MinVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::GroupContent::dyn__MinVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MinVal"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 _MaxVal
[[deprecated]] uint& System::Xml::Schema::XdrBuilder::GroupContent::dyn__MaxVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::GroupContent::dyn__MaxVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MaxVal"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _HasMaxAttr
[[deprecated]] bool& System::Xml::Schema::XdrBuilder::GroupContent::dyn__HasMaxAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::GroupContent::dyn__HasMaxAttr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_HasMaxAttr"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _HasMinAttr
[[deprecated]] bool& System::Xml::Schema::XdrBuilder::GroupContent::dyn__HasMinAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::GroupContent::dyn__HasMinAttr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_HasMinAttr"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _Order
[[deprecated]] int& System::Xml::Schema::XdrBuilder::GroupContent::dyn__Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::GroupContent::dyn__Order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder/System.Xml.Schema.GroupContent.Copy
void System::Xml::Schema::XdrBuilder::GroupContent::Copy(::System::Xml::Schema::XdrBuilder::GroupContent* from, ::System::Xml::Schema::XdrBuilder::GroupContent* to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::GroupContent::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder/GroupContent", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, from, to);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder/System.Xml.Schema.GroupContent.Copy
::System::Xml::Schema::XdrBuilder::GroupContent* System::Xml::Schema::XdrBuilder::GroupContent::Copy(::System::Xml::Schema::XdrBuilder::GroupContent* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::GroupContent::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrBuilder/GroupContent", "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XdrBuilder::GroupContent*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.ElementContent
#include "System/Xml/Schema/XdrBuilder_ElementContent.hpp"
// Including type: System.Xml.Schema.SchemaElementDecl
#include "System/Xml/Schema/SchemaElementDecl.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.SchemaElementDecl _ElementDecl
[[deprecated]] ::System::Xml::Schema::SchemaElementDecl*& System::Xml::Schema::XdrBuilder::ElementContent::dyn__ElementDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ElementContent::dyn__ElementDecl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ElementDecl"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaElementDecl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _ContentAttr
[[deprecated]] int& System::Xml::Schema::XdrBuilder::ElementContent::dyn__ContentAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ElementContent::dyn__ContentAttr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ContentAttr"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _OrderAttr
[[deprecated]] int& System::Xml::Schema::XdrBuilder::ElementContent::dyn__OrderAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ElementContent::dyn__OrderAttr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_OrderAttr"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _MasterGroupRequired
[[deprecated]] bool& System::Xml::Schema::XdrBuilder::ElementContent::dyn__MasterGroupRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ElementContent::dyn__MasterGroupRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MasterGroupRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _ExistTerminal
[[deprecated]] bool& System::Xml::Schema::XdrBuilder::ElementContent::dyn__ExistTerminal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ElementContent::dyn__ExistTerminal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ExistTerminal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _AllowDataType
[[deprecated]] bool& System::Xml::Schema::XdrBuilder::ElementContent::dyn__AllowDataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ElementContent::dyn__AllowDataType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_AllowDataType"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _HasDataType
[[deprecated]] bool& System::Xml::Schema::XdrBuilder::ElementContent::dyn__HasDataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ElementContent::dyn__HasDataType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_HasDataType"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _HasType
[[deprecated]] bool& System::Xml::Schema::XdrBuilder::ElementContent::dyn__HasType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ElementContent::dyn__HasType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_HasType"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _EnumerationRequired
[[deprecated]] bool& System::Xml::Schema::XdrBuilder::ElementContent::dyn__EnumerationRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ElementContent::dyn__EnumerationRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_EnumerationRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 _MinVal
[[deprecated]] uint& System::Xml::Schema::XdrBuilder::ElementContent::dyn__MinVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ElementContent::dyn__MinVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MinVal"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 _MaxVal
[[deprecated]] uint& System::Xml::Schema::XdrBuilder::ElementContent::dyn__MaxVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ElementContent::dyn__MaxVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MaxVal"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 _MaxLength
[[deprecated]] uint& System::Xml::Schema::XdrBuilder::ElementContent::dyn__MaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ElementContent::dyn__MaxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MaxLength"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 _MinLength
[[deprecated]] uint& System::Xml::Schema::XdrBuilder::ElementContent::dyn__MinLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ElementContent::dyn__MinLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MinLength"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _AttDefList
[[deprecated]] ::System::Collections::Hashtable*& System::Xml::Schema::XdrBuilder::ElementContent::dyn__AttDefList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::ElementContent::dyn__AttDefList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_AttDefList"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.AttributeContent
#include "System/Xml/Schema/XdrBuilder_AttributeContent.hpp"
// Including type: System.Xml.Schema.SchemaAttDef
#include "System/Xml/Schema/SchemaAttDef.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.SchemaAttDef _AttDef
[[deprecated]] ::System::Xml::Schema::SchemaAttDef*& System::Xml::Schema::XdrBuilder::AttributeContent::dyn__AttDef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::AttributeContent::dyn__AttDef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_AttDef"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaAttDef**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlQualifiedName _Name
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XdrBuilder::AttributeContent::dyn__Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::AttributeContent::dyn__Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Name"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _Prefix
[[deprecated]] ::StringW& System::Xml::Schema::XdrBuilder::AttributeContent::dyn__Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::AttributeContent::dyn__Prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _Required
[[deprecated]] bool& System::Xml::Schema::XdrBuilder::AttributeContent::dyn__Required() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::AttributeContent::dyn__Required");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Required"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 _MinVal
[[deprecated]] uint& System::Xml::Schema::XdrBuilder::AttributeContent::dyn__MinVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::AttributeContent::dyn__MinVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MinVal"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 _MaxVal
[[deprecated]] uint& System::Xml::Schema::XdrBuilder::AttributeContent::dyn__MaxVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::AttributeContent::dyn__MaxVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MaxVal"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 _MaxLength
[[deprecated]] uint& System::Xml::Schema::XdrBuilder::AttributeContent::dyn__MaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::AttributeContent::dyn__MaxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MaxLength"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 _MinLength
[[deprecated]] uint& System::Xml::Schema::XdrBuilder::AttributeContent::dyn__MinLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::AttributeContent::dyn__MinLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_MinLength"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _EnumerationRequired
[[deprecated]] bool& System::Xml::Schema::XdrBuilder::AttributeContent::dyn__EnumerationRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::AttributeContent::dyn__EnumerationRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_EnumerationRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _HasDataType
[[deprecated]] bool& System::Xml::Schema::XdrBuilder::AttributeContent::dyn__HasDataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::AttributeContent::dyn__HasDataType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_HasDataType"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _Global
[[deprecated]] bool& System::Xml::Schema::XdrBuilder::AttributeContent::dyn__Global() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::AttributeContent::dyn__Global");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Global"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object _Default
[[deprecated]] ::Il2CppObject*& System::Xml::Schema::XdrBuilder::AttributeContent::dyn__Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::AttributeContent::dyn__Default");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Default"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrBuildFunction
#include "System/Xml/Schema/XdrBuilder_XdrBuildFunction.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrBuildFunction.Invoke
void System::Xml::Schema::XdrBuilder::XdrBuildFunction::Invoke(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrBuildFunction::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XdrBuilder::XdrBuildFunction*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, builder, obj, prefix);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrBuildFunction.BeginInvoke
::System::IAsyncResult* System::Xml::Schema::XdrBuilder::XdrBuildFunction::BeginInvoke(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::StringW prefix, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrBuildFunction::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XdrBuilder::XdrBuildFunction*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, builder, obj, prefix, callback, object);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrBuildFunction.EndInvoke
void System::Xml::Schema::XdrBuilder::XdrBuildFunction::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrBuildFunction::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XdrBuilder::XdrBuildFunction*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrInitFunction
#include "System/Xml/Schema/XdrBuilder_XdrInitFunction.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrInitFunction.Invoke
void System::Xml::Schema::XdrBuilder::XdrInitFunction::Invoke(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrInitFunction::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XdrBuilder::XdrInitFunction*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, builder, obj);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrInitFunction.BeginInvoke
::System::IAsyncResult* System::Xml::Schema::XdrBuilder::XdrInitFunction::BeginInvoke(::System::Xml::Schema::XdrBuilder* builder, ::Il2CppObject* obj, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrInitFunction::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XdrBuilder::XdrInitFunction*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, builder, obj, callback, object);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrInitFunction.EndInvoke
void System::Xml::Schema::XdrBuilder::XdrInitFunction::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrInitFunction::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XdrBuilder::XdrInitFunction*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrBeginChildFunction
#include "System/Xml/Schema/XdrBuilder_XdrBeginChildFunction.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrBeginChildFunction.Invoke
void System::Xml::Schema::XdrBuilder::XdrBeginChildFunction::Invoke(::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrBeginChildFunction::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XdrBuilder::XdrBeginChildFunction*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrBeginChildFunction.BeginInvoke
::System::IAsyncResult* System::Xml::Schema::XdrBuilder::XdrBeginChildFunction::BeginInvoke(::System::Xml::Schema::XdrBuilder* builder, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrBeginChildFunction::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XdrBuilder::XdrBeginChildFunction*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, builder, callback, object);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrBeginChildFunction.EndInvoke
void System::Xml::Schema::XdrBuilder::XdrBeginChildFunction::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrBeginChildFunction::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XdrBuilder::XdrBeginChildFunction*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrEndChildFunction
#include "System/Xml/Schema/XdrBuilder_XdrEndChildFunction.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrEndChildFunction.Invoke
void System::Xml::Schema::XdrBuilder::XdrEndChildFunction::Invoke(::System::Xml::Schema::XdrBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrEndChildFunction::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XdrBuilder::XdrEndChildFunction*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, builder);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrEndChildFunction.BeginInvoke
::System::IAsyncResult* System::Xml::Schema::XdrBuilder::XdrEndChildFunction::BeginInvoke(::System::Xml::Schema::XdrBuilder* builder, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrEndChildFunction::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XdrBuilder::XdrEndChildFunction*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, builder, callback, object);
}
// Autogenerated method: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrEndChildFunction.EndInvoke
void System::Xml::Schema::XdrBuilder::XdrEndChildFunction::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrEndChildFunction::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XdrBuilder::XdrEndChildFunction*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry
#include "System/Xml/Schema/XdrBuilder_XdrAttributeEntry.hpp"
// Including type: System.Xml.Schema.XmlSchemaDatatype
#include "System/Xml/Schema/XmlSchemaDatatype.hpp"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrBuildFunction
#include "System/Xml/Schema/XdrBuilder_XdrBuildFunction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.SchemaNames/System.Xml.Schema.Token _Attribute
[[deprecated]] ::System::Xml::Schema::SchemaNames::Token& System::Xml::Schema::XdrBuilder::XdrAttributeEntry::dyn__Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrAttributeEntry::dyn__Attribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Attribute"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaNames::Token*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _SchemaFlags
[[deprecated]] int& System::Xml::Schema::XdrBuilder::XdrAttributeEntry::dyn__SchemaFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrAttributeEntry::dyn__SchemaFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_SchemaFlags"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.XmlSchemaDatatype _Datatype
[[deprecated]] ::System::Xml::Schema::XmlSchemaDatatype*& System::Xml::Schema::XdrBuilder::XdrAttributeEntry::dyn__Datatype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrAttributeEntry::dyn__Datatype");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Datatype"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaDatatype**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrBuildFunction _BuildFunc
[[deprecated]] ::System::Xml::Schema::XdrBuilder::XdrBuildFunction*& System::Xml::Schema::XdrBuilder::XdrAttributeEntry::dyn__BuildFunc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrAttributeEntry::dyn__BuildFunc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_BuildFunc"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XdrBuilder::XdrBuildFunction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrEntry
#include "System/Xml/Schema/XdrBuilder_XdrEntry.hpp"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry
#include "System/Xml/Schema/XdrBuilder_XdrAttributeEntry.hpp"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrInitFunction
#include "System/Xml/Schema/XdrBuilder_XdrInitFunction.hpp"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrBeginChildFunction
#include "System/Xml/Schema/XdrBuilder_XdrBeginChildFunction.hpp"
// Including type: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrEndChildFunction
#include "System/Xml/Schema/XdrBuilder_XdrEndChildFunction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.SchemaNames/System.Xml.Schema.Token _Name
[[deprecated]] ::System::Xml::Schema::SchemaNames::Token& System::Xml::Schema::XdrBuilder::XdrEntry::dyn__Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrEntry::dyn__Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Name"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaNames::Token*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] _NextStates
[[deprecated]] ::ArrayW<int>& System::Xml::Schema::XdrBuilder::XdrEntry::dyn__NextStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrEntry::dyn__NextStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_NextStates"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrAttributeEntry[] _Attributes
[[deprecated]] ::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*>& System::Xml::Schema::XdrBuilder::XdrEntry::dyn__Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrEntry::dyn__Attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Attributes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::Schema::XdrBuilder::XdrAttributeEntry*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrInitFunction _InitFunc
[[deprecated]] ::System::Xml::Schema::XdrBuilder::XdrInitFunction*& System::Xml::Schema::XdrBuilder::XdrEntry::dyn__InitFunc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrEntry::dyn__InitFunc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_InitFunc"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XdrBuilder::XdrInitFunction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrBeginChildFunction _BeginChildFunc
[[deprecated]] ::System::Xml::Schema::XdrBuilder::XdrBeginChildFunction*& System::Xml::Schema::XdrBuilder::XdrEntry::dyn__BeginChildFunc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrEntry::dyn__BeginChildFunc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_BeginChildFunc"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XdrBuilder::XdrBeginChildFunction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.Schema.XdrBuilder/System.Xml.Schema.XdrEndChildFunction _EndChildFunc
[[deprecated]] ::System::Xml::Schema::XdrBuilder::XdrEndChildFunction*& System::Xml::Schema::XdrBuilder::XdrEntry::dyn__EndChildFunc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrEntry::dyn__EndChildFunc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_EndChildFunc"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XdrBuilder::XdrEndChildFunction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _AllowText
[[deprecated]] bool& System::Xml::Schema::XdrBuilder::XdrEntry::dyn__AllowText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrBuilder::XdrEntry::dyn__AllowText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_AllowText"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XdrValidator
#include "System/Xml/Schema/XdrValidator.hpp"
// Including type: System.Xml.HWStack
#include "System/Xml/HWStack.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
// Including type: System.Xml.Schema.IdRefNode
#include "System/Xml/Schema/IdRefNode.hpp"
// Including type: System.Xml.Schema.Parser
#include "System/Xml/Schema/Parser.hpp"
// Including type: System.Xml.Schema.SchemaElementDecl
#include "System/Xml/Schema/SchemaElementDecl.hpp"
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
// Including type: System.Xml.Schema.SchemaAttDef
#include "System/Xml/Schema/SchemaAttDef.hpp"
// Including type: System.Xml.Schema.SchemaInfo
#include "System/Xml/Schema/SchemaInfo.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.Schema.ValidationEventHandler
#include "System/Xml/Schema/ValidationEventHandler.hpp"
// Including type: System.Xml.XmlValidatingReaderImpl
#include "System/Xml/XmlValidatingReaderImpl.hpp"
// Including type: System.Xml.Schema.XmlSchemaCollection
#include "System/Xml/Schema/XmlSchemaCollection.hpp"
// Including type: System.Xml.IValidationEventHandling
#include "System/Xml/IValidationEventHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.HWStack validationStack
[[deprecated]] ::System::Xml::HWStack*& System::Xml::Schema::XdrValidator::dyn_validationStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::dyn_validationStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validationStack"))->offset;
  return *reinterpret_cast<::System::Xml::HWStack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable attPresence
[[deprecated]] ::System::Collections::Hashtable*& System::Xml::Schema::XdrValidator::dyn_attPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::dyn_attPresence");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attPresence"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlQualifiedName name
[[deprecated]] ::System::Xml::XmlQualifiedName*& System::Xml::Schema::XdrValidator::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::System::Xml::XmlQualifiedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNamespaceManager nsManager
[[deprecated]] ::System::Xml::XmlNamespaceManager*& System::Xml::Schema::XdrValidator::dyn_nsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::dyn_nsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nsManager"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNamespaceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isProcessContents
[[deprecated]] bool& System::Xml::Schema::XdrValidator::dyn_isProcessContents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::dyn_isProcessContents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isProcessContents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable IDs
[[deprecated]] ::System::Collections::Hashtable*& System::Xml::Schema::XdrValidator::dyn_IDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::dyn_IDs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IDs"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.IdRefNode idRefListHead
[[deprecated]] ::System::Xml::Schema::IdRefNode*& System::Xml::Schema::XdrValidator::dyn_idRefListHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::dyn_idRefListHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idRefListHead"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::IdRefNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.Parser inlineSchemaParser
[[deprecated]] ::System::Xml::Schema::Parser*& System::Xml::Schema::XdrValidator::dyn_inlineSchemaParser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::dyn_inlineSchemaParser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inlineSchemaParser"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::Parser**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.get_IsInlineSchemaStarted
bool System::Xml::Schema::XdrValidator::get_IsInlineSchemaStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::get_IsInlineSchemaStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInlineSchemaStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.get_HasSchema
bool System::Xml::Schema::XdrValidator::get_HasSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::get_HasSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.Init
void System::Xml::Schema::XdrValidator::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.ValidateElement
void System::Xml::Schema::XdrValidator::ValidateElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::ValidateElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.ValidateChildElement
void System::Xml::Schema::XdrValidator::ValidateChildElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::ValidateChildElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateChildElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.ProcessInlineSchema
void System::Xml::Schema::XdrValidator::ProcessInlineSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::ProcessInlineSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInlineSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.ProcessElement
void System::Xml::Schema::XdrValidator::ProcessElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::ProcessElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.ValidateEndElement
void System::Xml::Schema::XdrValidator::ValidateEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::ValidateEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.ThoroughGetElementDecl
::System::Xml::Schema::SchemaElementDecl* System::Xml::Schema::XdrValidator::ThoroughGetElementDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::ThoroughGetElementDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThoroughGetElementDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaElementDecl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.ValidateStartElement
void System::Xml::Schema::XdrValidator::ValidateStartElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::ValidateStartElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.ValidateEndStartElement
void System::Xml::Schema::XdrValidator::ValidateEndStartElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::ValidateEndStartElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateEndStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.LoadSchemaFromLocation
void System::Xml::Schema::XdrValidator::LoadSchemaFromLocation(::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::LoadSchemaFromLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSchemaFromLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.LoadSchema
void System::Xml::Schema::XdrValidator::LoadSchema(::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::LoadSchema");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSchema", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.ProcessTokenizedType
void System::Xml::Schema::XdrValidator::ProcessTokenizedType(::System::Xml::XmlTokenizedType ttype, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::ProcessTokenizedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessTokenizedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ttype), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ttype, name);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.CheckValue
void System::Xml::Schema::XdrValidator::CheckValue(::StringW value, ::System::Xml::Schema::SchemaAttDef* attdef) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::CheckValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(attdef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, attdef);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.CheckDefaultValue
void System::Xml::Schema::XdrValidator::CheckDefaultValue(::StringW value, ::System::Xml::Schema::SchemaAttDef* attdef, ::System::Xml::Schema::SchemaInfo* sinfo, ::System::Xml::XmlNamespaceManager* nsManager, ::System::Xml::XmlNameTable* NameTable, ::Il2CppObject* sender, ::System::Xml::Schema::ValidationEventHandler* eventhandler, ::StringW baseUri, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::CheckDefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml.Schema", "XdrValidator", "CheckDefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(attdef), ::il2cpp_utils::ExtractType(sinfo), ::il2cpp_utils::ExtractType(nsManager), ::il2cpp_utils::ExtractType(NameTable), ::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(eventhandler), ::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, attdef, sinfo, nsManager, NameTable, sender, eventhandler, baseUri, lineNo, linePos);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.AddID
void System::Xml::Schema::XdrValidator::AddID(::StringW name, ::Il2CppObject* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::AddID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, node);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.Push
void System::Xml::Schema::XdrValidator::Push(::System::Xml::XmlQualifiedName* elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::Push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, elementName);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.Pop
void System::Xml::Schema::XdrValidator::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.CheckForwardRefs
void System::Xml::Schema::XdrValidator::CheckForwardRefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::CheckForwardRefs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForwardRefs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.QualifiedName
::System::Xml::XmlQualifiedName* System::Xml::Schema::XdrValidator::QualifiedName(::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::QualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method, name, ns);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.get_PreserveWhitespace
bool System::Xml::Schema::XdrValidator::get_PreserveWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::get_PreserveWhitespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.Validate
void System::Xml::Schema::XdrValidator::Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::Validate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.CompleteValidation
void System::Xml::Schema::XdrValidator::CompleteValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::CompleteValidation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XdrValidator.FindId
::Il2CppObject* System::Xml::Schema::XdrValidator::FindId(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XdrValidator::FindId");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::BaseValidator*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.Schema.XmlAtomicValue
#include "System/Xml/Schema/XmlAtomicValue.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.Schema.XmlAtomicValue/System.Xml.Schema.NamespacePrefixForQName
#include "System/Xml/Schema/XmlAtomicValue_NamespacePrefixForQName.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaType xmlType
[[deprecated]] ::System::Xml::Schema::XmlSchemaType*& System::Xml::Schema::XmlAtomicValue::dyn_xmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::dyn_xmlType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object objVal
[[deprecated]] ::Il2CppObject*& System::Xml::Schema::XmlAtomicValue::dyn_objVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::dyn_objVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objVal"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.TypeCode clrType
[[deprecated]] ::System::TypeCode& System::Xml::Schema::XmlAtomicValue::dyn_clrType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::dyn_clrType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clrType"))->offset;
  return *reinterpret_cast<::System::TypeCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlAtomicValue/System.Xml.Schema.Union unionVal
[[deprecated]] ::System::Xml::Schema::XmlAtomicValue::Union& System::Xml::Schema::XmlAtomicValue::dyn_unionVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::dyn_unionVal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unionVal"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlAtomicValue::Union*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlAtomicValue/System.Xml.Schema.NamespacePrefixForQName nsPrefix
[[deprecated]] ::System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName*& System::Xml::Schema::XmlAtomicValue::dyn_nsPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::dyn_nsPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nsPrefix"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.System.ICloneable.Clone
::Il2CppObject* System::Xml::Schema::XmlAtomicValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlAtomicValue*), 15));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.GetPrefixFromQName
::StringW System::Xml::Schema::XmlAtomicValue::GetPrefixFromQName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::GetPrefixFromQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrefixFromQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.get_XmlType
::System::Xml::Schema::XmlSchemaType* System::Xml::Schema::XmlAtomicValue::get_XmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::get_XmlType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.get_ValueType
::System::Type* System::Xml::Schema::XmlAtomicValue::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.get_TypedValue
::Il2CppObject* System::Xml::Schema::XmlAtomicValue::get_TypedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::get_TypedValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.get_ValueAsBoolean
bool System::Xml::Schema::XmlAtomicValue::get_ValueAsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::get_ValueAsBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.get_ValueAsDateTime
::System::DateTime System::Xml::Schema::XmlAtomicValue::get_ValueAsDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::get_ValueAsDateTime");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.get_ValueAsDouble
double System::Xml::Schema::XmlAtomicValue::get_ValueAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::get_ValueAsDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 10));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.get_ValueAsInt
int System::Xml::Schema::XmlAtomicValue::get_ValueAsInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::get_ValueAsInt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.get_ValueAsLong
int64_t System::Xml::Schema::XmlAtomicValue::get_ValueAsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::get_ValueAsLong");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.get_Value
::StringW System::Xml::Schema::XmlAtomicValue::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.ValueAs
::Il2CppObject* System::Xml::Schema::XmlAtomicValue::ValueAs(::System::Type* type, ::System::Xml::IXmlNamespaceResolver* nsResolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::ValueAs");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, type, nsResolver);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue.ToString
::StringW System::Xml::Schema::XmlAtomicValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Schema.XmlAtomicValue/System.Xml.Schema.NamespacePrefixForQName
#include "System/Xml/Schema/XmlAtomicValue_NamespacePrefixForQName.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Xml.XmlNamespaceScope
#include "System/Xml/XmlNamespaceScope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String prefix
[[deprecated]] ::StringW& System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ns
[[deprecated]] ::StringW& System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue/System.Xml.Schema.NamespacePrefixForQName.LookupNamespace
::StringW System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue/System.Xml.Schema.NamespacePrefixForQName.LookupPrefix
::StringW System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName::LookupPrefix(::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceName);
}
// Autogenerated method: System.Xml.Schema.XmlAtomicValue/System.Xml.Schema.NamespacePrefixForQName.GetNamespacesInScope
::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName::GetNamespacesInScope(::System::Xml::XmlNamespaceScope scope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName::GetNamespacesInScope");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Schema::XmlAtomicValue::NamespacePrefixForQName*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method, scope);
}
