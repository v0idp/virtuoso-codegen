// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipEndOfCentralDirectoryBlock
#include "System/IO/Compression/ZipEndOfCentralDirectoryBlock.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Signature
[[deprecated("Use field access instead!")]] uint& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_Signature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_Signature");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Signature"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 NumberOfThisDisk
[[deprecated("Use field access instead!")]] uint16_t& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfThisDisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfThisDisk");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfThisDisk"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 NumberOfTheDiskWithTheStartOfTheCentralDirectory
[[deprecated("Use field access instead!")]] uint16_t& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfTheDiskWithTheStartOfTheCentralDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfTheDiskWithTheStartOfTheCentralDirectory");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfTheDiskWithTheStartOfTheCentralDirectory"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 NumberOfEntriesInTheCentralDirectoryOnThisDisk
[[deprecated("Use field access instead!")]] uint16_t& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfEntriesInTheCentralDirectoryOnThisDisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfEntriesInTheCentralDirectoryOnThisDisk");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfEntriesInTheCentralDirectoryOnThisDisk"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 NumberOfEntriesInTheCentralDirectory
[[deprecated("Use field access instead!")]] uint16_t& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfEntriesInTheCentralDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_NumberOfEntriesInTheCentralDirectory");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfEntriesInTheCentralDirectory"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 SizeOfCentralDirectory
[[deprecated("Use field access instead!")]] uint& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_SizeOfCentralDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_SizeOfCentralDirectory");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SizeOfCentralDirectory"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 OffsetOfStartOfCentralDirectoryWithRespectToTheStartingDiskNumber
[[deprecated("Use field access instead!")]] uint& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_OffsetOfStartOfCentralDirectoryWithRespectToTheStartingDiskNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_OffsetOfStartOfCentralDirectoryWithRespectToTheStartingDiskNumber");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OffsetOfStartOfCentralDirectoryWithRespectToTheStartingDiskNumber"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] ArchiveComment
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_ArchiveComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::dyn_ArchiveComment");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ArchiveComment"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.ZipEndOfCentralDirectoryBlock.WriteBlock
void System::IO::Compression::ZipEndOfCentralDirectoryBlock::WriteBlock(::System::IO::Stream* stream, int64_t numberOfEntries, int64_t startOfCentralDirectory, int64_t sizeOfCentralDirectory, ::ArrayW<uint8_t> archiveComment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::WriteBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipEndOfCentralDirectoryBlock", "WriteBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(numberOfEntries), ::il2cpp_utils::ExtractType(startOfCentralDirectory), ::il2cpp_utils::ExtractType(sizeOfCentralDirectory), ::il2cpp_utils::ExtractType(archiveComment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, numberOfEntries, startOfCentralDirectory, sizeOfCentralDirectory, archiveComment);
}
// Autogenerated method: System.IO.Compression.ZipEndOfCentralDirectoryBlock.TryReadBlock
bool System::IO::Compression::ZipEndOfCentralDirectoryBlock::TryReadBlock(::System::IO::BinaryReader* reader, ByRef<::System::IO::Compression::ZipEndOfCentralDirectoryBlock> eocdBlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipEndOfCentralDirectoryBlock::TryReadBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipEndOfCentralDirectoryBlock", "TryReadBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractIndependentType<::System::IO::Compression::ZipEndOfCentralDirectoryBlock&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, byref(eocdBlock));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.WrappedStream
#include "System/IO/Compression/WrappedStream.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.IO.Compression.ZipArchiveEntry
#include "System/IO/Compression/ZipArchiveEntry.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream _baseStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::IO::Compression::WrappedStream::dyn__baseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::dyn__baseStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _closeBaseStream
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::WrappedStream::dyn__closeBaseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::dyn__closeBaseStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closeBaseStream"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`1<System.IO.Compression.ZipArchiveEntry> _onClosed
[[deprecated("Use field access instead!")]] ::System::Action_1<::System::IO::Compression::ZipArchiveEntry*>*& System::IO::Compression::WrappedStream::dyn__onClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::dyn__onClosed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onClosed"))->offset;
  return *reinterpret_cast<::System::Action_1<::System::IO::Compression::ZipArchiveEntry*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.ZipArchiveEntry _zipArchiveEntry
[[deprecated("Use field access instead!")]] ::System::IO::Compression::ZipArchiveEntry*& System::IO::Compression::WrappedStream::dyn__zipArchiveEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::dyn__zipArchiveEntry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zipArchiveEntry"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchiveEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDisposed
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::WrappedStream::dyn__isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::dyn__isDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.WrappedStream.ThrowIfDisposed
void System::IO::Compression::WrappedStream::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.ThrowIfCantRead
void System::IO::Compression::WrappedStream::ThrowIfCantRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::ThrowIfCantRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfCantRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.ThrowIfCantWrite
void System::IO::Compression::WrappedStream::ThrowIfCantWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::ThrowIfCantWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfCantWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.ThrowIfCantSeek
void System::IO::Compression::WrappedStream::ThrowIfCantSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::ThrowIfCantSeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfCantSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.get_Length
int64_t System::IO::Compression::WrappedStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.get_Position
int64_t System::IO::Compression::WrappedStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.set_Position
void System::IO::Compression::WrappedStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.WrappedStream.get_CanRead
bool System::IO::Compression::WrappedStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.get_CanSeek
bool System::IO::Compression::WrappedStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.get_CanWrite
bool System::IO::Compression::WrappedStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.Read
int System::IO::Compression::WrappedStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.WrappedStream.Seek
int64_t System::IO::Compression::WrappedStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Compression.WrappedStream.SetLength
void System::IO::Compression::WrappedStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.WrappedStream.Write
void System::IO::Compression::WrappedStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.WrappedStream.Flush
void System::IO::Compression::WrappedStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.WrappedStream.Dispose
void System::IO::Compression::WrappedStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::WrappedStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.SubReadStream
#include "System/IO/Compression/SubReadStream.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 _startInSuperStream
[[deprecated("Use field access instead!")]] int64_t& System::IO::Compression::SubReadStream::dyn__startInSuperStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::dyn__startInSuperStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startInSuperStream"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _positionInSuperStream
[[deprecated("Use field access instead!")]] int64_t& System::IO::Compression::SubReadStream::dyn__positionInSuperStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::dyn__positionInSuperStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionInSuperStream"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 _endInSuperStream
[[deprecated("Use field access instead!")]] int64_t& System::IO::Compression::SubReadStream::dyn__endInSuperStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::dyn__endInSuperStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endInSuperStream"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream _superStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::IO::Compression::SubReadStream::dyn__superStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::dyn__superStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_superStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canRead
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::SubReadStream::dyn__canRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::dyn__canRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canRead"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDisposed
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::SubReadStream::dyn__isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::dyn__isDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.SubReadStream.ThrowIfDisposed
void System::IO::Compression::SubReadStream::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.ThrowIfCantRead
void System::IO::Compression::SubReadStream::ThrowIfCantRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::ThrowIfCantRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfCantRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.get_Length
int64_t System::IO::Compression::SubReadStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.get_Position
int64_t System::IO::Compression::SubReadStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.set_Position
void System::IO::Compression::SubReadStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.SubReadStream.get_CanRead
bool System::IO::Compression::SubReadStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.get_CanSeek
bool System::IO::Compression::SubReadStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.get_CanWrite
bool System::IO::Compression::SubReadStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.Read
int System::IO::Compression::SubReadStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.SubReadStream.Seek
int64_t System::IO::Compression::SubReadStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Compression.SubReadStream.SetLength
void System::IO::Compression::SubReadStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.SubReadStream.Write
void System::IO::Compression::SubReadStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.SubReadStream.Flush
void System::IO::Compression::SubReadStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.SubReadStream.Dispose
void System::IO::Compression::SubReadStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::SubReadStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.CheckSumAndSizeWriteStream
#include "System/IO/Compression/CheckSumAndSizeWriteStream.hpp"
// Including type: System.IO.Compression.ZipArchiveEntry
#include "System/IO/Compression/ZipArchiveEntry.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.Action`6
#include "System/Action_6.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream _baseStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__baseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__baseStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Stream _baseBaseStream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__baseBaseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__baseBaseStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseBaseStream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _position
[[deprecated("Use field access instead!")]] int64_t& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _checksum
[[deprecated("Use field access instead!")]] uint& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__checksum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__checksum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_checksum"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _leaveOpenOnClose
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__leaveOpenOnClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__leaveOpenOnClose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaveOpenOnClose"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canWrite
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__canWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__canWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDisposed
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__isDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _everWritten
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__everWritten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__everWritten");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_everWritten"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _initialPosition
[[deprecated("Use field access instead!")]] int64_t& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__initialPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__initialPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialPosition"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.Compression.ZipArchiveEntry _zipArchiveEntry
[[deprecated("Use field access instead!")]] ::System::IO::Compression::ZipArchiveEntry*& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__zipArchiveEntry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__zipArchiveEntry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zipArchiveEntry"))->offset;
  return *reinterpret_cast<::System::IO::Compression::ZipArchiveEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.EventHandler _onClose
[[deprecated("Use field access instead!")]] ::System::EventHandler*& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__onClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__onClose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onClose"))->offset;
  return *reinterpret_cast<::System::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Action`6<System.Int64,System.Int64,System.UInt32,System.IO.Stream,System.IO.Compression.ZipArchiveEntry,System.EventHandler> _saveCrcAndSizes
[[deprecated("Use field access instead!")]] ::System::Action_6<int64_t, int64_t, uint, ::System::IO::Stream*, ::System::IO::Compression::ZipArchiveEntry*, ::System::EventHandler*>*& System::IO::Compression::CheckSumAndSizeWriteStream::dyn__saveCrcAndSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::dyn__saveCrcAndSizes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saveCrcAndSizes"))->offset;
  return *reinterpret_cast<::System::Action_6<int64_t, int64_t, uint, ::System::IO::Stream*, ::System::IO::Compression::ZipArchiveEntry*, ::System::EventHandler*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.ThrowIfDisposed
void System::IO::Compression::CheckSumAndSizeWriteStream::ThrowIfDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::ThrowIfDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.get_Length
int64_t System::IO::Compression::CheckSumAndSizeWriteStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.get_Position
int64_t System::IO::Compression::CheckSumAndSizeWriteStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.set_Position
void System::IO::Compression::CheckSumAndSizeWriteStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.get_CanRead
bool System::IO::Compression::CheckSumAndSizeWriteStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.get_CanSeek
bool System::IO::Compression::CheckSumAndSizeWriteStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.get_CanWrite
bool System::IO::Compression::CheckSumAndSizeWriteStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.Read
int System::IO::Compression::CheckSumAndSizeWriteStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 28));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.Seek
int64_t System::IO::Compression::CheckSumAndSizeWriteStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::Seek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 26));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.SetLength
void System::IO::Compression::CheckSumAndSizeWriteStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::SetLength");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.Write
void System::IO::Compression::CheckSumAndSizeWriteStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 30));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.Flush
void System::IO::Compression::CheckSumAndSizeWriteStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::Flush");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.CheckSumAndSizeWriteStream.Dispose
void System::IO::Compression::CheckSumAndSizeWriteStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CheckSumAndSizeWriteStream::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::IO::Stream*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipHelper
#include "System/IO/Compression/ZipHelper.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.DateTime s_invalidDateIndicator
::System::DateTime System::IO::Compression::ZipHelper::_get_s_invalidDateIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::_get_s_invalidDateIndicator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::DateTime>("System.IO.Compression", "ZipHelper", "s_invalidDateIndicator"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.DateTime s_invalidDateIndicator
void System::IO::Compression::ZipHelper::_set_s_invalidDateIndicator(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::_set_s_invalidDateIndicator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipHelper", "s_invalidDateIndicator", value));
}
// Autogenerated method: System.IO.Compression.ZipHelper..cctor
void System::IO::Compression::ZipHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.ZipHelper.RequiresUnicode
bool System::IO::Compression::ZipHelper::RequiresUnicode(::StringW test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::RequiresUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "RequiresUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, test);
}
// Autogenerated method: System.IO.Compression.ZipHelper.ReadBytes
void System::IO::Compression::ZipHelper::ReadBytes(::System::IO::Stream* stream, ::ArrayW<uint8_t> buffer, int bytesToRead) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::ReadBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "ReadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bytesToRead)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, buffer, bytesToRead);
}
// Autogenerated method: System.IO.Compression.ZipHelper.DosTimeToDateTime
::System::DateTime System::IO::Compression::ZipHelper::DosTimeToDateTime(uint dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::DosTimeToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "DosTimeToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime);
}
// Autogenerated method: System.IO.Compression.ZipHelper.DateTimeToDosTime
uint System::IO::Compression::ZipHelper::DateTimeToDosTime(::System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::DateTimeToDosTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "DateTimeToDosTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateTime)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateTime);
}
// Autogenerated method: System.IO.Compression.ZipHelper.SeekBackwardsToSignature
bool System::IO::Compression::ZipHelper::SeekBackwardsToSignature(::System::IO::Stream* stream, uint signatureToFind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::SeekBackwardsToSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "SeekBackwardsToSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(signatureToFind)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, signatureToFind);
}
// Autogenerated method: System.IO.Compression.ZipHelper.AdvanceToPosition
void System::IO::Compression::ZipHelper::AdvanceToPosition(::System::IO::Stream* stream, int64_t position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::AdvanceToPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "AdvanceToPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, position);
}
// Autogenerated method: System.IO.Compression.ZipHelper.SeekBackwardsAndRead
bool System::IO::Compression::ZipHelper::SeekBackwardsAndRead(::System::IO::Stream* stream, ::ArrayW<uint8_t> buffer, ByRef<int> bufferPointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipHelper::SeekBackwardsAndRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipHelper", "SeekBackwardsAndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, buffer, byref(bufferPointer));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipVersionNeededValues
#include "System/IO/Compression/ZipVersionNeededValues.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionNeededValues Default
::System::IO::Compression::ZipVersionNeededValues System::IO::Compression::ZipVersionNeededValues::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionNeededValues>("System.IO.Compression", "ZipVersionNeededValues", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionNeededValues Default
void System::IO::Compression::ZipVersionNeededValues::_set_Default(::System::IO::Compression::ZipVersionNeededValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionNeededValues", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionNeededValues ExplicitDirectory
::System::IO::Compression::ZipVersionNeededValues System::IO::Compression::ZipVersionNeededValues::_get_ExplicitDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_get_ExplicitDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionNeededValues>("System.IO.Compression", "ZipVersionNeededValues", "ExplicitDirectory"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionNeededValues ExplicitDirectory
void System::IO::Compression::ZipVersionNeededValues::_set_ExplicitDirectory(::System::IO::Compression::ZipVersionNeededValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_set_ExplicitDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionNeededValues", "ExplicitDirectory", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionNeededValues Deflate
::System::IO::Compression::ZipVersionNeededValues System::IO::Compression::ZipVersionNeededValues::_get_Deflate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_get_Deflate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionNeededValues>("System.IO.Compression", "ZipVersionNeededValues", "Deflate"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionNeededValues Deflate
void System::IO::Compression::ZipVersionNeededValues::_set_Deflate(::System::IO::Compression::ZipVersionNeededValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_set_Deflate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionNeededValues", "Deflate", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionNeededValues Deflate64
::System::IO::Compression::ZipVersionNeededValues System::IO::Compression::ZipVersionNeededValues::_get_Deflate64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_get_Deflate64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionNeededValues>("System.IO.Compression", "ZipVersionNeededValues", "Deflate64"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionNeededValues Deflate64
void System::IO::Compression::ZipVersionNeededValues::_set_Deflate64(::System::IO::Compression::ZipVersionNeededValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_set_Deflate64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionNeededValues", "Deflate64", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionNeededValues Zip64
::System::IO::Compression::ZipVersionNeededValues System::IO::Compression::ZipVersionNeededValues::_get_Zip64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_get_Zip64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionNeededValues>("System.IO.Compression", "ZipVersionNeededValues", "Zip64"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionNeededValues Zip64
void System::IO::Compression::ZipVersionNeededValues::_set_Zip64(::System::IO::Compression::ZipVersionNeededValues value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::_set_Zip64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionNeededValues", "Zip64", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 value__
[[deprecated("Use field access instead!")]] uint16_t& System::IO::Compression::ZipVersionNeededValues::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionNeededValues::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipVersionMadeByPlatform
#include "System/IO/Compression/ZipVersionMadeByPlatform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionMadeByPlatform Windows
::System::IO::Compression::ZipVersionMadeByPlatform System::IO::Compression::ZipVersionMadeByPlatform::_get_Windows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionMadeByPlatform::_get_Windows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionMadeByPlatform>("System.IO.Compression", "ZipVersionMadeByPlatform", "Windows"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionMadeByPlatform Windows
void System::IO::Compression::ZipVersionMadeByPlatform::_set_Windows(::System::IO::Compression::ZipVersionMadeByPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionMadeByPlatform::_set_Windows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionMadeByPlatform", "Windows", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.ZipVersionMadeByPlatform Unix
::System::IO::Compression::ZipVersionMadeByPlatform System::IO::Compression::ZipVersionMadeByPlatform::_get_Unix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionMadeByPlatform::_get_Unix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::ZipVersionMadeByPlatform>("System.IO.Compression", "ZipVersionMadeByPlatform", "Unix"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.ZipVersionMadeByPlatform Unix
void System::IO::Compression::ZipVersionMadeByPlatform::_set_Unix(::System::IO::Compression::ZipVersionMadeByPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionMadeByPlatform::_set_Unix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "ZipVersionMadeByPlatform", "Unix", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::IO::Compression::ZipVersionMadeByPlatform::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipVersionMadeByPlatform::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.Crc32Helper
#include "System/IO/Compression/Crc32Helper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_0
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_0
void System::IO::Compression::Crc32Helper::_set_s_crcTable_0(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_0", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_1
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_1
void System::IO::Compression::Crc32Helper::_set_s_crcTable_1(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_2
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_2
void System::IO::Compression::Crc32Helper::_set_s_crcTable_2(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_3
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_3
void System::IO::Compression::Crc32Helper::_set_s_crcTable_3(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_4
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_4"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_4
void System::IO::Compression::Crc32Helper::_set_s_crcTable_4(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_4", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_5
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_5"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_5
void System::IO::Compression::Crc32Helper::_set_s_crcTable_5(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_5", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_6
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_6"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_6
void System::IO::Compression::Crc32Helper::_set_s_crcTable_6(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_6", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] s_crcTable_7
::ArrayW<uint> System::IO::Compression::Crc32Helper::_get_s_crcTable_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_get_s_crcTable_7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.IO.Compression", "Crc32Helper", "s_crcTable_7"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] s_crcTable_7
void System::IO::Compression::Crc32Helper::_set_s_crcTable_7(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::_set_s_crcTable_7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "Crc32Helper", "s_crcTable_7", value));
}
// Autogenerated method: System.IO.Compression.Crc32Helper..cctor
void System::IO::Compression::Crc32Helper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Crc32Helper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.Crc32Helper.UpdateCrc32
uint System::IO::Compression::Crc32Helper::UpdateCrc32(uint crc32, ::ArrayW<uint8_t> buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::UpdateCrc32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Crc32Helper", "UpdateCrc32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(crc32), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, crc32, buffer, offset, length);
}
// Autogenerated method: System.IO.Compression.Crc32Helper.ManagedCrc32
uint System::IO::Compression::Crc32Helper::ManagedCrc32(uint crc32, ::ArrayW<uint8_t> buffer, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::Crc32Helper::ManagedCrc32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "Crc32Helper", "ManagedCrc32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(crc32), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, crc32, buffer, offset, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.TaskToApm
#include "System/Threading/Tasks/TaskToApm_.hpp"
// Including type: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.TaskWrapperAsyncResult
#include "System/Threading/Tasks/TaskToApm__TaskWrapperAsyncResult.hpp"
// Including type: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.<>c__DisplayClass3_0
#include "System/Threading/Tasks/TaskToApm__--c__DisplayClass3_0.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Tasks.TaskToApm.Begin
::System::IAsyncResult* System::Threading::Tasks::TaskToApm_::Begin(::System::Threading::Tasks::Task* task, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm_::Begin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskToApm", "Begin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, task, callback, state);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm.End
void System::Threading::Tasks::TaskToApm_::End(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm_::End");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskToApm", "End", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm.InvokeCallbackWhenTaskCompletes
void System::Threading::Tasks::TaskToApm_::InvokeCallbackWhenTaskCompletes(::System::Threading::Tasks::Task* antecedent, ::System::AsyncCallback* callback, ::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm_::InvokeCallbackWhenTaskCompletes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskToApm", "InvokeCallbackWhenTaskCompletes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(antecedent), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, antecedent, callback, asyncResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.TaskWrapperAsyncResult
#include "System/Threading/Tasks/TaskToApm__TaskWrapperAsyncResult.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Threading.Tasks.Task Task
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& System::Threading::Tasks::TaskToApm_::TaskWrapperAsyncResult::dyn_Task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm_::TaskWrapperAsyncResult::dyn_Task");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Task"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _state
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Threading::Tasks::TaskToApm_::TaskWrapperAsyncResult::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm_::TaskWrapperAsyncResult::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _completedSynchronously
[[deprecated("Use field access instead!")]] bool& System::Threading::Tasks::TaskToApm_::TaskWrapperAsyncResult::dyn__completedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm_::TaskWrapperAsyncResult::dyn__completedSynchronously");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_completedSynchronously"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.TaskWrapperAsyncResult.System.IAsyncResult.get_AsyncState
::Il2CppObject* System::Threading::Tasks::TaskToApm_::TaskWrapperAsyncResult::System_IAsyncResult_get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm_::TaskWrapperAsyncResult::System.IAsyncResult.get_AsyncState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::Tasks::TaskToApm_::TaskWrapperAsyncResult*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.TaskWrapperAsyncResult.System.IAsyncResult.get_CompletedSynchronously
bool System::Threading::Tasks::TaskToApm_::TaskWrapperAsyncResult::System_IAsyncResult_get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm_::TaskWrapperAsyncResult::System.IAsyncResult.get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::Tasks::TaskToApm_::TaskWrapperAsyncResult*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.TaskWrapperAsyncResult.System.IAsyncResult.get_IsCompleted
bool System::Threading::Tasks::TaskToApm_::TaskWrapperAsyncResult::System_IAsyncResult_get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm_::TaskWrapperAsyncResult::System.IAsyncResult.get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::Tasks::TaskToApm_::TaskWrapperAsyncResult*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.TaskWrapperAsyncResult.System.IAsyncResult.get_AsyncWaitHandle
::System::Threading::WaitHandle* System::Threading::Tasks::TaskToApm_::TaskWrapperAsyncResult::System_IAsyncResult_get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm_::TaskWrapperAsyncResult::System.IAsyncResult.get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Threading::Tasks::TaskToApm_::TaskWrapperAsyncResult*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.<>c__DisplayClass3_0
#include "System/Threading/Tasks/TaskToApm__--c__DisplayClass3_0.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.AsyncCallback callback
[[deprecated("Use field access instead!")]] ::System::AsyncCallback*& System::Threading::Tasks::TaskToApm_::$$c__DisplayClass3_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm_::$$c__DisplayClass3_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IAsyncResult asyncResult
[[deprecated("Use field access instead!")]] ::System::IAsyncResult*& System::Threading::Tasks::TaskToApm_::$$c__DisplayClass3_0::dyn_asyncResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm_::$$c__DisplayClass3_0::dyn_asyncResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncResult"))->offset;
  return *reinterpret_cast<::System::IAsyncResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.<>c__DisplayClass3_0.<InvokeCallbackWhenTaskCompletes>b__0
void System::Threading::Tasks::TaskToApm_::$$c__DisplayClass3_0::$InvokeCallbackWhenTaskCompletes$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm_::$$c__DisplayClass3_0::<InvokeCallbackWhenTaskCompletes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InvokeCallbackWhenTaskCompletes>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Buffers.ArrayPoolEventSource
#include "System/Buffers/ArrayPoolEventSource.hpp"
// Including type: System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason
#include "System/Buffers/ArrayPoolEventSource_BufferAllocatedReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Buffers.ArrayPoolEventSource Log
::System::Buffers::ArrayPoolEventSource* System::Buffers::ArrayPoolEventSource::_get_Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::_get_Log");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::ArrayPoolEventSource*>("System.Buffers", "ArrayPoolEventSource", "Log"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Buffers.ArrayPoolEventSource Log
void System::Buffers::ArrayPoolEventSource::_set_Log(::System::Buffers::ArrayPoolEventSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::_set_Log");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers", "ArrayPoolEventSource", "Log", value));
}
// Autogenerated method: System.Buffers.ArrayPoolEventSource..cctor
void System::Buffers::ArrayPoolEventSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "ArrayPoolEventSource", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Buffers.ArrayPoolEventSource.BufferRented
void System::Buffers::ArrayPoolEventSource::BufferRented(int bufferId, int bufferSize, int poolId, int bucketId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferRented");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BufferRented", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferId), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(poolId), ::il2cpp_utils::ExtractType(bucketId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferId, bufferSize, poolId, bucketId);
}
// Autogenerated method: System.Buffers.ArrayPoolEventSource.BufferAllocated
void System::Buffers::ArrayPoolEventSource::BufferAllocated(int bufferId, int bufferSize, int poolId, int bucketId, ::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BufferAllocated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferId), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(poolId), ::il2cpp_utils::ExtractType(bucketId), ::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferId, bufferSize, poolId, bucketId, reason);
}
// Autogenerated method: System.Buffers.ArrayPoolEventSource.BufferReturned
void System::Buffers::ArrayPoolEventSource::BufferReturned(int bufferId, int bufferSize, int poolId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferReturned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BufferReturned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferId), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(poolId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bufferId, bufferSize, poolId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason
#include "System/Buffers/ArrayPoolEventSource_BufferAllocatedReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason Pooled
::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_Pooled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_Pooled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason>("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "Pooled"));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason Pooled
void System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_Pooled(::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_Pooled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "Pooled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason OverMaximumSize
::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_OverMaximumSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_OverMaximumSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason>("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "OverMaximumSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason OverMaximumSize
void System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_OverMaximumSize(::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_OverMaximumSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "OverMaximumSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason PoolExhausted
::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_PoolExhausted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_get_PoolExhausted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason>("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "PoolExhausted"));
}
// Autogenerated static field setter
// Set static field: static public System.Buffers.ArrayPoolEventSource/System.Buffers.BufferAllocatedReason PoolExhausted
void System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_PoolExhausted(::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::_set_PoolExhausted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Buffers", "ArrayPoolEventSource/BufferAllocatedReason", "PoolExhausted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::ArrayPoolEventSource::BufferAllocatedReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Buffers.Utilities
#include "System/Buffers/Utilities.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Buffers.Utilities.SelectBucketIndex
int System::Buffers::Utilities::SelectBucketIndex(int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Utilities::SelectBucketIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "Utilities", "SelectBucketIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bufferSize);
}
// Autogenerated method: System.Buffers.Utilities.GetMaxSizeForBucket
int System::Buffers::Utilities::GetMaxSizeForBucket(int binIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Buffers::Utilities::GetMaxSizeForBucket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Buffers", "Utilities", "GetMaxSizeForBucket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.PathInternal
#include "System/IO/PathInternal_.hpp"
// Including type: System.StringComparison
#include "System/StringComparison.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean s_isCaseSensitive
bool System::IO::PathInternal_::_get_s_isCaseSensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal_::_get_s_isCaseSensitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.IO", "PathInternal", "s_isCaseSensitive"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean s_isCaseSensitive
void System::IO::PathInternal_::_set_s_isCaseSensitive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal_::_set_s_isCaseSensitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "PathInternal", "s_isCaseSensitive", value));
}
// Autogenerated method: System.IO.PathInternal.get_StringComparison
::System::StringComparison System::IO::PathInternal_::get_StringComparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal_::get_StringComparison");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "PathInternal", "get_StringComparison", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::StringComparison, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.PathInternal..cctor
void System::IO::PathInternal_::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal_::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "PathInternal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.PathInternal.GetIsCaseSensitive
bool System::IO::PathInternal_::GetIsCaseSensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::PathInternal_::GetIsCaseSensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "PathInternal", "GetIsCaseSensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipFile
#include "System/IO/Compression/ZipFile.hpp"
// Including type: System.IO.Compression.ZipArchive
#include "System/IO/Compression/ZipArchive.hpp"
// Including type: System.IO.Compression.ZipArchiveMode
#include "System/IO/Compression/ZipArchiveMode.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.IO.DirectoryInfo
#include "System/IO/DirectoryInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.ZipFile.Open
::System::IO::Compression::ZipArchive* System::IO::Compression::ZipFile::Open(::StringW archiveFileName, ::System::IO::Compression::ZipArchiveMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveFileName), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchive*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveFileName, mode);
}
// Autogenerated method: System.IO.Compression.ZipFile.Open
::System::IO::Compression::ZipArchive* System::IO::Compression::ZipFile::Open(::StringW archiveFileName, ::System::IO::Compression::ZipArchiveMode mode, ::System::Text::Encoding* entryNameEncoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(archiveFileName), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(entryNameEncoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchive*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, archiveFileName, mode, entryNameEncoding);
}
// Autogenerated method: System.IO.Compression.ZipFile.CreateFromDirectory
void System::IO::Compression::ZipFile::CreateFromDirectory(::StringW sourceDirectoryName, ::StringW destinationArchiveFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::CreateFromDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "CreateFromDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceDirectoryName), ::il2cpp_utils::ExtractType(destinationArchiveFileName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceDirectoryName, destinationArchiveFileName);
}
// Autogenerated method: System.IO.Compression.ZipFile.ExtractToDirectory
void System::IO::Compression::ZipFile::ExtractToDirectory(::StringW sourceArchiveFileName, ::StringW destinationDirectoryName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::ExtractToDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "ExtractToDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceArchiveFileName), ::il2cpp_utils::ExtractType(destinationDirectoryName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceArchiveFileName, destinationDirectoryName);
}
// Autogenerated method: System.IO.Compression.ZipFile.ExtractToDirectory
void System::IO::Compression::ZipFile::ExtractToDirectory(::StringW sourceArchiveFileName, ::StringW destinationDirectoryName, ::System::Text::Encoding* entryNameEncoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::ExtractToDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "ExtractToDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceArchiveFileName), ::il2cpp_utils::ExtractType(destinationDirectoryName), ::il2cpp_utils::ExtractType(entryNameEncoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceArchiveFileName, destinationDirectoryName, entryNameEncoding);
}
// Autogenerated method: System.IO.Compression.ZipFile.ExtractToDirectory
void System::IO::Compression::ZipFile::ExtractToDirectory(::StringW sourceArchiveFileName, ::StringW destinationDirectoryName, ::System::Text::Encoding* entryNameEncoding, bool overwrite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::ExtractToDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "ExtractToDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceArchiveFileName), ::il2cpp_utils::ExtractType(destinationDirectoryName), ::il2cpp_utils::ExtractType(entryNameEncoding), ::il2cpp_utils::ExtractType(overwrite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceArchiveFileName, destinationDirectoryName, entryNameEncoding, overwrite);
}
// Autogenerated method: System.IO.Compression.ZipFile.DoCreateFromDirectory
void System::IO::Compression::ZipFile::DoCreateFromDirectory(::StringW sourceDirectoryName, ::StringW destinationArchiveFileName, ::System::Nullable_1<::System::IO::Compression::CompressionLevel> compressionLevel, bool includeBaseDirectory, ::System::Text::Encoding* entryNameEncoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::DoCreateFromDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "DoCreateFromDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceDirectoryName), ::il2cpp_utils::ExtractType(destinationArchiveFileName), ::il2cpp_utils::ExtractType(compressionLevel), ::il2cpp_utils::ExtractType(includeBaseDirectory), ::il2cpp_utils::ExtractType(entryNameEncoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sourceDirectoryName, destinationArchiveFileName, compressionLevel, includeBaseDirectory, entryNameEncoding);
}
// Autogenerated method: System.IO.Compression.ZipFile.EntryFromPath
::StringW System::IO::Compression::ZipFile::EntryFromPath(::StringW entry, int offset, int length, ByRef<::ArrayW<::Il2CppChar>> buffer, bool appendPathSeparator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::EntryFromPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "EntryFromPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(appendPathSeparator)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, entry, offset, length, byref(buffer), appendPathSeparator);
}
// Autogenerated method: System.IO.Compression.ZipFile.EnsureCapacity
void System::IO::Compression::ZipFile::EnsureCapacity(ByRef<::ArrayW<::Il2CppChar>> buffer, int min) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::EnsureCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "EnsureCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(min)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(buffer), min);
}
// Autogenerated method: System.IO.Compression.ZipFile.IsDirEmpty
bool System::IO::Compression::ZipFile::IsDirEmpty(::System::IO::DirectoryInfo* possiblyEmptyDir) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFile::IsDirEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFile", "IsDirEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(possiblyEmptyDir)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, possiblyEmptyDir);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.ZipFileExtensions
#include "System/IO/Compression/ZipFileExtensions.hpp"
// Including type: System.IO.Compression.ZipArchive
#include "System/IO/Compression/ZipArchive.hpp"
// Including type: System.IO.Compression.ZipArchiveEntry
#include "System/IO/Compression/ZipArchiveEntry.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.ZipFileExtensions.ExtractToDirectory
void System::IO::Compression::ZipFileExtensions::ExtractToDirectory(::System::IO::Compression::ZipArchive* source, ::StringW destinationDirectoryName, bool overwrite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFileExtensions::ExtractToDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFileExtensions", "ExtractToDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destinationDirectoryName), ::il2cpp_utils::ExtractType(overwrite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, destinationDirectoryName, overwrite);
}
// Autogenerated method: System.IO.Compression.ZipFileExtensions.DoCreateEntryFromFile
::System::IO::Compression::ZipArchiveEntry* System::IO::Compression::ZipFileExtensions::DoCreateEntryFromFile(::System::IO::Compression::ZipArchive* destination, ::StringW sourceFileName, ::StringW entryName, ::System::Nullable_1<::System::IO::Compression::CompressionLevel> compressionLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFileExtensions::DoCreateEntryFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFileExtensions", "DoCreateEntryFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(sourceFileName), ::il2cpp_utils::ExtractType(entryName), ::il2cpp_utils::ExtractType(compressionLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::ZipArchiveEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, destination, sourceFileName, entryName, compressionLevel);
}
// Autogenerated method: System.IO.Compression.ZipFileExtensions.ExtractToFile
void System::IO::Compression::ZipFileExtensions::ExtractToFile(::System::IO::Compression::ZipArchiveEntry* source, ::StringW destinationFileName, bool overwrite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::ZipFileExtensions::ExtractToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "ZipFileExtensions", "ExtractToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destinationFileName), ::il2cpp_utils::ExtractType(overwrite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source, destinationFileName, overwrite);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SR
#include "GlobalNamespace/SR_____.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SR.Format
::StringW GlobalNamespace::SR_____::Format(::StringW resourceFormat, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR_____::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceFormat), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resourceFormat, p1);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Numerics.BigInteger
#include "System/Numerics/BigInteger.hpp"
// Including type: System.Numerics.BigInteger/System.Numerics.GetBytesMode
#include "System/Numerics/BigInteger_GetBytesMode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Span`1
#include "System/Span_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Numerics.BigInteger s_bnMinInt
::System::Numerics::BigInteger System::Numerics::BigInteger::_get_s_bnMinInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_get_s_bnMinInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Numerics::BigInteger>("System.Numerics", "BigInteger", "s_bnMinInt"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Numerics.BigInteger s_bnMinInt
void System::Numerics::BigInteger::_set_s_bnMinInt(::System::Numerics::BigInteger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_set_s_bnMinInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger", "s_bnMinInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Numerics.BigInteger s_bnOneInt
::System::Numerics::BigInteger System::Numerics::BigInteger::_get_s_bnOneInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_get_s_bnOneInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Numerics::BigInteger>("System.Numerics", "BigInteger", "s_bnOneInt"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Numerics.BigInteger s_bnOneInt
void System::Numerics::BigInteger::_set_s_bnOneInt(::System::Numerics::BigInteger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_set_s_bnOneInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger", "s_bnOneInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Numerics.BigInteger s_bnZeroInt
::System::Numerics::BigInteger System::Numerics::BigInteger::_get_s_bnZeroInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_get_s_bnZeroInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Numerics::BigInteger>("System.Numerics", "BigInteger", "s_bnZeroInt"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Numerics.BigInteger s_bnZeroInt
void System::Numerics::BigInteger::_set_s_bnZeroInt(::System::Numerics::BigInteger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_set_s_bnZeroInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger", "s_bnZeroInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Numerics.BigInteger s_bnMinusOneInt
::System::Numerics::BigInteger System::Numerics::BigInteger::_get_s_bnMinusOneInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_get_s_bnMinusOneInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Numerics::BigInteger>("System.Numerics", "BigInteger", "s_bnMinusOneInt"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Numerics.BigInteger s_bnMinusOneInt
void System::Numerics::BigInteger::_set_s_bnMinusOneInt(::System::Numerics::BigInteger value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_set_s_bnMinusOneInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger", "s_bnMinusOneInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] s_success
::ArrayW<uint8_t> System::Numerics::BigInteger::_get_s_success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_get_s_success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Numerics", "BigInteger", "s_success"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] s_success
void System::Numerics::BigInteger::_set_s_success(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::_set_s_success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger", "s_success", value));
}
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _sign
[[deprecated("Use field access instead!")]] int& System::Numerics::BigInteger::dyn__sign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::dyn__sign");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sign"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.UInt32[] _bits
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Numerics::BigInteger::dyn__bits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::dyn__bits");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bits"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Numerics.BigInteger.get_Zero
::System::Numerics::BigInteger System::Numerics::BigInteger::get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::get_Zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "get_Zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.get_IsZero
bool System::Numerics::BigInteger::get_IsZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::get_IsZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(::System::ReadOnlySpan_1<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger..ctor
// ABORTED elsewhere.  System::Numerics::BigInteger::BigInteger(int n, ::ArrayW<uint> rgu)
// Autogenerated method: System.Numerics.BigInteger..ctor
System::Numerics::BigInteger::BigInteger(::ArrayW<uint> value, bool negative) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(negative)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, negative);
}
// Autogenerated method: System.Numerics.BigInteger..cctor
void System::Numerics::BigInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.Parse
::System::Numerics::BigInteger System::Numerics::BigInteger::Parse(::StringW value, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, provider);
}
// Autogenerated method: System.Numerics.BigInteger.Parse
::System::Numerics::BigInteger System::Numerics::BigInteger::Parse(::StringW value, ::System::Globalization::NumberStyles style, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, style, provider);
}
// Autogenerated method: System.Numerics.BigInteger.Equals
bool System::Numerics::BigInteger::Equals(int64_t other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Numerics.BigInteger.Equals
bool System::Numerics::BigInteger::Equals(::System::Numerics::BigInteger other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Numerics::BigInteger), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Numerics.BigInteger.CompareTo
int System::Numerics::BigInteger::CompareTo(int64_t other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::CompareTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Numerics.BigInteger.CompareTo
int System::Numerics::BigInteger::CompareTo(::System::Numerics::BigInteger other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Numerics::BigInteger), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Numerics.BigInteger.CompareTo
int System::Numerics::BigInteger::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::CompareTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Numerics::BigInteger), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Numerics.BigInteger.ToByteArray
::ArrayW<uint8_t> System::Numerics::BigInteger::ToByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::ToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.TryGetBytes
::ArrayW<uint8_t> System::Numerics::BigInteger::TryGetBytes(::System::Numerics::BigInteger::GetBytesMode mode, ::System::Span_1<uint8_t> destination, ByRef<int> bytesWritten) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::TryGetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TryGetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(bytesWritten)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, mode, destination, byref(bytesWritten));
}
// Autogenerated method: System.Numerics.BigInteger.ToString
::StringW System::Numerics::BigInteger::ToString(::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.Numerics.BigInteger.ToString
::StringW System::Numerics::BigInteger::ToString(::StringW format, ::System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::Numerics::BigInteger), 4));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format, provider);
}
// Autogenerated method: System.Numerics.BigInteger.Add
::System::Numerics::BigInteger System::Numerics::BigInteger::Add(::ArrayW<uint> leftBits, int leftSign, ::ArrayW<uint> rightBits, int rightSign) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftBits), ::il2cpp_utils::ExtractType(leftSign), ::il2cpp_utils::ExtractType(rightBits), ::il2cpp_utils::ExtractType(rightSign)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leftBits, leftSign, rightBits, rightSign);
}
// Autogenerated method: System.Numerics.BigInteger.Subtract
::System::Numerics::BigInteger System::Numerics::BigInteger::Subtract(::ArrayW<uint> leftBits, int leftSign, ::ArrayW<uint> rightBits, int rightSign) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftBits), ::il2cpp_utils::ExtractType(leftSign), ::il2cpp_utils::ExtractType(rightBits), ::il2cpp_utils::ExtractType(rightSign)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leftBits, leftSign, rightBits, rightSign);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator uint8_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator int8_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator int16_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator uint16_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator uint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator int64_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator uint64_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Explicit
System::Numerics::BigInteger::operator ::System::Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.GetDiffLength
int System::Numerics::BigInteger::GetDiffLength(::ArrayW<uint> rgu1, ::ArrayW<uint> rgu2, int cu) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::GetDiffLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "GetDiffLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgu1), ::il2cpp_utils::ExtractType(rgu2), ::il2cpp_utils::ExtractType(cu)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgu1, rgu2, cu);
}
// Autogenerated method: System.Numerics.BigInteger.GetHashCode
int System::Numerics::BigInteger::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.Equals
bool System::Numerics::BigInteger::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Numerics.BigInteger.ToString
::StringW System::Numerics::BigInteger::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Numerics.BigInteger.op_Subtraction
::System::Numerics::BigInteger System::Numerics::operator-(const ::System::Numerics::BigInteger& left, const ::System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_UnaryNegation
::System::Numerics::BigInteger System::Numerics::operator-(const ::System::Numerics::BigInteger& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_UnaryNegation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_UnaryNegation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigInteger.op_Addition
::System::Numerics::BigInteger System::Numerics::operator+(const ::System::Numerics::BigInteger& left, const ::System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_Multiply
::System::Numerics::BigInteger System::Numerics::operator*(const ::System::Numerics::BigInteger& left, const ::System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_LessThanOrEqual
bool System::Numerics::operator <=(const ::System::Numerics::BigInteger& left, const ::System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_Inequality
bool System::Numerics::operator !=(const ::System::Numerics::BigInteger& left, const ::System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_LessThan
bool System::Numerics::operator <(const ::System::Numerics::BigInteger& left, const int64_t& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_LessThanOrEqual
bool System::Numerics::operator <=(const ::System::Numerics::BigInteger& left, const int64_t& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_Equality
bool System::Numerics::operator ==(const ::System::Numerics::BigInteger& left, const int64_t& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_Inequality
bool System::Numerics::operator !=(const ::System::Numerics::BigInteger& left, const int64_t& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_LessThan
bool System::Numerics::operator <(const int64_t& left, const ::System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigInteger.op_LessThanOrEqual
bool System::Numerics::operator <=(const int64_t& left, const ::System::Numerics::BigInteger& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigInteger", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Numerics.BigInteger/System.Numerics.GetBytesMode
#include "System/Numerics/BigInteger_GetBytesMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode AllocateArray
::System::Numerics::BigInteger::GetBytesMode System::Numerics::BigInteger::GetBytesMode::_get_AllocateArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::GetBytesMode::_get_AllocateArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Numerics::BigInteger::GetBytesMode>("System.Numerics", "BigInteger/GetBytesMode", "AllocateArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode AllocateArray
void System::Numerics::BigInteger::GetBytesMode::_set_AllocateArray(::System::Numerics::BigInteger::GetBytesMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::GetBytesMode::_set_AllocateArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger/GetBytesMode", "AllocateArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode Count
::System::Numerics::BigInteger::GetBytesMode System::Numerics::BigInteger::GetBytesMode::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::GetBytesMode::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Numerics::BigInteger::GetBytesMode>("System.Numerics", "BigInteger/GetBytesMode", "Count"));
}
// Autogenerated static field setter
// Set static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode Count
void System::Numerics::BigInteger::GetBytesMode::_set_Count(::System::Numerics::BigInteger::GetBytesMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::GetBytesMode::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger/GetBytesMode", "Count", value));
}
// Autogenerated static field getter
// Get static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode Span
::System::Numerics::BigInteger::GetBytesMode System::Numerics::BigInteger::GetBytesMode::_get_Span() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::GetBytesMode::_get_Span");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Numerics::BigInteger::GetBytesMode>("System.Numerics", "BigInteger/GetBytesMode", "Span"));
}
// Autogenerated static field setter
// Set static field: static public System.Numerics.BigInteger/System.Numerics.GetBytesMode Span
void System::Numerics::BigInteger::GetBytesMode::_set_Span(::System::Numerics::BigInteger::GetBytesMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::GetBytesMode::_set_Span");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigInteger/GetBytesMode", "Span", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Numerics::BigInteger::GetBytesMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigInteger::GetBytesMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Numerics.BigIntegerCalculator
#include "System/Numerics/BigIntegerCalculator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 ReducerThreshold
int System::Numerics::BigIntegerCalculator::_get_ReducerThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::_get_ReducerThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Numerics", "BigIntegerCalculator", "ReducerThreshold"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ReducerThreshold
void System::Numerics::BigIntegerCalculator::_set_ReducerThreshold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::_set_ReducerThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigIntegerCalculator", "ReducerThreshold", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SquareThreshold
int System::Numerics::BigIntegerCalculator::_get_SquareThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::_get_SquareThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Numerics", "BigIntegerCalculator", "SquareThreshold"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SquareThreshold
void System::Numerics::BigIntegerCalculator::_set_SquareThreshold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::_set_SquareThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigIntegerCalculator", "SquareThreshold", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 AllocationThreshold
int System::Numerics::BigIntegerCalculator::_get_AllocationThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::_get_AllocationThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Numerics", "BigIntegerCalculator", "AllocationThreshold"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 AllocationThreshold
void System::Numerics::BigIntegerCalculator::_set_AllocationThreshold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::_set_AllocationThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigIntegerCalculator", "AllocationThreshold", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MultiplyThreshold
int System::Numerics::BigIntegerCalculator::_get_MultiplyThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::_get_MultiplyThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Numerics", "BigIntegerCalculator", "MultiplyThreshold"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MultiplyThreshold
void System::Numerics::BigIntegerCalculator::_set_MultiplyThreshold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::_set_MultiplyThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Numerics", "BigIntegerCalculator", "MultiplyThreshold", value));
}
// Autogenerated method: System.Numerics.BigIntegerCalculator..cctor
void System::Numerics::BigIntegerCalculator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Add
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Add(::ArrayW<uint> left, uint right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Add
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Add(::ArrayW<uint> left, ::ArrayW<uint> right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Add
void System::Numerics::BigIntegerCalculator::Add(uint* left, int leftLength, uint* right, int rightLength, uint* bits, int bitsLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(leftLength), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(rightLength), ::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(bitsLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, leftLength, right, rightLength, bits, bitsLength);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.AddSelf
void System::Numerics::BigIntegerCalculator::AddSelf(uint* left, int leftLength, uint* right, int rightLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::AddSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "AddSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(leftLength), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(rightLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, leftLength, right, rightLength);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Subtract
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Subtract(::ArrayW<uint> left, uint right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Subtract
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Subtract(::ArrayW<uint> left, ::ArrayW<uint> right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Subtract
void System::Numerics::BigIntegerCalculator::Subtract(uint* left, int leftLength, uint* right, int rightLength, uint* bits, int bitsLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(leftLength), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(rightLength), ::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(bitsLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, leftLength, right, rightLength, bits, bitsLength);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Compare
int System::Numerics::BigIntegerCalculator::Compare(::ArrayW<uint> left, ::ArrayW<uint> right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Square
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Square(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Square");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Square", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Square
void System::Numerics::BigIntegerCalculator::Square(uint* value, int valueLength, uint* bits, int bitsLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Square");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Square", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(valueLength), ::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(bitsLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, valueLength, bits, bitsLength);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Multiply
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Multiply(::ArrayW<uint> left, uint right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Multiply
::ArrayW<uint> System::Numerics::BigIntegerCalculator::Multiply(::ArrayW<uint> left, ::ArrayW<uint> right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.Multiply
void System::Numerics::BigIntegerCalculator::Multiply(uint* left, int leftLength, uint* right, int rightLength, uint* bits, int bitsLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(leftLength), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(rightLength), ::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(bitsLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, leftLength, right, rightLength, bits, bitsLength);
}
// Autogenerated method: System.Numerics.BigIntegerCalculator.SubtractCore
void System::Numerics::BigIntegerCalculator::SubtractCore(uint* left, int leftLength, uint* right, int rightLength, uint* core, int coreLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigIntegerCalculator::SubtractCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigIntegerCalculator", "SubtractCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(leftLength), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(rightLength), ::il2cpp_utils::ExtractType(core), ::il2cpp_utils::ExtractType(coreLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, leftLength, right, rightLength, core, coreLength);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Numerics.BigNumber
#include "System/Numerics/BigNumber.hpp"
// Including type: System.Numerics.BigNumber/System.Numerics.BigNumberBuffer
#include "System/Numerics/BigNumber_BigNumberBuffer.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.ArgumentException
#include "System/ArgumentException.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Numerics.BigInteger
#include "System/Numerics/BigInteger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Numerics.BigNumber.TryValidateParseStyleInteger
bool System::Numerics::BigNumber::TryValidateParseStyleInteger(::System::Globalization::NumberStyles style, ByRef<::System::ArgumentException*> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::TryValidateParseStyleInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "TryValidateParseStyleInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractIndependentType<::System::ArgumentException*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, style, byref(e));
}
// Autogenerated method: System.Numerics.BigNumber.TryParseBigInteger
bool System::Numerics::BigNumber::TryParseBigInteger(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info, ByRef<::System::Numerics::BigInteger> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::TryParseBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "TryParseBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractIndependentType<::System::Numerics::BigInteger&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, style, info, byref(result));
}
// Autogenerated method: System.Numerics.BigNumber.ParseBigInteger
::System::Numerics::BigInteger System::Numerics::BigNumber::ParseBigInteger(::StringW value, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::ParseBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "ParseBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, style, info);
}
// Autogenerated method: System.Numerics.BigNumber.AsReadOnlySpan
::System::ReadOnlySpan_1<::Il2CppChar> System::Numerics::BigNumber::AsReadOnlySpan(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::AsReadOnlySpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "AsReadOnlySpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ReadOnlySpan_1<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Numerics.BigNumber.ParseBigInteger
::System::Numerics::BigInteger System::Numerics::BigNumber::ParseBigInteger(::System::ReadOnlySpan_1<::Il2CppChar> value, ::System::Globalization::NumberStyles style, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::ParseBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "ParseBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigInteger, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, style, info);
}
// Autogenerated method: System.Numerics.BigNumber.HexNumberToBigInteger
bool System::Numerics::BigNumber::HexNumberToBigInteger(ByRef<::System::Numerics::BigNumber::BigNumberBuffer> number, ByRef<::System::Numerics::BigInteger> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::HexNumberToBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "HexNumberToBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(value));
}
// Autogenerated method: System.Numerics.BigNumber.NumberToBigInteger
bool System::Numerics::BigNumber::NumberToBigInteger(ByRef<::System::Numerics::BigNumber::BigNumberBuffer> number, ByRef<::System::Numerics::BigInteger> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::NumberToBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "NumberToBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), byref(value));
}
// Autogenerated method: System.Numerics.BigNumber.ParseFormatSpecifier
::Il2CppChar System::Numerics::BigNumber::ParseFormatSpecifier(::StringW format, ByRef<int> digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::ParseFormatSpecifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "ParseFormatSpecifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, byref(digits));
}
// Autogenerated method: System.Numerics.BigNumber.FormatBigIntegerToHexString
::StringW System::Numerics::BigNumber::FormatBigIntegerToHexString(::System::Numerics::BigInteger value, ::Il2CppChar format, int digits, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::FormatBigIntegerToHexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "FormatBigIntegerToHexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, digits, info);
}
// Autogenerated method: System.Numerics.BigNumber.FormatBigInteger
::StringW System::Numerics::BigNumber::FormatBigInteger(::System::Numerics::BigInteger value, ::StringW format, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::FormatBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber", "FormatBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Numerics.BigNumber/System.Numerics.BigNumberBuffer
#include "System/Numerics/BigNumber_BigNumberBuffer.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Text.StringBuilder digits
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::Numerics::BigNumber::BigNumberBuffer::dyn_digits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::BigNumberBuffer::dyn_digits");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "digits"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 precision
[[deprecated("Use field access instead!")]] int& System::Numerics::BigNumber::BigNumberBuffer::dyn_precision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::BigNumberBuffer::dyn_precision");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "precision"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 scale
[[deprecated("Use field access instead!")]] int& System::Numerics::BigNumber::BigNumberBuffer::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::BigNumberBuffer::dyn_scale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean sign
[[deprecated("Use field access instead!")]] bool& System::Numerics::BigNumber::BigNumberBuffer::dyn_sign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::BigNumberBuffer::dyn_sign");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sign"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Numerics.BigNumber/System.Numerics.BigNumberBuffer.Create
::System::Numerics::BigNumber::BigNumberBuffer System::Numerics::BigNumber::BigNumberBuffer::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::BigNumber::BigNumberBuffer::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "BigNumber/BigNumberBuffer", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Numerics::BigNumber::BigNumberBuffer, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Numerics.NumericsHelpers
#include "System/Numerics/NumericsHelpers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Numerics.NumericsHelpers.GetDoubleParts
void System::Numerics::NumericsHelpers::GetDoubleParts(double dbl, ByRef<int> sign, ByRef<int> exp, ByRef<uint64_t> man, ByRef<bool> fFinite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::NumericsHelpers::GetDoubleParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "GetDoubleParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dbl), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<uint64_t&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dbl, byref(sign), byref(exp), byref(man), byref(fFinite));
}
// Autogenerated method: System.Numerics.NumericsHelpers.GetDoubleFromParts
double System::Numerics::NumericsHelpers::GetDoubleFromParts(int sign, int exp, uint64_t man) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::NumericsHelpers::GetDoubleFromParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "GetDoubleFromParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sign), ::il2cpp_utils::ExtractType(exp), ::il2cpp_utils::ExtractType(man)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sign, exp, man);
}
// Autogenerated method: System.Numerics.NumericsHelpers.DangerousMakeTwosComplement
void System::Numerics::NumericsHelpers::DangerousMakeTwosComplement(::ArrayW<uint> d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::NumericsHelpers::DangerousMakeTwosComplement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "DangerousMakeTwosComplement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Numerics.NumericsHelpers.MakeUlong
uint64_t System::Numerics::NumericsHelpers::MakeUlong(uint uHi, uint uLo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::NumericsHelpers::MakeUlong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "MakeUlong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uHi), ::il2cpp_utils::ExtractType(uLo)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uHi, uLo);
}
// Autogenerated method: System.Numerics.NumericsHelpers.Abs
uint System::Numerics::NumericsHelpers::Abs(int a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::NumericsHelpers::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a);
}
// Autogenerated method: System.Numerics.NumericsHelpers.CombineHash
uint System::Numerics::NumericsHelpers::CombineHash(uint u1, uint u2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::NumericsHelpers::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u1), ::il2cpp_utils::ExtractType(u2)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, u1, u2);
}
// Autogenerated method: System.Numerics.NumericsHelpers.CombineHash
int System::Numerics::NumericsHelpers::CombineHash(int n1, int n2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::NumericsHelpers::CombineHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "CombineHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n1), ::il2cpp_utils::ExtractType(n2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n1, n2);
}
// Autogenerated method: System.Numerics.NumericsHelpers.CbitHighZero
int System::Numerics::NumericsHelpers::CbitHighZero(uint u) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::NumericsHelpers::CbitHighZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "CbitHighZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(u)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, u);
}
// Autogenerated method: System.Numerics.NumericsHelpers.CbitHighZero
int System::Numerics::NumericsHelpers::CbitHighZero(uint64_t uu) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Numerics::NumericsHelpers::CbitHighZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Numerics", "NumericsHelpers", "CbitHighZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uu)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uu);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.FormatProvider
#include "System/Globalization/FormatProvider.hpp"
// Including type: System.Globalization.FormatProvider/System.Globalization.Number
#include "System/Globalization/FormatProvider_Number.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Globalization.FormatProvider.FormatBigInteger
::StringW System::Globalization::FormatProvider::FormatBigInteger(int precision, int scale, bool sign, ::StringW format, ::System::Globalization::NumberFormatInfo* numberFormatInfo, ::ArrayW<::Il2CppChar> digits, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::FormatBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider", "FormatBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(precision), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(sign), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(numberFormatInfo), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, precision, scale, sign, format, numberFormatInfo, digits, startIndex);
}
// Autogenerated method: System.Globalization.FormatProvider.TryStringToBigInteger
bool System::Globalization::FormatProvider::TryStringToBigInteger(::System::ReadOnlySpan_1<::Il2CppChar> s, ::System::Globalization::NumberStyles styles, ::System::Globalization::NumberFormatInfo* numberFormatInfo, ::System::Text::StringBuilder* receiver, ByRef<int> precision, ByRef<int> scale, ByRef<bool> sign) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::TryStringToBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider", "TryStringToBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(styles), ::il2cpp_utils::ExtractType(numberFormatInfo), ::il2cpp_utils::ExtractType(receiver), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, styles, numberFormatInfo, receiver, byref(precision), byref(scale), byref(sign));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.FormatProvider/System.Globalization.Number
#include "System/Globalization/FormatProvider_Number.hpp"
// Including type: System.Globalization.FormatProvider/System.Globalization.Number/System.Globalization.NumberBuffer
#include "System/Globalization/FormatProvider_Number_NumberBuffer.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.ReadOnlySpan`1
#include "System/ReadOnlySpan_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] s_posCurrencyFormats
::ArrayW<::StringW> System::Globalization::FormatProvider::Number::_get_s_posCurrencyFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_get_s_posCurrencyFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Globalization", "FormatProvider/Number", "s_posCurrencyFormats"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] s_posCurrencyFormats
void System::Globalization::FormatProvider::Number::_set_s_posCurrencyFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_set_s_posCurrencyFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FormatProvider/Number", "s_posCurrencyFormats", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] s_negCurrencyFormats
::ArrayW<::StringW> System::Globalization::FormatProvider::Number::_get_s_negCurrencyFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_get_s_negCurrencyFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Globalization", "FormatProvider/Number", "s_negCurrencyFormats"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] s_negCurrencyFormats
void System::Globalization::FormatProvider::Number::_set_s_negCurrencyFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_set_s_negCurrencyFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FormatProvider/Number", "s_negCurrencyFormats", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] s_posPercentFormats
::ArrayW<::StringW> System::Globalization::FormatProvider::Number::_get_s_posPercentFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_get_s_posPercentFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Globalization", "FormatProvider/Number", "s_posPercentFormats"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] s_posPercentFormats
void System::Globalization::FormatProvider::Number::_set_s_posPercentFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_set_s_posPercentFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FormatProvider/Number", "s_posPercentFormats", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] s_negPercentFormats
::ArrayW<::StringW> System::Globalization::FormatProvider::Number::_get_s_negPercentFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_get_s_negPercentFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Globalization", "FormatProvider/Number", "s_negPercentFormats"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] s_negPercentFormats
void System::Globalization::FormatProvider::Number::_set_s_negPercentFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_set_s_negPercentFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FormatProvider/Number", "s_negPercentFormats", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] s_negNumberFormats
::ArrayW<::StringW> System::Globalization::FormatProvider::Number::_get_s_negNumberFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_get_s_negNumberFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Globalization", "FormatProvider/Number", "s_negNumberFormats"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] s_negNumberFormats
void System::Globalization::FormatProvider::Number::_set_s_negNumberFormats(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_set_s_negNumberFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FormatProvider/Number", "s_negNumberFormats", value));
}
// Autogenerated static field getter
// Get static field: static private System.String s_posNumberFormat
::StringW System::Globalization::FormatProvider::Number::_get_s_posNumberFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_get_s_posNumberFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Globalization", "FormatProvider/Number", "s_posNumberFormat"));
}
// Autogenerated static field setter
// Set static field: static private System.String s_posNumberFormat
void System::Globalization::FormatProvider::Number::_set_s_posNumberFormat(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::_set_s_posNumberFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FormatProvider/Number", "s_posNumberFormat", value));
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number..cctor
void System::Globalization::FormatProvider::Number::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.IsWhite
bool System::Globalization::FormatProvider::Number::IsWhite(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::IsWhite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "IsWhite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.MatchChars
::Il2CppChar* System::Globalization::FormatProvider::Number::MatchChars(::Il2CppChar* p, ::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::MatchChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "MatchChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, str);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.MatchChars
::Il2CppChar* System::Globalization::FormatProvider::Number::MatchChars(::Il2CppChar* p, ::Il2CppChar* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::MatchChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "MatchChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p), ::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p, str);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.ParseNumber
bool System::Globalization::FormatProvider::Number::ParseNumber(ByRef<::Il2CppChar*> str, ::System::Globalization::NumberStyles options, ByRef<::System::Globalization::FormatProvider::Number::NumberBuffer> number, ::System::Text::StringBuilder* sb, ::System::Globalization::NumberFormatInfo* numfmt, bool parseDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::ParseNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "ParseNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(numfmt), ::il2cpp_utils::ExtractType(parseDecimal)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(str), options, byref(number), sb, numfmt, parseDecimal);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.TrailingZeros
bool System::Globalization::FormatProvider::Number::TrailingZeros(::System::ReadOnlySpan_1<::Il2CppChar> s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::TrailingZeros");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "TrailingZeros", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.TryStringToNumber
bool System::Globalization::FormatProvider::Number::TryStringToNumber(::System::ReadOnlySpan_1<::Il2CppChar> str, ::System::Globalization::NumberStyles options, ByRef<::System::Globalization::FormatProvider::Number::NumberBuffer> number, ::System::Text::StringBuilder* sb, ::System::Globalization::NumberFormatInfo* numfmt, bool parseDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::TryStringToNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "TryStringToNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(numfmt), ::il2cpp_utils::ExtractType(parseDecimal)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, options, byref(number), sb, numfmt, parseDecimal);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.Int32ToDecChars
void System::Globalization::FormatProvider::Number::Int32ToDecChars(::Il2CppChar* buffer, ByRef<int> index, uint value, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::Int32ToDecChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "Int32ToDecChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(digits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, byref(index), value, digits);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.ParseFormatSpecifier
::Il2CppChar System::Globalization::FormatProvider::Number::ParseFormatSpecifier(::StringW format, ByRef<int> digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::ParseFormatSpecifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "ParseFormatSpecifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, byref(digits));
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.NumberToString
::StringW System::Globalization::FormatProvider::Number::NumberToString(::System::Globalization::FormatProvider::Number::NumberBuffer number, ::Il2CppChar format, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info, bool isDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::NumberToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "NumberToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(isDecimal)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, number, format, nMaxDigits, info, isDecimal);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatCurrency
void System::Globalization::FormatProvider::Number::FormatCurrency(::System::Text::StringBuilder* sb, ::System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::FormatCurrency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatCurrency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, number, nMinDigits, nMaxDigits, info);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.wcslen
int System::Globalization::FormatProvider::Number::wcslen(::Il2CppChar* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::wcslen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "wcslen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatFixed
void System::Globalization::FormatProvider::Number::FormatFixed(::System::Text::StringBuilder* sb, ::System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info, ::ArrayW<int> groupDigits, ::StringW sDecimal, ::StringW sGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::FormatFixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatFixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(groupDigits), ::il2cpp_utils::ExtractType(sDecimal), ::il2cpp_utils::ExtractType(sGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, number, nMinDigits, nMaxDigits, info, groupDigits, sDecimal, sGroup);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatNumber
void System::Globalization::FormatProvider::Number::FormatNumber(::System::Text::StringBuilder* sb, ::System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::FormatNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, number, nMinDigits, nMaxDigits, info);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatScientific
void System::Globalization::FormatProvider::Number::FormatScientific(::System::Text::StringBuilder* sb, ::System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info, ::Il2CppChar expChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::FormatScientific");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatScientific", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(expChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, number, nMinDigits, nMaxDigits, info, expChar);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatExponent
void System::Globalization::FormatProvider::Number::FormatExponent(::System::Text::StringBuilder* sb, ::System::Globalization::NumberFormatInfo* info, int value, ::Il2CppChar expChar, int minDigits, bool positiveSign) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::FormatExponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatExponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(expChar), ::il2cpp_utils::ExtractType(minDigits), ::il2cpp_utils::ExtractType(positiveSign)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, info, value, expChar, minDigits, positiveSign);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatGeneral
void System::Globalization::FormatProvider::Number::FormatGeneral(::System::Text::StringBuilder* sb, ::System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info, ::Il2CppChar expChar, bool bSuppressScientific) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::FormatGeneral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatGeneral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(expChar), ::il2cpp_utils::ExtractType(bSuppressScientific)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, number, nMinDigits, nMaxDigits, info, expChar, bSuppressScientific);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FormatPercent
void System::Globalization::FormatProvider::Number::FormatPercent(::System::Text::StringBuilder* sb, ::System::Globalization::FormatProvider::Number::NumberBuffer number, int nMinDigits, int nMaxDigits, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::FormatPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FormatPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(nMinDigits), ::il2cpp_utils::ExtractType(nMaxDigits), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, number, nMinDigits, nMaxDigits, info);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.RoundNumber
void System::Globalization::FormatProvider::Number::RoundNumber(ByRef<::System::Globalization::FormatProvider::Number::NumberBuffer> number, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::RoundNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "RoundNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(number), pos);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.FindSection
int System::Globalization::FormatProvider::Number::FindSection(::StringW format, int section) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::FindSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "FindSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(section)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, section);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number.NumberToStringFormat
::StringW System::Globalization::FormatProvider::Number::NumberToStringFormat(::System::Globalization::FormatProvider::Number::NumberBuffer number, ::StringW format, ::System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::NumberToStringFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "FormatProvider/Number", "NumberToStringFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, number, format, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.FormatProvider/System.Globalization.Number/System.Globalization.NumberBuffer
#include "System/Globalization/FormatProvider_Number_NumberBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 precision
[[deprecated("Use field access instead!")]] int& System::Globalization::FormatProvider::Number::NumberBuffer::dyn_precision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::NumberBuffer::dyn_precision");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "precision"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 scale
[[deprecated("Use field access instead!")]] int& System::Globalization::FormatProvider::Number::NumberBuffer::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::NumberBuffer::dyn_scale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean sign
[[deprecated("Use field access instead!")]] bool& System::Globalization::FormatProvider::Number::NumberBuffer::dyn_sign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::NumberBuffer::dyn_sign");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sign"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char* overrideDigits
[[deprecated("Use field access instead!")]] ::Il2CppChar*& System::Globalization::FormatProvider::Number::NumberBuffer::dyn_overrideDigits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::NumberBuffer::dyn_overrideDigits");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideDigits"))->offset;
  return *reinterpret_cast<::Il2CppChar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.FormatProvider/System.Globalization.Number/System.Globalization.NumberBuffer.get_digits
::Il2CppChar* System::Globalization::FormatProvider::Number::NumberBuffer::get_digits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Globalization::FormatProvider::Number::NumberBuffer::get_digits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_digits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.DataContractAttribute
#include "System/Runtime/Serialization/DataContractAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean isReference
[[deprecated("Use field access instead!")]] bool& System::Runtime::Serialization::DataContractAttribute::dyn_isReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataContractAttribute::dyn_isReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isReference"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Serialization.DataContractAttribute.get_IsReference
bool System::Runtime::Serialization::DataContractAttribute::get_IsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataContractAttribute::get_IsReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.DataMemberAttribute
#include "System/Runtime/Serialization/DataMemberAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::Serialization::DataMemberAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 order
[[deprecated("Use field access instead!")]] int& System::Runtime::Serialization::DataMemberAttribute::dyn_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::dyn_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRequired
[[deprecated("Use field access instead!")]] bool& System::Runtime::Serialization::DataMemberAttribute::dyn_isRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::dyn_isRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean emitDefaultValue
[[deprecated("Use field access instead!")]] bool& System::Runtime::Serialization::DataMemberAttribute::dyn_emitDefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::dyn_emitDefaultValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emitDefaultValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_Name
::StringW System::Runtime::Serialization::DataMemberAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_Order
int System::Runtime::Serialization::DataMemberAttribute::get_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::get_Order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_IsRequired
bool System::Runtime::Serialization::DataMemberAttribute::get_IsRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::get_IsRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.DataMemberAttribute.get_EmitDefaultValue
bool System::Runtime::Serialization::DataMemberAttribute::get_EmitDefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::DataMemberAttribute::get_EmitDefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EmitDefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.EnumMemberAttribute
#include "System/Runtime/Serialization/EnumMemberAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String value
[[deprecated("Use field access instead!")]] ::StringW& System::Runtime::Serialization::EnumMemberAttribute::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::EnumMemberAttribute::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Runtime.Serialization.EnumMemberAttribute.get_Value
::StringW System::Runtime::Serialization::EnumMemberAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::EnumMemberAttribute::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.KnownTypeAttribute
#include "System/Runtime/Serialization/KnownTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Runtime::Serialization::KnownTypeAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Runtime::Serialization::KnownTypeAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SR
#include "GlobalNamespace/SR______.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SR.GetString
::StringW GlobalNamespace::SR______::GetString(::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR______::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, args);
}
// Autogenerated method: SR.GetString
::StringW GlobalNamespace::SR______::GetString(::System::Globalization::CultureInfo* culture, ::StringW name, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR______::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, culture, name, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.CSharp.CodeDomProvider
#include "Microsoft/CSharp/CodeDomProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.CSharp.CSharpCodeProvider
#include "Microsoft/CSharp/CSharpCodeProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.AstNode
#include "MS/Internal/Xml/XPath/AstNode.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MS.Internal.Xml.XPath.AstNode.get_Type
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.AstNode.get_ReturnType
::System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::AstNode::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Axis
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_get_Axis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Axis"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Axis
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Axis(::MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_set_Axis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Axis", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Operator
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Operator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_get_Operator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Operator"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Operator
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Operator(::MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_set_Operator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Operator", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Filter
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Filter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_get_Filter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Filter"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Filter
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Filter(::MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_set_Filter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Filter", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType ConstantOperand
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_ConstantOperand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_get_ConstantOperand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "ConstantOperand"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType ConstantOperand
void MS::Internal::Xml::XPath::AstNode::AstType::_set_ConstantOperand(::MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_set_ConstantOperand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "ConstantOperand", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Function
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Function() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_get_Function");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Function"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Function
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Function(::MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_set_Function");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Function", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Group
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_get_Group");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Group"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Group
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Group(::MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_set_Group");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Group", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Root
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_get_Root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Root"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Root
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Root(::MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_set_Root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Root", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Variable
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Variable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_get_Variable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Variable"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Variable
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Variable(::MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_set_Variable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Variable", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Error
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::AstNode::AstType::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::AstNode::AstType>("MS.Internal.Xml.XPath", "AstNode/AstType", "Error"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType Error
void MS::Internal::Xml::XPath::AstNode::AstType::_set_Error(::MS::Internal::Xml::XPath::AstNode::AstType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "AstNode/AstType", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::XPath::AstNode::AstType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::AstNode::AstType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Axis
#include "MS/Internal/Xml/XPath/Axis.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType axisType
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::XPath::Axis::AxisType& MS::Internal::Xml::XPath::Axis::dyn_axisType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::dyn_axisType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axisType"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::Axis::AxisType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.AstNode input
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::XPath::AstNode*& MS::Internal::Xml::XPath::Axis::dyn_input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::dyn_input");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "input"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::AstNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::XPath::Axis::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::XPath::Axis::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XPath.XPathNodeType nodeType
[[deprecated("Use field access instead!")]] ::System::Xml::XPath::XPathNodeType& MS::Internal::Xml::XPath::Axis::dyn_nodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::dyn_nodeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeType"))->offset;
  return *reinterpret_cast<::System::Xml::XPath::XPathNodeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean abbrAxis
[[deprecated("Use field access instead!")]] bool& MS::Internal::Xml::XPath::Axis::dyn_abbrAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::dyn_abbrAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "abbrAxis"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String urn
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::XPath::Axis::dyn_urn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::dyn_urn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "urn"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_Input
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::Axis::get_Input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::get_Input");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Input", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.set_Input
void MS::Internal::Xml::XPath::Axis::set_Input(::MS::Internal::Xml::XPath::AstNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::set_Input");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Input", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_Prefix
::StringW MS::Internal::Xml::XPath::Axis::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_Name
::StringW MS::Internal::Xml::XPath::Axis::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_NodeType
::System::Xml::XPath::XPathNodeType MS::Internal::Xml::XPath::Axis::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::get_NodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNodeType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_TypeOfAxis
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::get_TypeOfAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::get_TypeOfAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeOfAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::Axis::AxisType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_AbbrAxis
bool MS::Internal::Xml::XPath::Axis::get_AbbrAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::get_AbbrAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbbrAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_Urn
::StringW MS::Internal::Xml::XPath::Axis::get_Urn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::get_Urn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Urn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.set_Urn
void MS::Internal::Xml::XPath::Axis::set_Urn(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::set_Urn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Urn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_Type
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Axis::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Axis.get_ReturnType
::System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Axis::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType
#include "MS/Internal/Xml/XPath/Axis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Ancestor
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Ancestor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_Ancestor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Ancestor"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Ancestor
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Ancestor(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_Ancestor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Ancestor", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType AncestorOrSelf
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_AncestorOrSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_AncestorOrSelf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "AncestorOrSelf"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType AncestorOrSelf
void MS::Internal::Xml::XPath::Axis::AxisType::_set_AncestorOrSelf(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_AncestorOrSelf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "AncestorOrSelf", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Attribute
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Attribute
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Attribute(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Child
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Child() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_Child");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Child"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Child
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Child(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_Child");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Child", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Descendant
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Descendant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_Descendant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Descendant"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Descendant
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Descendant(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_Descendant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Descendant", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType DescendantOrSelf
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_DescendantOrSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_DescendantOrSelf");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "DescendantOrSelf"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType DescendantOrSelf
void MS::Internal::Xml::XPath::Axis::AxisType::_set_DescendantOrSelf(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_DescendantOrSelf");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "DescendantOrSelf", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Following
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Following() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_Following");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Following"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Following
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Following(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_Following");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Following", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType FollowingSibling
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_FollowingSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_FollowingSibling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "FollowingSibling"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType FollowingSibling
void MS::Internal::Xml::XPath::Axis::AxisType::_set_FollowingSibling(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_FollowingSibling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "FollowingSibling", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Namespace
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_Namespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Namespace"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Namespace
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Namespace(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_Namespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Namespace", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Parent
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_Parent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Parent"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Parent
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Parent(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_Parent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Parent", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Preceding
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Preceding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_Preceding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Preceding"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Preceding
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Preceding(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_Preceding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Preceding", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType PrecedingSibling
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_PrecedingSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_PrecedingSibling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "PrecedingSibling"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType PrecedingSibling
void MS::Internal::Xml::XPath::Axis::AxisType::_set_PrecedingSibling(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_PrecedingSibling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "PrecedingSibling", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Self
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_Self() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_Self");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "Self"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType Self
void MS::Internal::Xml::XPath::Axis::AxisType::_set_Self(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_Self");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "Self", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType None
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::Axis::AxisType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Axis::AxisType>("MS.Internal.Xml.XPath", "Axis/AxisType", "None"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Axis/MS.Internal.Xml.XPath.AxisType None
void MS::Internal::Xml::XPath::Axis::AxisType::_set_None(::MS::Internal::Xml::XPath::Axis::AxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Axis/AxisType", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::XPath::Axis::AxisType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Axis::AxisType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Filter
#include "MS/Internal/Xml/XPath/Filter.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.AstNode input
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::XPath::AstNode*& MS::Internal::Xml::XPath::Filter::dyn_input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Filter::dyn_input");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "input"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::AstNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.AstNode condition
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::XPath::AstNode*& MS::Internal::Xml::XPath::Filter::dyn_condition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Filter::dyn_condition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "condition"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::AstNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Filter.get_Type
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Filter::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Filter::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Filter.get_ReturnType
::System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Filter::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Filter::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Function
#include "MS/Internal/Xml/XPath/Function.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Xml.XPath.XPathResultType[] ReturnTypes
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::Function::_get_ReturnTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::_get_ReturnTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "Function", "ReturnTypes"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.XPath.XPathResultType[] ReturnTypes
void MS::Internal::Xml::XPath::Function::_set_ReturnTypes(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::_set_ReturnTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function", "ReturnTypes", value));
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType functionType
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::XPath::Function::FunctionType& MS::Internal::Xml::XPath::Function::dyn_functionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::dyn_functionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "functionType"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::Function::FunctionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList argumentList
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& MS::Internal::Xml::XPath::Function::dyn_argumentList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::dyn_argumentList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "argumentList"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::XPath::Function::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::XPath::Function::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Function..cctor
void MS::Internal::Xml::XPath::Function::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "Function", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Function.get_Type
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Function::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Function.get_ReturnType
::System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Function::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType
#include "MS/Internal/Xml/XPath/Function.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncLast
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncLast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncLast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncLast"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncLast
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncLast(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncLast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncLast", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncPosition
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncPosition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncPosition"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncPosition
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncPosition(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncPosition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncPosition", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncCount
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncCount"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncCount
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncCount(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncCount", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncID
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncID"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncID
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncID(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncID", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncLocalName
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncLocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncLocalName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncLocalName"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncLocalName
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncLocalName(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncLocalName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncLocalName", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNameSpaceUri
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNameSpaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNameSpaceUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNameSpaceUri"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNameSpaceUri
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNameSpaceUri(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNameSpaceUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNameSpaceUri", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncName
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncName"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncName
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncName(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncName", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncString
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncString"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncString
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncString(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncString", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncBoolean
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncBoolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncBoolean"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncBoolean
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncBoolean(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncBoolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncBoolean", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNumber
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNumber"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNumber
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNumber(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNumber", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncTrue
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncTrue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncTrue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncTrue"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncTrue
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncTrue(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncTrue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncTrue", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncFalse
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncFalse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncFalse"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncFalse
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncFalse(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncFalse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncFalse", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNot
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNot"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNot
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNot(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNot", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncConcat
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncConcat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncConcat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncConcat"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncConcat
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncConcat(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncConcat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncConcat", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncStartsWith
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncStartsWith() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncStartsWith");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncStartsWith"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncStartsWith
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncStartsWith(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncStartsWith");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncStartsWith", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncContains
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncContains() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncContains");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncContains"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncContains
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncContains(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncContains");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncContains", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSubstringBefore
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSubstringBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSubstringBefore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSubstringBefore"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSubstringBefore
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSubstringBefore(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSubstringBefore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSubstringBefore", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSubstringAfter
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSubstringAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSubstringAfter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSubstringAfter"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSubstringAfter
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSubstringAfter(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSubstringAfter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSubstringAfter", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSubstring
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSubstring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSubstring");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSubstring"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSubstring
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSubstring(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSubstring");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSubstring", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncStringLength
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncStringLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncStringLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncStringLength"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncStringLength
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncStringLength(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncStringLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncStringLength", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNormalize
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNormalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncNormalize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNormalize"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncNormalize
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNormalize(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncNormalize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncNormalize", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncTranslate
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncTranslate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncTranslate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncTranslate"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncTranslate
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncTranslate(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncTranslate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncTranslate", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncLang
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncLang");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncLang"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncLang
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncLang(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncLang");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncLang", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSum
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncSum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSum"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncSum
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSum(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncSum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncSum", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncFloor
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncFloor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncFloor"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncFloor
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncFloor(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncFloor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncFloor", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncCeiling
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncCeiling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncCeiling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncCeiling"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncCeiling
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncCeiling(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncCeiling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncCeiling", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncRound
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncRound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncRound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncRound"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncRound
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncRound(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncRound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncRound", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncUserDefined
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncUserDefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_get_FuncUserDefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Function::FunctionType>("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncUserDefined"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType FuncUserDefined
void MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncUserDefined(::MS::Internal::Xml::XPath::Function::FunctionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::_set_FuncUserDefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Function/FunctionType", "FuncUserDefined", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::XPath::Function::FunctionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Function::FunctionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Group
#include "MS/Internal/Xml/XPath/Group.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.AstNode groupNode
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::XPath::AstNode*& MS::Internal::Xml::XPath::Group::dyn_groupNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Group::dyn_groupNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groupNode"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::AstNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Group.get_Type
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Group::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Group::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Group.get_ReturnType
::System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Group::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Group::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MS.Internal.Xml.XPath.Operand
#include "MS/Internal/Xml/XPath/Operand.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XPath.XPathResultType type
[[deprecated("Use field access instead!")]] ::System::Xml::XPath::XPathResultType& MS::Internal::Xml::XPath::Operand::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operand::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Xml::XPath::XPathResultType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object val
[[deprecated("Use field access instead!")]] ::Il2CppObject*& MS::Internal::Xml::XPath::Operand::dyn_val() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operand::dyn_val");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "val"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Operand.get_Type
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Operand::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operand::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Operand.get_ReturnType
::System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Operand::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operand::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Operator
#include "MS/Internal/Xml/XPath/Operator.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op[] invertOp
::ArrayW<::MS::Internal::Xml::XPath::Operator::Op> MS::Internal::Xml::XPath::Operator::_get_invertOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::_get_invertOp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::MS::Internal::Xml::XPath::Operator::Op>>("MS.Internal.Xml.XPath", "Operator", "invertOp"));
}
// Autogenerated static field setter
// Set static field: static private MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op[] invertOp
void MS::Internal::Xml::XPath::Operator::_set_invertOp(::ArrayW<::MS::Internal::Xml::XPath::Operator::Op> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::_set_invertOp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator", "invertOp", value));
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op opType
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::XPath::Operator::Op& MS::Internal::Xml::XPath::Operator::dyn_opType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::dyn_opType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opType"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::Operator::Op*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.AstNode opnd1
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::XPath::AstNode*& MS::Internal::Xml::XPath::Operator::dyn_opnd1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::dyn_opnd1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opnd1"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::AstNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.AstNode opnd2
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::XPath::AstNode*& MS::Internal::Xml::XPath::Operator::dyn_opnd2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::dyn_opnd2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "opnd2"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::AstNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Operator..cctor
void MS::Internal::Xml::XPath::Operator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "Operator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Operator.get_Type
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Operator::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Operator.get_ReturnType
::System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Operator::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op
#include "MS/Internal/Xml/XPath/Operator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op INVALID
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_INVALID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_INVALID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "INVALID"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op INVALID
void MS::Internal::Xml::XPath::Operator::Op::_set_INVALID(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_INVALID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "INVALID", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op OR
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_OR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_OR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "OR"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op OR
void MS::Internal::Xml::XPath::Operator::Op::_set_OR(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_OR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "OR", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op AND
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_AND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_AND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "AND"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op AND
void MS::Internal::Xml::XPath::Operator::Op::_set_AND(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_AND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "AND", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op EQ
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_EQ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_EQ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "EQ"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op EQ
void MS::Internal::Xml::XPath::Operator::Op::_set_EQ(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_EQ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "EQ", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op NE
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_NE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_NE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "NE"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op NE
void MS::Internal::Xml::XPath::Operator::Op::_set_NE(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_NE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "NE", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op LT
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_LT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_LT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "LT"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op LT
void MS::Internal::Xml::XPath::Operator::Op::_set_LT(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_LT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "LT", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op LE
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_LE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_LE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "LE"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op LE
void MS::Internal::Xml::XPath::Operator::Op::_set_LE(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_LE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "LE", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op GT
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_GT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_GT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "GT"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op GT
void MS::Internal::Xml::XPath::Operator::Op::_set_GT(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_GT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "GT", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op GE
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_GE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_GE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "GE"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op GE
void MS::Internal::Xml::XPath::Operator::Op::_set_GE(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_GE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "GE", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op PLUS
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_PLUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_PLUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "PLUS"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op PLUS
void MS::Internal::Xml::XPath::Operator::Op::_set_PLUS(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_PLUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "PLUS", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MINUS
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_MINUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_MINUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "MINUS"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MINUS
void MS::Internal::Xml::XPath::Operator::Op::_set_MINUS(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_MINUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "MINUS", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MUL
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_MUL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_MUL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "MUL"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MUL
void MS::Internal::Xml::XPath::Operator::Op::_set_MUL(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_MUL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "MUL", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op DIV
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_DIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_DIV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "DIV"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op DIV
void MS::Internal::Xml::XPath::Operator::Op::_set_DIV(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_DIV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "DIV", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MOD
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_MOD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_MOD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "MOD"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op MOD
void MS::Internal::Xml::XPath::Operator::Op::_set_MOD(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_MOD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "MOD", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op UNION
::MS::Internal::Xml::XPath::Operator::Op MS::Internal::Xml::XPath::Operator::Op::_get_UNION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_get_UNION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::Operator::Op>("MS.Internal.Xml.XPath", "Operator/Op", "UNION"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.Operator/MS.Internal.Xml.XPath.Op UNION
void MS::Internal::Xml::XPath::Operator::Op::_set_UNION(::MS::Internal::Xml::XPath::Operator::Op value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::_set_UNION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "Operator/Op", "UNION", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::XPath::Operator::Op::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Operator::Op::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Root
#include "MS/Internal/Xml/XPath/Root.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MS.Internal.Xml.XPath.Root.get_Type
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Root::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Root::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Root.get_ReturnType
::System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Root::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Root::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.Variable
#include "MS/Internal/Xml/XPath/Variable.hpp"
// Including type: System.Xml.XPath.XPathResultType
#include "System/Xml/XPath/XPathResultType.hpp"
// Including type: MS.Internal.Xml.XPath.AstNode/MS.Internal.Xml.XPath.AstType
#include "MS/Internal/Xml/XPath/AstNode_AstType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String localname
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::XPath::Variable::dyn_localname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Variable::dyn_localname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localname"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::XPath::Variable::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Variable::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.Variable.get_Type
::MS::Internal::Xml::XPath::AstNode::AstType MS::Internal::Xml::XPath::Variable::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Variable::get_Type");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode::AstType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.Variable.get_ReturnType
::System::Xml::XPath::XPathResultType MS::Internal::Xml::XPath::Variable::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::Variable::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::XPath::AstNode*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathResultType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.XPathParser
#include "MS/Internal/Xml/XPath/XPathParser.hpp"
// Including type: MS.Internal.Xml.XPath.XPathParser/MS.Internal.Xml.XPath.ParamInfo
#include "MS/Internal/Xml/XPath/XPathParser_ParamInfo.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray1
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_temparray1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray1
void MS::Internal::Xml::XPath::XPathParser::_set_temparray1(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_temparray1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray2
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_temparray2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray2
void MS::Internal::Xml::XPath::XPathParser::_set_temparray2(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_temparray2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray3
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_temparray3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray3
void MS::Internal::Xml::XPath::XPathParser::_set_temparray3(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_temparray3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray4
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_temparray4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray4"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray4
void MS::Internal::Xml::XPath::XPathParser::_set_temparray4(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_temparray4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray4", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray5
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_temparray5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray5"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray5
void MS::Internal::Xml::XPath::XPathParser::_set_temparray5(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_temparray5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray5", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray6
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_temparray6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray6"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray6
void MS::Internal::Xml::XPath::XPathParser::_set_temparray6(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_temparray6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray6", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray7
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_temparray7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray7"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray7
void MS::Internal::Xml::XPath::XPathParser::_set_temparray7(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_temparray7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray7", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray8
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_temparray8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray8"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray8
void MS::Internal::Xml::XPath::XPathParser::_set_temparray8(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_temparray8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray8", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XPath.XPathResultType[] temparray9
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::_get_temparray9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_temparray9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XPath::XPathResultType>>("MS.Internal.Xml.XPath", "XPathParser", "temparray9"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XPath.XPathResultType[] temparray9
void MS::Internal::Xml::XPath::XPathParser::_set_temparray9(::ArrayW<::System::Xml::XPath::XPathResultType> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_temparray9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "temparray9", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable functionTable
::System::Collections::Hashtable* MS::Internal::Xml::XPath::XPathParser::_get_functionTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_functionTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("MS.Internal.Xml.XPath", "XPathParser", "functionTable"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable functionTable
void MS::Internal::Xml::XPath::XPathParser::_set_functionTable(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_functionTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "functionTable", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable AxesTable
::System::Collections::Hashtable* MS::Internal::Xml::XPath::XPathParser::_get_AxesTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_get_AxesTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("MS.Internal.Xml.XPath", "XPathParser", "AxesTable"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable AxesTable
void MS::Internal::Xml::XPath::XPathParser::_set_AxesTable(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::_set_AxesTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathParser", "AxesTable", value));
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.XPathScanner scanner
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::XPath::XPathScanner*& MS::Internal::Xml::XPath::XPathParser::dyn_scanner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::dyn_scanner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scanner"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::XPathScanner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 parseDepth
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::XPath::XPathParser::dyn_parseDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::dyn_parseDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parseDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser..cctor
void MS::Internal::Xml::XPath::XPathParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseXPathExpresion
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseXPathExpresion(::StringW xpathExpresion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseXPathExpresion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", "ParseXPathExpresion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xpathExpresion)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xpathExpresion);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseExpresion
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseExpresion(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseExpresion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseExpresion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseOrExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseOrExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseOrExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseOrExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseAndExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseAndExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseAndExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAndExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseEqualityExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseEqualityExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseEqualityExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseEqualityExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseRelationalExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseRelationalExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseRelationalExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseRelationalExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseAdditiveExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseAdditiveExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseAdditiveExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAdditiveExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseMultiplicativeExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseMultiplicativeExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseMultiplicativeExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseMultiplicativeExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseUnaryExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseUnaryExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseUnaryExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseUnaryExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseUnionExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseUnionExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseUnionExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseUnionExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.IsNodeType
bool MS::Internal::Xml::XPath::XPathParser::IsNodeType(::MS::Internal::Xml::XPath::XPathScanner* scaner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::IsNodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", "IsNodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scaner)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scaner);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParsePathExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParsePathExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParsePathExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePathExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseFilterExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseFilterExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseFilterExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseFilterExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParsePredicate
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParsePredicate(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParsePredicate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePredicate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseLocationPath
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseLocationPath(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseLocationPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseLocationPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseRelativeLocationPath
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseRelativeLocationPath(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseRelativeLocationPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseRelativeLocationPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.IsStep
bool MS::Internal::Xml::XPath::XPathParser::IsStep(::MS::Internal::Xml::XPath::XPathScanner::LexKind lexKind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::IsStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", "IsStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexKind)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lexKind);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseStep
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseStep(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseNodeTest
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseNodeTest(::MS::Internal::Xml::XPath::AstNode* qyInput, ::MS::Internal::Xml::XPath::Axis::AxisType axisType, ::System::Xml::XPath::XPathNodeType nodeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseNodeTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNodeTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput), ::il2cpp_utils::ExtractType(axisType), ::il2cpp_utils::ExtractType(nodeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput, axisType, nodeType);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.IsPrimaryExpr
bool MS::Internal::Xml::XPath::XPathParser::IsPrimaryExpr(::MS::Internal::Xml::XPath::XPathScanner* scanner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::IsPrimaryExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", "IsPrimaryExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scanner)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scanner);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParsePrimaryExpr
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParsePrimaryExpr(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParsePrimaryExpr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePrimaryExpr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.ParseMethod
::MS::Internal::Xml::XPath::AstNode* MS::Internal::Xml::XPath::XPathParser::ParseMethod(::MS::Internal::Xml::XPath::AstNode* qyInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParseMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qyInput)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::AstNode*, false>(this, ___internal__method, qyInput);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.CheckToken
void MS::Internal::Xml::XPath::XPathParser::CheckToken(::MS::Internal::Xml::XPath::XPathScanner::LexKind t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::CheckToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.PassToken
void MS::Internal::Xml::XPath::XPathParser::PassToken(::MS::Internal::Xml::XPath::XPathScanner::LexKind t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::PassToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PassToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.NextLex
void MS::Internal::Xml::XPath::XPathParser::NextLex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::NextLex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextLex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.TestOp
bool MS::Internal::Xml::XPath::XPathParser::TestOp(::StringW op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::TestOp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestOp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, op);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.CheckNodeSet
void MS::Internal::Xml::XPath::XPathParser::CheckNodeSet(::System::Xml::XPath::XPathResultType t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::CheckNodeSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckNodeSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.CreateFunctionTable
::System::Collections::Hashtable* MS::Internal::Xml::XPath::XPathParser::CreateFunctionTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::CreateFunctionTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", "CreateFunctionTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.CreateAxesTable
::System::Collections::Hashtable* MS::Internal::Xml::XPath::XPathParser::CreateAxesTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::CreateAxesTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.XPath", "XPathParser", "CreateAxesTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser.GetAxis
::MS::Internal::Xml::XPath::Axis::AxisType MS::Internal::Xml::XPath::XPathParser::GetAxis(::MS::Internal::Xml::XPath::XPathScanner* scaner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::GetAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scaner)})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::Axis::AxisType, false>(this, ___internal__method, scaner);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.XPathParser/MS.Internal.Xml.XPath.ParamInfo
#include "MS/Internal/Xml/XPath/XPathParser_ParamInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.Function/MS.Internal.Xml.XPath.FunctionType ftype
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::XPath::Function::FunctionType& MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_ftype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_ftype");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ftype"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::Function::FunctionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 minargs
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_minargs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_minargs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minargs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 maxargs
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_maxargs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_maxargs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxargs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XPath.XPathResultType[] argTypes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XPath::XPathResultType>& MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_argTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParamInfo::dyn_argTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "argTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XPath::XPathResultType>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser/MS.Internal.Xml.XPath.ParamInfo.get_FType
::MS::Internal::Xml::XPath::Function::FunctionType MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_FType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_FType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::Function::FunctionType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser/MS.Internal.Xml.XPath.ParamInfo.get_Minargs
int MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_Minargs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_Minargs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Minargs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser/MS.Internal.Xml.XPath.ParamInfo.get_Maxargs
int MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_Maxargs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_Maxargs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Maxargs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathParser/MS.Internal.Xml.XPath.ParamInfo.get_ArgTypes
::ArrayW<::System::Xml::XPath::XPathResultType> MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_ArgTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathParser::ParamInfo::get_ArgTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Xml::XPath::XPathResultType>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.XPathScanner
#include "MS/Internal/Xml/XPath/XPathScanner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String xpathExpr
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::XPath::XPathScanner::dyn_xpathExpr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_xpathExpr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xpathExpr"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 xpathExprIndex
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::XPath::XPathScanner::dyn_xpathExprIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_xpathExprIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xpathExprIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind kind
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::XPath::XPathScanner::LexKind& MS::Internal::Xml::XPath::XPathScanner::dyn_kind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_kind");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kind"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::XPath::XPathScanner::LexKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char currentChar
[[deprecated("Use field access instead!")]] ::Il2CppChar& MS::Internal::Xml::XPath::XPathScanner::dyn_currentChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_currentChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentChar"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::XPath::XPathScanner::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::XPath::XPathScanner::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String stringValue
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::XPath::XPathScanner::dyn_stringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_stringValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double numberValue
[[deprecated("Use field access instead!")]] double& MS::Internal::Xml::XPath::XPathScanner::dyn_numberValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_numberValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberValue"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean canBeFunction
[[deprecated("Use field access instead!")]] bool& MS::Internal::Xml::XPath::XPathScanner::dyn_canBeFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_canBeFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canBeFunction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlCharType xmlCharType
[[deprecated("Use field access instead!")]] ::System::Xml::XmlCharType& MS::Internal::Xml::XPath::XPathScanner::dyn_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::dyn_xmlCharType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlCharType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlCharType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_SourceText
::StringW MS::Internal::Xml::XPath::XPathScanner::get_SourceText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::get_SourceText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SourceText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_CurerntChar
::Il2CppChar MS::Internal::Xml::XPath::XPathScanner::get_CurerntChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::get_CurerntChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurerntChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_Kind
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::get_Kind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::get_Kind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Kind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::XPath::XPathScanner::LexKind, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_Name
::StringW MS::Internal::Xml::XPath::XPathScanner::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_Prefix
::StringW MS::Internal::Xml::XPath::XPathScanner::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_StringValue
::StringW MS::Internal::Xml::XPath::XPathScanner::get_StringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::get_StringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_NumberValue
double MS::Internal::Xml::XPath::XPathScanner::get_NumberValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::get_NumberValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumberValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.get_CanBeFunction
bool MS::Internal::Xml::XPath::XPathScanner::get_CanBeFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::get_CanBeFunction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanBeFunction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.NextChar
bool MS::Internal::Xml::XPath::XPathScanner::NextChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::NextChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.SkipSpace
void MS::Internal::Xml::XPath::XPathScanner::SkipSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::SkipSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.NextLex
bool MS::Internal::Xml::XPath::XPathScanner::NextLex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::NextLex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextLex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.ScanNumber
double MS::Internal::Xml::XPath::XPathScanner::ScanNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::ScanNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.ScanFraction
double MS::Internal::Xml::XPath::XPathScanner::ScanFraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::ScanFraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanFraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.ScanString
::StringW MS::Internal::Xml::XPath::XPathScanner::ScanString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::ScanString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.XPath.XPathScanner.ScanName
::StringW MS::Internal::Xml::XPath::XPathScanner::ScanName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::ScanName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind
#include "MS/Internal/Xml/XPath/XPathScanner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Comma
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Comma() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Comma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Comma"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Comma
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Comma(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Comma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Comma", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Slash
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Slash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Slash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Slash"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Slash
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Slash(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Slash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Slash", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind At
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_At() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_At");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "At"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind At
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_At(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_At");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "At", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Dot
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Dot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Dot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Dot"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Dot
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Dot(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Dot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Dot", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind LParens
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_LParens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_LParens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "LParens"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind LParens
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_LParens(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_LParens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "LParens", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind RParens
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_RParens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_RParens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "RParens"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind RParens
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_RParens(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_RParens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "RParens", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind LBracket
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_LBracket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_LBracket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "LBracket"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind LBracket
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_LBracket(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_LBracket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "LBracket", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind RBracket
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_RBracket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_RBracket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "RBracket"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind RBracket
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_RBracket(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_RBracket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "RBracket", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Star
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Star() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Star");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Star"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Star
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Star(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Star");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Star", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Plus
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Plus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Plus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Plus"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Plus
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Plus(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Plus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Plus", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Minus
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Minus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Minus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Minus"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Minus
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Minus(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Minus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Minus", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Eq
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Eq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Eq");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Eq"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Eq
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Eq(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Eq");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Eq", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Lt
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Lt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Lt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Lt"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Lt
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Lt(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Lt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Lt", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Gt
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Gt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Gt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Gt"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Gt
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Gt(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Gt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Gt", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Bang
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Bang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Bang");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Bang"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Bang
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Bang(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Bang");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Bang", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Dollar
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Dollar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Dollar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Dollar"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Dollar
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Dollar(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Dollar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Dollar", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Apos
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Apos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Apos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Apos"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Apos
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Apos(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Apos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Apos", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Quote
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Quote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Quote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Quote"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Quote
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Quote(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Quote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Quote", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Union
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Union() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Union");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Union"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Union
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Union(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Union");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Union", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Ne
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Ne() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Ne");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Ne"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Ne
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Ne(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Ne");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Ne", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Le
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Le() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Le");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Le"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Le
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Le(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Le");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Le", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Ge
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Ge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Ge");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Ge"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Ge
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Ge(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Ge");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Ge", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind And
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_And() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_And");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "And"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind And
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_And(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_And");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "And", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Or
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Or() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Or");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Or"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Or
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Or(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Or");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Or", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind DotDot
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_DotDot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_DotDot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "DotDot"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind DotDot
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_DotDot(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_DotDot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "DotDot", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind SlashSlash
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_SlashSlash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_SlashSlash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "SlashSlash"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind SlashSlash
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_SlashSlash(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_SlashSlash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "SlashSlash", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Name
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Name"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Name
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Name(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind String
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "String"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind String
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_String(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "String", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Number
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Number");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Number"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Number
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Number(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Number", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Axe
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Axe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Axe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Axe"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Axe
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Axe(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Axe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Axe", value));
}
// Autogenerated static field getter
// Get static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Eof
::MS::Internal::Xml::XPath::XPathScanner::LexKind MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Eof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_get_Eof");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::MS::Internal::Xml::XPath::XPathScanner::LexKind>("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Eof"));
}
// Autogenerated static field setter
// Set static field: static public MS.Internal.Xml.XPath.XPathScanner/MS.Internal.Xml.XPath.LexKind Eof
void MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Eof(::MS::Internal::Xml::XPath::XPathScanner::LexKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::_set_Eof");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MS.Internal.Xml.XPath", "XPathScanner/LexKind", "Eof", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::XPath::XPathScanner::LexKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::XPath::XPathScanner::LexKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MS.Internal.Xml.Cache.XPathDocumentNavigator
#include "MS/Internal/Xml/Cache/XPathDocumentNavigator.hpp"
// Including type: System.Xml.XPath.XPathNodeType
#include "System/Xml/XPath/XPathNodeType.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.XPath.XPathNamespaceScope
#include "System/Xml/XPath/XPathNamespaceScope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageCurrent
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageCurrent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageCurrent"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageParent
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_pageParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageParent"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 idxCurrent
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxCurrent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxCurrent"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 idxParent
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::dyn_idxParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxParent"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_LineNumber
int MS::Internal::Xml::Cache::XPathDocumentNavigator::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_LineNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::Cache::XPathDocumentNavigator*), 36));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_LinePosition
int MS::Internal::Xml::Cache::XPathDocumentNavigator::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_LinePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::Cache::XPathDocumentNavigator*), 37));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.HasLineInfo
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::HasLineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::HasLineInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::MS::Internal::Xml::Cache::XPathDocumentNavigator*), 35));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.GetPositionHashCode
int MS::Internal::Xml::Cache::XPathDocumentNavigator::GetPositionHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::GetPositionHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPositionHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_Value
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathItem*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_NodeType
::System::Xml::XPath::XPathNodeType MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNodeType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_LocalName
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_NamespaceURI
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NamespaceURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NamespaceURI");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 26));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_Prefix
::StringW MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_Prefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 27));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_NameTable
::System::Xml::XmlNameTable* MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_NameTable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 19));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.get_UnderlyingObject
::Il2CppObject* MS::Internal::Xml::Cache::XPathDocumentNavigator::get_UnderlyingObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::get_UnderlyingObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 28));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.Clone
::System::Xml::XPath::XPathNavigator* MS::Internal::Xml::Cache::XPathDocumentNavigator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNavigator*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.MoveToFirstNamespace
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToFirstNamespace(::System::Xml::XPath::XPathNamespaceScope namespaceScope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToFirstNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 30));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, namespaceScope);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.MoveToNextNamespace
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToNextNamespace(::System::Xml::XPath::XPathNamespaceScope scope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToNextNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, scope);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.MoveToParent
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::MoveToParent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 32));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathDocumentNavigator.IsSamePosition
bool MS::Internal::Xml::Cache::XPathDocumentNavigator::IsSamePosition(::System::Xml::XPath::XPathNavigator* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathDocumentNavigator::IsSamePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XPath::XPathNavigator*), 33));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNode
#include "MS/Internal/Xml/Cache/XPathNode.hpp"
// Including type: MS.Internal.Xml.Cache.XPathNodeInfoAtom
#include "MS/Internal/Xml/Cache/XPathNodeInfoAtom.hpp"
// Including type: System.Xml.XPath.XPathNodeType
#include "System/Xml/XPath/XPathNodeType.hpp"
// Including type: System.Xml.XPath.XPathDocument
#include "System/Xml/XPath/XPathDocument.hpp"
// Including type: MS.Internal.Xml.Cache.XPathNodePageInfo
#include "MS/Internal/Xml/Cache/XPathNodePageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNodeInfoAtom info
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::Cache::XPathNodeInfoAtom*& MS::Internal::Xml::Cache::XPathNode::dyn_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_info");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "info"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::Cache::XPathNodeInfoAtom**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 idxSibling
[[deprecated("Use field access instead!")]] uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_idxSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_idxSibling");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxSibling"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 idxParent
[[deprecated("Use field access instead!")]] uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_idxParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_idxParent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxParent"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 idxSimilar
[[deprecated("Use field access instead!")]] uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_idxSimilar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_idxSimilar");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idxSimilar"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt16 posOffset
[[deprecated("Use field access instead!")]] uint16_t& MS::Internal::Xml::Cache::XPathNode::dyn_posOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_posOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posOffset"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 props
[[deprecated("Use field access instead!")]] uint& MS::Internal::Xml::Cache::XPathNode::dyn_props() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_props");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "props"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String value
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::Cache::XPathNode::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_NodeType
::System::Xml::XPath::XPathNodeType MS::Internal::Xml::Cache::XPathNode::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_NodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathNodeType, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_Prefix
::StringW MS::Internal::Xml::Cache::XPathNode::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_LocalName
::StringW MS::Internal::Xml::Cache::XPathNode::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_LocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_NamespaceUri
::StringW MS::Internal::Xml::Cache::XPathNode::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_NamespaceUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_Document
::System::Xml::XPath::XPathDocument* MS::Internal::Xml::Cache::XPathNode::get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathDocument*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_LineNumber
int MS::Internal::Xml::Cache::XPathNode::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_LineNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_LinePosition
int MS::Internal::Xml::Cache::XPathNode::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_LinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_CollapsedLinePosition
int MS::Internal::Xml::Cache::XPathNode::get_CollapsedLinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_CollapsedLinePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_CollapsedLinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_PageInfo
::MS::Internal::Xml::Cache::XPathNodePageInfo* MS::Internal::Xml::Cache::XPathNode::get_PageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_PageInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_PageInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::Cache::XPathNodePageInfo*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_IsXmlNamespaceNode
bool MS::Internal::Xml::Cache::XPathNode::get_IsXmlNamespaceNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_IsXmlNamespaceNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsXmlNamespaceNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_HasSibling
bool MS::Internal::Xml::Cache::XPathNode::get_HasSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_HasSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_HasCollapsedText
bool MS::Internal::Xml::Cache::XPathNode::get_HasCollapsedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_HasCollapsedText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasCollapsedText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_IsText
bool MS::Internal::Xml::Cache::XPathNode::get_IsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_IsText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_HasNamespaceDecls
bool MS::Internal::Xml::Cache::XPathNode::get_HasNamespaceDecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_HasNamespaceDecls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasNamespaceDecls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.get_Value
::StringW MS::Internal::Xml::Cache::XPathNode::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.GetParent
int MS::Internal::Xml::Cache::XPathNode::GetParent(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::GetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(pageNode));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNode.GetSibling
int MS::Internal::Xml::Cache::XPathNode::GetSibling(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNode::GetSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(pageNode));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNodeRef
#include "MS/Internal/Xml/Cache/XPathNodeRef.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] page
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodeRef::dyn_page() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::dyn_page");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "page"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 idx
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathNodeRef::dyn_idx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::dyn_idx");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef.get_Page
::ArrayW<::MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodeRef::get_Page() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::get_Page");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Page", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef.get_Index
int MS::Internal::Xml::Cache::XPathNodeRef::get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::get_Index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef..ctor
// ABORTED elsewhere.  MS::Internal::Xml::Cache::XPathNodeRef::XPathNodeRef(::ArrayW<::MS::Internal::Xml::Cache::XPathNode> page, int idx)
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeRef.GetHashCode
int MS::Internal::Xml::Cache::XPathNodeRef::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeRef::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNodeHelper
#include "MS/Internal/Xml/Cache/XPathNodeHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetLocalNamespaces
int MS::Internal::Xml::Cache::XPathNodeHelper::GetLocalNamespaces(::ArrayW<::MS::Internal::Xml::Cache::XPathNode> pageElem, int idxElem, ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNmsp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetLocalNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetLocalNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageElem), ::il2cpp_utils::ExtractType(idxElem), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pageElem, idxElem, byref(pageNmsp));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetInScopeNamespaces
int MS::Internal::Xml::Cache::XPathNodeHelper::GetInScopeNamespaces(::ArrayW<::MS::Internal::Xml::Cache::XPathNode> pageElem, int idxElem, ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNmsp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetInScopeNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetInScopeNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageElem), ::il2cpp_utils::ExtractType(idxElem), ::il2cpp_utils::ExtractIndependentType<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pageElem, idxElem, byref(pageNmsp));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetParent
bool MS::Internal::Xml::Cache::XPathNodeHelper::GetParent(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNode, ByRef<int> idxNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageNode), ::il2cpp_utils::ExtractType(idxNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pageNode), byref(idxNode));
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetLocation
int MS::Internal::Xml::Cache::XPathNodeHelper::GetLocation(::ArrayW<::MS::Internal::Xml::Cache::XPathNode> pageNode, int idxNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetLocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetLocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageNode), ::il2cpp_utils::ExtractType(idxNode)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pageNode, idxNode);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetTextFollowing
bool MS::Internal::Xml::Cache::XPathNodeHelper::GetTextFollowing(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageCurrent, ByRef<int> idxCurrent, ::ArrayW<::MS::Internal::Xml::Cache::XPathNode> pageEnd, int idxEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetTextFollowing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetTextFollowing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageCurrent), ::il2cpp_utils::ExtractType(idxCurrent), ::il2cpp_utils::ExtractType(pageEnd), ::il2cpp_utils::ExtractType(idxEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pageCurrent), byref(idxCurrent), pageEnd, idxEnd);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeHelper.GetNonDescendant
bool MS::Internal::Xml::Cache::XPathNodeHelper::GetNonDescendant(ByRef<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>> pageNode, ByRef<int> idxNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeHelper::GetNonDescendant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("MS.Internal.Xml.Cache", "XPathNodeHelper", "GetNonDescendant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pageNode), ::il2cpp_utils::ExtractType(idxNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pageNode), byref(idxNode));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNodePageInfo
#include "MS/Internal/Xml/Cache/XPathNodePageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 pageNum
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nodeCount
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_nodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_nodeCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageNext
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::dyn_pageNext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageNext"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodePageInfo.get_PageNumber
int MS::Internal::Xml::Cache::XPathNodePageInfo::get_PageNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::get_PageNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PageNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodePageInfo.get_NodeCount
int MS::Internal::Xml::Cache::XPathNodePageInfo::get_NodeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::get_NodeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodePageInfo.get_NextPage
::ArrayW<::MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodePageInfo::get_NextPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodePageInfo::get_NextPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MS.Internal.Xml.Cache.XPathNodeInfoAtom
#include "MS/Internal/Xml/Cache/XPathNodeInfoAtom.hpp"
// Including type: System.Xml.XPath.XPathDocument
#include "System/Xml/XPath/XPathDocument.hpp"
// Including type: MS.Internal.Xml.Cache.XPathNodePageInfo
#include "MS/Internal/Xml/Cache/XPathNodePageInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String localName
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_localName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_localName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String namespaceUri
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_namespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_namespaceUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageParent
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageParent"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNode[] pageSibling
[[deprecated("Use field access instead!")]] ::ArrayW<::MS::Internal::Xml::Cache::XPathNode>& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageSibling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageSibling"))->offset;
  return *reinterpret_cast<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XPath.XPathDocument doc
[[deprecated("Use field access instead!")]] ::System::Xml::XPath::XPathDocument*& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_doc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_doc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doc"))->offset;
  return *reinterpret_cast<::System::Xml::XPath::XPathDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lineNumBase
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_lineNumBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_lineNumBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNumBase"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 linePosBase
[[deprecated("Use field access instead!")]] int& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_linePosBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_linePosBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePosBase"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MS.Internal.Xml.Cache.XPathNodePageInfo pageInfo
[[deprecated("Use field access instead!")]] ::MS::Internal::Xml::Cache::XPathNodePageInfo*& MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::dyn_pageInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageInfo"))->offset;
  return *reinterpret_cast<::MS::Internal::Xml::Cache::XPathNodePageInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_PageInfo
::MS::Internal::Xml::Cache::XPathNodePageInfo* MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_PageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_PageInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PageInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::MS::Internal::Xml::Cache::XPathNodePageInfo*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_LocalName
::StringW MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_LocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_NamespaceUri
::StringW MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_NamespaceUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_Prefix
::StringW MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_SiblingPage
::ArrayW<::MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_SiblingPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_SiblingPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SiblingPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_ParentPage
::ArrayW<::MS::Internal::Xml::Cache::XPathNode> MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_ParentPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_ParentPage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentPage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::MS::Internal::Xml::Cache::XPathNode>, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_Document
::System::Xml::XPath::XPathDocument* MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XPath::XPathDocument*, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_LineNumberBase
int MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_LineNumberBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_LineNumberBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNumberBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MS.Internal.Xml.Cache.XPathNodeInfoAtom.get_LinePositionBase
int MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_LinePositionBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::MS::Internal::Xml::Cache::XPathNodeInfoAtom::get_LinePositionBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LinePositionBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.MonoTODOAttribute
#include "System/MonoTODOAttribute_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.LocalAppContextSwitches
#include "System/LocalAppContextSwitches_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean IgnoreEmptyKeySequences
bool System::LocalAppContextSwitches_::_get_IgnoreEmptyKeySequences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalAppContextSwitches_::_get_IgnoreEmptyKeySequences");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "LocalAppContextSwitches", "IgnoreEmptyKeySequences"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean IgnoreEmptyKeySequences
void System::LocalAppContextSwitches_::_set_IgnoreEmptyKeySequences(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalAppContextSwitches_::_set_IgnoreEmptyKeySequences");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LocalAppContextSwitches", "IgnoreEmptyKeySequences", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean DontThrowOnInvalidSurrogatePairs
bool System::LocalAppContextSwitches_::_get_DontThrowOnInvalidSurrogatePairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalAppContextSwitches_::_get_DontThrowOnInvalidSurrogatePairs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "LocalAppContextSwitches", "DontThrowOnInvalidSurrogatePairs"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean DontThrowOnInvalidSurrogatePairs
void System::LocalAppContextSwitches_::_set_DontThrowOnInvalidSurrogatePairs(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalAppContextSwitches_::_set_DontThrowOnInvalidSurrogatePairs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LocalAppContextSwitches", "DontThrowOnInvalidSurrogatePairs", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.AsyncHelper
#include "System/Xml/AsyncHelper.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task DoneTask
::System::Threading::Tasks::Task* System::Xml::AsyncHelper::_get_DoneTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_get_DoneTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task*>("System.Xml", "AsyncHelper", "DoneTask"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task DoneTask
void System::Xml::AsyncHelper::_set_DoneTask(::System::Threading::Tasks::Task* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_set_DoneTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTask", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskTrue
::System::Threading::Tasks::Task_1<bool>* System::Xml::AsyncHelper::_get_DoneTaskTrue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_get_DoneTaskTrue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task_1<bool>*>("System.Xml", "AsyncHelper", "DoneTaskTrue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskTrue
void System::Xml::AsyncHelper::_set_DoneTaskTrue(::System::Threading::Tasks::Task_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_set_DoneTaskTrue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTaskTrue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskFalse
::System::Threading::Tasks::Task_1<bool>* System::Xml::AsyncHelper::_get_DoneTaskFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_get_DoneTaskFalse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task_1<bool>*>("System.Xml", "AsyncHelper", "DoneTaskFalse"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task`1<System.Boolean> DoneTaskFalse
void System::Xml::AsyncHelper::_set_DoneTaskFalse(::System::Threading::Tasks::Task_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_set_DoneTaskFalse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTaskFalse", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task`1<System.Int32> DoneTaskZero
::System::Threading::Tasks::Task_1<int>* System::Xml::AsyncHelper::_get_DoneTaskZero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_get_DoneTaskZero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task_1<int>*>("System.Xml", "AsyncHelper", "DoneTaskZero"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task`1<System.Int32> DoneTaskZero
void System::Xml::AsyncHelper::_set_DoneTaskZero(::System::Threading::Tasks::Task_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::_set_DoneTaskZero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "AsyncHelper", "DoneTaskZero", value));
}
// Autogenerated method: System.Xml.AsyncHelper..cctor
void System::Xml::AsyncHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::AsyncHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "AsyncHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Base64Encoder
#include "System/Xml/Base64Encoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] leftOverBytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::Base64Encoder::dyn_leftOverBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Base64Encoder::dyn_leftOverBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftOverBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 leftOverBytesCount
[[deprecated("Use field access instead!")]] int& System::Xml::Base64Encoder::dyn_leftOverBytesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Base64Encoder::dyn_leftOverBytesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftOverBytesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] charsLine
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Xml::Base64Encoder::dyn_charsLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Base64Encoder::dyn_charsLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charsLine"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Base64Encoder.WriteChars
void System::Xml::Base64Encoder::WriteChars(::ArrayW<::Il2CppChar> chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Base64Encoder::WriteChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Base64Encoder*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated method: System.Xml.Base64Encoder.Encode
void System::Xml::Base64Encoder::Encode(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Base64Encoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.Base64Encoder.Flush
void System::Xml::Base64Encoder::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Base64Encoder::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlRawWriterBase64Encoder
#include "System/Xml/XmlRawWriterBase64Encoder.hpp"
// Including type: System.Xml.XmlRawWriter
#include "System/Xml/XmlRawWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlRawWriter rawWriter
[[deprecated("Use field access instead!")]] ::System::Xml::XmlRawWriter*& System::Xml::XmlRawWriterBase64Encoder::dyn_rawWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriterBase64Encoder::dyn_rawWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rawWriter"))->offset;
  return *reinterpret_cast<::System::Xml::XmlRawWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlRawWriterBase64Encoder.WriteChars
void System::Xml::XmlRawWriterBase64Encoder::WriteChars(::ArrayW<::Il2CppChar> chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRawWriterBase64Encoder::WriteChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Base64Encoder*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextWriterBase64Encoder
#include "System/Xml/XmlTextWriterBase64Encoder.hpp"
// Including type: System.Xml.XmlTextEncoder
#include "System/Xml/XmlTextEncoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextEncoder xmlTextEncoder
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextEncoder*& System::Xml::XmlTextWriterBase64Encoder::dyn_xmlTextEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextWriterBase64Encoder::dyn_xmlTextEncoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlTextEncoder"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextEncoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlTextWriterBase64Encoder.WriteChars
void System::Xml::XmlTextWriterBase64Encoder::WriteChars(::ArrayW<::Il2CppChar> chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextWriterBase64Encoder::WriteChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::Base64Encoder*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinHexDecoder
#include "System/Xml/BinHexDecoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::BinHexDecoder::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 curIndex
[[deprecated("Use field access instead!")]] int& System::Xml::BinHexDecoder::dyn_curIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_curIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endIndex
[[deprecated("Use field access instead!")]] int& System::Xml::BinHexDecoder::dyn_endIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_endIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasHalfByteCached
[[deprecated("Use field access instead!")]] bool& System::Xml::BinHexDecoder::dyn_hasHalfByteCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_hasHalfByteCached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasHalfByteCached"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte cachedHalfByte
[[deprecated("Use field access instead!")]] uint8_t& System::Xml::BinHexDecoder::dyn_cachedHalfByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::dyn_cachedHalfByte");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedHalfByte"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.BinHexDecoder.Decode
::ArrayW<uint8_t> System::Xml::BinHexDecoder::Decode(::ArrayW<::Il2CppChar> chars, bool allowOddChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexDecoder", "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(allowOddChars)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars, allowOddChars);
}
// Autogenerated method: System.Xml.BinHexDecoder.Decode
void System::Xml::BinHexDecoder::Decode(::Il2CppChar* pChars, ::Il2CppChar* pCharsEndPos, uint8_t* pBytes, uint8_t* pBytesEndPos, ByRef<bool> hasHalfByteCached, ByRef<uint8_t> cachedHalfByte, ByRef<int> charsDecoded, ByRef<int> bytesDecoded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexDecoder", "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pChars), ::il2cpp_utils::ExtractType(pCharsEndPos), ::il2cpp_utils::ExtractType(pBytes), ::il2cpp_utils::ExtractType(pBytesEndPos), ::il2cpp_utils::ExtractType(hasHalfByteCached), ::il2cpp_utils::ExtractType(cachedHalfByte), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pChars, pCharsEndPos, pBytes, pBytesEndPos, byref(hasHalfByteCached), byref(cachedHalfByte), byref(charsDecoded), byref(bytesDecoded));
}
// Autogenerated method: System.Xml.BinHexDecoder.get_IsFull
bool System::Xml::BinHexDecoder::get_IsFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::get_IsFull");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IncrementalReadDecoder*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BinHexDecoder.Decode
int System::Xml::BinHexDecoder::Decode(::ArrayW<::Il2CppChar> chars, int startPos, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexDecoder::Decode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IncrementalReadDecoder*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, startPos, len);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinHexEncoder
#include "System/Xml/BinHexEncoder.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.BinHexEncoder.Encode
void System::Xml::BinHexEncoder::Encode(::ArrayW<uint8_t> buffer, int index, int count, ::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexEncoder", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, index, count, writer);
}
// Autogenerated method: System.Xml.BinHexEncoder.Encode
::StringW System::Xml::BinHexEncoder::Encode(::ArrayW<uint8_t> inArray, int offsetIn, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexEncoder", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray), ::il2cpp_utils::ExtractType(offsetIn), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArray, offsetIn, count);
}
// Autogenerated method: System.Xml.BinHexEncoder.Encode
int System::Xml::BinHexEncoder::Encode(::ArrayW<uint8_t> inArray, int offsetIn, int count, ::ArrayW<::Il2CppChar> outArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinHexEncoder::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinHexEncoder", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray), ::il2cpp_utils::ExtractType(offsetIn), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(outArray)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArray, offsetIn, count, outArray);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinXmlToken
#include "System/Xml/BinXmlToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Error
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Error
void System::Xml::BinXmlToken::_set_Error(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken NotImpl
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_NotImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_NotImpl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "NotImpl"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken NotImpl
void System::Xml::BinXmlToken::_set_NotImpl(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_NotImpl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "NotImpl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken EOF
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_EOF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_EOF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "EOF"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken EOF
void System::Xml::BinXmlToken::_set_EOF(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_EOF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "EOF", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XmlDecl
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XmlDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XmlDecl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XmlDecl"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XmlDecl
void System::Xml::BinXmlToken::_set_XmlDecl(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XmlDecl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XmlDecl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Encoding
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_Encoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Encoding"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Encoding
void System::Xml::BinXmlToken::_set_Encoding(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_Encoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Encoding", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken DocType
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_DocType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_DocType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "DocType"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken DocType
void System::Xml::BinXmlToken::_set_DocType(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_DocType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "DocType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken System
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_System");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "System"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken System
void System::Xml::BinXmlToken::_set_System(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_System");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "System", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Public
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_Public");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Public"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Public
void System::Xml::BinXmlToken::_set_Public(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_Public");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Public", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Subset
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Subset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_Subset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Subset"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Subset
void System::Xml::BinXmlToken::_set_Subset(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_Subset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Subset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Element
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_Element");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Element"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Element
void System::Xml::BinXmlToken::_set_Element(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_Element");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Element", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken EndElem
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_EndElem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_EndElem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "EndElem"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken EndElem
void System::Xml::BinXmlToken::_set_EndElem(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_EndElem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "EndElem", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Attr
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Attr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_Attr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Attr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Attr
void System::Xml::BinXmlToken::_set_Attr(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_Attr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Attr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken EndAttrs
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_EndAttrs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_EndAttrs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "EndAttrs"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken EndAttrs
void System::Xml::BinXmlToken::_set_EndAttrs(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_EndAttrs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "EndAttrs", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken PI
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_PI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_PI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "PI"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken PI
void System::Xml::BinXmlToken::_set_PI(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_PI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "PI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Comment
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Comment
void System::Xml::BinXmlToken::_set_Comment(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken CData
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_CData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_CData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "CData"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken CData
void System::Xml::BinXmlToken::_set_CData(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_CData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "CData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken EndCData
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_EndCData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_EndCData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "EndCData"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken EndCData
void System::Xml::BinXmlToken::_set_EndCData(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_EndCData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "EndCData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Name
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Name"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Name
void System::Xml::BinXmlToken::_set_Name(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken QName
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_QName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_QName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "QName"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken QName
void System::Xml::BinXmlToken::_set_QName(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_QName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "QName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XmlText
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XmlText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XmlText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XmlText"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XmlText
void System::Xml::BinXmlToken::_set_XmlText(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XmlText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XmlText", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Nest
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Nest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_Nest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Nest"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Nest
void System::Xml::BinXmlToken::_set_Nest(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_Nest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Nest", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken EndNest
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_EndNest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_EndNest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "EndNest"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken EndNest
void System::Xml::BinXmlToken::_set_EndNest(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_EndNest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "EndNest", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken Extn
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_Extn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_Extn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "Extn"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken Extn
void System::Xml::BinXmlToken::_set_Extn(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_Extn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "Extn", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken NmFlush
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_NmFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_NmFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "NmFlush"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken NmFlush
void System::Xml::BinXmlToken::_set_NmFlush(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_NmFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "NmFlush", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_BIT
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_BIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_BIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_BIT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_BIT
void System::Xml::BinXmlToken::_set_SQL_BIT(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_BIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_BIT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_TINYINT
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_TINYINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_TINYINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_TINYINT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_TINYINT
void System::Xml::BinXmlToken::_set_SQL_TINYINT(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_TINYINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_TINYINT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_SMALLINT
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_SMALLINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_SMALLINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_SMALLINT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_SMALLINT
void System::Xml::BinXmlToken::_set_SQL_SMALLINT(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_SMALLINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_SMALLINT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_INT
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_INT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_INT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_INT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_INT
void System::Xml::BinXmlToken::_set_SQL_INT(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_INT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_INT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_BIGINT
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_BIGINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_BIGINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_BIGINT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_BIGINT
void System::Xml::BinXmlToken::_set_SQL_BIGINT(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_BIGINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_BIGINT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_REAL
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_REAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_REAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_REAL"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_REAL
void System::Xml::BinXmlToken::_set_SQL_REAL(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_REAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_REAL", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_FLOAT
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_FLOAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_FLOAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_FLOAT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_FLOAT
void System::Xml::BinXmlToken::_set_SQL_FLOAT(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_FLOAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_FLOAT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_MONEY
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_MONEY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_MONEY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_MONEY"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_MONEY
void System::Xml::BinXmlToken::_set_SQL_MONEY(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_MONEY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_MONEY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_SMALLMONEY
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_SMALLMONEY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_SMALLMONEY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_SMALLMONEY"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_SMALLMONEY
void System::Xml::BinXmlToken::_set_SQL_SMALLMONEY(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_SMALLMONEY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_SMALLMONEY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_DATETIME
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_DATETIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_DATETIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_DATETIME"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_DATETIME
void System::Xml::BinXmlToken::_set_SQL_DATETIME(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_DATETIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_DATETIME", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_SMALLDATETIME
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_SMALLDATETIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_SMALLDATETIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_SMALLDATETIME"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_SMALLDATETIME
void System::Xml::BinXmlToken::_set_SQL_SMALLDATETIME(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_SMALLDATETIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_SMALLDATETIME", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_DECIMAL
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_DECIMAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_DECIMAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_DECIMAL"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_DECIMAL
void System::Xml::BinXmlToken::_set_SQL_DECIMAL(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_DECIMAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_DECIMAL", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_NUMERIC
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_NUMERIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_NUMERIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_NUMERIC"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_NUMERIC
void System::Xml::BinXmlToken::_set_SQL_NUMERIC(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_NUMERIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_NUMERIC", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_UUID
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_UUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_UUID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_UUID"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_UUID
void System::Xml::BinXmlToken::_set_SQL_UUID(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_UUID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_UUID", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_VARBINARY
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_VARBINARY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_VARBINARY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_VARBINARY"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_VARBINARY
void System::Xml::BinXmlToken::_set_SQL_VARBINARY(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_VARBINARY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_VARBINARY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_BINARY
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_BINARY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_BINARY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_BINARY"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_BINARY
void System::Xml::BinXmlToken::_set_SQL_BINARY(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_BINARY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_BINARY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_IMAGE
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_IMAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_IMAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_IMAGE"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_IMAGE
void System::Xml::BinXmlToken::_set_SQL_IMAGE(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_IMAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_IMAGE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_CHAR
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_CHAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_CHAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_CHAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_CHAR
void System::Xml::BinXmlToken::_set_SQL_CHAR(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_CHAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_CHAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_VARCHAR
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_VARCHAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_VARCHAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_VARCHAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_VARCHAR
void System::Xml::BinXmlToken::_set_SQL_VARCHAR(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_VARCHAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_VARCHAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_TEXT
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_TEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_TEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_TEXT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_TEXT
void System::Xml::BinXmlToken::_set_SQL_TEXT(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_TEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_TEXT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_NVARCHAR
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_NVARCHAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_NVARCHAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_NVARCHAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_NVARCHAR
void System::Xml::BinXmlToken::_set_SQL_NVARCHAR(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_NVARCHAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_NVARCHAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_NCHAR
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_NCHAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_NCHAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_NCHAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_NCHAR
void System::Xml::BinXmlToken::_set_SQL_NCHAR(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_NCHAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_NCHAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_NTEXT
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_NTEXT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_NTEXT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_NTEXT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_NTEXT
void System::Xml::BinXmlToken::_set_SQL_NTEXT(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_NTEXT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_NTEXT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken SQL_UDT
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_SQL_UDT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_SQL_UDT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "SQL_UDT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken SQL_UDT
void System::Xml::BinXmlToken::_set_SQL_UDT(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_SQL_UDT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "SQL_UDT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_KATMAI_DATE
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_KATMAI_DATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XSD_KATMAI_DATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_KATMAI_DATE"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_KATMAI_DATE
void System::Xml::BinXmlToken::_set_XSD_KATMAI_DATE(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XSD_KATMAI_DATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_KATMAI_DATE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_KATMAI_DATETIME
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_KATMAI_DATETIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XSD_KATMAI_DATETIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_KATMAI_DATETIME"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_KATMAI_DATETIME
void System::Xml::BinXmlToken::_set_XSD_KATMAI_DATETIME(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XSD_KATMAI_DATETIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_KATMAI_DATETIME", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_KATMAI_TIME
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_KATMAI_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XSD_KATMAI_TIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_KATMAI_TIME"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_KATMAI_TIME
void System::Xml::BinXmlToken::_set_XSD_KATMAI_TIME(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XSD_KATMAI_TIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_KATMAI_TIME", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_KATMAI_DATEOFFSET
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_KATMAI_DATEOFFSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XSD_KATMAI_DATEOFFSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_KATMAI_DATEOFFSET"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_KATMAI_DATEOFFSET
void System::Xml::BinXmlToken::_set_XSD_KATMAI_DATEOFFSET(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XSD_KATMAI_DATEOFFSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_KATMAI_DATEOFFSET", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_KATMAI_DATETIMEOFFSET
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_KATMAI_DATETIMEOFFSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XSD_KATMAI_DATETIMEOFFSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_KATMAI_DATETIMEOFFSET"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_KATMAI_DATETIMEOFFSET
void System::Xml::BinXmlToken::_set_XSD_KATMAI_DATETIMEOFFSET(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XSD_KATMAI_DATETIMEOFFSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_KATMAI_DATETIMEOFFSET", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_KATMAI_TIMEOFFSET
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_KATMAI_TIMEOFFSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XSD_KATMAI_TIMEOFFSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_KATMAI_TIMEOFFSET"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_KATMAI_TIMEOFFSET
void System::Xml::BinXmlToken::_set_XSD_KATMAI_TIMEOFFSET(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XSD_KATMAI_TIMEOFFSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_KATMAI_TIMEOFFSET", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_BOOLEAN
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_BOOLEAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XSD_BOOLEAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_BOOLEAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_BOOLEAN
void System::Xml::BinXmlToken::_set_XSD_BOOLEAN(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XSD_BOOLEAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_BOOLEAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_TIME
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_TIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XSD_TIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_TIME"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_TIME
void System::Xml::BinXmlToken::_set_XSD_TIME(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XSD_TIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_TIME", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_DATETIME
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_DATETIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XSD_DATETIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_DATETIME"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_DATETIME
void System::Xml::BinXmlToken::_set_XSD_DATETIME(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XSD_DATETIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_DATETIME", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_DATE
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_DATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XSD_DATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_DATE"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_DATE
void System::Xml::BinXmlToken::_set_XSD_DATE(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XSD_DATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_DATE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_BINHEX
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_BINHEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XSD_BINHEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_BINHEX"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_BINHEX
void System::Xml::BinXmlToken::_set_XSD_BINHEX(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XSD_BINHEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_BINHEX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_BASE64
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_BASE64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XSD_BASE64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_BASE64"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_BASE64
void System::Xml::BinXmlToken::_set_XSD_BASE64(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XSD_BASE64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_BASE64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_DECIMAL
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_DECIMAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XSD_DECIMAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_DECIMAL"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_DECIMAL
void System::Xml::BinXmlToken::_set_XSD_DECIMAL(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XSD_DECIMAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_DECIMAL", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_BYTE
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_BYTE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XSD_BYTE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_BYTE"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_BYTE
void System::Xml::BinXmlToken::_set_XSD_BYTE(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XSD_BYTE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_BYTE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_UNSIGNEDSHORT
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_UNSIGNEDSHORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XSD_UNSIGNEDSHORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_UNSIGNEDSHORT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_UNSIGNEDSHORT
void System::Xml::BinXmlToken::_set_XSD_UNSIGNEDSHORT(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XSD_UNSIGNEDSHORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_UNSIGNEDSHORT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_UNSIGNEDINT
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_UNSIGNEDINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XSD_UNSIGNEDINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_UNSIGNEDINT"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_UNSIGNEDINT
void System::Xml::BinXmlToken::_set_XSD_UNSIGNEDINT(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XSD_UNSIGNEDINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_UNSIGNEDINT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_UNSIGNEDLONG
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_UNSIGNEDLONG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XSD_UNSIGNEDLONG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_UNSIGNEDLONG"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_UNSIGNEDLONG
void System::Xml::BinXmlToken::_set_XSD_UNSIGNEDLONG(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XSD_UNSIGNEDLONG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_UNSIGNEDLONG", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.BinXmlToken XSD_QNAME
::System::Xml::BinXmlToken System::Xml::BinXmlToken::_get_XSD_QNAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_get_XSD_QNAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::BinXmlToken>("System.Xml", "BinXmlToken", "XSD_QNAME"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.BinXmlToken XSD_QNAME
void System::Xml::BinXmlToken::_set_XSD_QNAME(::System::Xml::BinXmlToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::_set_XSD_QNAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlToken", "XSD_QNAME", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::BinXmlToken::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlToken::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinXmlSqlDecimal
#include "System/Xml/BinXmlSqlDecimal.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte NUMERIC_MAX_PRECISION
uint8_t System::Xml::BinXmlSqlDecimal::_get_NUMERIC_MAX_PRECISION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_get_NUMERIC_MAX_PRECISION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Xml", "BinXmlSqlDecimal", "NUMERIC_MAX_PRECISION"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte NUMERIC_MAX_PRECISION
void System::Xml::BinXmlSqlDecimal::_set_NUMERIC_MAX_PRECISION(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_set_NUMERIC_MAX_PRECISION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "NUMERIC_MAX_PRECISION", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte MaxPrecision
uint8_t System::Xml::BinXmlSqlDecimal::_get_MaxPrecision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_get_MaxPrecision");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Xml", "BinXmlSqlDecimal", "MaxPrecision"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte MaxPrecision
void System::Xml::BinXmlSqlDecimal::_set_MaxPrecision(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_set_MaxPrecision");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "MaxPrecision", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte MaxScale
uint8_t System::Xml::BinXmlSqlDecimal::_get_MaxScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_get_MaxScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Xml", "BinXmlSqlDecimal", "MaxScale"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte MaxScale
void System::Xml::BinXmlSqlDecimal::_set_MaxScale(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_set_MaxScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "MaxScale", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 x_cNumeMax
int System::Xml::BinXmlSqlDecimal::_get_x_cNumeMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_get_x_cNumeMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml", "BinXmlSqlDecimal", "x_cNumeMax"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 x_cNumeMax
void System::Xml::BinXmlSqlDecimal::_set_x_cNumeMax(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_set_x_cNumeMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "x_cNumeMax", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 x_lInt32Base
int64_t System::Xml::BinXmlSqlDecimal::_get_x_lInt32Base() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_get_x_lInt32Base");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Xml", "BinXmlSqlDecimal", "x_lInt32Base"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 x_lInt32Base
void System::Xml::BinXmlSqlDecimal::_set_x_lInt32Base(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_set_x_lInt32Base");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "x_lInt32Base", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64 x_ulInt32Base
uint64_t System::Xml::BinXmlSqlDecimal::_get_x_ulInt32Base() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_get_x_ulInt32Base");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Xml", "BinXmlSqlDecimal", "x_ulInt32Base"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64 x_ulInt32Base
void System::Xml::BinXmlSqlDecimal::_set_x_ulInt32Base(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_set_x_ulInt32Base");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "x_ulInt32Base", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt64 x_ulInt32BaseForMod
uint64_t System::Xml::BinXmlSqlDecimal::_get_x_ulInt32BaseForMod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_get_x_ulInt32BaseForMod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Xml", "BinXmlSqlDecimal", "x_ulInt32BaseForMod"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt64 x_ulInt32BaseForMod
void System::Xml::BinXmlSqlDecimal::_set_x_ulInt32BaseForMod(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_set_x_ulInt32BaseForMod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "x_ulInt32BaseForMod", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.UInt64 x_llMax
uint64_t System::Xml::BinXmlSqlDecimal::_get_x_llMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_get_x_llMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System.Xml", "BinXmlSqlDecimal", "x_llMax"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt64 x_llMax
void System::Xml::BinXmlSqlDecimal::_set_x_llMax(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_set_x_llMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "x_llMax", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Double DUINT_BASE
double System::Xml::BinXmlSqlDecimal::_get_DUINT_BASE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_get_DUINT_BASE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System.Xml", "BinXmlSqlDecimal", "DUINT_BASE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Double DUINT_BASE
void System::Xml::BinXmlSqlDecimal::_set_DUINT_BASE(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_set_DUINT_BASE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "DUINT_BASE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Double DUINT_BASE2
double System::Xml::BinXmlSqlDecimal::_get_DUINT_BASE2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_get_DUINT_BASE2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System.Xml", "BinXmlSqlDecimal", "DUINT_BASE2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Double DUINT_BASE2
void System::Xml::BinXmlSqlDecimal::_set_DUINT_BASE2(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_set_DUINT_BASE2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "DUINT_BASE2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Double DUINT_BASE3
double System::Xml::BinXmlSqlDecimal::_get_DUINT_BASE3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_get_DUINT_BASE3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System.Xml", "BinXmlSqlDecimal", "DUINT_BASE3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Double DUINT_BASE3
void System::Xml::BinXmlSqlDecimal::_set_DUINT_BASE3(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_set_DUINT_BASE3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "DUINT_BASE3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] x_rgulShiftBase
::ArrayW<uint> System::Xml::BinXmlSqlDecimal::_get_x_rgulShiftBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_get_x_rgulShiftBase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Xml", "BinXmlSqlDecimal", "x_rgulShiftBase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] x_rgulShiftBase
void System::Xml::BinXmlSqlDecimal::_set_x_rgulShiftBase(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_set_x_rgulShiftBase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "x_rgulShiftBase", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] rgCLenFromPrec
::ArrayW<uint8_t> System::Xml::BinXmlSqlDecimal::_get_rgCLenFromPrec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_get_rgCLenFromPrec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Xml", "BinXmlSqlDecimal", "rgCLenFromPrec"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] rgCLenFromPrec
void System::Xml::BinXmlSqlDecimal::_set_rgCLenFromPrec(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::_set_rgCLenFromPrec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlSqlDecimal", "rgCLenFromPrec", value));
}
// Autogenerated instance field getter
// Get instance field: System.Byte m_bLen
[[deprecated("Use field access instead!")]] uint8_t& System::Xml::BinXmlSqlDecimal::dyn_m_bLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::dyn_m_bLen");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bLen"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte m_bPrec
[[deprecated("Use field access instead!")]] uint8_t& System::Xml::BinXmlSqlDecimal::dyn_m_bPrec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::dyn_m_bPrec");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bPrec"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte m_bScale
[[deprecated("Use field access instead!")]] uint8_t& System::Xml::BinXmlSqlDecimal::dyn_m_bScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::dyn_m_bScale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bScale"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte m_bSign
[[deprecated("Use field access instead!")]] uint8_t& System::Xml::BinXmlSqlDecimal::dyn_m_bSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::dyn_m_bSign");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bSign"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_data1
[[deprecated("Use field access instead!")]] uint& System::Xml::BinXmlSqlDecimal::dyn_m_data1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::dyn_m_data1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_data1"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_data2
[[deprecated("Use field access instead!")]] uint& System::Xml::BinXmlSqlDecimal::dyn_m_data2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::dyn_m_data2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_data2"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_data3
[[deprecated("Use field access instead!")]] uint& System::Xml::BinXmlSqlDecimal::dyn_m_data3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::dyn_m_data3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_data3"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.UInt32 m_data4
[[deprecated("Use field access instead!")]] uint& System::Xml::BinXmlSqlDecimal::dyn_m_data4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::dyn_m_data4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_data4"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal.get_IsPositive
bool System::Xml::BinXmlSqlDecimal::get_IsPositive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::get_IsPositive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsPositive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal..ctor
System::Xml::BinXmlSqlDecimal::BinXmlSqlDecimal(::ArrayW<uint8_t> data, int offset, bool trim) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(trim)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, offset, trim);
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal..cctor
void System::Xml::BinXmlSqlDecimal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlSqlDecimal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal.UIntFromByteArray
uint System::Xml::BinXmlSqlDecimal::UIntFromByteArray(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::UIntFromByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlSqlDecimal", "UIntFromByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal.MpDiv1
void System::Xml::BinXmlSqlDecimal::MpDiv1(::ArrayW<uint> rgulU, ByRef<int> ciulU, uint iulD, ByRef<uint> iulR) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::MpDiv1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlSqlDecimal", "MpDiv1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgulU), ::il2cpp_utils::ExtractType(ciulU), ::il2cpp_utils::ExtractType(iulD), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgulU, byref(ciulU), iulD, byref(iulR));
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal.MpNormalize
void System::Xml::BinXmlSqlDecimal::MpNormalize(::ArrayW<uint> rgulU, ByRef<int> ciulU) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::MpNormalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlSqlDecimal", "MpNormalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgulU), ::il2cpp_utils::ExtractType(ciulU)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgulU, byref(ciulU));
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal.ChFromDigit
::Il2CppChar System::Xml::BinXmlSqlDecimal::ChFromDigit(uint uiDigit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::ChFromDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlSqlDecimal", "ChFromDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uiDigit)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uiDigit);
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal.ToDecimal
::System::Decimal System::Xml::BinXmlSqlDecimal::ToDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal.TrimTrailingZeros
void System::Xml::BinXmlSqlDecimal::TrimTrailingZeros() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::TrimTrailingZeros");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TrimTrailingZeros", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BinXmlSqlDecimal.ToString
::StringW System::Xml::BinXmlSqlDecimal::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlDecimal::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinXmlSqlMoney
#include "System/Xml/BinXmlSqlMoney.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int64 data
[[deprecated("Use field access instead!")]] int64_t& System::Xml::BinXmlSqlMoney::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlMoney::dyn_data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.BinXmlSqlMoney..ctor
System::Xml::BinXmlSqlMoney::BinXmlSqlMoney(int v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlMoney::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: System.Xml.BinXmlSqlMoney..ctor
// ABORTED elsewhere.  System::Xml::BinXmlSqlMoney::BinXmlSqlMoney(int64_t v)
// Autogenerated method: System.Xml.BinXmlSqlMoney.ToDecimal
::System::Decimal System::Xml::BinXmlSqlMoney::ToDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlMoney::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BinXmlSqlMoney.ToString
::StringW System::Xml::BinXmlSqlMoney::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlSqlMoney::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinXmlDateTime
#include "System/Xml/BinXmlDateTime.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32[] KatmaiTimeScaleMultiplicator
::ArrayW<int> System::Xml::BinXmlDateTime::_get_KatmaiTimeScaleMultiplicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::_get_KatmaiTimeScaleMultiplicator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("System.Xml", "BinXmlDateTime", "KatmaiTimeScaleMultiplicator"));
}
// Autogenerated static field setter
// Set static field: static System.Int32[] KatmaiTimeScaleMultiplicator
void System::Xml::BinXmlDateTime::_set_KatmaiTimeScaleMultiplicator(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::_set_KatmaiTimeScaleMultiplicator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlDateTime", "KatmaiTimeScaleMultiplicator", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Double SQLTicksPerMillisecond
double System::Xml::BinXmlDateTime::_get_SQLTicksPerMillisecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::_get_SQLTicksPerMillisecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("System.Xml", "BinXmlDateTime", "SQLTicksPerMillisecond"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Double SQLTicksPerMillisecond
void System::Xml::BinXmlDateTime::_set_SQLTicksPerMillisecond(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::_set_SQLTicksPerMillisecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlDateTime", "SQLTicksPerMillisecond", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 SQLTicksPerSecond
int System::Xml::BinXmlDateTime::_get_SQLTicksPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::_get_SQLTicksPerSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml", "BinXmlDateTime", "SQLTicksPerSecond"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 SQLTicksPerSecond
void System::Xml::BinXmlDateTime::_set_SQLTicksPerSecond(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::_set_SQLTicksPerSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlDateTime", "SQLTicksPerSecond", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 SQLTicksPerMinute
int System::Xml::BinXmlDateTime::_get_SQLTicksPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::_get_SQLTicksPerMinute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml", "BinXmlDateTime", "SQLTicksPerMinute"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 SQLTicksPerMinute
void System::Xml::BinXmlDateTime::_set_SQLTicksPerMinute(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::_set_SQLTicksPerMinute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlDateTime", "SQLTicksPerMinute", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 SQLTicksPerHour
int System::Xml::BinXmlDateTime::_get_SQLTicksPerHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::_get_SQLTicksPerHour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml", "BinXmlDateTime", "SQLTicksPerHour"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 SQLTicksPerHour
void System::Xml::BinXmlDateTime::_set_SQLTicksPerHour(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::_set_SQLTicksPerHour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlDateTime", "SQLTicksPerHour", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 SQLTicksPerDay
int System::Xml::BinXmlDateTime::_get_SQLTicksPerDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::_get_SQLTicksPerDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml", "BinXmlDateTime", "SQLTicksPerDay"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 SQLTicksPerDay
void System::Xml::BinXmlDateTime::_set_SQLTicksPerDay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::_set_SQLTicksPerDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinXmlDateTime", "SQLTicksPerDay", value));
}
// Autogenerated method: System.Xml.BinXmlDateTime..cctor
void System::Xml::BinXmlDateTime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.BinXmlDateTime.Write2Dig
void System::Xml::BinXmlDateTime::Write2Dig(::System::Text::StringBuilder* sb, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::Write2Dig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "Write2Dig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, val);
}
// Autogenerated method: System.Xml.BinXmlDateTime.Write4DigNeg
void System::Xml::BinXmlDateTime::Write4DigNeg(::System::Text::StringBuilder* sb, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::Write4DigNeg");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "Write4DigNeg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, val);
}
// Autogenerated method: System.Xml.BinXmlDateTime.Write3Dec
void System::Xml::BinXmlDateTime::Write3Dec(::System::Text::StringBuilder* sb, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::Write3Dec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "Write3Dec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, val);
}
// Autogenerated method: System.Xml.BinXmlDateTime.WriteDate
void System::Xml::BinXmlDateTime::WriteDate(::System::Text::StringBuilder* sb, int yr, int mnth, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::WriteDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "WriteDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(yr), ::il2cpp_utils::ExtractType(mnth), ::il2cpp_utils::ExtractType(day)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, yr, mnth, day);
}
// Autogenerated method: System.Xml.BinXmlDateTime.WriteTime
void System::Xml::BinXmlDateTime::WriteTime(::System::Text::StringBuilder* sb, int hr, int min, int sec, int ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::WriteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "WriteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(hr), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(sec), ::il2cpp_utils::ExtractType(ms)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, hr, min, sec, ms);
}
// Autogenerated method: System.Xml.BinXmlDateTime.WriteTimeFullPrecision
void System::Xml::BinXmlDateTime::WriteTimeFullPrecision(::System::Text::StringBuilder* sb, int hr, int min, int sec, int fraction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::WriteTimeFullPrecision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "WriteTimeFullPrecision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(hr), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(sec), ::il2cpp_utils::ExtractType(fraction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, hr, min, sec, fraction);
}
// Autogenerated method: System.Xml.BinXmlDateTime.WriteTimeZone
void System::Xml::BinXmlDateTime::WriteTimeZone(::System::Text::StringBuilder* sb, ::System::TimeSpan zone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::WriteTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "WriteTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(zone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, zone);
}
// Autogenerated method: System.Xml.BinXmlDateTime.WriteTimeZone
void System::Xml::BinXmlDateTime::WriteTimeZone(::System::Text::StringBuilder* sb, bool negTimeZone, int hr, int min) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::WriteTimeZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "WriteTimeZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(negTimeZone), ::il2cpp_utils::ExtractType(hr), ::il2cpp_utils::ExtractType(min)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, negTimeZone, hr, min);
}
// Autogenerated method: System.Xml.BinXmlDateTime.BreakDownXsdDateTime
void System::Xml::BinXmlDateTime::BreakDownXsdDateTime(int64_t val, ByRef<int> yr, ByRef<int> mnth, ByRef<int> day, ByRef<int> hr, ByRef<int> min, ByRef<int> sec, ByRef<int> ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::BreakDownXsdDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "BreakDownXsdDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val, byref(yr), byref(mnth), byref(day), byref(hr), byref(min), byref(sec), byref(ms));
}
// Autogenerated method: System.Xml.BinXmlDateTime.BreakDownXsdDate
void System::Xml::BinXmlDateTime::BreakDownXsdDate(int64_t val, ByRef<int> yr, ByRef<int> mnth, ByRef<int> day, ByRef<bool> negTimeZone, ByRef<int> hr, ByRef<int> min) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::BreakDownXsdDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "BreakDownXsdDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val, byref(yr), byref(mnth), byref(day), byref(negTimeZone), byref(hr), byref(min));
}
// Autogenerated method: System.Xml.BinXmlDateTime.BreakDownXsdTime
void System::Xml::BinXmlDateTime::BreakDownXsdTime(int64_t val, ByRef<int> hr, ByRef<int> min, ByRef<int> sec, ByRef<int> ms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::BreakDownXsdTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "BreakDownXsdTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val, byref(hr), byref(min), byref(sec), byref(ms));
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdDateTimeToString
::StringW System::Xml::BinXmlDateTime::XsdDateTimeToString(int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::XsdDateTimeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdDateTimeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdDateToString
::StringW System::Xml::BinXmlDateTime::XsdDateToString(int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::XsdDateToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdDateToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdTimeToString
::StringW System::Xml::BinXmlDateTime::XsdTimeToString(int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::XsdTimeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdTimeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated method: System.Xml.BinXmlDateTime.SqlDateTimeToString
::StringW System::Xml::BinXmlDateTime::SqlDateTimeToString(int dateticks, uint timeticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::SqlDateTimeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "SqlDateTimeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateticks), ::il2cpp_utils::ExtractType(timeticks)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateticks, timeticks);
}
// Autogenerated method: System.Xml.BinXmlDateTime.SqlDateTimeToDateTime
::System::DateTime System::Xml::BinXmlDateTime::SqlDateTimeToDateTime(int dateticks, uint timeticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::SqlDateTimeToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "SqlDateTimeToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateticks), ::il2cpp_utils::ExtractType(timeticks)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateticks, timeticks);
}
// Autogenerated method: System.Xml.BinXmlDateTime.SqlSmallDateTimeToString
::StringW System::Xml::BinXmlDateTime::SqlSmallDateTimeToString(int16_t dateticks, uint16_t timeticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::SqlSmallDateTimeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "SqlSmallDateTimeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateticks), ::il2cpp_utils::ExtractType(timeticks)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateticks, timeticks);
}
// Autogenerated method: System.Xml.BinXmlDateTime.SqlSmallDateTimeToDateTime
::System::DateTime System::Xml::BinXmlDateTime::SqlSmallDateTimeToDateTime(int16_t dateticks, uint16_t timeticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::SqlSmallDateTimeToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "SqlSmallDateTimeToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dateticks), ::il2cpp_utils::ExtractType(timeticks)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dateticks, timeticks);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiDateToDateTime
::System::DateTime System::Xml::BinXmlDateTime::XsdKatmaiDateToDateTime(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::XsdKatmaiDateToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiDateToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiDateTimeToDateTime
::System::DateTime System::Xml::BinXmlDateTime::XsdKatmaiDateTimeToDateTime(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::XsdKatmaiDateTimeToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiDateTimeToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiTimeToDateTime
::System::DateTime System::Xml::BinXmlDateTime::XsdKatmaiTimeToDateTime(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::XsdKatmaiTimeToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiTimeToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiDateOffsetToDateTimeOffset
::System::DateTimeOffset System::Xml::BinXmlDateTime::XsdKatmaiDateOffsetToDateTimeOffset(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::XsdKatmaiDateOffsetToDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiDateOffsetToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiDateTimeOffsetToDateTimeOffset
::System::DateTimeOffset System::Xml::BinXmlDateTime::XsdKatmaiDateTimeOffsetToDateTimeOffset(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::XsdKatmaiDateTimeOffsetToDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiDateTimeOffsetToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiTimeOffsetToDateTimeOffset
::System::DateTimeOffset System::Xml::BinXmlDateTime::XsdKatmaiTimeOffsetToDateTimeOffset(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::XsdKatmaiTimeOffsetToDateTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiTimeOffsetToDateTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeOffset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiDateToString
::StringW System::Xml::BinXmlDateTime::XsdKatmaiDateToString(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::XsdKatmaiDateToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiDateToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiDateTimeToString
::StringW System::Xml::BinXmlDateTime::XsdKatmaiDateTimeToString(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::XsdKatmaiDateTimeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiDateTimeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiTimeToString
::StringW System::Xml::BinXmlDateTime::XsdKatmaiTimeToString(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::XsdKatmaiTimeToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiTimeToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiDateOffsetToString
::StringW System::Xml::BinXmlDateTime::XsdKatmaiDateOffsetToString(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::XsdKatmaiDateOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiDateOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiDateTimeOffsetToString
::StringW System::Xml::BinXmlDateTime::XsdKatmaiDateTimeOffsetToString(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::XsdKatmaiDateTimeOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiDateTimeOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.XsdKatmaiTimeOffsetToString
::StringW System::Xml::BinXmlDateTime::XsdKatmaiTimeOffsetToString(::ArrayW<uint8_t> data, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::XsdKatmaiTimeOffsetToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "XsdKatmaiTimeOffsetToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, offset);
}
// Autogenerated method: System.Xml.BinXmlDateTime.GetKatmaiDateTicks
int64_t System::Xml::BinXmlDateTime::GetKatmaiDateTicks(::ArrayW<uint8_t> data, ByRef<int> pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::GetKatmaiDateTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "GetKatmaiDateTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, byref(pos));
}
// Autogenerated method: System.Xml.BinXmlDateTime.GetKatmaiTimeTicks
int64_t System::Xml::BinXmlDateTime::GetKatmaiTimeTicks(::ArrayW<uint8_t> data, ByRef<int> pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::GetKatmaiTimeTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "GetKatmaiTimeTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, byref(pos));
}
// Autogenerated method: System.Xml.BinXmlDateTime.GetKatmaiTimeZoneTicks
int64_t System::Xml::BinXmlDateTime::GetKatmaiTimeZoneTicks(::ArrayW<uint8_t> data, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::GetKatmaiTimeZoneTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "GetKatmaiTimeZoneTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, pos);
}
// Autogenerated method: System.Xml.BinXmlDateTime.GetFractions
int System::Xml::BinXmlDateTime::GetFractions(::System::DateTime dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::GetFractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "GetFractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dt);
}
// Autogenerated method: System.Xml.BinXmlDateTime.GetFractions
int System::Xml::BinXmlDateTime::GetFractions(::System::DateTimeOffset dt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinXmlDateTime::GetFractions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinXmlDateTime", "GetFractions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dt)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dt);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlSqlBinaryReader
#include "System/Xml/XmlSqlBinaryReader.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Xml.SecureStringHasher
#include "System/Xml/SecureStringHasher.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.NamespaceDecl
#include "System/Xml/XmlSqlBinaryReader_NamespaceDecl.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.NestedBinXml
#include "System/Xml/XmlSqlBinaryReader_NestedBinXml.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Xml.XmlReaderSettings
#include "System/Xml/XmlReaderSettings.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Xml.XmlNamespaceScope
#include "System/Xml/XmlNamespaceScope.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Type TypeOfObject
::System::Type* System::Xml::XmlSqlBinaryReader::_get_TypeOfObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::_get_TypeOfObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml", "XmlSqlBinaryReader", "TypeOfObject"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Type TypeOfObject
void System::Xml::XmlSqlBinaryReader::_set_TypeOfObject(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::_set_TypeOfObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader", "TypeOfObject", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Type TypeOfString
::System::Type* System::Xml::XmlSqlBinaryReader::_get_TypeOfString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::_get_TypeOfString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("System.Xml", "XmlSqlBinaryReader", "TypeOfString"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Type TypeOfString
void System::Xml::XmlSqlBinaryReader::_set_TypeOfString(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::_set_TypeOfString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader", "TypeOfString", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type[] TokenTypeMap
::ArrayW<::System::Type*> System::Xml::XmlSqlBinaryReader::_get_TokenTypeMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::_get_TokenTypeMap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("System.Xml", "XmlSqlBinaryReader", "TokenTypeMap"));
}
// Autogenerated static field setter
// Set static field: static private System.Type[] TokenTypeMap
void System::Xml::XmlSqlBinaryReader::_set_TokenTypeMap(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::_set_TokenTypeMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader", "TokenTypeMap", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] XsdKatmaiTimeScaleToValueLengthMap
::ArrayW<uint8_t> System::Xml::XmlSqlBinaryReader::_get_XsdKatmaiTimeScaleToValueLengthMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::_get_XsdKatmaiTimeScaleToValueLengthMap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Xml", "XmlSqlBinaryReader", "XsdKatmaiTimeScaleToValueLengthMap"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] XsdKatmaiTimeScaleToValueLengthMap
void System::Xml::XmlSqlBinaryReader::_set_XsdKatmaiTimeScaleToValueLengthMap(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::_set_XsdKatmaiTimeScaleToValueLengthMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader", "XsdKatmaiTimeScaleToValueLengthMap", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.ReadState[] ScanState2ReadState
::ArrayW<::System::Xml::ReadState> System::Xml::XmlSqlBinaryReader::_get_ScanState2ReadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::_get_ScanState2ReadState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::ReadState>>("System.Xml", "XmlSqlBinaryReader", "ScanState2ReadState"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.ReadState[] ScanState2ReadState
void System::Xml::XmlSqlBinaryReader::_set_ScanState2ReadState(::ArrayW<::System::Xml::ReadState> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::_set_ScanState2ReadState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader", "ScanState2ReadState", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream inStrm
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Xml::XmlSqlBinaryReader::dyn_inStrm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_inStrm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inStrm"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] data
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::XmlSqlBinaryReader::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 pos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSqlBinaryReader::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 mark
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSqlBinaryReader::dyn_mark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_mark");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mark"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 end
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSqlBinaryReader::dyn_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_end");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "end"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 offset
[[deprecated("Use field access instead!")]] int64_t& System::Xml::XmlSqlBinaryReader::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean eof
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlSqlBinaryReader::dyn_eof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_eof");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eof"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean sniffed
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlSqlBinaryReader::dyn_sniffed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_sniffed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sniffed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isEmpty
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlSqlBinaryReader::dyn_isEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_isEmpty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isEmpty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 docState
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSqlBinaryReader::dyn_docState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_docState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "docState"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlSqlBinaryReader/System.Xml.SymbolTables symbolTables
[[deprecated("Use field access instead!")]] ::System::Xml::XmlSqlBinaryReader::SymbolTables& System::Xml::XmlSqlBinaryReader::dyn_symbolTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_symbolTables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbolTables"))->offset;
  return *reinterpret_cast<::System::Xml::XmlSqlBinaryReader::SymbolTables*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable xnt
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& System::Xml::XmlSqlBinaryReader::dyn_xnt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_xnt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xnt"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean xntFromSettings
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlSqlBinaryReader::dyn_xntFromSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_xntFromSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xntFromSettings"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String xml
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlSqlBinaryReader::dyn_xml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_xml");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xml"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String xmlns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlSqlBinaryReader::dyn_xmlns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_xmlns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String nsxmlns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlSqlBinaryReader::dyn_nsxmlns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_nsxmlns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nsxmlns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String baseUri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlSqlBinaryReader::dyn_baseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_baseUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlSqlBinaryReader/System.Xml.ScanState state
[[deprecated("Use field access instead!")]] ::System::Xml::XmlSqlBinaryReader::ScanState& System::Xml::XmlSqlBinaryReader::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::System::Xml::XmlSqlBinaryReader::ScanState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNodeType nodetype
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNodeType& System::Xml::XmlSqlBinaryReader::dyn_nodetype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_nodetype");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodetype"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNodeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.BinXmlToken token
[[deprecated("Use field access instead!")]] ::System::Xml::BinXmlToken& System::Xml::XmlSqlBinaryReader::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::System::Xml::BinXmlToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 attrIndex
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSqlBinaryReader::dyn_attrIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_attrIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlSqlBinaryReader/System.Xml.QName qnameOther
[[deprecated("Use field access instead!")]] ::System::Xml::XmlSqlBinaryReader::QName& System::Xml::XmlSqlBinaryReader::dyn_qnameOther() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_qnameOther");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qnameOther"))->offset;
  return *reinterpret_cast<::System::Xml::XmlSqlBinaryReader::QName*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlSqlBinaryReader/System.Xml.QName qnameElement
[[deprecated("Use field access instead!")]] ::System::Xml::XmlSqlBinaryReader::QName& System::Xml::XmlSqlBinaryReader::dyn_qnameElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_qnameElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qnameElement"))->offset;
  return *reinterpret_cast<::System::Xml::XmlSqlBinaryReader::QName*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNodeType parentNodeType
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNodeType& System::Xml::XmlSqlBinaryReader::dyn_parentNodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_parentNodeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentNodeType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNodeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlSqlBinaryReader/System.Xml.ElemInfo[] elementStack
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlSqlBinaryReader::ElemInfo>& System::Xml::XmlSqlBinaryReader::dyn_elementStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_elementStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementStack"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlSqlBinaryReader::ElemInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 elemDepth
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSqlBinaryReader::dyn_elemDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_elemDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elemDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlSqlBinaryReader/System.Xml.AttrInfo[] attributes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlSqlBinaryReader::AttrInfo>& System::Xml::XmlSqlBinaryReader::dyn_attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlSqlBinaryReader::AttrInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] attrHashTbl
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Xml::XmlSqlBinaryReader::dyn_attrHashTbl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_attrHashTbl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrHashTbl"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 attrCount
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSqlBinaryReader::dyn_attrCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_attrCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 posAfterAttrs
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSqlBinaryReader::dyn_posAfterAttrs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_posAfterAttrs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posAfterAttrs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean xmlspacePreserve
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlSqlBinaryReader::dyn_xmlspacePreserve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_xmlspacePreserve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlspacePreserve"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 tokLen
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSqlBinaryReader::dyn_tokLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_tokLen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokLen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 tokDataPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSqlBinaryReader::dyn_tokDataPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_tokDataPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokDataPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasTypedValue
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlSqlBinaryReader::dyn_hasTypedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_hasTypedValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasTypedValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type valueType
[[deprecated("Use field access instead!")]] ::System::Type*& System::Xml::XmlSqlBinaryReader::dyn_valueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_valueType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String stringValue
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlSqlBinaryReader::dyn_stringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_stringValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Xml.XmlSqlBinaryReader/System.Xml.NamespaceDecl> namespaces
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Xml::XmlSqlBinaryReader::NamespaceDecl*>*& System::Xml::XmlSqlBinaryReader::dyn_namespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_namespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaces"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Xml::XmlSqlBinaryReader::NamespaceDecl*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlSqlBinaryReader/System.Xml.NestedBinXml prevNameInfo
[[deprecated("Use field access instead!")]] ::System::Xml::XmlSqlBinaryReader::NestedBinXml*& System::Xml::XmlSqlBinaryReader::dyn_prevNameInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_prevNameInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevNameInfo"))->offset;
  return *reinterpret_cast<::System::Xml::XmlSqlBinaryReader::NestedBinXml**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlReader textXmlReader
[[deprecated("Use field access instead!")]] ::System::Xml::XmlReader*& System::Xml::XmlSqlBinaryReader::dyn_textXmlReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_textXmlReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textXmlReader"))->offset;
  return *reinterpret_cast<::System::Xml::XmlReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean closeInput
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlSqlBinaryReader::dyn_closeInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_closeInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closeInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean checkCharacters
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlSqlBinaryReader::dyn_checkCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_checkCharacters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkCharacters"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ignoreWhitespace
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlSqlBinaryReader::dyn_ignoreWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_ignoreWhitespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignoreWhitespace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ignorePIs
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlSqlBinaryReader::dyn_ignorePIs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_ignorePIs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignorePIs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ignoreComments
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlSqlBinaryReader::dyn_ignoreComments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_ignoreComments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignoreComments"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.DtdProcessing dtdProcessing
[[deprecated("Use field access instead!")]] ::System::Xml::DtdProcessing& System::Xml::XmlSqlBinaryReader::dyn_dtdProcessing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_dtdProcessing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dtdProcessing"))->offset;
  return *reinterpret_cast<::System::Xml::DtdProcessing*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.SecureStringHasher hasher
[[deprecated("Use field access instead!")]] ::System::Xml::SecureStringHasher*& System::Xml::XmlSqlBinaryReader::dyn_hasher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_hasher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasher"))->offset;
  return *reinterpret_cast<::System::Xml::SecureStringHasher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlCharType xmlCharType
[[deprecated("Use field access instead!")]] ::System::Xml::XmlCharType& System::Xml::XmlSqlBinaryReader::dyn_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_xmlCharType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlCharType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlCharType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding unicode
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Xml::XmlSqlBinaryReader::dyn_unicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_unicode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unicode"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte version
[[deprecated("Use field access instead!")]] uint8_t& System::Xml::XmlSqlBinaryReader::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.System.Xml.IXmlNamespaceResolver.GetNamespacesInScope
::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* System::Xml::XmlSqlBinaryReader::System_Xml_IXmlNamespaceResolver_GetNamespacesInScope(::System::Xml::XmlNamespaceScope scope) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::System.Xml.IXmlNamespaceResolver.GetNamespacesInScope");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlSqlBinaryReader*), 53));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method, scope);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.System.Xml.IXmlNamespaceResolver.LookupPrefix
::StringW System::Xml::XmlSqlBinaryReader::System_Xml_IXmlNamespaceResolver_LookupPrefix(::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::System.Xml.IXmlNamespaceResolver.LookupPrefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlSqlBinaryReader*), 55));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceName);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.VerifyVersion
void System::Xml::XmlSqlBinaryReader::VerifyVersion(int requiredVersion, ::System::Xml::BinXmlToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::VerifyVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requiredVersion), ::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, requiredVersion, token);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.AddInitNamespace
void System::Xml::XmlSqlBinaryReader::AddInitNamespace(::StringW prefix, ::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::AddInitNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInitNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(uri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, uri);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.AddName
void System::Xml::XmlSqlBinaryReader::AddName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::AddName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.AddQName
void System::Xml::XmlSqlBinaryReader::AddQName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::AddQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.NameFlush
void System::Xml::XmlSqlBinaryReader::NameFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::NameFlush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NameFlush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.SkipExtn
void System::Xml::XmlSqlBinaryReader::SkipExtn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::SkipExtn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipExtn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ReadQNameRef
int System::Xml::XmlSqlBinaryReader::ReadQNameRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ReadQNameRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadQNameRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ReadNameRef
int System::Xml::XmlSqlBinaryReader::ReadNameRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ReadNameRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNameRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.FillAllowEOF
bool System::Xml::XmlSqlBinaryReader::FillAllowEOF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::FillAllowEOF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillAllowEOF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.Fill_
void System::Xml::XmlSqlBinaryReader::Fill_(int require) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::Fill_");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fill_", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(require)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, require);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.Fill
void System::Xml::XmlSqlBinaryReader::Fill(int require) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::Fill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(require)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, require);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ReadByte
uint8_t System::Xml::XmlSqlBinaryReader::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ReadByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ReadUShort
uint16_t System::Xml::XmlSqlBinaryReader::ReadUShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ReadUShort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUShort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ParseMB32
int System::Xml::XmlSqlBinaryReader::ParseMB32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ParseMB32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseMB32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ParseMB32_
int System::Xml::XmlSqlBinaryReader::ParseMB32_(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ParseMB32_");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseMB32_", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, b);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ParseMB32
int System::Xml::XmlSqlBinaryReader::ParseMB32(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ParseMB32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseMB32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ParseMB64
int System::Xml::XmlSqlBinaryReader::ParseMB64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ParseMB64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseMB64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.PeekToken
::System::Xml::BinXmlToken System::Xml::XmlSqlBinaryReader::PeekToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::PeekToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::BinXmlToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ReadToken
::System::Xml::BinXmlToken System::Xml::XmlSqlBinaryReader::ReadToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ReadToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::BinXmlToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.NextToken2
::System::Xml::BinXmlToken System::Xml::XmlSqlBinaryReader::NextToken2(::System::Xml::BinXmlToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::NextToken2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextToken2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::BinXmlToken, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.NextToken1
::System::Xml::BinXmlToken System::Xml::XmlSqlBinaryReader::NextToken1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::NextToken1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextToken1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::BinXmlToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.NextToken
::System::Xml::BinXmlToken System::Xml::XmlSqlBinaryReader::NextToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::NextToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::BinXmlToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.PeekNextToken
::System::Xml::BinXmlToken System::Xml::XmlSqlBinaryReader::PeekNextToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::PeekNextToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekNextToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::BinXmlToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.RescanNextToken
::System::Xml::BinXmlToken System::Xml::XmlSqlBinaryReader::RescanNextToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::RescanNextToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RescanNextToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::BinXmlToken, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ParseText
::StringW System::Xml::XmlSqlBinaryReader::ParseText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ParseText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ScanText
int System::Xml::XmlSqlBinaryReader::ScanText(ByRef<int> start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(start));
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetString
::StringW System::Xml::XmlSqlBinaryReader::GetString(int pos, int cch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(cch)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pos, cch);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetStringAligned
::StringW System::Xml::XmlSqlBinaryReader::GetStringAligned(::ArrayW<uint8_t> data, int offset, int cch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GetStringAligned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringAligned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(cch)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, data, offset, cch);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetAttributeText
::StringW System::Xml::XmlSqlBinaryReader::GetAttributeText(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GetAttributeText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributeText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.LocateAttribute
int System::Xml::XmlSqlBinaryReader::LocateAttribute(::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::LocateAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name, ns);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.LocateAttribute
int System::Xml::XmlSqlBinaryReader::LocateAttribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::LocateAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.PositionOnAttribute
void System::Xml::XmlSqlBinaryReader::PositionOnAttribute(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::PositionOnAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PositionOnAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GrowElements
void System::Xml::XmlSqlBinaryReader::GrowElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GrowElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrowElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GrowAttributes
void System::Xml::XmlSqlBinaryReader::GrowAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GrowAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GrowAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ClearAttributes
void System::Xml::XmlSqlBinaryReader::ClearAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ClearAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.PushNamespace
void System::Xml::XmlSqlBinaryReader::PushNamespace(::StringW prefix, ::StringW ns, bool implied) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::PushNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(implied)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, ns, implied);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.PopNamespaces
void System::Xml::XmlSqlBinaryReader::PopNamespaces(::System::Xml::XmlSqlBinaryReader::NamespaceDecl* firstInScopeChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::PopNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstInScopeChain)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstInScopeChain);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GenerateImpliedXmlnsAttrs
void System::Xml::XmlSqlBinaryReader::GenerateImpliedXmlnsAttrs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GenerateImpliedXmlnsAttrs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateImpliedXmlnsAttrs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ReadInit
bool System::Xml::XmlSqlBinaryReader::ReadInit(bool skipXmlDecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ReadInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skipXmlDecl)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, skipXmlDecl);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ScanAttributes
void System::Xml::XmlSqlBinaryReader::ScanAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.SimpleCheckForDuplicateAttributes
void System::Xml::XmlSqlBinaryReader::SimpleCheckForDuplicateAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::SimpleCheckForDuplicateAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SimpleCheckForDuplicateAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.HashCheckForDuplicateAttributes
void System::Xml::XmlSqlBinaryReader::HashCheckForDuplicateAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::HashCheckForDuplicateAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashCheckForDuplicateAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.XmlDeclValue
::StringW System::Xml::XmlSqlBinaryReader::XmlDeclValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::XmlDeclValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "XmlDeclValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.CDATAValue
::StringW System::Xml::XmlSqlBinaryReader::CDATAValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::CDATAValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CDATAValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.FinishCDATA
void System::Xml::XmlSqlBinaryReader::FinishCDATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::FinishCDATA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishCDATA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.FinishEndElement
void System::Xml::XmlSqlBinaryReader::FinishEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::FinishEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ReadDoc
bool System::Xml::XmlSqlBinaryReader::ReadDoc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ReadDoc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDoc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadData
void System::Xml::XmlSqlBinaryReader::ImplReadData(::System::Xml::BinXmlToken tokenType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ImplReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tokenType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tokenType);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadElement
void System::Xml::XmlSqlBinaryReader::ImplReadElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ImplReadElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadEndElement
void System::Xml::XmlSqlBinaryReader::ImplReadEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ImplReadEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadDoctype
void System::Xml::XmlSqlBinaryReader::ImplReadDoctype() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ImplReadDoctype");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadDoctype", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadPI
void System::Xml::XmlSqlBinaryReader::ImplReadPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ImplReadPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadComment
void System::Xml::XmlSqlBinaryReader::ImplReadComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ImplReadComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadCDATA
void System::Xml::XmlSqlBinaryReader::ImplReadCDATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ImplReadCDATA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadCDATA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadNest
void System::Xml::XmlSqlBinaryReader::ImplReadNest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ImplReadNest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadNest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadEndNest
void System::Xml::XmlSqlBinaryReader::ImplReadEndNest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ImplReadEndNest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadEndNest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ImplReadXmlText
void System::Xml::XmlSqlBinaryReader::ImplReadXmlText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ImplReadXmlText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImplReadXmlText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.UpdateFromTextReader
void System::Xml::XmlSqlBinaryReader::UpdateFromTextReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::UpdateFromTextReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFromTextReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.UpdateFromTextReader
bool System::Xml::XmlSqlBinaryReader::UpdateFromTextReader(bool needUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::UpdateFromTextReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFromTextReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(needUpdate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, needUpdate);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.CheckAllowContent
void System::Xml::XmlSqlBinaryReader::CheckAllowContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::CheckAllowContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAllowContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GenerateTokenTypeMap
void System::Xml::XmlSqlBinaryReader::GenerateTokenTypeMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GenerateTokenTypeMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTokenTypeMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetValueType
::System::Type* System::Xml::XmlSqlBinaryReader::GetValueType(::System::Xml::BinXmlToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GetValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ReScanOverValue
void System::Xml::XmlSqlBinaryReader::ReScanOverValue(::System::Xml::BinXmlToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ReScanOverValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReScanOverValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ScanOverValue
::System::Xml::XmlNodeType System::Xml::XmlSqlBinaryReader::ScanOverValue(::System::Xml::BinXmlToken token, bool attr, bool checkChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanOverValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanOverValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(attr), ::il2cpp_utils::ExtractType(checkChars)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method, token, attr, checkChars);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ScanOverAnyValue
::System::Xml::XmlNodeType System::Xml::XmlSqlBinaryReader::ScanOverAnyValue(::System::Xml::BinXmlToken token, bool attr, bool checkChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanOverAnyValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanOverAnyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(attr), ::il2cpp_utils::ExtractType(checkChars)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method, token, attr, checkChars);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.CheckText
::System::Xml::XmlNodeType System::Xml::XmlSqlBinaryReader::CheckText(bool attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::CheckText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method, attr);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.CheckTextIsWS
::System::Xml::XmlNodeType System::Xml::XmlSqlBinaryReader::CheckTextIsWS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::CheckTextIsWS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckTextIsWS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.CheckValueTokenBounds
void System::Xml::XmlSqlBinaryReader::CheckValueTokenBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::CheckValueTokenBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckValueTokenBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetXsdKatmaiTokenLength
int System::Xml::XmlSqlBinaryReader::GetXsdKatmaiTokenLength(::System::Xml::BinXmlToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GetXsdKatmaiTokenLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetXsdKatmaiTokenLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.XsdKatmaiTimeScaleToValueLength
int System::Xml::XmlSqlBinaryReader::XsdKatmaiTimeScaleToValueLength(uint8_t scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::XsdKatmaiTimeScaleToValueLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "XsdKatmaiTimeScaleToValueLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, scale);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ValueAsLong
int64_t System::Xml::XmlSqlBinaryReader::ValueAsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ValueAsLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ValueAsULong
uint64_t System::Xml::XmlSqlBinaryReader::ValueAsULong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ValueAsULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAsULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ValueAsDecimal
::System::Decimal System::Xml::XmlSqlBinaryReader::ValueAsDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ValueAsDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAsDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ValueAsDouble
double System::Xml::XmlSqlBinaryReader::ValueAsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ValueAsDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ValueAsDateTimeString
::StringW System::Xml::XmlSqlBinaryReader::ValueAsDateTimeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ValueAsDateTimeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAsDateTimeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ValueAsString
::StringW System::Xml::XmlSqlBinaryReader::ValueAsString(::System::Xml::BinXmlToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ValueAsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetInt16
int16_t System::Xml::XmlSqlBinaryReader::GetInt16(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GetInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetUInt16
uint16_t System::Xml::XmlSqlBinaryReader::GetUInt16(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GetUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetInt32
int System::Xml::XmlSqlBinaryReader::GetInt32(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GetInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetUInt32
uint System::Xml::XmlSqlBinaryReader::GetUInt32(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GetUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetInt64
int64_t System::Xml::XmlSqlBinaryReader::GetInt64(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GetInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetUInt64
uint64_t System::Xml::XmlSqlBinaryReader::GetUInt64(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GetUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetSingle
float System::Xml::XmlSqlBinaryReader::GetSingle(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GetSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, offset);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetDouble
double System::Xml::XmlSqlBinaryReader::GetDouble(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GetDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, offset);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ThrowUnexpectedToken
::System::Exception* System::Xml::XmlSqlBinaryReader::ThrowUnexpectedToken(::System::Xml::BinXmlToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ThrowUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ThrowXmlException
::System::Exception* System::Xml::XmlSqlBinaryReader::ThrowXmlException(::StringW res) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ThrowXmlException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowXmlException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, res);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ThrowXmlException
::System::Exception* System::Xml::XmlSqlBinaryReader::ThrowXmlException(::StringW res, ::StringW arg1, ::StringW arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ThrowXmlException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowXmlException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, res, arg1, arg2);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ThrowNotSupported
::System::Exception* System::Xml::XmlSqlBinaryReader::ThrowNotSupported(::StringW res) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ThrowNotSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowNotSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, res);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_Settings
::System::Xml::XmlReaderSettings* System::Xml::XmlSqlBinaryReader::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::get_Settings");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlReaderSettings*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlSqlBinaryReader::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::get_NodeType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_LocalName
::StringW System::Xml::XmlSqlBinaryReader::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_NamespaceURI
::StringW System::Xml::XmlSqlBinaryReader::get_NamespaceURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::get_NamespaceURI");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_Prefix
::StringW System::Xml::XmlSqlBinaryReader::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::get_Prefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_Value
::StringW System::Xml::XmlSqlBinaryReader::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_Depth
int System::Xml::XmlSqlBinaryReader::get_Depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::get_Depth");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_BaseURI
::StringW System::Xml::XmlSqlBinaryReader::get_BaseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::get_BaseURI");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_IsEmptyElement
bool System::Xml::XmlSqlBinaryReader::get_IsEmptyElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::get_IsEmptyElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_XmlSpace
::System::Xml::XmlSpace System::Xml::XmlSqlBinaryReader::get_XmlSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::get_XmlSpace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlSpace, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_XmlLang
::StringW System::Xml::XmlSqlBinaryReader::get_XmlLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::get_XmlLang");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 18));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_ValueType
::System::Type* System::Xml::XmlSqlBinaryReader::get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::get_ValueType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_AttributeCount
int System::Xml::XmlSqlBinaryReader::get_AttributeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::get_AttributeCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 21));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_EOF
bool System::Xml::XmlSqlBinaryReader::get_EOF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::get_EOF");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 32));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_NameTable
::System::Xml::XmlNameTable* System::Xml::XmlSqlBinaryReader::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::get_NameTable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 36));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.get_ReadState
::System::Xml::ReadState System::Xml::XmlSqlBinaryReader::get_ReadState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::get_ReadState");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 34));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::ReadState, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader..cctor
void System::Xml::XmlSqlBinaryReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlSqlBinaryReader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetAttribute
::StringW System::Xml::XmlSqlBinaryReader::GetAttribute(::StringW name, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GetAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name, ns);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetAttribute
::StringW System::Xml::XmlSqlBinaryReader::GetAttribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GetAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 22));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.GetAttribute
::StringW System::Xml::XmlSqlBinaryReader::GetAttribute(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::GetAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.MoveToAttribute
bool System::Xml::XmlSqlBinaryReader::MoveToAttribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::MoveToAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 25));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.MoveToAttribute
void System::Xml::XmlSqlBinaryReader::MoveToAttribute(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::MoveToAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.MoveToFirstAttribute
bool System::Xml::XmlSqlBinaryReader::MoveToFirstAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::MoveToFirstAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 27));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.MoveToNextAttribute
bool System::Xml::XmlSqlBinaryReader::MoveToNextAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::MoveToNextAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.MoveToElement
bool System::Xml::XmlSqlBinaryReader::MoveToElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::MoveToElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 29));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ReadAttributeValue
bool System::Xml::XmlSqlBinaryReader::ReadAttributeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ReadAttributeValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 30));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.Close
void System::Xml::XmlSqlBinaryReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::Close");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.LookupNamespace
::StringW System::Xml::XmlSqlBinaryReader::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 37));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.ResolveEntity
void System::Xml::XmlSqlBinaryReader::ResolveEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ResolveEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 39));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader.Read
bool System::Xml::XmlSqlBinaryReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlReader*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.op_Equality
bool System::Xml::operator ==(const ::System::Xml::XmlSqlBinaryReader::QName& a, const ::System::Xml::XmlSqlBinaryReader::QName& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::QName::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlSqlBinaryReader/QName", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.ScanState
#include "System/Xml/XmlSqlBinaryReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Doc
::System::Xml::XmlSqlBinaryReader::ScanState System::Xml::XmlSqlBinaryReader::ScanState::_get_Doc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanState::_get_Doc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlSqlBinaryReader::ScanState>("System.Xml", "XmlSqlBinaryReader/ScanState", "Doc"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Doc
void System::Xml::XmlSqlBinaryReader::ScanState::_set_Doc(::System::Xml::XmlSqlBinaryReader::ScanState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanState::_set_Doc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader/ScanState", "Doc", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState XmlText
::System::Xml::XmlSqlBinaryReader::ScanState System::Xml::XmlSqlBinaryReader::ScanState::_get_XmlText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanState::_get_XmlText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlSqlBinaryReader::ScanState>("System.Xml", "XmlSqlBinaryReader/ScanState", "XmlText"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState XmlText
void System::Xml::XmlSqlBinaryReader::ScanState::_set_XmlText(::System::Xml::XmlSqlBinaryReader::ScanState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanState::_set_XmlText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader/ScanState", "XmlText", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Attr
::System::Xml::XmlSqlBinaryReader::ScanState System::Xml::XmlSqlBinaryReader::ScanState::_get_Attr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanState::_get_Attr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlSqlBinaryReader::ScanState>("System.Xml", "XmlSqlBinaryReader/ScanState", "Attr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Attr
void System::Xml::XmlSqlBinaryReader::ScanState::_set_Attr(::System::Xml::XmlSqlBinaryReader::ScanState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanState::_set_Attr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader/ScanState", "Attr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState AttrVal
::System::Xml::XmlSqlBinaryReader::ScanState System::Xml::XmlSqlBinaryReader::ScanState::_get_AttrVal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanState::_get_AttrVal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlSqlBinaryReader::ScanState>("System.Xml", "XmlSqlBinaryReader/ScanState", "AttrVal"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState AttrVal
void System::Xml::XmlSqlBinaryReader::ScanState::_set_AttrVal(::System::Xml::XmlSqlBinaryReader::ScanState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanState::_set_AttrVal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader/ScanState", "AttrVal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState AttrValPseudoValue
::System::Xml::XmlSqlBinaryReader::ScanState System::Xml::XmlSqlBinaryReader::ScanState::_get_AttrValPseudoValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanState::_get_AttrValPseudoValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlSqlBinaryReader::ScanState>("System.Xml", "XmlSqlBinaryReader/ScanState", "AttrValPseudoValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState AttrValPseudoValue
void System::Xml::XmlSqlBinaryReader::ScanState::_set_AttrValPseudoValue(::System::Xml::XmlSqlBinaryReader::ScanState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanState::_set_AttrValPseudoValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader/ScanState", "AttrValPseudoValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Init
::System::Xml::XmlSqlBinaryReader::ScanState System::Xml::XmlSqlBinaryReader::ScanState::_get_Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanState::_get_Init");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlSqlBinaryReader::ScanState>("System.Xml", "XmlSqlBinaryReader/ScanState", "Init"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Init
void System::Xml::XmlSqlBinaryReader::ScanState::_set_Init(::System::Xml::XmlSqlBinaryReader::ScanState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanState::_set_Init");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader/ScanState", "Init", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Error
::System::Xml::XmlSqlBinaryReader::ScanState System::Xml::XmlSqlBinaryReader::ScanState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlSqlBinaryReader::ScanState>("System.Xml", "XmlSqlBinaryReader/ScanState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Error
void System::Xml::XmlSqlBinaryReader::ScanState::_set_Error(::System::Xml::XmlSqlBinaryReader::ScanState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader/ScanState", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState EOF
::System::Xml::XmlSqlBinaryReader::ScanState System::Xml::XmlSqlBinaryReader::ScanState::_get_EOF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanState::_get_EOF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlSqlBinaryReader::ScanState>("System.Xml", "XmlSqlBinaryReader/ScanState", "EOF"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState EOF
void System::Xml::XmlSqlBinaryReader::ScanState::_set_EOF(::System::Xml::XmlSqlBinaryReader::ScanState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanState::_set_EOF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader/ScanState", "EOF", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Closed
::System::Xml::XmlSqlBinaryReader::ScanState System::Xml::XmlSqlBinaryReader::ScanState::_get_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanState::_get_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlSqlBinaryReader::ScanState>("System.Xml", "XmlSqlBinaryReader/ScanState", "Closed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlSqlBinaryReader/System.Xml.ScanState Closed
void System::Xml::XmlSqlBinaryReader::ScanState::_set_Closed(::System::Xml::XmlSqlBinaryReader::ScanState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanState::_set_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlSqlBinaryReader/ScanState", "Closed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSqlBinaryReader::ScanState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ScanState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.QName
#include "System/Xml/XmlSqlBinaryReader.hpp"
// Including type: System.Xml.SecureStringHasher
#include "System/Xml/SecureStringHasher.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlSqlBinaryReader::QName::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::QName::dyn_prefix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String localname
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlSqlBinaryReader::QName::dyn_localname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::QName::dyn_localname");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localname"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String namespaceUri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlSqlBinaryReader::QName::dyn_namespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::QName::dyn_namespaceUri");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName..ctor
// ABORTED elsewhere.  System::Xml::XmlSqlBinaryReader::QName::QName(::StringW prefix, ::StringW lname, ::StringW nsUri)
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.Set
void System::Xml::XmlSqlBinaryReader::QName::Set(::StringW prefix, ::StringW lname, ::StringW nsUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::QName::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(lname), ::il2cpp_utils::ExtractType(nsUri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, lname, nsUri);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.Clear
void System::Xml::XmlSqlBinaryReader::QName::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::QName::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.MatchNs
bool System::Xml::XmlSqlBinaryReader::QName::MatchNs(::StringW lname, ::StringW nsUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::QName::MatchNs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MatchNs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lname), ::il2cpp_utils::ExtractType(nsUri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lname, nsUri);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.MatchPrefix
bool System::Xml::XmlSqlBinaryReader::QName::MatchPrefix(::StringW prefix, ::StringW lname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::QName::MatchPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MatchPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(lname)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, prefix, lname);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.CheckPrefixNS
void System::Xml::XmlSqlBinaryReader::QName::CheckPrefixNS(::StringW prefix, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::QName::CheckPrefixNS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckPrefixNS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(namespaceUri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, namespaceUri);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.GetNSHashCode
int System::Xml::XmlSqlBinaryReader::QName::GetNSHashCode(::System::Xml::SecureStringHasher* hasher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::QName::GetNSHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetNSHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hasher)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, hasher);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.GetHashCode
int System::Xml::XmlSqlBinaryReader::QName::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::QName::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.Equals
bool System::Xml::XmlSqlBinaryReader::QName::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::QName::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.QName.ToString
::StringW System::Xml::XmlSqlBinaryReader::QName::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::QName::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.ElemInfo
#include "System/Xml/XmlSqlBinaryReader.hpp"
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.NamespaceDecl
#include "System/Xml/XmlSqlBinaryReader_NamespaceDecl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlSqlBinaryReader/System.Xml.QName name
[[deprecated("Use field access instead!")]] ::System::Xml::XmlSqlBinaryReader::QName& System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::System::Xml::XmlSqlBinaryReader::QName*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String xmlLang
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_xmlLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_xmlLang");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlLang"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlSpace xmlSpace
[[deprecated("Use field access instead!")]] ::System::Xml::XmlSpace& System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_xmlSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_xmlSpace");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlSpace"))->offset;
  return *reinterpret_cast<::System::Xml::XmlSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean xmlspacePreserve
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_xmlspacePreserve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_xmlspacePreserve");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlspacePreserve"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlSqlBinaryReader/System.Xml.NamespaceDecl nsdecls
[[deprecated("Use field access instead!")]] ::System::Xml::XmlSqlBinaryReader::NamespaceDecl*& System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_nsdecls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ElemInfo::dyn_nsdecls");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nsdecls"))->offset;
  return *reinterpret_cast<::System::Xml::XmlSqlBinaryReader::NamespaceDecl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.ElemInfo.Set
void System::Xml::XmlSqlBinaryReader::ElemInfo::Set(::System::Xml::XmlSqlBinaryReader::QName name, bool xmlspacePreserve) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ElemInfo::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(xmlspacePreserve)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, xmlspacePreserve);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.ElemInfo.Clear
::System::Xml::XmlSqlBinaryReader::NamespaceDecl* System::Xml::XmlSqlBinaryReader::ElemInfo::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::ElemInfo::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlSqlBinaryReader::NamespaceDecl*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.AttrInfo
#include "System/Xml/XmlSqlBinaryReader.hpp"
// Including type: System.Xml.SecureStringHasher
#include "System/Xml/SecureStringHasher.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlSqlBinaryReader/System.Xml.QName name
[[deprecated("Use field access instead!")]] ::System::Xml::XmlSqlBinaryReader::QName& System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::System::Xml::XmlSqlBinaryReader::QName*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String val
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_val() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_val");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "val"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 contentPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_contentPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_contentPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 hashCode
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_hashCode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 prevHash
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_prevHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::AttrInfo::dyn_prevHash");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevHash"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.AttrInfo.Set
void System::Xml::XmlSqlBinaryReader::AttrInfo::Set(::System::Xml::XmlSqlBinaryReader::QName n, ::StringW v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::AttrInfo::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n, v);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.AttrInfo.Set
void System::Xml::XmlSqlBinaryReader::AttrInfo::Set(::System::Xml::XmlSqlBinaryReader::QName n, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::AttrInfo::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n, pos);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.AttrInfo.GetLocalnameAndNamespaceUri
void System::Xml::XmlSqlBinaryReader::AttrInfo::GetLocalnameAndNamespaceUri(ByRef<::StringW> localname, ByRef<::StringW> namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::AttrInfo::GetLocalnameAndNamespaceUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalnameAndNamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(localname), byref(namespaceUri));
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.AttrInfo.GetLocalnameAndNamespaceUriAndHash
int System::Xml::XmlSqlBinaryReader::AttrInfo::GetLocalnameAndNamespaceUriAndHash(::System::Xml::SecureStringHasher* hasher, ByRef<::StringW> localname, ByRef<::StringW> namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::AttrInfo::GetLocalnameAndNamespaceUriAndHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalnameAndNamespaceUriAndHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hasher), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, hasher, byref(localname), byref(namespaceUri));
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.AttrInfo.MatchNS
bool System::Xml::XmlSqlBinaryReader::AttrInfo::MatchNS(::StringW localname, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::AttrInfo::MatchNS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MatchNS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localname), ::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, localname, namespaceUri);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.AttrInfo.MatchHashNS
bool System::Xml::XmlSqlBinaryReader::AttrInfo::MatchHashNS(int hash, ::StringW localname, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::AttrInfo::MatchHashNS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MatchHashNS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(localname), ::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, hash, localname, namespaceUri);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.AttrInfo.AdjustPosition
void System::Xml::XmlSqlBinaryReader::AttrInfo::AdjustPosition(int adj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::AttrInfo::AdjustPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AdjustPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(adj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, adj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.NamespaceDecl
#include "System/Xml/XmlSqlBinaryReader_NamespaceDecl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String uri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlSqlBinaryReader/System.Xml.NamespaceDecl scopeLink
[[deprecated("Use field access instead!")]] ::System::Xml::XmlSqlBinaryReader::NamespaceDecl*& System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_scopeLink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_scopeLink");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scopeLink"))->offset;
  return *reinterpret_cast<::System::Xml::XmlSqlBinaryReader::NamespaceDecl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlSqlBinaryReader/System.Xml.NamespaceDecl prevLink
[[deprecated("Use field access instead!")]] ::System::Xml::XmlSqlBinaryReader::NamespaceDecl*& System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_prevLink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_prevLink");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevLink"))->offset;
  return *reinterpret_cast<::System::Xml::XmlSqlBinaryReader::NamespaceDecl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 scope
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_scope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_scope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scope"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean implied
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_implied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::NamespaceDecl::dyn_implied");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "implied"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.SymbolTables
#include "System/Xml/XmlSqlBinaryReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String[] symtable
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Xml::XmlSqlBinaryReader::SymbolTables::dyn_symtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::SymbolTables::dyn_symtable");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symtable"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 symCount
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSqlBinaryReader::SymbolTables::dyn_symCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::SymbolTables::dyn_symCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlSqlBinaryReader/System.Xml.QName[] qnametable
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlSqlBinaryReader::QName>& System::Xml::XmlSqlBinaryReader::SymbolTables::dyn_qnametable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::SymbolTables::dyn_qnametable");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qnametable"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlSqlBinaryReader::QName>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 qnameCount
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSqlBinaryReader::SymbolTables::dyn_qnameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::SymbolTables::dyn_qnameCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qnameCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlSqlBinaryReader/System.Xml.SymbolTables.Init
void System::Xml::XmlSqlBinaryReader::SymbolTables::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::SymbolTables::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlSqlBinaryReader/System.Xml.NestedBinXml
#include "System/Xml/XmlSqlBinaryReader_NestedBinXml.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlSqlBinaryReader/System.Xml.SymbolTables symbolTables
[[deprecated("Use field access instead!")]] ::System::Xml::XmlSqlBinaryReader::SymbolTables& System::Xml::XmlSqlBinaryReader::NestedBinXml::dyn_symbolTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::NestedBinXml::dyn_symbolTables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "symbolTables"))->offset;
  return *reinterpret_cast<::System::Xml::XmlSqlBinaryReader::SymbolTables*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 docState
[[deprecated("Use field access instead!")]] int& System::Xml::XmlSqlBinaryReader::NestedBinXml::dyn_docState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::NestedBinXml::dyn_docState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "docState"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlSqlBinaryReader/System.Xml.NestedBinXml next
[[deprecated("Use field access instead!")]] ::System::Xml::XmlSqlBinaryReader::NestedBinXml*& System::Xml::XmlSqlBinaryReader::NestedBinXml::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSqlBinaryReader::NestedBinXml::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::Xml::XmlSqlBinaryReader::NestedBinXml**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BitStack
#include "System/Xml/BitStack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] bitStack
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& System::Xml::BitStack::dyn_bitStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::dyn_bitStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bitStack"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 stackPos
[[deprecated("Use field access instead!")]] int& System::Xml::BitStack::dyn_stackPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::dyn_stackPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stackPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 curr
[[deprecated("Use field access instead!")]] uint& System::Xml::BitStack::dyn_curr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::dyn_curr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curr"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.BitStack.PushBit
void System::Xml::BitStack::PushBit(bool bit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::PushBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bit)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bit);
}
// Autogenerated method: System.Xml.BitStack.PopBit
bool System::Xml::BitStack::PopBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::PopBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BitStack.PeekBit
bool System::Xml::BitStack::PeekBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::PeekBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PeekBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BitStack.PushCurr
void System::Xml::BitStack::PushCurr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::PushCurr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushCurr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.BitStack.PopCurr
void System::Xml::BitStack::PopCurr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BitStack::PopCurr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopCurr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Bits
#include "System/Xml/Bits.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_0101010101010101
uint System::Xml::Bits::_get_MASK_0101010101010101() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_0101010101010101");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_0101010101010101"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_0101010101010101
void System::Xml::Bits::_set_MASK_0101010101010101(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_0101010101010101");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_0101010101010101", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_0011001100110011
uint System::Xml::Bits::_get_MASK_0011001100110011() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_0011001100110011");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_0011001100110011"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_0011001100110011
void System::Xml::Bits::_set_MASK_0011001100110011(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_0011001100110011");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_0011001100110011", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_0000111100001111
uint System::Xml::Bits::_get_MASK_0000111100001111() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_0000111100001111");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_0000111100001111"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_0000111100001111
void System::Xml::Bits::_set_MASK_0000111100001111(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_0000111100001111");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_0000111100001111", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_0000000011111111
uint System::Xml::Bits::_get_MASK_0000000011111111() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_0000000011111111");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_0000000011111111"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_0000000011111111
void System::Xml::Bits::_set_MASK_0000000011111111(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_0000000011111111");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_0000000011111111", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32 MASK_1111111111111111
uint System::Xml::Bits::_get_MASK_1111111111111111() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_get_MASK_1111111111111111");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Xml", "Bits", "MASK_1111111111111111"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32 MASK_1111111111111111
void System::Xml::Bits::_set_MASK_1111111111111111(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::_set_MASK_1111111111111111");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "Bits", "MASK_1111111111111111", value));
}
// Autogenerated method: System.Xml.Bits..cctor
void System::Xml::Bits::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Bits", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Bits.Count
int System::Xml::Bits::Count(uint num) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Bits", "Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(num)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, num);
}
// Autogenerated method: System.Xml.Bits.LeastPosition
int System::Xml::Bits::LeastPosition(uint num) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Bits::LeastPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Bits", "LeastPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(num)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, num);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.ByteStack
#include "System/Xml/ByteStack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] stack
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::ByteStack::dyn_stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ByteStack::dyn_stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stack"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 growthRate
[[deprecated("Use field access instead!")]] int& System::Xml::ByteStack::dyn_growthRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ByteStack::dyn_growthRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "growthRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 top
[[deprecated("Use field access instead!")]] int& System::Xml::ByteStack::dyn_top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ByteStack::dyn_top");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "top"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 size
[[deprecated("Use field access instead!")]] int& System::Xml::ByteStack::dyn_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ByteStack::dyn_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.ByteStack.Push
void System::Xml::ByteStack::Push(uint8_t data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ByteStack::Push");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.ByteStack.Pop
uint8_t System::Xml::ByteStack::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ByteStack::Pop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.BinaryCompatibility
#include "System/Xml/BinaryCompatibility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean _targetsAtLeast_Desktop_V4_5_2
bool System::Xml::BinaryCompatibility::_get__targetsAtLeast_Desktop_V4_5_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::_get__targetsAtLeast_Desktop_V4_5_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Xml", "BinaryCompatibility", "_targetsAtLeast_Desktop_V4_5_2"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _targetsAtLeast_Desktop_V4_5_2
void System::Xml::BinaryCompatibility::_set__targetsAtLeast_Desktop_V4_5_2(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::_set__targetsAtLeast_Desktop_V4_5_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "BinaryCompatibility", "_targetsAtLeast_Desktop_V4_5_2", value));
}
// Autogenerated method: System.Xml.BinaryCompatibility.get_TargetsAtLeast_Desktop_V4_5_2
bool System::Xml::BinaryCompatibility::get_TargetsAtLeast_Desktop_V4_5_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::get_TargetsAtLeast_Desktop_V4_5_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinaryCompatibility", "get_TargetsAtLeast_Desktop_V4_5_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.BinaryCompatibility..cctor
void System::Xml::BinaryCompatibility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinaryCompatibility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.BinaryCompatibility.RunningOnCheck
bool System::Xml::BinaryCompatibility::RunningOnCheck(::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::BinaryCompatibility::RunningOnCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "BinaryCompatibility", "RunningOnCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, propertyName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.CharEntityEncoderFallback
#include "System/Xml/CharEntityEncoderFallback.hpp"
// Including type: System.Xml.CharEntityEncoderFallbackBuffer
#include "System/Xml/CharEntityEncoderFallbackBuffer.hpp"
// Including type: System.Text.EncoderFallbackBuffer
#include "System/Text/EncoderFallbackBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.CharEntityEncoderFallbackBuffer fallbackBuffer
[[deprecated("Use field access instead!")]] ::System::Xml::CharEntityEncoderFallbackBuffer*& System::Xml::CharEntityEncoderFallback::dyn_fallbackBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::dyn_fallbackBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fallbackBuffer"))->offset;
  return *reinterpret_cast<::System::Xml::CharEntityEncoderFallbackBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] textContentMarks
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Xml::CharEntityEncoderFallback::dyn_textContentMarks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::dyn_textContentMarks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textContentMarks"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endMarkPos
[[deprecated("Use field access instead!")]] int& System::Xml::CharEntityEncoderFallback::dyn_endMarkPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::dyn_endMarkPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endMarkPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 curMarkPos
[[deprecated("Use field access instead!")]] int& System::Xml::CharEntityEncoderFallback::dyn_curMarkPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::dyn_curMarkPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curMarkPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 startOffset
[[deprecated("Use field access instead!")]] int& System::Xml::CharEntityEncoderFallback::dyn_startOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::dyn_startOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallback.set_StartOffset
void System::Xml::CharEntityEncoderFallback::set_StartOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::set_StartOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StartOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallback.Reset
void System::Xml::CharEntityEncoderFallback::Reset(::ArrayW<int> textContentMarks, int endMarkPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textContentMarks), ::il2cpp_utils::ExtractType(endMarkPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textContentMarks, endMarkPos);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallback.CanReplaceAt
bool System::Xml::CharEntityEncoderFallback::CanReplaceAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::CanReplaceAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanReplaceAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallback.get_MaxCharCount
int System::Xml::CharEntityEncoderFallback::get_MaxCharCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::get_MaxCharCount");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::EncoderFallback*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallback.CreateFallbackBuffer
::System::Text::EncoderFallbackBuffer* System::Xml::CharEntityEncoderFallback::CreateFallbackBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallback::CreateFallbackBuffer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::EncoderFallback*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::EncoderFallbackBuffer*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.CharEntityEncoderFallbackBuffer
#include "System/Xml/CharEntityEncoderFallbackBuffer.hpp"
// Including type: System.Xml.CharEntityEncoderFallback
#include "System/Xml/CharEntityEncoderFallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.CharEntityEncoderFallback parent
[[deprecated("Use field access instead!")]] ::System::Xml::CharEntityEncoderFallback*& System::Xml::CharEntityEncoderFallbackBuffer::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::System::Xml::CharEntityEncoderFallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String charEntity
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::CharEntityEncoderFallbackBuffer::dyn_charEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::dyn_charEntity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charEntity"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 charEntityIndex
[[deprecated("Use field access instead!")]] int& System::Xml::CharEntityEncoderFallbackBuffer::dyn_charEntityIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::dyn_charEntityIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charEntityIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.SurrogateCharToUtf32
int System::Xml::CharEntityEncoderFallbackBuffer::SurrogateCharToUtf32(::Il2CppChar highSurrogate, ::Il2CppChar lowSurrogate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::SurrogateCharToUtf32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SurrogateCharToUtf32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highSurrogate), ::il2cpp_utils::ExtractType(lowSurrogate)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, highSurrogate, lowSurrogate);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.get_Remaining
int System::Xml::CharEntityEncoderFallbackBuffer::get_Remaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::get_Remaining");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::EncoderFallbackBuffer*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.Fallback
bool System::Xml::CharEntityEncoderFallbackBuffer::Fallback(::Il2CppChar charUnknown, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::Fallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::EncoderFallbackBuffer*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, charUnknown, index);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.Fallback
bool System::Xml::CharEntityEncoderFallbackBuffer::Fallback(::Il2CppChar charUnknownHigh, ::Il2CppChar charUnknownLow, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::Fallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::EncoderFallbackBuffer*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, charUnknownHigh, charUnknownLow, index);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.GetNextChar
::Il2CppChar System::Xml::CharEntityEncoderFallbackBuffer::GetNextChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::GetNextChar");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::EncoderFallbackBuffer*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.MovePrevious
bool System::Xml::CharEntityEncoderFallbackBuffer::MovePrevious() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::MovePrevious");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::EncoderFallbackBuffer*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.CharEntityEncoderFallbackBuffer.Reset
void System::Xml::CharEntityEncoderFallbackBuffer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::CharEntityEncoderFallbackBuffer::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Text::EncoderFallbackBuffer*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.ConformanceLevel
#include "System/Xml/ConformanceLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.ConformanceLevel Auto
::System::Xml::ConformanceLevel System::Xml::ConformanceLevel::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ConformanceLevel>("System.Xml", "ConformanceLevel", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ConformanceLevel Auto
void System::Xml::ConformanceLevel::_set_Auto(::System::Xml::ConformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ConformanceLevel", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ConformanceLevel Fragment
::System::Xml::ConformanceLevel System::Xml::ConformanceLevel::_get_Fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::_get_Fragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ConformanceLevel>("System.Xml", "ConformanceLevel", "Fragment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ConformanceLevel Fragment
void System::Xml::ConformanceLevel::_set_Fragment(::System::Xml::ConformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::_set_Fragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ConformanceLevel", "Fragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ConformanceLevel Document
::System::Xml::ConformanceLevel System::Xml::ConformanceLevel::_get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::_get_Document");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ConformanceLevel>("System.Xml", "ConformanceLevel", "Document"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ConformanceLevel Document
void System::Xml::ConformanceLevel::_set_Document(::System::Xml::ConformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::_set_Document");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ConformanceLevel", "Document", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::ConformanceLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ConformanceLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.DtdProcessing
#include "System/Xml/DtdProcessing.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdProcessing Prohibit
::System::Xml::DtdProcessing System::Xml::DtdProcessing::_get_Prohibit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_get_Prohibit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdProcessing>("System.Xml", "DtdProcessing", "Prohibit"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdProcessing Prohibit
void System::Xml::DtdProcessing::_set_Prohibit(::System::Xml::DtdProcessing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_set_Prohibit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdProcessing", "Prohibit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdProcessing Ignore
::System::Xml::DtdProcessing System::Xml::DtdProcessing::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdProcessing>("System.Xml", "DtdProcessing", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdProcessing Ignore
void System::Xml::DtdProcessing::_set_Ignore(::System::Xml::DtdProcessing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdProcessing", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdProcessing Parse
::System::Xml::DtdProcessing System::Xml::DtdProcessing::_get_Parse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_get_Parse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdProcessing>("System.Xml", "DtdProcessing", "Parse"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdProcessing Parse
void System::Xml::DtdProcessing::_set_Parse(::System::Xml::DtdProcessing value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::_set_Parse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdProcessing", "Parse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::DtdProcessing::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdProcessing::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.EntityHandling
#include "System/Xml/EntityHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.EntityHandling ExpandEntities
::System::Xml::EntityHandling System::Xml::EntityHandling::_get_ExpandEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::_get_ExpandEntities");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::EntityHandling>("System.Xml", "EntityHandling", "ExpandEntities"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.EntityHandling ExpandEntities
void System::Xml::EntityHandling::_set_ExpandEntities(::System::Xml::EntityHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::_set_ExpandEntities");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "EntityHandling", "ExpandEntities", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.EntityHandling ExpandCharEntities
::System::Xml::EntityHandling System::Xml::EntityHandling::_get_ExpandCharEntities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::_get_ExpandCharEntities");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::EntityHandling>("System.Xml", "EntityHandling", "ExpandCharEntities"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.EntityHandling ExpandCharEntities
void System::Xml::EntityHandling::_set_ExpandCharEntities(::System::Xml::EntityHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::_set_ExpandCharEntities");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "EntityHandling", "ExpandCharEntities", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::EntityHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EntityHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.HtmlEncodedRawTextWriter
#include "System/Xml/HtmlEncodedRawTextWriter.hpp"
// Including type: System.Xml.ByteStack
#include "System/Xml/ByteStack.hpp"
// Including type: System.Xml.TernaryTreeReadOnly
#include "System/Xml/TernaryTreeReadOnly.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Xml.TernaryTreeReadOnly elementPropertySearch
::System::Xml::TernaryTreeReadOnly* System::Xml::HtmlEncodedRawTextWriter::_get_elementPropertySearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::_get_elementPropertySearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::TernaryTreeReadOnly*>("System.Xml", "HtmlEncodedRawTextWriter", "elementPropertySearch"));
}
// Autogenerated static field setter
// Set static field: static protected System.Xml.TernaryTreeReadOnly elementPropertySearch
void System::Xml::HtmlEncodedRawTextWriter::_set_elementPropertySearch(::System::Xml::TernaryTreeReadOnly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::_set_elementPropertySearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlEncodedRawTextWriter", "elementPropertySearch", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Xml.TernaryTreeReadOnly attributePropertySearch
::System::Xml::TernaryTreeReadOnly* System::Xml::HtmlEncodedRawTextWriter::_get_attributePropertySearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::_get_attributePropertySearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::TernaryTreeReadOnly*>("System.Xml", "HtmlEncodedRawTextWriter", "attributePropertySearch"));
}
// Autogenerated static field setter
// Set static field: static protected System.Xml.TernaryTreeReadOnly attributePropertySearch
void System::Xml::HtmlEncodedRawTextWriter::_set_attributePropertySearch(::System::Xml::TernaryTreeReadOnly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::_set_attributePropertySearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlEncodedRawTextWriter", "attributePropertySearch", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.ByteStack elementScope
[[deprecated("Use field access instead!")]] ::System::Xml::ByteStack*& System::Xml::HtmlEncodedRawTextWriter::dyn_elementScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_elementScope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementScope"))->offset;
  return *reinterpret_cast<::System::Xml::ByteStack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.ElementProperties currentElementProperties
[[deprecated("Use field access instead!")]] ::System::Xml::ElementProperties& System::Xml::HtmlEncodedRawTextWriter::dyn_currentElementProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_currentElementProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentElementProperties"))->offset;
  return *reinterpret_cast<::System::Xml::ElementProperties*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.AttributeProperties currentAttributeProperties
[[deprecated("Use field access instead!")]] ::System::Xml::AttributeProperties& System::Xml::HtmlEncodedRawTextWriter::dyn_currentAttributeProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_currentAttributeProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentAttributeProperties"))->offset;
  return *reinterpret_cast<::System::Xml::AttributeProperties*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean endsWithAmpersand
[[deprecated("Use field access instead!")]] bool& System::Xml::HtmlEncodedRawTextWriter::dyn_endsWithAmpersand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_endsWithAmpersand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endsWithAmpersand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] uriEscapingBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::HtmlEncodedRawTextWriter::dyn_uriEscapingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_uriEscapingBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uriEscapingBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String mediaType
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::HtmlEncodedRawTextWriter::dyn_mediaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_mediaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mediaType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean doNotEscapeUriAttributes
[[deprecated("Use field access instead!")]] bool& System::Xml::HtmlEncodedRawTextWriter::dyn_doNotEscapeUriAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::dyn_doNotEscapeUriAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doNotEscapeUriAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.Init
void System::Xml::HtmlEncodedRawTextWriter::Init(::System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteMetaElement
void System::Xml::HtmlEncodedRawTextWriter::WriteMetaElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteMetaElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMetaElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteHtmlElementTextBlock
void System::Xml::HtmlEncodedRawTextWriter::WriteHtmlElementTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteHtmlElementTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlElementTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteHtmlAttributeTextBlock
void System::Xml::HtmlEncodedRawTextWriter::WriteHtmlAttributeTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteHtmlAttributeTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlAttributeTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteHtmlAttributeText
void System::Xml::HtmlEncodedRawTextWriter::WriteHtmlAttributeText(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteHtmlAttributeText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlAttributeText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteUriAttributeText
void System::Xml::HtmlEncodedRawTextWriter::WriteUriAttributeText(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteUriAttributeText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUriAttributeText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.OutputRestAmps
void System::Xml::HtmlEncodedRawTextWriter::OutputRestAmps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::OutputRestAmps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OutputRestAmps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteXmlDeclaration
void System::Xml::HtmlEncodedRawTextWriter::WriteXmlDeclaration(::System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlEncodedRawTextWriter*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteXmlDeclaration
void System::Xml::HtmlEncodedRawTextWriter::WriteXmlDeclaration(::StringW xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlEncodedRawTextWriter*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteDocType
void System::Xml::HtmlEncodedRawTextWriter::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlEncodedRawTextWriter*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteStartElement
void System::Xml::HtmlEncodedRawTextWriter::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlEncodedRawTextWriter*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.StartElementContent
void System::Xml::HtmlEncodedRawTextWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlEncodedRawTextWriter*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteEndElement
void System::Xml::HtmlEncodedRawTextWriter::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlEncodedRawTextWriter*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteFullEndElement
void System::Xml::HtmlEncodedRawTextWriter::WriteFullEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlEncodedRawTextWriter*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteStartAttribute
void System::Xml::HtmlEncodedRawTextWriter::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlEncodedRawTextWriter*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteEndAttribute
void System::Xml::HtmlEncodedRawTextWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlEncodedRawTextWriter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteProcessingInstruction
void System::Xml::HtmlEncodedRawTextWriter::WriteProcessingInstruction(::StringW target, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlEncodedRawTextWriter*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, text);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteString
void System::Xml::HtmlEncodedRawTextWriter::WriteString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlEncodedRawTextWriter*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteEntityRef
void System::Xml::HtmlEncodedRawTextWriter::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlEncodedRawTextWriter*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteCharEntity
void System::Xml::HtmlEncodedRawTextWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlEncodedRawTextWriter*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteSurrogateCharEntity
void System::Xml::HtmlEncodedRawTextWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlEncodedRawTextWriter*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriter.WriteChars
void System::Xml::HtmlEncodedRawTextWriter::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlEncodedRawTextWriter*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.HtmlEncodedRawTextWriterIndent
#include "System/Xml/HtmlEncodedRawTextWriterIndent.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 indentLevel
[[deprecated("Use field access instead!")]] int& System::Xml::HtmlEncodedRawTextWriterIndent::dyn_indentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::dyn_indentLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endBlockPos
[[deprecated("Use field access instead!")]] int& System::Xml::HtmlEncodedRawTextWriterIndent::dyn_endBlockPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::dyn_endBlockPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endBlockPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String indentChars
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::HtmlEncodedRawTextWriterIndent::dyn_indentChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::dyn_indentChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentChars"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean newLineOnAttributes
[[deprecated("Use field access instead!")]] bool& System::Xml::HtmlEncodedRawTextWriterIndent::dyn_newLineOnAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::dyn_newLineOnAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newLineOnAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteIndent
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::WriteIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteDocType
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::WriteDocType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::HtmlEncodedRawTextWriter*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteStartElement
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::HtmlEncodedRawTextWriter*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.StartElementContent
void System::Xml::HtmlEncodedRawTextWriterIndent::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::StartElementContent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::HtmlEncodedRawTextWriter*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteEndElement
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::HtmlEncodedRawTextWriter*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.WriteStartAttribute
void System::Xml::HtmlEncodedRawTextWriterIndent::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::HtmlEncodedRawTextWriter*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.FlushBuffer
void System::Xml::HtmlEncodedRawTextWriterIndent::FlushBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::FlushBuffer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlEncodedRawTextWriter*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlEncodedRawTextWriterIndent.Init
void System::Xml::HtmlEncodedRawTextWriterIndent::Init(::System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlEncodedRawTextWriterIndent::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.HtmlTernaryTree
#include "System/Xml/HtmlTernaryTree.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Byte[] htmlElements
::ArrayW<uint8_t> System::Xml::HtmlTernaryTree::_get_htmlElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlTernaryTree::_get_htmlElements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Xml", "HtmlTernaryTree", "htmlElements"));
}
// Autogenerated static field setter
// Set static field: static System.Byte[] htmlElements
void System::Xml::HtmlTernaryTree::_set_htmlElements(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlTernaryTree::_set_htmlElements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlTernaryTree", "htmlElements", value));
}
// Autogenerated static field getter
// Get static field: static System.Byte[] htmlAttributes
::ArrayW<uint8_t> System::Xml::HtmlTernaryTree::_get_htmlAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlTernaryTree::_get_htmlAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Xml", "HtmlTernaryTree", "htmlAttributes"));
}
// Autogenerated static field setter
// Set static field: static System.Byte[] htmlAttributes
void System::Xml::HtmlTernaryTree::_set_htmlAttributes(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlTernaryTree::_set_htmlAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlTernaryTree", "htmlAttributes", value));
}
// Autogenerated method: System.Xml.HtmlTernaryTree..cctor
void System::Xml::HtmlTernaryTree::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlTernaryTree::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "HtmlTernaryTree", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.HtmlUtf8RawTextWriter
#include "System/Xml/HtmlUtf8RawTextWriter.hpp"
// Including type: System.Xml.ByteStack
#include "System/Xml/ByteStack.hpp"
// Including type: System.Xml.TernaryTreeReadOnly
#include "System/Xml/TernaryTreeReadOnly.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Xml.TernaryTreeReadOnly elementPropertySearch
::System::Xml::TernaryTreeReadOnly* System::Xml::HtmlUtf8RawTextWriter::_get_elementPropertySearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::_get_elementPropertySearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::TernaryTreeReadOnly*>("System.Xml", "HtmlUtf8RawTextWriter", "elementPropertySearch"));
}
// Autogenerated static field setter
// Set static field: static protected System.Xml.TernaryTreeReadOnly elementPropertySearch
void System::Xml::HtmlUtf8RawTextWriter::_set_elementPropertySearch(::System::Xml::TernaryTreeReadOnly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::_set_elementPropertySearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlUtf8RawTextWriter", "elementPropertySearch", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Xml.TernaryTreeReadOnly attributePropertySearch
::System::Xml::TernaryTreeReadOnly* System::Xml::HtmlUtf8RawTextWriter::_get_attributePropertySearch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::_get_attributePropertySearch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::TernaryTreeReadOnly*>("System.Xml", "HtmlUtf8RawTextWriter", "attributePropertySearch"));
}
// Autogenerated static field setter
// Set static field: static protected System.Xml.TernaryTreeReadOnly attributePropertySearch
void System::Xml::HtmlUtf8RawTextWriter::_set_attributePropertySearch(::System::Xml::TernaryTreeReadOnly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::_set_attributePropertySearch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "HtmlUtf8RawTextWriter", "attributePropertySearch", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.ByteStack elementScope
[[deprecated("Use field access instead!")]] ::System::Xml::ByteStack*& System::Xml::HtmlUtf8RawTextWriter::dyn_elementScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_elementScope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementScope"))->offset;
  return *reinterpret_cast<::System::Xml::ByteStack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.ElementProperties currentElementProperties
[[deprecated("Use field access instead!")]] ::System::Xml::ElementProperties& System::Xml::HtmlUtf8RawTextWriter::dyn_currentElementProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_currentElementProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentElementProperties"))->offset;
  return *reinterpret_cast<::System::Xml::ElementProperties*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.AttributeProperties currentAttributeProperties
[[deprecated("Use field access instead!")]] ::System::Xml::AttributeProperties& System::Xml::HtmlUtf8RawTextWriter::dyn_currentAttributeProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_currentAttributeProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentAttributeProperties"))->offset;
  return *reinterpret_cast<::System::Xml::AttributeProperties*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean endsWithAmpersand
[[deprecated("Use field access instead!")]] bool& System::Xml::HtmlUtf8RawTextWriter::dyn_endsWithAmpersand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_endsWithAmpersand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endsWithAmpersand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] uriEscapingBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::HtmlUtf8RawTextWriter::dyn_uriEscapingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_uriEscapingBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uriEscapingBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String mediaType
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::HtmlUtf8RawTextWriter::dyn_mediaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_mediaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mediaType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean doNotEscapeUriAttributes
[[deprecated("Use field access instead!")]] bool& System::Xml::HtmlUtf8RawTextWriter::dyn_doNotEscapeUriAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::dyn_doNotEscapeUriAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doNotEscapeUriAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.Init
void System::Xml::HtmlUtf8RawTextWriter::Init(::System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteMetaElement
void System::Xml::HtmlUtf8RawTextWriter::WriteMetaElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteMetaElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMetaElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteHtmlElementTextBlock
void System::Xml::HtmlUtf8RawTextWriter::WriteHtmlElementTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteHtmlElementTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlElementTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteHtmlAttributeTextBlock
void System::Xml::HtmlUtf8RawTextWriter::WriteHtmlAttributeTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteHtmlAttributeTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlAttributeTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteHtmlAttributeText
void System::Xml::HtmlUtf8RawTextWriter::WriteHtmlAttributeText(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteHtmlAttributeText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHtmlAttributeText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteUriAttributeText
void System::Xml::HtmlUtf8RawTextWriter::WriteUriAttributeText(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteUriAttributeText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteUriAttributeText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.OutputRestAmps
void System::Xml::HtmlUtf8RawTextWriter::OutputRestAmps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::OutputRestAmps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OutputRestAmps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteXmlDeclaration
void System::Xml::HtmlUtf8RawTextWriter::WriteXmlDeclaration(::System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlUtf8RawTextWriter*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteXmlDeclaration
void System::Xml::HtmlUtf8RawTextWriter::WriteXmlDeclaration(::StringW xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlUtf8RawTextWriter*), 37));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteDocType
void System::Xml::HtmlUtf8RawTextWriter::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlUtf8RawTextWriter*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteStartElement
void System::Xml::HtmlUtf8RawTextWriter::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlUtf8RawTextWriter*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.StartElementContent
void System::Xml::HtmlUtf8RawTextWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlUtf8RawTextWriter*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteEndElement
void System::Xml::HtmlUtf8RawTextWriter::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlUtf8RawTextWriter*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteFullEndElement
void System::Xml::HtmlUtf8RawTextWriter::WriteFullEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlUtf8RawTextWriter*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteStartAttribute
void System::Xml::HtmlUtf8RawTextWriter::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlUtf8RawTextWriter*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteEndAttribute
void System::Xml::HtmlUtf8RawTextWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlUtf8RawTextWriter*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteProcessingInstruction
void System::Xml::HtmlUtf8RawTextWriter::WriteProcessingInstruction(::StringW target, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlUtf8RawTextWriter*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, text);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteString
void System::Xml::HtmlUtf8RawTextWriter::WriteString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlUtf8RawTextWriter*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteEntityRef
void System::Xml::HtmlUtf8RawTextWriter::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlUtf8RawTextWriter*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteCharEntity
void System::Xml::HtmlUtf8RawTextWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlUtf8RawTextWriter*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteSurrogateCharEntity
void System::Xml::HtmlUtf8RawTextWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlUtf8RawTextWriter*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriter.WriteChars
void System::Xml::HtmlUtf8RawTextWriter::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlUtf8RawTextWriter*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.HtmlUtf8RawTextWriterIndent
#include "System/Xml/HtmlUtf8RawTextWriterIndent.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 indentLevel
[[deprecated("Use field access instead!")]] int& System::Xml::HtmlUtf8RawTextWriterIndent::dyn_indentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::dyn_indentLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 endBlockPos
[[deprecated("Use field access instead!")]] int& System::Xml::HtmlUtf8RawTextWriterIndent::dyn_endBlockPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::dyn_endBlockPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endBlockPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String indentChars
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::HtmlUtf8RawTextWriterIndent::dyn_indentChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::dyn_indentChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentChars"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean newLineOnAttributes
[[deprecated("Use field access instead!")]] bool& System::Xml::HtmlUtf8RawTextWriterIndent::dyn_newLineOnAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::dyn_newLineOnAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newLineOnAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteIndent
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::WriteIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteDocType
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::WriteDocType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::HtmlUtf8RawTextWriter*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteStartElement
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::HtmlUtf8RawTextWriter*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.StartElementContent
void System::Xml::HtmlUtf8RawTextWriterIndent::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::StartElementContent");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::HtmlUtf8RawTextWriter*), 38));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteEndElement
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::HtmlUtf8RawTextWriter*), 40));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.WriteStartAttribute
void System::Xml::HtmlUtf8RawTextWriterIndent::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::HtmlUtf8RawTextWriter*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.FlushBuffer
void System::Xml::HtmlUtf8RawTextWriterIndent::FlushBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::FlushBuffer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::XmlUtf8RawTextWriter*), 48));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.HtmlUtf8RawTextWriterIndent.Init
void System::Xml::HtmlUtf8RawTextWriterIndent::Init(::System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::HtmlUtf8RawTextWriterIndent::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdInfo
#include "System/Xml/IDtdInfo.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.IDtdAttributeListInfo
#include "System/Xml/IDtdAttributeListInfo.hpp"
// Including type: System.Xml.IDtdEntityInfo
#include "System/Xml/IDtdEntityInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdInfo.get_Name
::System::Xml::XmlQualifiedName* System::Xml::IDtdInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdInfo.get_InternalDtdSubset
::StringW System::Xml::IDtdInfo::get_InternalDtdSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::get_InternalDtdSubset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdInfo.get_HasDefaultAttributes
bool System::Xml::IDtdInfo::get_HasDefaultAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::get_HasDefaultAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdInfo.get_HasNonCDataAttributes
bool System::Xml::IDtdInfo::get_HasNonCDataAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::get_HasNonCDataAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdInfo.LookupAttributeList
::System::Xml::IDtdAttributeListInfo* System::Xml::IDtdInfo::LookupAttributeList(::StringW prefix, ::StringW localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::LookupAttributeList");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdAttributeListInfo*, false>(this, ___internal__method, prefix, localName);
}
// Autogenerated method: System.Xml.IDtdInfo.LookupEntity
::System::Xml::IDtdEntityInfo* System::Xml::IDtdInfo::LookupEntity(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdInfo::LookupEntity");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdEntityInfo*, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdAttributeListInfo
#include "System/Xml/IDtdAttributeListInfo.hpp"
// Including type: System.Xml.IDtdAttributeInfo
#include "System/Xml/IDtdAttributeInfo.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Xml.IDtdDefaultAttributeInfo
#include "System/Xml/IDtdDefaultAttributeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdAttributeListInfo.get_HasNonCDataAttributes
bool System::Xml::IDtdAttributeListInfo::get_HasNonCDataAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeListInfo::get_HasNonCDataAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeListInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeListInfo.LookupAttribute
::System::Xml::IDtdAttributeInfo* System::Xml::IDtdAttributeListInfo::LookupAttribute(::StringW prefix, ::StringW localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeListInfo::LookupAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeListInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdAttributeInfo*, false>(this, ___internal__method, prefix, localName);
}
// Autogenerated method: System.Xml.IDtdAttributeListInfo.LookupDefaultAttributes
::System::Collections::Generic::IEnumerable_1<::System::Xml::IDtdDefaultAttributeInfo*>* System::Xml::IDtdAttributeListInfo::LookupDefaultAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeListInfo::LookupDefaultAttributes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeListInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Xml::IDtdDefaultAttributeInfo*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IDtdAttributeInfo
#include "System/Xml/IDtdAttributeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_Prefix
::StringW System::Xml::IDtdAttributeInfo::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_Prefix");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_LocalName
::StringW System::Xml::IDtdAttributeInfo::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_LocalName");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_LineNumber
int System::Xml::IDtdAttributeInfo::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_LineNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_LinePosition
int System::Xml::IDtdAttributeInfo::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_LinePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_IsNonCDataType
bool System::Xml::IDtdAttributeInfo::get_IsNonCDataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_IsNonCDataType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_IsDeclaredInExternal
bool System::Xml::IDtdAttributeInfo::get_IsDeclaredInExternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_IsDeclaredInExternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdAttributeInfo.get_IsXmlAttribute
bool System::Xml::IDtdAttributeInfo::get_IsXmlAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdAttributeInfo::get_IsXmlAttribute");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.IDtdDefaultAttributeInfo
#include "System/Xml/IDtdDefaultAttributeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IDtdDefaultAttributeInfo.get_DefaultValueExpanded
::StringW System::Xml::IDtdDefaultAttributeInfo::get_DefaultValueExpanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdDefaultAttributeInfo::get_DefaultValueExpanded");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdDefaultAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdDefaultAttributeInfo.get_DefaultValueTyped
::Il2CppObject* System::Xml::IDtdDefaultAttributeInfo::get_DefaultValueTyped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdDefaultAttributeInfo::get_DefaultValueTyped");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdDefaultAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdDefaultAttributeInfo.get_ValueLineNumber
int System::Xml::IDtdDefaultAttributeInfo::get_ValueLineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdDefaultAttributeInfo::get_ValueLineNumber");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdDefaultAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.IDtdDefaultAttributeInfo.get_ValueLinePosition
int System::Xml::IDtdDefaultAttributeInfo::get_ValueLinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IDtdDefaultAttributeInfo::get_ValueLinePosition");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::System::Xml::IDtdDefaultAttributeInfo*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
